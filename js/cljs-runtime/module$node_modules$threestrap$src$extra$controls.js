shadow$provide.module$node_modules$threestrap$src$extra$controls=function(global,require,module,exports){var _PerspectiveCamera=require("module$node_modules$three$src$cameras$PerspectiveCamera");require("module$node_modules$threestrap$src$bootstrap").Bootstrap.registerPlugin("controls",{listen:["update","resize","camera","this.change"],defaults:{klass:null,parameters:{}},install:function(three){if(!this.options.klass)throw"Must provide class for `controls.klass`";three.controls=null;this._camera=
three.camera||new _PerspectiveCamera.PerspectiveCamera;this.change(null,three)},uninstall:function(three){delete three.controls},change:function(event,three){if(this.options.klass){if(!event||event.changes.klass)three.controls=new this.options.klass(this._camera,three.renderer.domElement);Object.assign(three.controls,this.options.parameters)}else three.controls=null},update:function(event,three){event=three.Time&&three.Time.delta||1/60;const vr=three.VR&&three.VR.state;three.controls.vr&&three.controls.vr(vr);
three.controls.update(event)},camera:function(event,three){three.controls.object=this._camera=event.camera},resize:function(event,three){three.controls.handleResize&&three.controls.handleResize()}})}
//# sourceMappingURL=module$node_modules$threestrap$src$extra$controls.js.map
