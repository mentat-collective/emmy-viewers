{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLBindingStates.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLBindingStates.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLBindingStates\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLBindingStates = WebGLBindingStates;\n\nfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n  const maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  const extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n  const vaoAvailable = capabilities.isWebGL2 || extension !== null;\n  const bindingStates = {};\n  const defaultState = createBindingState(null);\n  let currentState = defaultState;\n  let forceUpdate = false;\n\n  function setup(object, material, program, geometry, index) {\n    let updateBuffers = false;\n\n    if (vaoAvailable) {\n      const state = getBindingState(geometry, program, material);\n\n      if (currentState !== state) {\n        currentState = state;\n        bindVertexArrayObject(currentState.object);\n      }\n\n      updateBuffers = needsUpdate(object, geometry, program, index);\n      if (updateBuffers) saveCache(object, geometry, program, index);\n    } else {\n      const wireframe = material.wireframe === true;\n\n      if (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n        currentState.geometry = geometry.id;\n        currentState.program = program.id;\n        currentState.wireframe = wireframe;\n        updateBuffers = true;\n      }\n    }\n\n    if (index !== null) {\n      attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    if (updateBuffers || forceUpdate) {\n      forceUpdate = false;\n      setupVertexAttributes(object, material, program, geometry);\n\n      if (index !== null) {\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n      }\n    }\n  }\n\n  function createVertexArrayObject() {\n    if (capabilities.isWebGL2) return gl.createVertexArray();\n    return extension.createVertexArrayOES();\n  }\n\n  function bindVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n    return extension.bindVertexArrayOES(vao);\n  }\n\n  function deleteVertexArrayObject(vao) {\n    if (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n    return extension.deleteVertexArrayOES(vao);\n  }\n\n  function getBindingState(geometry, program, material) {\n    const wireframe = material.wireframe === true;\n    let programMap = bindingStates[geometry.id];\n\n    if (programMap === undefined) {\n      programMap = {};\n      bindingStates[geometry.id] = programMap;\n    }\n\n    let stateMap = programMap[program.id];\n\n    if (stateMap === undefined) {\n      stateMap = {};\n      programMap[program.id] = stateMap;\n    }\n\n    let state = stateMap[wireframe];\n\n    if (state === undefined) {\n      state = createBindingState(createVertexArrayObject());\n      stateMap[wireframe] = state;\n    }\n\n    return state;\n  }\n\n  function createBindingState(vao) {\n    const newAttributes = [];\n    const enabledAttributes = [];\n    const attributeDivisors = [];\n\n    for (let i = 0; i < maxVertexAttributes; i++) {\n      newAttributes[i] = 0;\n      enabledAttributes[i] = 0;\n      attributeDivisors[i] = 0;\n    }\n\n    return {\n      // for backward compatibility on non-VAO support browser\n      geometry: null,\n      program: null,\n      wireframe: false,\n      newAttributes: newAttributes,\n      enabledAttributes: enabledAttributes,\n      attributeDivisors: attributeDivisors,\n      object: vao,\n      attributes: {},\n      index: null\n    };\n  }\n\n  function needsUpdate(object, geometry, program, index) {\n    const cachedAttributes = currentState.attributes;\n    const geometryAttributes = geometry.attributes;\n    let attributesNum = 0;\n    const programAttributes = program.getAttributes();\n\n    for (const name in programAttributes) {\n      const programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        const cachedAttribute = cachedAttributes[name];\n        let geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n        }\n\n        if (cachedAttribute === undefined) return true;\n        if (cachedAttribute.attribute !== geometryAttribute) return true;\n        if (geometryAttribute && cachedAttribute.data !== geometryAttribute.data) return true;\n        attributesNum++;\n      }\n    }\n\n    if (currentState.attributesNum !== attributesNum) return true;\n    if (currentState.index !== index) return true;\n    return false;\n  }\n\n  function saveCache(object, geometry, program, index) {\n    const cache = {};\n    const attributes = geometry.attributes;\n    let attributesNum = 0;\n    const programAttributes = program.getAttributes();\n\n    for (const name in programAttributes) {\n      const programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        let attribute = attributes[name];\n\n        if (attribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) attribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) attribute = object.instanceColor;\n        }\n\n        const data = {};\n        data.attribute = attribute;\n\n        if (attribute && attribute.data) {\n          data.data = attribute.data;\n        }\n\n        cache[name] = data;\n        attributesNum++;\n      }\n    }\n\n    currentState.attributes = cache;\n    currentState.attributesNum = attributesNum;\n    currentState.index = index;\n  }\n\n  function initAttributes() {\n    const newAttributes = currentState.newAttributes;\n\n    for (let i = 0, il = newAttributes.length; i < il; i++) {\n      newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    enableAttributeAndDivisor(attribute, 0);\n  }\n\n  function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n    const newAttributes = currentState.newAttributes;\n    const enabledAttributes = currentState.enabledAttributes;\n    const attributeDivisors = currentState.attributeDivisors;\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      const extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n      extension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    const newAttributes = currentState.newAttributes;\n    const enabledAttributes = currentState.enabledAttributes;\n\n    for (let i = 0, il = enabledAttributes.length; i < il; i++) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function vertexAttribPointer(index, size, type, normalized, stride, offset) {\n    if (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n      gl.vertexAttribIPointer(index, size, type, stride, offset);\n    } else {\n      gl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n  }\n\n  function setupVertexAttributes(object, material, program, geometry) {\n    if (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n      if (extensions.get('ANGLE_instanced_arrays') === null) return;\n    }\n\n    initAttributes();\n    const geometryAttributes = geometry.attributes;\n    const programAttributes = program.getAttributes();\n    const materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (const name in programAttributes) {\n      const programAttribute = programAttributes[name];\n\n      if (programAttribute.location >= 0) {\n        let geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute === undefined) {\n          if (name === 'instanceMatrix' && object.instanceMatrix) geometryAttribute = object.instanceMatrix;\n          if (name === 'instanceColor' && object.instanceColor) geometryAttribute = object.instanceColor;\n        }\n\n        if (geometryAttribute !== undefined) {\n          const normalized = geometryAttribute.normalized;\n          const size = geometryAttribute.itemSize;\n          const attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n          if (attribute === undefined) continue;\n          const buffer = attribute.buffer;\n          const type = attribute.type;\n          const bytesPerElement = attribute.bytesPerElement;\n\n          if (geometryAttribute.isInterleavedBufferAttribute) {\n            const data = geometryAttribute.data;\n            const stride = data.stride;\n            const offset = geometryAttribute.offset;\n\n            if (data.isInstancedInterleavedBuffer) {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttributeAndDivisor(programAttribute.location + i, data.meshPerAttribute);\n              }\n\n              if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                geometry._maxInstanceCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttribute(programAttribute.location + i);\n              }\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n            for (let i = 0; i < programAttribute.locationSize; i++) {\n              vertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, stride * bytesPerElement, (offset + size / programAttribute.locationSize * i) * bytesPerElement);\n            }\n          } else {\n            if (geometryAttribute.isInstancedBufferAttribute) {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttributeAndDivisor(programAttribute.location + i, geometryAttribute.meshPerAttribute);\n              }\n\n              if (object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined) {\n                geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              for (let i = 0; i < programAttribute.locationSize; i++) {\n                enableAttribute(programAttribute.location + i);\n              }\n            }\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\n            for (let i = 0; i < programAttribute.locationSize; i++) {\n              vertexAttribPointer(programAttribute.location + i, size / programAttribute.locationSize, type, normalized, size * bytesPerElement, size / programAttribute.locationSize * i * bytesPerElement);\n            }\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          const value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                gl.vertexAttrib2fv(programAttribute.location, value);\n                break;\n\n              case 3:\n                gl.vertexAttrib3fv(programAttribute.location, value);\n                break;\n\n              case 4:\n                gl.vertexAttrib4fv(programAttribute.location, value);\n                break;\n\n              default:\n                gl.vertexAttrib1fv(programAttribute.location, value);\n            }\n          }\n        }\n      }\n    }\n\n    disableUnusedAttributes();\n  }\n\n  function dispose() {\n    reset();\n\n    for (const geometryId in bindingStates) {\n      const programMap = bindingStates[geometryId];\n\n      for (const programId in programMap) {\n        const stateMap = programMap[programId];\n\n        for (const wireframe in stateMap) {\n          deleteVertexArrayObject(stateMap[wireframe].object);\n          delete stateMap[wireframe];\n        }\n\n        delete programMap[programId];\n      }\n\n      delete bindingStates[geometryId];\n    }\n  }\n\n  function releaseStatesOfGeometry(geometry) {\n    if (bindingStates[geometry.id] === undefined) return;\n    const programMap = bindingStates[geometry.id];\n\n    for (const programId in programMap) {\n      const stateMap = programMap[programId];\n\n      for (const wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[programId];\n    }\n\n    delete bindingStates[geometry.id];\n  }\n\n  function releaseStatesOfProgram(program) {\n    for (const geometryId in bindingStates) {\n      const programMap = bindingStates[geometryId];\n      if (programMap[program.id] === undefined) continue;\n      const stateMap = programMap[program.id];\n\n      for (const wireframe in stateMap) {\n        deleteVertexArrayObject(stateMap[wireframe].object);\n        delete stateMap[wireframe];\n      }\n\n      delete programMap[program.id];\n    }\n  }\n\n  function reset() {\n    resetDefaultState();\n    forceUpdate = true;\n    if (currentState === defaultState) return;\n    currentState = defaultState;\n    bindVertexArrayObject(currentState.object);\n  } // for backward-compatibility\n\n\n  function resetDefaultState() {\n    defaultState.geometry = null;\n    defaultState.program = null;\n    defaultState.wireframe = false;\n  }\n\n  return {\n    setup: setup,\n    reset: reset,\n    resetDefaultState: resetDefaultState,\n    dispose: dispose,\n    releaseStatesOfGeometry: releaseStatesOfGeometry,\n    releaseStatesOfProgram: releaseStatesOfProgram,\n    initAttributes: initAttributes,\n    enableAttribute: enableAttribute,\n    disableUnusedAttributes: disableUnusedAttributes\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLBindingStates","gl","extensions","attributes","capabilities","bindVertexArrayObject","vao","isWebGL2","bindVertexArray","extension","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","createBindingState","newAttributes","enabledAttributes","attributeDivisors","i","maxVertexAttributes","geometry","program","wireframe","object","index","initAttributes","currentState","il","length","enableAttribute","attribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","get","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","size","type","normalized","stride","offset","INT","UNSIGNED_INT","vertexAttribIPointer","reset","resetDefaultState","forceUpdate","defaultState","getParameter","MAX_VERTEX_ATTRIBS","vaoAvailable","bindingStates","setup","material","updateBuffers","programMap","id","undefined","stateMap","state","createVertexArray","createVertexArrayOES","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","name","programAttribute","location","cachedAttribute","geometryAttribute","instanceMatrix","instanceColor","data","cache","update","ELEMENT_ARRAY_BUFFER","isInstancedMesh","isInstancedBufferGeometry","materialDefaultAttributeValues","defaultAttributeValues","itemSize","buffer","isInterleavedBufferAttribute","bytesPerElement","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","count","bindBuffer","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","dispose","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram"]
}
