{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$screengeometry.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/geometry/screengeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$screengeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScreenGeometry = void 0;\n\nvar _surfacegeometry = require(\"./surfacegeometry.js\");\n\nvar _Vector = require(\"three/src/math/Vector4.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\nGrid Surface in normalized screen space\n\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n*/\nclass ScreenGeometry extends _surfacegeometry.SurfaceGeometry {\n  constructor(options) {\n    options.width = Math.max(2, +options.width != null ? +options.width : 2);\n    options.height = Math.max(2, +options.height != null ? +options.height : 2);\n    super(options, false);\n\n    if (this.uniforms == null) {\n      this.uniforms = {};\n    }\n\n    this.uniforms.geometryScale = {\n      type: \"v4\",\n      value: new _Vector.Vector4()\n    };\n    this.cover();\n    this.construct(options);\n  }\n\n  cover(scaleX, scaleY, scaleZ, scaleW) {\n    if (scaleX == null) {\n      scaleX = 1;\n    }\n\n    this.scaleX = scaleX;\n\n    if (scaleY == null) {\n      scaleY = 1;\n    }\n\n    this.scaleY = scaleY;\n\n    if (scaleZ == null) {\n      scaleZ = 1;\n    }\n\n    this.scaleZ = scaleZ;\n\n    if (scaleW == null) {\n      scaleW = 1;\n    }\n\n    this.scaleW = scaleW;\n  }\n\n  clip(width, height, surfaces, layers) {\n    if (width == null) {\n      ({\n        width\n      } = this);\n    }\n\n    if (height == null) {\n      ({\n        height\n      } = this);\n    }\n\n    if (surfaces == null) {\n      ({\n        surfaces\n      } = this);\n    }\n\n    if (layers == null) {\n      ({\n        layers\n      } = this);\n    }\n\n    super.clip(width, height, surfaces, layers);\n\n    const invert = x => 1 / Math.max(1, x - 1);\n\n    return this.uniforms.geometryScale.value.set(invert(width) * this.scaleX, invert(height) * this.scaleY, invert(surfaces) * this.scaleZ, invert(layers) * this.scaleW);\n  }\n\n}\n\nexports.ScreenGeometry = ScreenGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ScreenGeometry","_surfacegeometry","_Vector","SurfaceGeometry","constructor","options","width","Math","max","height","uniforms","geometryScale","type","Vector4","cover","construct","scaleX","scaleY","scaleZ","scaleW","clip","surfaces","layers","set"]
}
