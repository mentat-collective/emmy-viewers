shadow$provide.module$node_modules$mathbox$build$esm$model$css_select_adapter=function(global,require,module,exports){function getChildren(elem){return elem.children||[]}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;const adapter={isTag:function(_elem){return!0},existsOne(test,elems){return elems.some(elem=>test(elem)||adapter.existsOne(test,getChildren(elem)))},getSiblings(elem){const parent=elem.parent;return parent?getChildren(parent):[elem]},getChildren,getParent:function(elem){return elem.parent},
getAttributeValue(elem,name){return"class"===name?elem.props.classes.join(" "):"id"===name?elem.id:""},hasAttrib(elem,name){return"id"===name?!!elem.id:"class"===name?0<elem.props.classes.length:elem.traits.hash?Object.prototype.hasOwnProperty.call(elem.traits.hash,name):!1},removeSubsets:function(nodes){const deduped=new Set(nodes);deduped.forEach(node=>{let ancestor=node.parent;for(;ancestor;){if(deduped.has(ancestor)){deduped.delete(node);break}ancestor=ancestor.parent}});return Array.from(deduped)},
getName(elem){var _a;return null!==(_a=elem.type)&&void 0!==_a?_a:""},findOne:function findOne(test,elems){for(const node of elems){if(test(node))return node;if(elems=findOne(test,getChildren(node)))return elems}return null},findAll:function findAll(test,elems){const result=[];for(const elem of elems)test(elem)&&result.push(elem),result.push(...findAll(test,getChildren(elem)));return result},getText:function(_elem){return""}};exports.default=adapter}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$model$css_select_adapter.js.map
