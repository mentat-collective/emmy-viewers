shadow$provide.module$node_modules$threestrap$src$core$camera=function(global,require,module,exports){var _Camera=require("module$node_modules$three$src$cameras$Camera"),_OrthographicCamera=require("module$node_modules$three$src$cameras$OrthographicCamera"),_PerspectiveCamera=require("module$node_modules$three$src$cameras$PerspectiveCamera");require("module$node_modules$threestrap$src$bootstrap").Bootstrap.registerPlugin("camera",{defaults:{near:.01,far:1E4,type:"perspective",fov:60,aspect:null,left:-1,
right:1,bottom:-1,top:1,klass:null,parameters:null},listen:["resize","this.change"],install:function(three){three.Camera=this.api();three.camera=null;this.aspect=1;this.change({},three)},uninstall:function(three){delete three.Camera;delete three.camera},change:function(event,three){const o=this.options,old=three.camera;if(!three.camera||event.changes.type||event.changes.klass)event=o.klass||{perspective:_PerspectiveCamera.PerspectiveCamera,orthographic:_OrthographicCamera.OrthographicCamera}[o.type]||
_Camera.Camera,three.camera=o.parameters?new event(o.parameters):new event;Object.entries(o).forEach(function([key]){Object.prototype.hasOwnProperty.call(three.camera,key)&&(three.camera[key]=o[key])}.bind(this));this.update(three);old===three.camera||three.trigger({type:"camera",camera:three.camera})},resize:function(event,three){this.aspect=event.viewWidth/Math.max(1,event.viewHeight);this.update(three)},update:function(three){three.camera.aspect=this.options.aspect||this.aspect;three.camera.updateProjectionMatrix()}})}
//# sourceMappingURL=module$node_modules$threestrap$src$core$camera.js.map
