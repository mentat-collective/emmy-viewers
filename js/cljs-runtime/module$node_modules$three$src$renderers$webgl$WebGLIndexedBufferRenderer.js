shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLIndexedBufferRenderer=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLIndexedBufferRenderer=function(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode,type,bytesPerElement;this.setMode=function(value){mode=value};this.setIndex=function(value){type=value.type;bytesPerElement=value.bytesPerElement};this.render=function(start,count){gl.drawElements(mode,
count,type,start*bytesPerElement);info.update(count,mode,1)};this.renderInstances=function(start,count,primcount){if(0!==primcount){if(isWebGL2){var extension=gl;var methodName="drawElementsInstanced"}else if(extension=extensions.get("ANGLE_instanced_arrays"),methodName="drawElementsInstancedANGLE",null===extension){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}extension[methodName](mode,
count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount)}}}}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLIndexedBufferRenderer.js.map
