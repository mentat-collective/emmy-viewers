shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$base$line=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_math=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math")),_geometry=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$geometry")),
_numerics=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$numerics")),_statistics=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$statistics")),_constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_coords=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$coords")),_element=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$element")),
_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type")),_point=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$point"));_jxg.default.Line=function(board,p1,p2,attributes){this.constructor(board,attributes,_constants.default.OBJECT_TYPE_LINE,_constants.default.OBJECT_CLASS_LINE);this.point1=this.board.select(p1);this.point2=this.board.select(p2);this.ticks=[];this.parentPolygon=this.defaultTicks=null;this.id=this.board.setId(this,
"L");this.board.renderer.drawLine(this);this.board.finalizeAdding(this);this.elType="line";this.point1._is_new?(this.addChild(this.point1),delete this.point1._is_new):this.point1.addChild(this);this.point2._is_new?(this.addChild(this.point2),delete this.point2._is_new):this.point2.addChild(this);this.inherits.push(this.point1,this.point2);this.updateStdform();this.createLabel();this.methodMap=_jxg.default.deepCopy(this.methodMap,{point1:"point1",point2:"point2",getSlope:"getSlope",getRise:"getRise",
getYIntersect:"getRise",getAngle:"getAngle",L:"L",length:"L"})};_jxg.default.Line.prototype=new _element.default;_jxg.default.extend(_jxg.default.Line.prototype,{hasPoint:function(x,y){var c=[];x=[1,x,y];var s=_type.default.evaluate(this.visProp.strokewidth);_type.default.isObject(_type.default.evaluate(this.visProp.precision))?(y=this.board._inputDevice,y=_type.default.evaluate(this.visProp.precision[y])):y=this.board.options.precision.hasPoint;y+=.5*s;c[0]=this.stdform[0]-this.stdform[1]*this.board.origin.scrCoords[1]/
this.board.unitX+this.stdform[2]*this.board.origin.scrCoords[2]/this.board.unitY;c[1]=this.stdform[1]/this.board.unitX;c[2]=this.stdform[2]/-this.board.unitY;s=_geometry.default.distPointLine(x,c);if(isNaN(s)||s>y)return!1;if(_type.default.evaluate(this.visProp.straightfirst)&&_type.default.evaluate(this.visProp.straightlast))return!0;s=this.point1.coords;var p2c=this.point2.coords;y=[0,c[1],c[2]];y=_math.default.crossProduct(y,x);y=_math.default.crossProduct(y,c);y[1]/=y[0];y[2]/=y[0];y[0]=1;y=(new _coords.default(_constants.default.COORDS_BY_SCREEN,
y.slice(1),this.board)).usrCoords;c=s.distance(_constants.default.COORDS_BY_USER,p2c);s=s.usrCoords.slice(0);p2c=p2c.usrCoords.slice(0);c<_math.default.eps?c=0:(c===Number.POSITIVE_INFINITY&&(c=1/_math.default.eps,Math.abs(p2c[0])<_math.default.eps?(c/=_geometry.default.distance([0,0,0],p2c),p2c=[1,s[1]+p2c[1]*c,s[2]+p2c[2]*c]):(c/=_geometry.default.distance([0,0,0],s),s=[1,p2c[1]+s[1]*c,p2c[2]+s[2]*c])),x=1,c=p2c[x]-s[x],Math.abs(c)<_math.default.eps&&(x=2,c=p2c[x]-s[x]),c=(y[x]-s[x])/c);return!_type.default.evaluate(this.visProp.straightfirst)&&
0>c?!1:!(!_type.default.evaluate(this.visProp.straightlast)&&1<c)},update:function(){var funps;if(!this.needsUpdate)return this;this.constrained&&(_type.default.isFunction(this.funps)?(funps=this.funps())&&funps.length&&2===funps.length&&(this.point1=funps[0],this.point2=funps[1]):(_type.default.isFunction(this.funp1)&&(funps=this.funp1(),_type.default.isPoint(funps)?this.point1=funps:funps&&funps.length&&2===funps.length&&this.point1.setPositionDirectly(_constants.default.COORDS_BY_USER,funps)),
_type.default.isFunction(this.funp2)&&(funps=this.funp2(),_type.default.isPoint(funps)?this.point2=funps:funps&&funps.length&&2===funps.length&&this.point2.setPositionDirectly(_constants.default.COORDS_BY_USER,funps))));this.updateSegmentFixedLength();this.updateStdform();_type.default.evaluate(this.visProp.trace)&&this.cloneToBackground(!0);return this},updateSegmentFixedLength:function(){if(!this.hasFixedLength)return this;var d=this.point1.Dist(this.point2);var dnew=this.fixedLength();var d1=this.fixedLengthOldCoords[0].distance(_constants.default.COORDS_BY_USER,
this.point1.coords);var d2=this.fixedLengthOldCoords[1].distance(_constants.default.COORDS_BY_USER,this.point2.coords);if(d1>_math.default.eps||d2>_math.default.eps||d!==dnew){var drag1=this.point1.isDraggable&&this.point1.type!==_constants.default.OBJECT_TYPE_GLIDER&&!_type.default.evaluate(this.point1.visProp.fixed);var drag2=this.point2.isDraggable&&this.point2.type!==_constants.default.OBJECT_TYPE_GLIDER&&!_type.default.evaluate(this.point2.visProp.fixed);if(d>_math.default.eps)if(d1>d2&&drag2||
d1<=d2&&drag2&&!drag1)this.point2.setPositionDirectly(_constants.default.COORDS_BY_USER,[this.point1.X()+(this.point2.X()-this.point1.X())*dnew/d,this.point1.Y()+(this.point2.Y()-this.point1.Y())*dnew/d]),this.point2.fullUpdate();else{if(d1<=d2&&drag1||d1>d2&&drag1&&!drag2)this.point1.setPositionDirectly(_constants.default.COORDS_BY_USER,[this.point2.X()+(this.point1.X()-this.point2.X())*dnew/d,this.point2.Y()+(this.point1.Y()-this.point2.Y())*dnew/d]),this.point1.fullUpdate()}else d1=Math.random()-
.5,d2=Math.random()-.5,d=Math.sqrt(d1*d1+d2*d2),drag2?(this.point2.setPositionDirectly(_constants.default.COORDS_BY_USER,[this.point1.X()+d1*dnew/d,this.point1.Y()+d2*dnew/d]),this.point2.fullUpdate()):drag1&&(this.point1.setPositionDirectly(_constants.default.COORDS_BY_USER,[this.point2.X()+d1*dnew/d,this.point2.Y()+d2*dnew/d]),this.point1.fullUpdate());this.fixedLengthOldCoords[0].setCoordinates(_constants.default.COORDS_BY_USER,this.point1.coords.usrCoords);this.fixedLengthOldCoords[1].setCoordinates(_constants.default.COORDS_BY_USER,
this.point2.coords.usrCoords)}return this},updateStdform:function(){var v=_math.default.crossProduct(this.point1.coords.usrCoords,this.point2.coords.usrCoords);this.stdform[0]=v[0];this.stdform[1]=v[1];this.stdform[2]=v[2];this.stdform[3]=0;this.normalize()},updateRenderer:function(){if(!this.needsUpdate)return this;this.visPropCalc.visible&&((this.isReal=!isNaN(this.point1.coords.usrCoords[1]+this.point1.coords.usrCoords[2]+this.point2.coords.usrCoords[1]+this.point2.coords.usrCoords[2])&&_math.default.innerProduct(this.stdform,
this.stdform,3)>=_math.default.eps*_math.default.eps)||this.updateVisibility(!1));this.visPropCalc.visible&&this.board.renderer.updateLine(this);this.hasLabel&&this.visPropCalc.visible&&this.label&&this.label.visPropCalc.visible&&this.isReal&&(this.label.update(),this.board.renderer.updateText(this.label));this.setDisplayRendNode();this.needsUpdate=!1;return this},generatePolynomial:function(p){var u1=this.point1.symbolic.x,u2=this.point1.symbolic.y,v1=this.point2.symbolic.x,v2=this.point2.symbolic.y,
w1=p.symbolic.x;p=p.symbolic.y;return[["(",u2,")*(",w1,")-(",u2,")*(",v1,")+(",p,")*(",v1,")-(",u1,")*(",p,")+(",u1,")*(",v2,")-(",w1,")*(",v2,")"].join("")]},getRise:function(){return Math.abs(this.stdform[2])>=_math.default.eps?-this.stdform[0]/this.stdform[2]:Infinity},getSlope:function(){return Math.abs(this.stdform[2])>=_math.default.eps?-this.stdform[1]/this.stdform[2]:Infinity},getAngle:function(){return Math.atan2(-this.stdform[1],this.stdform[2])},setStraight:function(straightFirst,straightLast){this.visProp.straightfirst=
straightFirst;this.visProp.straightlast=straightLast;this.board.renderer.updateLine(this);return this},getTextAnchor:function(){return new _coords.default(_constants.default.COORDS_BY_USER,[.5*(this.point2.X()+this.point1.X()),.5*(this.point2.Y()+this.point1.Y())],this.board)},setLabelRelativeCoords:function(relCoords){_type.default.exists(this.label)&&(this.label.relativeCoords=new _coords.default(_constants.default.COORDS_BY_SCREEN,[relCoords[0],-relCoords[1]],this.board))},getLabelAnchor:function(){var fs=
0;var y=new _coords.default(_constants.default.COORDS_BY_USER,this.point1.coords.usrCoords,this.board);var c2=new _coords.default(_constants.default.COORDS_BY_USER,this.point2.coords.usrCoords,this.board),ev_sf=_type.default.evaluate(this.visProp.straightfirst),ev_sl=_type.default.evaluate(this.visProp.straightlast);(ev_sf||ev_sl)&&_geometry.default.calcStraight(this,y,c2,0);y=y.scrCoords;c2=c2.scrCoords;if(!_type.default.exists(this.label))return new _coords.default(_constants.default.COORDS_BY_SCREEN,
[NaN,NaN],this.board);switch(_type.default.evaluate(this.label.visProp.position)){case "lft":case "llft":case "ulft":if(y[1]<=c2[1]){var x=y[1];y=y[2]}else x=c2[1],y=c2[2];break;case "rt":case "lrt":case "urt":y[1]>c2[1]?(x=y[1],y=y[2]):(x=c2[1],y=c2[2]);break;default:x=.5*(y[1]+c2[1]),y=.5*(y[2]+c2[2])}if(ev_sf||ev_sl)_type.default.exists(this.label)&&(fs=_type.default.evaluate(this.label.visProp.fontsize)),Math.abs(x)<_math.default.eps?x=fs:this.board.canvasWidth+_math.default.eps>x&&x>this.board.canvasWidth-
fs-_math.default.eps&&(x=this.board.canvasWidth-fs),_math.default.eps+fs>y&&y>-_math.default.eps?y=fs:this.board.canvasHeight+_math.default.eps>y&&y>this.board.canvasHeight-fs-_math.default.eps&&(y=this.board.canvasHeight-fs);return new _coords.default(_constants.default.COORDS_BY_SCREEN,[x,y],this.board)},cloneToBackground:function(){var copy={};copy.id=this.id+"T"+this.numTraces;copy.elementClass=_constants.default.OBJECT_CLASS_LINE;this.numTraces++;copy.point1=this.point1;copy.point2=this.point2;
copy.stdform=this.stdform;copy.board=this.board;copy.visProp=_type.default.deepCopy(this.visProp,this.visProp.traceattributes,!0);copy.visProp.layer=this.board.options.layer.trace;_type.default.clearVisPropOld(copy);copy.visPropCalc={visible:_type.default.evaluate(copy.visProp.visible)};var s=this.getSlope();var r=this.getRise();copy.getSlope=function(){return s};copy.getRise=function(){return r};var er=this.board.renderer.enhancedRendering;this.board.renderer.enhancedRendering=!0;this.board.renderer.drawLine(copy);
this.board.renderer.enhancedRendering=er;this.traces[copy.id]=copy.rendNode;return this},addTransform:function(transform){var list=_type.default.isArray(transform)?transform:[transform],len=list.length;for(transform=0;transform<len;transform++)this.point1.transformations.push(list[transform]),this.point2.transformations.push(list[transform]);return this},snapToGrid:function(pos){if(_type.default.evaluate(this.visProp.snaptogrid))if(3>this.parents.length)this.point1.handleSnapToGrid(!0,!0),this.point2.handleSnapToGrid(!0,
!0);else{if(_type.default.exists(pos)){var dc=_type.default.evaluate(this.visProp.snapsizex);var sY=_type.default.evaluate(this.visProp.snapsizey);var c1=new _coords.default(_constants.default.COORDS_BY_SCREEN,[pos.Xprev,pos.Yprev],this.board);pos=c1.usrCoords[1];var y=c1.usrCoords[2];if(0>=dc&&this.board.defaultAxes&&this.board.defaultAxes.x.defaultTicks){var ticks=this.board.defaultAxes.x.defaultTicks;dc=ticks.ticksDelta*(_type.default.evaluate(ticks.visProp.minorticks)+1)}0>=sY&&this.board.defaultAxes&&
this.board.defaultAxes.y.defaultTicks&&(ticks=this.board.defaultAxes.y.defaultTicks,sY=ticks.ticksDelta*(_type.default.evaluate(ticks.visProp.minorticks)+1));0<dc&&0<sY&&(c1=_geometry.default.projectPointToLine({coords:c1},this,this.board),dc=_statistics.default.subtract([1,Math.round(pos/dc)*dc,Math.round(y/sY)*sY],c1.usrCoords),dc=this.board.create("transform",dc.slice(1),{type:"translate"}),dc.applyOnce([this.point1,this.point2]))}}else this.point1.handleSnapToGrid(!1,!0),this.point2.handleSnapToGrid(!1,
!0);return this},snapToPoints:function(){var forceIt=_type.default.evaluate(this.visProp.snaptopoints);3>this.parents.length&&(this.point1.handleSnapToPoints(forceIt),this.point2.handleSnapToPoints(forceIt));return this},X:function(t){var b=this.stdform[2];var x=Math.abs(this.point1.coords.usrCoords[0])>_math.default.eps?this.point1.coords.usrCoords[1]:this.point2.coords.usrCoords[1];t=2*(t-.5);return(1-Math.abs(t))*x-t*b},Y:function(t){var a=this.stdform[1];var y=Math.abs(this.point1.coords.usrCoords[0])>
_math.default.eps?this.point1.coords.usrCoords[2]:this.point2.coords.usrCoords[2];t=2*(t-.5);return(1-Math.abs(t))*y+t*a},Z:function(t){return(1-Math.abs(2*(t-.5)))*(Math.abs(this.point1.coords.usrCoords[0])>_math.default.eps?this.point1.coords.usrCoords[0]:this.point2.coords.usrCoords[0])},L:function(){return this.point1.Dist(this.point2)},minX:function(){return 0},maxX:function(){return 1},bounds:function(){var p1c=this.point1.coords.usrCoords,p2c=this.point2.coords.usrCoords;return[Math.min(p1c[1],
p2c[1]),Math.max(p1c[2],p2c[2]),Math.max(p1c[1],p2c[1]),Math.min(p1c[2],p2c[2])]},remove:function(){this.removeAllTicks();_element.default.prototype.remove.call(this)}});_jxg.default.createLine=function(board,parents,attributes){var c$jscomp$0=[],doTransform=!1,constrained=!1;if(2===parents.length){if(_type.default.isArray(parents[0])&&1<parents[0].length){var attr=_type.default.copyAttributes(attributes,board.options,"line","point1");var p1=board.create("point",parents[0],attr)}else if(_type.default.isString(parents[0])||
_type.default.isPoint(parents[0]))p1=board.select(parents[0]);else if(_type.default.isFunction(parents[0])&&_type.default.isPoint(parents[0]()))p1=parents[0](),constrained=!0;else if(_type.default.isFunction(parents[0])&&parents[0]().length&&2<=parents[0]().length)attr=_type.default.copyAttributes(attributes,board.options,"line","point1"),p1=_point.default.createPoint(board,parents[0](),attr),constrained=!0;else if(_type.default.isObject(parents[0])&&_type.default.isTransformationOrArray(parents[1]))doTransform=
!0,attr=_type.default.copyAttributes(attributes,board.options,"line","point1"),p1=board.create("point",[parents[0].point1,parents[1]],attr);else throw Error("JSXGraph: Can't create line with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]");if(doTransform){attr=_type.default.copyAttributes(attributes,board.options,"line","point2");var p2=board.create("point",[parents[0].point2,parents[1]],attr)}else if(_type.default.isArray(parents[1])&&
1<parents[1].length)attr=_type.default.copyAttributes(attributes,board.options,"line","point2"),p2=board.create("point",parents[1],attr);else if(_type.default.isString(parents[1])||_type.default.isPoint(parents[1]))p2=board.select(parents[1]);else if(_type.default.isFunction(parents[1])&&_type.default.isPoint(parents[1]()))p2=parents[1](),constrained=!0;else if(_type.default.isFunction(parents[1])&&parents[1]().length&&2<=parents[1]().length)attr=_type.default.copyAttributes(attributes,board.options,
"line","point2"),p2=_point.default.createPoint(board,parents[1](),attr),constrained=!0;else throw Error("JSXGraph: Can't create line with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]");attr=_type.default.copyAttributes(attributes,board.options,"line");board=new _jxg.default.Line(board,p1,p2,attr);constrained?(board.constrained=!0,board.funp1=parents[0],board.funp2=parents[1]):doTransform||(board.isDraggable=!0);
board.setParents([p1.id,p2.id])}else if(3===parents.length){doTransform=!0;for(p1=0;3>p1;p1++)if(_type.default.isNumber(parents[p1]))c$jscomp$0[p1]=_type.default.createFunction(parents[p1]);else if(_type.default.isFunction(parents[p1]))c$jscomp$0[p1]=parents[p1],doTransform=!1;else throw Error("JSXGraph: Can't create line with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"' and '"+typeof parents[2]+"'.\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]");attr=_type.default.copyAttributes(attributes,
board.options,"line","point1");p1=doTransform?board.create("point",[c$jscomp$0[2]()*c$jscomp$0[2]()+c$jscomp$0[1]()*c$jscomp$0[1](),c$jscomp$0[2]()-c$jscomp$0[1]()*c$jscomp$0[0]()+c$jscomp$0[2](),-c$jscomp$0[1]()-c$jscomp$0[2]()*c$jscomp$0[0]()-c$jscomp$0[1]()],attr):board.create("point",[function(){return.5*(c$jscomp$0[2]()*c$jscomp$0[2]()+c$jscomp$0[1]()*c$jscomp$0[1]())},function(){return.5*(c$jscomp$0[2]()-c$jscomp$0[1]()*c$jscomp$0[0]()+c$jscomp$0[2]())},function(){return.5*(-c$jscomp$0[1]()-
c$jscomp$0[2]()*c$jscomp$0[0]()-c$jscomp$0[1]())}],attr);attr=_type.default.copyAttributes(attributes,board.options,"line","point2");p2=doTransform?board.create("point",[c$jscomp$0[2]()*c$jscomp$0[2]()+c$jscomp$0[1]()*c$jscomp$0[1](),-c$jscomp$0[1]()*c$jscomp$0[0]()+c$jscomp$0[2](),-c$jscomp$0[2]()*c$jscomp$0[0]()-c$jscomp$0[1]()],attr):board.create("point",[function(){return c$jscomp$0[2]()*c$jscomp$0[2]()+c$jscomp$0[1]()*c$jscomp$0[1]()},function(){return-c$jscomp$0[1]()*c$jscomp$0[0]()+c$jscomp$0[2]()},
function(){return-c$jscomp$0[2]()*c$jscomp$0[0]()-c$jscomp$0[1]()}],attr);p1.prepareUpdate().update();p2.prepareUpdate().update();attr=_type.default.copyAttributes(attributes,board.options,"line");board=new _jxg.default.Line(board,p1,p2,attr);board.isDraggable=doTransform;board.setParents([p1,p2])}else if(1===parents.length&&_type.default.isFunction(parents[0])&&2===parents[0]().length&&_type.default.isPoint(parents[0]()[0])&&_type.default.isPoint(parents[0]()[1])){var ps=parents[0]();attr=_type.default.copyAttributes(attributes,
board.options,"line");board=new _jxg.default.Line(board,ps[0],ps[1],attr);board.constrained=!0;board.funps=parents[0];board.setParents(ps)}else if(1===parents.length&&_type.default.isFunction(parents[0])&&3===parents[0]().length&&_type.default.isNumber(parents[0]()[0])&&_type.default.isNumber(parents[0]()[1])&&_type.default.isNumber(parents[0]()[2]))ps=parents[0],attr=_type.default.copyAttributes(attributes,board.options,"line","point1"),p1=board.create("point",[function(){var c=ps();return[.5*(c[2]*
c[2]+c[1]*c[1]),.5*(c[2]-c[1]*c[0]+c[2]),.5*(-c[1]-c[2]*c[0]-c[1])]}],attr),attr=_type.default.copyAttributes(attributes,board.options,"line","point2"),p2=board.create("point",[function(){var c=ps();return[c[2]*c[2]+c[1]*c[1],-c[1]*c[0]+c[2],-c[2]*c[0]-c[1]]}],attr),attr=_type.default.copyAttributes(attributes,board.options,"line"),board=new _jxg.default.Line(board,p1,p2,attr),board.constrained=!0,board.funps=parents[0],board.setParents([p1,p2]);else throw Error("JSXGraph: Can't create line with parent types '"+
typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [point,point], [[x1,y1],[x2,y2]], [a,b,c]");return board};_jxg.default.registerElement("line",_jxg.default.createLine);_jxg.default.createSegment=function(board,parents,attributes){attributes.straightFirst=!1;attributes.straightLast=!1;attributes=_type.default.copyAttributes(attributes,board.options,"segment");attributes=board.create("line",parents.slice(0,2),attributes);if(3===parents.length){attributes.hasFixedLength=!0;if(_type.default.isNumber(parents[2]))attributes.fixedLength=
function(){return parents[2]};else if(_type.default.isFunction(parents[2]))attributes.fixedLength=parents[2];else throw Error("JSXGraph: Can't create segment with third parent type '"+typeof parents[2]+"'.\nPossible third parent types: number or function");attributes.getParents=function(){return this.parents.concat(this.fixedLength())};attributes.fixedLengthOldCoords=[];attributes.fixedLengthOldCoords[0]=new _coords.default(_constants.default.COORDS_BY_USER,attributes.point1.coords.usrCoords.slice(1,
3),board);attributes.fixedLengthOldCoords[1]=new _coords.default(_constants.default.COORDS_BY_USER,attributes.point2.coords.usrCoords.slice(1,3),board)}attributes.elType="segment";return attributes};_jxg.default.registerElement("segment",_jxg.default.createSegment);_jxg.default.createArrow=function(board,parents,attributes){attributes.straightFirst=!1;attributes.straightLast=!1;attributes=_type.default.copyAttributes(attributes,board.options,"arrow");board=board.create("line",parents,attributes);
board.type=_constants.default.OBJECT_TYPE_VECTOR;board.elType="arrow";return board};_jxg.default.registerElement("arrow",_jxg.default.createArrow);_jxg.default.createAxis=function(board,parents,attributes){if((_type.default.isArray(parents[0])||_type.default.isPoint(parents[0]))&&(_type.default.isArray(parents[1])||_type.default.isPoint(parents[1]))){var attr=_type.default.copyAttributes(attributes,board.options,"axis");parents=board.create("line",parents,attr);parents.type=_constants.default.OBJECT_TYPE_AXIS;
parents.isDraggable=!1;parents.point1.isDraggable=!1;parents.point2.isDraggable=!1;for(els in parents.ancestors)parents.ancestors.hasOwnProperty(els)&&(parents.ancestors[els].type=_constants.default.OBJECT_TYPE_AXISPOINT);attributes=_type.default.copyAttributes(attributes,board.options,"axis","ticks");var els=_type.default.exists(attributes.ticksdistance)?attributes.ticksdistance:_type.default.isArray(attributes.ticks)?attributes.ticks:1;parents.defaultTicks=board.create("ticks",[parents,els],attributes);
parents.defaultTicks.dump=!1;parents.elType="axis";parents.subs={ticks:parents.defaultTicks};parents.inherits.push(parents.defaultTicks)}else throw Error("JSXGraph: Can't create axis with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [point,point], [[x1,y1],[x2,y2]]");return parents};_jxg.default.registerElement("axis",_jxg.default.createAxis);_jxg.default.createTangent=function(board,parents,attributes){var j,el;if(1===parents.length){var p=parents[0];
var c=p.slideObject}else if(2===parents.length)if(_type.default.isPoint(parents[0]))p=parents[0],c=parents[1];else if(_type.default.isPoint(parents[1]))c=parents[0],p=parents[1];else throw Error("JSXGraph: Can't create tangent with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [glider], [point,line|curve|circle|conic]");else throw Error("JSXGraph: Can't create tangent with parent types '"+typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [glider], [point,line|curve|circle|conic]");
if(c.elementClass===_constants.default.OBJECT_CLASS_LINE){var tangent=board.create("line",[c.point1,c.point2],attributes);tangent.glider=p}else if(c.elementClass===_constants.default.OBJECT_CLASS_CURVE&&c.type!==_constants.default.OBJECT_TYPE_CONIC)tangent="plot"!==_type.default.evaluate(c.visProp.curvetype)?board.create("line",[function(){var g=c.X,f=c.Y;return-p.X()*_numerics.default.D(f)(p.position)+p.Y()*_numerics.default.D(g)(p.position)},function(){return _numerics.default.D(c.Y)(p.position)},
function(){return-_numerics.default.D(c.X)(p.position)}],attributes):board.create("line",[function(){var i=Math.floor(p.position);if(1===c.bezierDegree)i===c.numberPoints-1&&i--;else if(3===c.bezierDegree){i=3*Math.floor(p.position*(c.numberPoints-1)/3);var p1=(p.position*(c.numberPoints-1)-i)/3;i>=c.numberPoints-1&&(i=c.numberPoints-4,p1=1)}else return 0;if(0>i)return 1;if(1===c.bezierDegree)p1=c.points[i].usrCoords,i=c.points[i+1].usrCoords;else{var A=c.points[i].usrCoords;var B=c.points[i+1].usrCoords;
var C=c.points[i+2].usrCoords;var D=c.points[i+3].usrCoords;i=(1-p1)*(1-p1)*(B[1]-A[1])+2*(1-p1)*p1*(C[1]-B[1])+p1*p1*(D[1]-C[1]);A=(1-p1)*(1-p1)*(B[2]-A[2])+2*(1-p1)*p1*(C[2]-B[2])+p1*p1*(D[2]-C[2]);B=Math.sqrt(i*i+A*A);p1=p.coords.usrCoords;i=[1,p1[1]+i/B,p1[2]+A/B]}return p1[2]*i[1]-p1[1]*i[2]},function(){var i=Math.floor(p.position);if(1===c.bezierDegree)i===c.numberPoints-1&&i--;else if(3===c.bezierDegree){i=3*Math.floor(p.position*(c.numberPoints-1)/3);var p1=(p.position*(c.numberPoints-1)-
i)/3;i>=c.numberPoints-1&&(i=c.numberPoints-4,p1=1)}else return 0;if(0>i)return 0;if(1===c.bezierDegree)p1=c.points[i].usrCoords,i=c.points[i+1].usrCoords;else{var A=c.points[i].usrCoords;var B=c.points[i+1].usrCoords;var C=c.points[i+2].usrCoords;var D=c.points[i+3].usrCoords;i=(1-p1)*(1-p1)*(B[1]-A[1])+2*(1-p1)*p1*(C[1]-B[1])+p1*p1*(D[1]-C[1]);A=(1-p1)*(1-p1)*(B[2]-A[2])+2*(1-p1)*p1*(C[2]-B[2])+p1*p1*(D[2]-C[2]);B=Math.sqrt(i*i+A*A);p1=p.coords.usrCoords;i=[1,p1[1]+i/B,p1[2]+A/B]}return i[2]-p1[2]},
function(){var i=Math.floor(p.position);if(1===c.bezierDegree)i===c.numberPoints-1&&i--;else if(3===c.bezierDegree){i=3*Math.floor(p.position*(c.numberPoints-1)/3);var p1=(p.position*(c.numberPoints-1)-i)/3;i>=c.numberPoints-1&&(i=c.numberPoints-4,p1=1)}else return 0;if(0>i)return 0;if(1===c.bezierDegree)p1=c.points[i].usrCoords,i=c.points[i+1].usrCoords;else{var A=c.points[i].usrCoords;var B=c.points[i+1].usrCoords;var C=c.points[i+2].usrCoords;var D=c.points[i+3].usrCoords;i=(1-p1)*(1-p1)*(B[1]-
A[1])+2*(1-p1)*p1*(C[1]-B[1])+p1*p1*(D[1]-C[1]);A=(1-p1)*(1-p1)*(B[2]-A[2])+2*(1-p1)*p1*(C[2]-B[2])+p1*p1*(D[2]-C[2]);B=Math.sqrt(i*i+A*A);p1=p.coords.usrCoords;i=[1,p1[1]+i/B,p1[2]+A/B]}return p1[1]-i[1]}],attributes),p.addChild(tangent),tangent.glider=p;else if(c.type===_constants.default.OBJECT_TYPE_TURTLE)tangent=board.create("line",[function(){var i=Math.floor(p.position);for(j=0;j<c.objects.length;j++)if(el=c.objects[j],el.type===_constants.default.OBJECT_TYPE_CURVE){if(i<el.numberPoints)break;
i-=el.numberPoints}i===el.numberPoints-1&&i--;return 0>i?1:el.Y(i)*el.X(i+1)-el.X(i)*el.Y(i+1)},function(){var i=Math.floor(p.position);for(j=0;j<c.objects.length;j++)if(el=c.objects[j],el.type===_constants.default.OBJECT_TYPE_CURVE){if(i<el.numberPoints)break;i-=el.numberPoints}i===el.numberPoints-1&&i--;return 0>i?0:el.Y(i+1)-el.Y(i)},function(){var i=Math.floor(p.position);for(j=0;j<c.objects.length;j++)if(el=c.objects[j],el.type===_constants.default.OBJECT_TYPE_CURVE){if(i<el.numberPoints)break;
i-=el.numberPoints}i===el.numberPoints-1&&i--;return 0>i?0:el.X(i)-el.X(i+1)}],attributes),p.addChild(tangent),tangent.glider=p;else if(c.elementClass===_constants.default.OBJECT_CLASS_CIRCLE||c.type===_constants.default.OBJECT_TYPE_CONIC)tangent=board.create("line",[function(){return _math.default.matVecMult(c.quadraticform,p.coords.usrCoords)[0]},function(){return _math.default.matVecMult(c.quadraticform,p.coords.usrCoords)[1]},function(){return _math.default.matVecMult(c.quadraticform,p.coords.usrCoords)[2]}],
attributes),p.addChild(tangent),tangent.glider=p;if(!_type.default.exists(tangent))throw Error("JSXGraph: Couldn't create tangent with the given parents.");tangent.elType="tangent";tangent.type=_constants.default.OBJECT_TYPE_TANGENT;tangent.setParents(parents);return tangent};_jxg.default.createRadicalAxis=function(board,parents,attributes){if(2!==parents.length||parents[0].elementClass!==_constants.default.OBJECT_CLASS_CIRCLE||parents[1].elementClass!==_constants.default.OBJECT_CLASS_CIRCLE)throw Error("JSXGraph: Can't create 'radical axis' with parent types '"+
typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent type: [circle,circle]");var el1=board.select(parents[0]);var el2=board.select(parents[1]);board=board.create("line",[function(){var a=el1.stdform,b=el2.stdform;return _math.default.matVecMult(_math.default.transpose([a.slice(0,3),b.slice(0,3)]),[b[3],-a[3]])}],attributes);board.elType="radicalaxis";board.setParents([el1.id,el2.id]);el1.addChild(board);el2.addChild(board);return board};_jxg.default.createPolarLine=function(board,parents,
attributes){if(1<parents.length){var el1=parents[0].type===_constants.default.OBJECT_TYPE_CONIC||parents[0].elementClass===_constants.default.OBJECT_CLASS_CIRCLE;var secondParentIsConic=parents[1].type===_constants.default.OBJECT_TYPE_CONIC||parents[1].elementClass===_constants.default.OBJECT_CLASS_CIRCLE;var firstParentIsPoint=_type.default.isPoint(parents[0]);var secondParentIsPoint=_type.default.isPoint(parents[1])}if(2!==parents.length||!(el1&&secondParentIsPoint||firstParentIsPoint&&secondParentIsConic))throw Error("JSXGraph: Can't create 'polar line' with parent types '"+
typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent type: [conic|circle,point], [point,conic|circle]");secondParentIsPoint?(el1=board.select(parents[0]),parents=board.select(parents[1])):(el1=board.select(parents[1]),parents=board.select(parents[0]));board=board.create("tangent",[el1,parents],attributes);board.elType="polarline";return board};_jxg.default.registerElement("tangent",_jxg.default.createTangent);_jxg.default.registerElement("polar",_jxg.default.createTangent);_jxg.default.registerElement("radicalaxis",
_jxg.default.createRadicalAxis);_jxg.default.registerElement("polarline",_jxg.default.createPolarLine);exports.default={Line:_jxg.default.Line,createLine:_jxg.default.createLine,createTangent:_jxg.default.createTangent,createPolar:_jxg.default.createTangent,createSegment:_jxg.default.createSegment,createAxis:_jxg.default.createAxis,createArrow:_jxg.default.createArrow,createRadicalAxis:_jxg.default.createRadicalAxis,createPolarLine:_jxg.default.createPolarLine}}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$base$line.js.map
