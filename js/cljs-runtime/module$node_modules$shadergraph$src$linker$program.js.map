{
"version":3,
"file":"module$node_modules$shadergraph$src$linker$program.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,eAAhB,CAAuBC,OAAvB,CAAgC,CAG/GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEvB,KAAIC,SAAWP,OAAA,CAAQ,oDAAR,CAAf,CAEIQ,UAAYR,OAAA,CAAQ,qDAAR,CAuBhB,MAAMM,QAAN,CACSG,gBAAS,EAAG,CACjB,IAAKC,CAAAA,KAAL,CAAa,CADI,CAIZC,YAAK,EAAG,CACb,MAAO,OAAO,EAAEL,OAAQI,CAAAA,KAAjB,GADM,CAKfE,WAAW,CAACC,QAAD,CAAWC,SAAX,CAAsBC,KAAtB,CAA6B,CACtC,IAAKF,CAAAA,QAAL,CAAgBA,QAChB,KAAKC,CAAAA,SAAL;AAAiBA,SACjB,KAAKC,CAAAA,KAAL,CAAaA,KACb,KAAKC,CAAAA,KAAL,CAAa,EACb,KAAKC,CAAAA,QAAL,CAAgB,EALsB,CASxCC,IAAI,CAACC,IAAD,CAAOlB,MAAP,CAAemB,QAAf,CAAyB,CAC3B,IAAIC,MACJ,OAAMC,GAAKrB,MAAOa,CAAAA,SAElB,EAAIO,MAAJ,CAAa,IAAKL,CAAAA,KAAL,CAAWM,EAAX,CAAb,EACED,MAAOD,CAAAA,QADT,CACoBG,IAAKC,CAAAA,GAAL,CAASH,MAAOD,CAAAA,QAAhB,CAA0BA,QAA1B,CADpB,CAGE,IAAKJ,CAAAA,KAAL,CAAWM,EAAX,CAHF,CAGmB,CACfH,IADe,CAEflB,MAFe,CAGfmB,QAHe,CAOnB,OAAO,KAdoB,CAkB7BpB,OAAO,CAACmB,IAAD,CAAOlB,MAAP,CAAe,CAEpB,MAAO,KAAKgB,CAAAA,QAAL,CADIhB,MAAOa,CAAAA,SACX,CAAP,CAA2B,CACzBK,IADyB,CAEzBlB,MAFyB,CAFP,CAStBwB,QAAQ,EAAG,CACT,MAAMC,KAAO,GAAIlB,SAAUiB,CAAAA,QAAd,EAAwB,IAAKZ,CAAAA,QAA7B,CAAyD,IAAlB,EAAA,IAAKC,CAAAA,SAAL,CAAyB,IAAKA,CAAAA,SAA9B,CAA0CR,OAAQK,CAAAA,KAAzF,CAAgG,IAAKK,CAAAA,KAArG,CAA4G,IAAKC,CAAAA,QAAjH,CAAb,CACMU,QAAU,IAAIpB,QAASqB,CAAAA,OAE7B,KAAK,MAAMC,GAAX,GAAkBH,KAAlB,CACEC,OAAA,CAAQE,GAAR,CAAA;AAAeH,IAAA,CAAKG,GAAL,CAGjBF,QAAQZ,CAAAA,KAAR,CAAgB,IAAKA,CAAAA,KACrB,OAAOY,QATE,CA9Cb,CA4DAzB,OAAQI,CAAAA,OAAR,CAAkBA,OAClBA,QAAQG,CAAAA,SAAR,EA9F+G;",
"sources":["node_modules/shadergraph/src/linker/program.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$linker$program\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Program = void 0;\n\nvar _snippet = require(\"./snippet\");\n\nvar _assemble = require(\"./assemble\");\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\n  Program assembly model\n\n  Snippets are added to its queue, registering calls and code includes.\n  Calls are de-duped and scheduled at the earliest point required for correct data flow.\n\n  When assemble() is called, it builds a main() function to\n  execute all calls in final order.\n\n  The result is a new instance of Snippet that acts as if it\n  was parsed from the combined source of the component\n  nodes.\n*/\nclass Program {\n  static initClass() {\n    this.index = 0;\n  }\n\n  static entry() {\n    return `_pg_${++Program.index}_`;\n  } // Program starts out empty, ready to compile starting from a particular block\n\n\n  constructor(language, namespace, graph) {\n    this.language = language;\n    this.namespace = namespace;\n    this.graph = graph;\n    this.calls = {};\n    this.requires = {};\n  } // Call a given module at certain priority\n\n\n  call(node, module, priority) {\n    let exists;\n    const ns = module.namespace; // Merge all calls down into one with the right priority\n\n    if (exists = this.calls[ns]) {\n      exists.priority = Math.max(exists.priority, priority);\n    } else {\n      this.calls[ns] = {\n        node,\n        module,\n        priority\n      };\n    }\n\n    return this;\n  } // Require a given (callback) module's externals\n\n\n  require(node, module) {\n    const ns = module.namespace;\n    return this.requires[ns] = {\n      node,\n      module\n    };\n  } // Compile queued ops into result\n\n\n  assemble() {\n    const data = (0, _assemble.assemble)(this.language, this.namespace != null ? this.namespace : Program.entry, this.calls, this.requires);\n    const snippet = new _snippet.Snippet();\n\n    for (const key in data) {\n      snippet[key] = data[key];\n    }\n\n    snippet.graph = this.graph;\n    return snippet;\n  }\n\n}\n\nexports.Program = Program;\nProgram.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Program","_snippet","_assemble","initClass","index","entry","constructor","language","namespace","graph","calls","requires","call","node","priority","exists","ns","Math","max","assemble","data","snippet","Snippet","key"]
}
