{"version":3,"sources":["re_frame/context.cljs"],"mappings":"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","names":["re-frame.context/frame-context","js/module$node_modules$react$index","re-frame.core/default-frame","re-frame.context/set-default-frame","frame","re_frame.context.goog$module$goog$object.set","cljs.core/vec","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","re-frame.context/current-context","temp__5753__auto__","cmp","reagent.core/current-component","cljs.core/object?","re-frame.context/current-frame","or__4253__auto__","re-frame.registry/*current-frame*","re_frame.context.goog$module$goog$object.get","re-frame.context/bound-frame","js/Error","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","re-frame.context/provide-frame","seq88885","G__88886","cljs.core/first","cljs.core/next","self__4851__auto__","children","reagent.core.create_element","reagent.core.as_element","cljs.core.into","re-frame.context/provide-app-db","app-db","re_frame.frame.make_frame","re-frame.context/subscribe","args__88870__auto__","cljs.core.apply","seq88889","self__4852__auto__","re-frame.frame/subscribe","re-frame.context/dispatch","seq88892","re-frame.frame/dispatch","re-frame.context/dispatch-sync","seq88893","re-frame.frame/dispatch-sync","re-frame.context/clear-sub","seq88896","re-frame.frame/clear-sub","re-frame.context/reg-fx","seq88901","re-frame.frame/reg-fx","re-frame.context/reg-cofx","seq88902","re-frame.frame/reg-cofx","re-frame.context/inject-cofx","seq88903","re-frame.frame/inject-cofx","re-frame.context/clear-cofx","seq88908","re-frame.frame/clear-cofx","re-frame.context/reg-event-db","seq88914","re-frame.frame/reg-event-db","re-frame.context/reg-event-fx","seq88915","re-frame.frame/reg-event-fx","re-frame.context/reg-event-ctx","seq88918","re-frame.frame/reg-event-ctx","re-frame.context/clear-event","seq88923","re-frame.frame/clear-event","re-frame.context/reg-sub-raw","query-id","handler-fn","re-frame.frame/reg-sub-raw","query-v","G__88930","G__88931","re-frame.context/reg-sub","seq88932","G__88933","args","re-frame.frame/reg-sub","re-frame.context/clear-subscriptions-cache!","seq88937","re-frame.subs/-clear","G__88940","re-frame.context/context-fns","re_frame.context.context_fns","cljs.core.partial","re-frame.context/bind-fn","f","*current-frame*-orig-val__88941","*current-frame*-temp-val__88942"],"sourcesContent":["(ns re-frame.context\n  (:require [\"react\" :as react]\n            [goog.object :as gobj]\n            [lambdaisland.glogi :as log]\n            [re-frame.core :as r]\n            [re-frame.frame :as frame]\n            [re-frame.registry :as registry]\n            [re-frame.subs :as subs]\n            [reagent.core])\n  (:require-macros [re-frame.context :refer [defc import-with-frame]]))\n\n(def frame-context (.createContext react r/default-frame))\n\n(defn set-default-frame [frame]\n  (gobj/set frame-context \"_currentValue\" frame)\n  (gobj/set frame-context \"_currentValue2\" frame))\n\n(defn current-context\n  \"Gets the react Context for the current component, to be used in lifecycle\n  hooks (e.g. render). Assumes that Component.contextType has been set.\"\n  []\n  (when-let [cmp (reagent.core/current-component)]\n    ;; When used without setting the right contextType we will get #js {} back\n    (when (not (object? (.-context cmp)))\n      (.-context cmp))))\n\n(defn current-frame\n  \"Get the current frame provided by the context, falling back to the default\n  frame. Assumes that Component.contextType = frame-context.\"\n  []\n  (or registry/*current-frame*\n      (current-context)\n      (gobj/get frame-context \"_currentValue\")))\n\n(defn bound-frame []\n  (or registry/*current-frame*\n      (current-context)\n      (throw (js/Error. \"No frame bound\"))))\n\n(defn provide-frame\n  \"Component that acts as a provider for the frame, so to run an isolated version\n  of your app, use.\n\n      [provide-frame (frame/make-frame)\n       [app]]\"\n  [frame & children]\n  (reagent.core/create-element\n   (.-Provider frame-context)\n   #js {:value frame\n        :children (reagent.core/as-element (into [:<>] children))}))\n\n(defc provide-app-db\n  \"Component that acts as a provider for the app-db, it takes the registry from\n  the current frame, but uses the given atom for the app-db\"\n  [app-db & children]\n  `[~provide-frame ~(frame/make-frame {:registry (:registry (current-frame))\n                                       :app-db   app-db})\n    ~@children])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; Complete copy of the top-level re-frame API. If you are using the context\n;; approach then import re-frame.context instead of re-frame.core and things\n;; should generally Just Work\u2122\n\n(import-with-frame subscribe re-frame.frame/subscribe)\n(import-with-frame dispatch re-frame.frame/dispatch)\n(import-with-frame dispatch-sync re-frame.frame/dispatch-sync)\n(import-with-frame clear-sub re-frame.frame/clear-sub)\n(import-with-frame reg-fx re-frame.frame/reg-fx)\n(import-with-frame reg-cofx re-frame.frame/reg-cofx)\n(import-with-frame inject-cofx re-frame.frame/inject-cofx)\n(import-with-frame clear-cofx re-frame.frame/clear-cofx)\n(import-with-frame reg-event-db re-frame.frame/reg-event-db)\n(import-with-frame reg-event-fx re-frame.frame/reg-event-fx)\n(import-with-frame reg-event-ctx re-frame.frame/reg-event-ctx)\n(import-with-frame clear-event re-frame.frame/clear-event)\n\n;; A few special cases which we can't import directly\n\n(defn reg-sub-raw [query-id handler-fn]\n  (frame/reg-sub-raw\n   (current-frame)\n   query-id\n   (fn [frame query-v]\n     (handler-fn (:app-db frame) query-v))))\n\n;; some slight weirdness here because protocols don't support variadic functions\n(defn reg-sub [query-id & args]\n  (frame/reg-sub (current-frame) query-id args))\n\n(defn clear-subscriptions-cache! [& args]\n  (apply subs/-clear (:subs-cache (current-frame)) args))\n\n\n(defn context-fns\n  \"Returns subscribe/dispatch/dispatch-sync functions that are bound to the current frame. Use like this\n\n      (defc my-component []\n        (reagent/with-let [{:keys [subscribe dispatch]} (re-frame/context-fns)]\n          ,,,\n          )) \"\n  ([] (context-fns (current-frame)))\n  ([frame]\n   {:subscribe (partial re-frame.frame/subscribe frame)\n    :dispatch (partial re-frame.frame/dispatch frame)\n    :dispatch-sync (partial re-frame.frame/dispatch-sync frame)}))\n\n(defn bind-fn [f]\n  (let [frame (current-frame)]\n     (fn [& args]\n       (binding [registry/*current-frame* frame]\n         (apply f args)))))\n"]}