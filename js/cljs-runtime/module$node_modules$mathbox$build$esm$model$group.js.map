{
"version":3,
"file":"module$node_modules$mathbox$build$esm$model$group.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAAgB,IAAK,EAEjBC,OAAAA,CAAQP,OAAA,CAAQ,kDAAR,CAYZ,MAAMM,MAAN,QAAoBC,OAAMC,CAAAA,IAA1B,CACEC,WAAW,CAACC,IAAD,CAAOC,QAAP,CAAiBC,OAAjB,CAA0BC,KAA1B,CAAiCC,MAAjC,CAAyCC,UAAzC,CAAqD,CAC9D,KAAA,CAAML,IAAN,CAAYC,QAAZ,CAAsBC,OAAtB,CAA+BC,KAA/B,CAAsCC,MAAtC,CAA8CC,UAA9C,CACA,KAAKC,CAAAA,QAAL,CAAgB,EAChB,KAAKC,CAAAA,EAAL,CAAQ,SAAR,CAAmBC,KAAA,EAASC,KAAMC,CAAAA,IAAN,CAAW,IAAKJ,CAAAA,QAAhB,CAA0BK,CAAAA,GAA1B,CAA8BC,KAAA,EAASA,KAAMC,CAAAA,OAAN,CAAcL,KAAd,CAAvC,CAA5B,CAH8D,CAMhEM,GAAG,CAACC,IAAD,CAAO,CACW,IAAnB;AAAIA,IAAKC,CAAAA,MAAT,EACED,IAAKC,CAAAA,MAAOC,CAAAA,MAAZ,CAAmBF,IAAnB,CAGFA,KAAKG,CAAAA,MAAL,CAAY,IAAKZ,CAAAA,QAASa,CAAAA,MAA1B,CAAkC,IAAlC,CAEA,KAAKb,CAAAA,QAASc,CAAAA,IAAd,CAAmBL,IAAnB,CACA,OAAOA,KAAKM,CAAAA,MAAL,CAAY,IAAZ,CARC,CAWVJ,MAAM,CAACF,IAAD,CAAO,CACU,IAArB,EAAIA,IAAKT,CAAAA,QAAT,EAA4BS,IAAKT,CAAAA,QAASa,CAAAA,MAA1C,EACEJ,IAAKO,CAAAA,KAAL,EAGF,OAAMC,MAAQ,IAAKjB,CAAAA,QAASkB,CAAAA,OAAd,CAAsBT,IAAtB,CAEd,IAAc,CAAC,CAAf,GAAIQ,KAAJ,CAAA,CAIA,IAAKjB,CAAAA,QAASmB,CAAAA,MAAd,CAAqBF,KAArB,CAA4B,CAA5B,CAEAR,KAAKG,CAAAA,MAAL,CAAY,IAAZ,CAEAH,KAAKW,CAAAA,QAAL,CAAc,IAAd,CAEA,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoB,IAAKrB,CAAAA,QAASa,CAAAA,MAAlC,CAA0CQ,CAAA,EAA1C,CACEZ,IAEA,CAFO,IAAKT,CAAAA,QAAL,CAAcqB,CAAd,CAEP,CAAIA,CAAJ,EAASJ,KAAT,EACER,IAAKG,CAAAA,MAAL,CAAYS,CAAZ,CAdJ,CAPW,CA0BbL,KAAK,EAAG,CACN,MAAMhB,SAAW,IAAKA,CAAAA,QAASsB,CAAAA,KAAd,EAAsBC,CAAAA,OAAtB,EAEjB,KAAK,MAAMd,IAAX,GAAmBN,MAAMC,CAAAA,IAAN,CAAWJ,QAAX,CAAnB,CACE,IAAKW,CAAAA,MAAL,CAAYF,IAAZ,CAJI,CA5CV;AAsDAvB,OAAQI,CAAAA,KAAR,CAAgBA,KA1E8F;",
"sources":["node_modules/mathbox/build/esm/model/group.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$model$group\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Group = void 0;\n\nvar _node = require(\"./node.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Group extends _node.Node {\n  constructor(type, defaults, options, binds, config, attributes) {\n    super(type, defaults, options, binds, config, attributes);\n    this.children = [];\n    this.on(\"reindex\", event => Array.from(this.children).map(child => child.trigger(event)));\n  }\n\n  add(node) {\n    if (node.parent != null) {\n      node.parent.remove(node);\n    }\n\n    node._index(this.children.length, this);\n\n    this.children.push(node);\n    return node._added(this);\n  }\n\n  remove(node) {\n    if (node.children != null ? node.children.length : undefined) {\n      node.empty();\n    }\n\n    const index = this.children.indexOf(node);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.children.splice(index, 1);\n\n    node._index(null);\n\n    node._removed(this);\n\n    for (let i = 0; i < this.children.length; i++) {\n      node = this.children[i];\n\n      if (i >= index) {\n        node._index(i);\n      }\n    }\n  }\n\n  empty() {\n    const children = this.children.slice().reverse();\n\n    for (const node of Array.from(children)) {\n      this.remove(node);\n    }\n  }\n\n}\n\nexports.Group = Group;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Group","_node","Node","constructor","type","defaults","options","binds","config","attributes","children","on","event","Array","from","map","child","trigger","add","node","parent","remove","_index","length","push","_added","empty","index","indexOf","splice","_removed","i","slice","reverse"]
}
