{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$meshes$screen.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/meshes/screen.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$meshes$screen\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Screen = void 0;\n\nvar _base = require(\"./base.js\");\n\nvar _constants = require(\"three/src/constants.js\");\n\nvar _Mesh = require(\"three/src/objects/Mesh.js\");\n\nvar _screengeometry = require(\"../geometry/screengeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Screen extends _base.Base {\n  constructor(renderer, shaders, options) {\n    let f;\n    super(renderer, shaders, options);\n    let {\n      uniforms\n    } = options;\n    const {\n      map,\n      combine,\n      stpq,\n      linear\n    } = options;\n\n    if (uniforms == null) {\n      uniforms = {};\n    }\n\n    const hasStyle = uniforms.styleColor != null;\n    this.geometry = new _screengeometry.ScreenGeometry({\n      width: options.width,\n      height: options.height\n    });\n\n    this._adopt(uniforms);\n\n    this._adopt(this.geometry.uniforms);\n\n    const factory = shaders.material();\n    const v = factory.vertex;\n    v.pipe(\"raw.position.scale\", this.uniforms);\n    v.fan();\n    v.pipe(\"stpq.xyzw.2d\", this.uniforms);\n    v.next();\n    v.pipe(\"screen.position\", this.uniforms);\n    v.join();\n    factory.fragment = f = this._fragmentColor(hasStyle, false, null, null, map, 2, stpq, combine, linear);\n    f.pipe(\"fragment.color\", this.uniforms);\n    const opts = factory.link({\n      side: _constants.DoubleSide\n    });\n    this.material = this._material(opts);\n    const object = new _Mesh.Mesh(this.geometry, this.material);\n    object.frustumCulled = false;\n    object.userData = opts;\n\n    this._raw(object);\n\n    this.renders = [object];\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.renders = this.geometry = this.material = null;\n    return super.dispose();\n  }\n\n}\n\nexports.Screen = Screen;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Screen","_base","_constants","_Mesh","_screengeometry","Base","constructor","renderer","shaders","options","uniforms","map","combine","stpq","linear","hasStyle","styleColor","geometry","ScreenGeometry","width","height","_adopt","factory","material","v","vertex","pipe","fan","next","join","fragment","f","_fragmentColor","opts","link","side","DoubleSide","_material","object","Mesh","frustumCulled","userData","_raw","renders","dispose"]
}
