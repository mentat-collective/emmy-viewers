shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$draw$surface=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Surface=void 0;var UJS=
function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$js")),_Color=require("module$node_modules$three$src$math$Color");global=require("module$node_modules$mathbox$build$esm$primitives$primitive");class Surface extends global.Primitive{static initClass(){this.traits="node object visible style line mesh geometry surface position grid bind shade".split(" ");
this.defaults={lineX:!1,lineY:!1}}constructor(node,context,helpers){super(node,context,helpers);this.lineX=this.lineY=this.surface=null}resize(){if(null!=this.bind.points){var dims=this.bind.points.getActiveDimensions(),{width,height,depth,items}=dims;this.surface&&this.surface.geometry.clip(width,height,depth,items);this.lineX&&this.lineX.geometry.clip(width,height,depth,items);this.lineY&&this.lineY.geometry.clip(height,width,depth,items);if(null!=this.bind.map&&(dims=this.bind.map.getActiveDimensions(),
this.surface))return this.surface.geometry.map(dims.width,dims.height,dims.depth,dims.items)}}make(){let color,normal;this._helpers.bind.make([{to:"geometry.points",trait:"source"},{to:"geometry.colors",trait:"source"},{to:"mesh.normals",trait:"source"},{to:"mesh.map",trait:"source"}]);if(null!=this.bind.points){var position=this._shaders.shader();position=this.bind.points.sourceShader(position);position=this._helpers.position.pipeline(position);var styleUniforms=this._helpers.style.uniforms(),wireUniforms=
this._helpers.style.uniforms(),lineUniforms=this._helpers.line.uniforms(),surfaceUniforms=this._helpers.surface.uniforms(),unitUniforms=this._inherit("unit").getUnitUniforms();wireUniforms.styleColor=this._attributes.make(this._types.color());wireUniforms.styleZBias=this._attributes.make(this._types.number());this.wireColor=wireUniforms.styleColor.value;this.wireZBias=wireUniforms.styleZBias;this.wireScratch=new _Color.Color;var dims=this.bind.points.getDimensions(),{width,height,depth,items}=dims,
{shaded,fill,lineX,lineY,closedX,closedY,stroke,join,proximity,crossed}=this.props;dims=[];this.proximity=proximity;null!=this.bind.normals&&(normal=this._shaders.shader(),this.bind.normals.sourceShader(normal),this._helpers.shade.normal(normal));null!=this.bind.colors&&(color=this._shaders.shader(),this.bind.colors.sourceShader(color));var mask=this._helpers.object.mask(),map=this._helpers.shade.map(null!=this.bind.map?this.bind.map.sourceShader(this._shaders.shader()):void 0),material=this._helpers.shade.pipeline(),
faceMaterial=material||shaded;material=material||!1;var {swizzle,swizzle2}=this._helpers.position;wireUniforms=UJS.merge(unitUniforms,lineUniforms,styleUniforms,wireUniforms);lineUniforms=lineX||lineY?-50:0;lineX&&(this.lineX=this._renderables.make("line",{uniforms:wireUniforms,samples:width,strips:height,ribbons:depth,layers:items,position,color,normal,zUnits:-lineUniforms,stroke,join,mask,material,proximity,closed:closedX||closed}),dims.push(this.lineX));lineY&&(this.lineY=this._renderables.make("line",
{uniforms:wireUniforms,samples:height,strips:width,ribbons:depth,layers:items,position:swizzle2(position,"yxzw","yxzw"),color:swizzle(color,"yxzw"),zUnits:-lineUniforms,stroke,join,mask:swizzle(mask,crossed?"xyzw":"yxzw"),material,proximity,closed:closedY||closed}),dims.push(this.lineY));fill&&(wireUniforms=UJS.merge(unitUniforms,surfaceUniforms,styleUniforms),this.surface=this._renderables.make("surface",{uniforms:wireUniforms,width,height,surfaces:depth,layers:items,position,color,zUnits:lineUniforms,
stroke,material:faceMaterial,mask,map,intUV:!0,closedX:closedX||closed,closedY:closedY||closed}),dims.push(this.surface));this._helpers.visible.make();return this._helpers.object.make(dims)}}made(){return this.resize()}unmake(){this._helpers.bind.unmake();this._helpers.visible.unmake();this._helpers.object.unmake();return this.lineX=this.lineY=this.surface=null}_convertGammaToLinear(color,gammaFactor=2){color.r=Math.pow(color.r,gammaFactor);color.g=Math.pow(color.g,gammaFactor);color.b=Math.pow(color.b,
gammaFactor);return color}_convertLinearToGamma(color,gammaFactor=2){gammaFactor=0<gammaFactor?1/gammaFactor:1;color.r=Math.pow(color.r,gammaFactor);color.g=Math.pow(color.g,gammaFactor);color.b=Math.pow(color.b,gammaFactor);return color}change(changed,touched,init){if(changed["geometry.points"]||changed["mesh.shaded"]||changed["mesh.fill"]||changed["line.stroke"]||changed["line.join"]||touched.grid)return this.rebuild();if(changed["style.color"]||changed["style.zBias"]||changed["mesh.fill"]||changed["mesh.lineBias"]||
init){const {fill,color,zBias,lineBias}=this.props;this.wireZBias.value=zBias+(fill?lineBias:0);this.wireColor.copy(color);fill&&(touched=this.wireScratch,touched.setRGB(color.r,color.g,color.b),this._convertLinearToGamma(this._convertGammaToLinear(touched).multiplyScalar(.75)),this.wireColor.r=touched.r,this.wireColor.g=touched.g,this.wireColor.b=touched.b)}if(changed["line.proximity"]&&null!=this.proximity!==(null!=this.props.proximity))return this.rebuild()}}exports.Surface=Surface;Surface.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$draw$surface.js.map
