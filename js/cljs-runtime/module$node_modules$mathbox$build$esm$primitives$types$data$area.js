shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$data$area=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Area=void 0;global=require("module$node_modules$mathbox$build$esm$primitives$types$data$matrix");class Area extends global.Matrix{static initClass(){this.traits="node buffer active data source index matrix texture raw span:x span:y area sampler:x sampler:y".split(" ")}updateSpan(){var dimensions=this.props.axes;({width:inverseX}=
this.props);({height:inverseY}=this.props);const {centeredX}=this.props,{centeredY}=this.props,padX=this.props.paddingX,padY=this.props.paddingY;var rangeX=this._helpers.span.get("x.",dimensions[0]);dimensions=this._helpers.span.get("y.",dimensions[1]);this.aX=rangeX.x;this.aY=dimensions.x;rangeX=rangeX.y-rangeX.x;dimensions=dimensions.y-dimensions.x;inverseX+=2*padX;inverseY+=2*padY;if(centeredX){var inverseX=1/Math.max(1,inverseX);this.aX+=rangeX*inverseX/2}else inverseX=1/Math.max(1,inverseX-1);
if(centeredY){var inverseY=1/Math.max(1,inverseY);this.aY+=dimensions*inverseY/2}else inverseY=1/Math.max(1,inverseY-1);this.bX=rangeX*inverseX;this.bY=dimensions*inverseY;this.aX+=padX*this.bX;return this.aY+=padY*this.bY}callback(callback){this.updateSpan();if(this.last===callback)return this._callback;this.last=callback;return 5>=callback.length?this._callback=(emit,i,j)=>callback(emit,this.aX+this.bX*i,this.aY+this.bY*j,i,j):this._callback=(emit,i,j)=>callback(emit,this.aX+this.bX*i,this.aY+this.bY*
j,i,j,this.bufferClock,this.bufferStep)}make(){super.make();this._helpers.span.make();return this._listen(this,"span.range",this.updateSpan)}unmake(){super.unmake();return this._helpers.span.unmake()}change(changed,touched,init){super.change(changed,touched,init);(touched.x||touched.y)&&this.updateSpan()}}exports.Area=Area;Area.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$data$area.js.map
