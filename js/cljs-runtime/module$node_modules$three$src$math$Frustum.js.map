{
"version":3,
"file":"module$node_modules$three$src$math$Frustum.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/math/Frustum.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$math$Frustum\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Frustum = void 0;\n\nvar _Vector = require(\"./Vector3.js\");\n\nvar _Sphere = require(\"./Sphere.js\");\n\nvar _Plane = require(\"./Plane.js\");\n\nconst _sphere = /*@__PURE__*/new _Sphere.Sphere();\n\nconst _vector = /*@__PURE__*/new _Vector.Vector3();\n\nclass Frustum {\n  constructor(p0 = new _Plane.Plane(), p1 = new _Plane.Plane(), p2 = new _Plane.Plane(), p3 = new _Plane.Plane(), p4 = new _Plane.Plane(), p5 = new _Plane.Plane()) {\n    this.planes = [p0, p1, p2, p3, p4, p5];\n  }\n\n  set(p0, p1, p2, p3, p4, p5) {\n    const planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  }\n\n  copy(frustum) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  }\n\n  setFromProjectionMatrix(m) {\n    const planes = this.planes;\n    const me = m.elements;\n    const me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n    const me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n    const me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n    const me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  }\n\n  intersectsObject(object) {\n    const geometry = object.geometry;\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n    return this.intersectsSphere(_sphere);\n  }\n\n  intersectsSprite(sprite) {\n    _sphere.center.set(0, 0, 0);\n\n    _sphere.radius = 0.7071067811865476;\n\n    _sphere.applyMatrix4(sprite.matrixWorld);\n\n    return this.intersectsSphere(_sphere);\n  }\n\n  intersectsSphere(sphere) {\n    const planes = this.planes;\n    const center = sphere.center;\n    const negRadius = -sphere.radius;\n\n    for (let i = 0; i < 6; i++) {\n      const distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  intersectsBox(box) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      const plane = planes[i]; // corner at max distance\n\n      _vector.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n      _vector.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n      _vector.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n      if (plane.distanceToPoint(_vector) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  containsPoint(point) {\n    const planes = this.planes;\n\n    for (let i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n}\n\nexports.Frustum = Frustum;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Frustum","_Vector","_Sphere","_Plane","_sphere","Sphere","_vector","Vector3","constructor","p0","Plane","p1","p2","p3","p4","p5","planes","set","copy","frustum","i","setFromProjectionMatrix","m","me","elements","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","normalize","intersectsObject","object","geometry","boundingSphere","computeBoundingSphere","applyMatrix4","matrixWorld","intersectsSphere","intersectsSprite","sprite","center","radius","sphere","negRadius","distanceToPoint","distance","intersectsBox","box","plane","x","normal","max","min","y","z","containsPoint","point","clone"]
}
