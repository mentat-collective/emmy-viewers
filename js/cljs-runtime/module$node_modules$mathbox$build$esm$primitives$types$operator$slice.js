shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$operator$slice=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Slice=void 0;global=require("module$node_modules$mathbox$build$esm$primitives$types$operator$operator");class Slice extends global.Operator{static initClass(){this.traits="node bind operator source index slice".split(" ")}getDimensions(){return this._resample(this.bind.source.getDimensions())}getActiveDimensions(){return this._resample(this.bind.source.getActiveDimensions())}getFutureDimensions(){return this._resample(this.bind.source.getFutureDimensions())}getIndexDimensions(){return this._resample(this.bind.source.getIndexDimensions())}sourceShader(shader){shader.pipe("slice.position",
this.uniforms);return this.bind.source.sourceShader(shader)}_resolve(key,dims){var range=this.props[key];key=dims[key];if(null==range)return[0,key];dims=Math.round(range.x);dims=0>dims?key+dims:dims;range=Math.round(range.y);range=Math.max(dims,0>range?key+range:range);return[dims,range-dims]}_resample(dims){dims.width=this._resolve("width",dims)[1];dims.height=this._resolve("height",dims)[1];dims.depth=this._resolve("depth",dims)[1];dims.items=this._resolve("items",dims)[1];return dims}make(){super.make();
if(null!=this.bind.source)return this.uniforms={sliceOffset:this._attributes.make(this._types.vec4())}}unmake(){return super.unmake()}resize(){if(null!=this.bind.source){var dims=this.bind.source.getActiveDimensions();this.uniforms.sliceOffset.value.set(this._resolve("width",dims)[0],this._resolve("height",dims)[0],this._resolve("depth",dims)[0],this._resolve("items",dims)[0]);return super.resize()}}change(changed,touched,_init){if(touched.operator)return this.rebuild();if(touched.slice)return this.resize()}}
exports.Slice=Slice;Slice.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$operator$slice.js.map
