shadow$provide.module$node_modules$threestrap$src$bootstrap=function(global,require,module,exports){function isString(str){return str&&"string"===typeof str.valueOf()}Object.defineProperty(exports,"__esModule",{value:!0});exports.Bootstrap=void 0;global=require("module$node_modules$threestrap$src$api");require=require("module$node_modules$threestrap$src$binder");class Bootstrap{static initClass(){this.Plugins={};this.Aliases={}}static registerPlugin(name,spec){var ctor=function(options){Bootstrap.Plugin.call(this,
options);this.__name=name};ctor.prototype=Object.assign(new Bootstrap.Plugin,spec);this.Plugins[name]=ctor}static unregisterPlugin(name){delete this.Plugins[name]}static registerAlias(name,plugins){this.Aliases[name]=plugins}static unregisterAlias(name){delete this.Aliases[name]}constructor(options){if(options){var args=[].slice.apply(arguments);options={};if(args[0]instanceof Node){const node=args[0];args=args.slice(1);options.element=node}isString(args[0])?options.plugins=args:Array.isArray(args[0])?
options.plugins=args[0]:args[0]&&(options=Object.assign({},args[0],options))}this.__options=Object.assign({},{init:!0,element:document.body,plugins:["core"],aliases:{},plugindb:Bootstrap.Plugins||{},aliasdb:Bootstrap.Aliases||{}},options||{});this.__destroyed=this.__inited=!1;this.__installed=[];args=this.__options.element;args===""+args&&(args=document.querySelector(args));this.plugins={};this.element=args;this.trigger=this.trigger.bind(this);this.frame=this.frame.bind(this);this.events=["pre","update",
"render","post"].map(function(type){return{type}});this.__options.init&&this.init()}init(){this.__inited||(this.__inited=!0,this.install(this.__options.plugins))}destroy(){this.__inited&&!this.__destroyed&&(this.__destroyed=!0,this.trigger({type:"destroy"}),this.uninstall())}frame(){this.events.map(this.trigger)}resolve(plugins){function recurse(list,out,level){if(256<=level)throw"Plug-in alias recursion detected.";list=list.filter(pred);list.forEach(function(name){var alias=aliases[name];alias?out=
out.concat(recurse(alias,[],level+1)):out.push(name)});return out}plugins=Array.isArray(plugins)?plugins:[plugins];var o=this.__options,aliases=Object.assign({},o.aliasdb,o.aliases),pred=function(name){name=name.split(":");if(!name[1])return!0;aliases[name[0]]=[name[1]];return!1};plugins=plugins.filter(pred);Object.entries(aliases).forEach(function([key,alias]){aliases[key]=Array.isArray(alias)?alias:[alias]});return recurse(plugins,[],0)}install(plugins){plugins=Array.isArray(plugins)?plugins:[plugins];
plugins=this.resolve(plugins);plugins.forEach(name=>this.__install(name));this.__ready()}uninstall(plugins){plugins&&(plugins=Array.isArray(plugins)?plugins:[plugins],plugins=this.resolve(plugins));(plugins||this.__installed).reverse().forEach(p=>this.__uninstall(p.__name))}__install(name){var ctor=this.__options.plugindb[name];if(!ctor)throw"[three.install] Cannot install. '"+name+"' is not registered.";if(this.plugins[name])return console.warn("[three.install] "+name+" is already installed.");ctor=
new ctor(this.__options[name]||{},name);this.plugins[name]=ctor;name=ctor.install(this);this.__installed.push(ctor);this.trigger({type:"install",plugin:ctor});return name}__uninstall(name){const plugin=isString(name)?this.plugins[name]:name;plugin?(name=plugin.__name,plugin.uninstall(this),this.__installed=this.__installed.filter(p=>p!==plugin),delete this.plugins[name],this.trigger({type:"uninstall",plugin})):console.warn("[three.uninstall] "+name+"' is not installed.")}__ready(){this.triggerOnce({type:"ready"})}}
exports.Bootstrap=Bootstrap;Bootstrap.initClass();Bootstrap.Plugin=function(options){this.options=Object.assign({},this.defaults,options||{})};Bootstrap.Plugin.prototype={listen:[],defaults:{},install:function(_three){},uninstall:function(_three){}};require.Binder.apply(Bootstrap.prototype);require.Binder.apply(Bootstrap.Plugin.prototype);global.Api.apply(Bootstrap.Plugin.prototype)}
//# sourceMappingURL=module$node_modules$threestrap$src$bootstrap.js.map
