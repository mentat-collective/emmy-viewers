{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLCapabilities.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLCapabilities.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLCapabilities\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLCapabilities = WebGLCapabilities;\n\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  let maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n\n    if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n      const extension = extensions.get('EXT_texture_filter_anisotropic');\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  const isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n  let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  const maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n\n  const drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n  const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n  const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  const maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  const maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  const maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  const maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  const maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  const maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  const maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  const vertexTextures = maxVertexTextures > 0;\n  const floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n  const floatVertexTextures = vertexTextures && floatFragmentTextures;\n  const maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n  return {\n    isWebGL2: isWebGL2,\n    drawBuffers: drawBuffers,\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures,\n    maxSamples: maxSamples\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLCapabilities","gl","extensions","parameters","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxAnisotropy","isWebGL2","WebGL2RenderingContext","WebGL2ComputeRenderingContext","undefined","maxPrecision","console","warn","drawBuffers","has","logarithmicDepthBuffer","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","getMaxAnisotropy","extension","get","MAX_TEXTURE_MAX_ANISOTROPY_EXT"]
}
