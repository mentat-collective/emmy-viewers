shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$base$element=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_coords=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$coords")),
_math=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math")),_statistics=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$statistics")),_options=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$options")),_event=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$event")),_color=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$color")),
_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type"));_jxg.default.GeometryElement=function(board,attributes,type,oclass){var key;this.needsUpdate=!0;this.isDraggable=!1;this.isReal=!0;this.childElements={};this.highlighted=this.hasLabel=!1;this.notExistingParents={};this.traces={};this.numTraces=0;this.transformations=[];this.baseElement=null;this.descendants={};this.ancestors={};this.parents=[];this.symbolic={};this.rendNode=null;this.elType="";this.dump=
!0;this.subs={};this.inherits=[];this._pos=-1;this.stdform=[1,0,0,0,1,1,0,0];this.methodMap={setLabel:"setLabel",label:"label",setName:"setName",getName:"getName",addTransform:"addTransform",setProperty:"setAttribute",setAttribute:"setAttribute",addChild:"addChild",animate:"animate",on:"on",off:"off",trigger:"trigger",addTicks:"addTicks",removeTicks:"removeTicks",removeAllTicks:"removeAllTicks"};this.quadraticform=[[1,0,0],[0,1,0],[0,0,1]];this.visProp={};this.visPropCalc={visible:!1};_event.default.eventify(this);
this.mouseover=!1;this.lastDragTime=new Date;if(0<arguments.length){this.board=board;this._org_type=this.type=type;this.elementClass=oclass||_constants.default.OBJECT_CLASS_OTHER;this.id=attributes.id;var name=attributes.name;_type.default.exists(name)||(name=this.board.generateName(this));""!==name&&(this.board.elementsByName[name]=this);this.name=name;this.needsRegularUpdate=attributes.needsregularupdate;_type.default.clearVisPropOld(this);name=this.resolveShortcuts(attributes);for(key in name)name.hasOwnProperty(key)&&
this._set(key,name[key]);this.visProp.draft=name.draft&&name.draft.draft}};_jxg.default.extend(_jxg.default.GeometryElement.prototype,{addChild:function(obj){var el,el2;this.childElements[obj.id]=obj;this.addDescendants(obj);obj.ancestors[this.id]=this;for(el in this.descendants)if(this.descendants.hasOwnProperty(el))for(el2 in this.descendants[el].ancestors[this.id]=this,this.ancestors)this.ancestors.hasOwnProperty(el2)&&(this.descendants[el].ancestors[this.ancestors[el2].id]=this.ancestors[el2]);
for(el in this.ancestors)if(this.ancestors.hasOwnProperty(el))for(el2 in this.descendants)this.descendants.hasOwnProperty(el2)&&(this.ancestors[el].descendants[this.descendants[el2].id]=this.descendants[el2]);return this},addDescendants:function(obj){var el;this.descendants[obj.id]=obj;for(el in obj.childElements)obj.childElements.hasOwnProperty(el)&&this.addDescendants(obj.childElements[el]);return this},addParents:function(parents){var i;var par=_type.default.isArray(parents)?parents:arguments;
var len=par.length;for(i=0;i<len;++i)_type.default.exists(par[i])&&(_type.default.isId(this.board,par[i])?this.parents.push(par[i]):_type.default.exists(par[i].id)&&this.parents.push(par[i].id));this.parents=_type.default.uniqueArray(this.parents)},setParents:function(parents){this.parents=[];this.addParents(parents)},removeChild:function(obj){delete this.childElements[obj.id];this.removeDescendants(obj);delete obj.ancestors[this.id];return this},removeDescendants:function(obj){var el;delete this.descendants[obj.id];
for(el in obj.childElements)obj.childElements.hasOwnProperty(el)&&this.removeDescendants(obj.childElements[el]);return this},countChildren:function(){var prop,s=0;var d=this.childElements;for(prop in d)d.hasOwnProperty(prop)&&0>prop.indexOf("Label")&&s++;return s},getName:function(){return this.name},addTransform:function(transform){return this},draggable:function(){return this.isDraggable&&!_type.default.evaluate(this.visProp.fixed)&&this.type!==_constants.default.OBJECT_TYPE_GLIDER},setPosition:function(method,
coords){method=[];var i;if(!_type.default.exists(this.parents))return this;var len=this.parents.length;for(i=0;i<len;++i){var el=this.board.select(this.parents[i]);if(_type.default.isPoint(el)){if(!el.draggable())return this;method.push(el)}}3===coords.length&&(coords=coords.slice(1));coords=this.board.create("transform",coords,{type:"translate"});len=method.length;0<len?coords.applyOnce(method):0<this.transformations.length&&this.transformations[this.transformations.length-1].isNumericMatrix?this.transformations[this.transformations.length-
1].melt(coords):this.addTransform(coords);for(i=0;i<len;++i)method[i].type===_constants.default.OBJECT_TYPE_GLIDER&&method[i].updateGlider();return this},setPositionDirectly:function(method,coords,oldcoords){coords=new _coords.default(method,coords,this.board,!1);method=new _coords.default(method,oldcoords,this.board,!1);method=_statistics.default.subtract(coords.usrCoords,method.usrCoords);this.setPosition(_constants.default.COORDS_BY_USER,method);return this},generatePolynomial:function(){return[]},
animate:function(hash,time,options){options=options||{};var r,i,steps=Math.ceil(time/this.board.attr.animationdelay),self=this,animateColor=function(startRGB,endRGB,property){startRGB=_color.default.rgb2hsv(startRGB);var hsv2=_color.default.rgb2hsv(endRGB);endRGB=(hsv2[0]-startRGB[0])/steps;var ss=(hsv2[1]-startRGB[1])/steps;hsv2=(hsv2[2]-startRGB[2])/steps;self.animationData[property]=[];for(i=0;i<steps;i++)self.animationData[property][steps-i-1]=_color.default.hsv2rgb(startRGB[0]+(i+1)*endRGB,startRGB[1]+
(i+1)*ss,startRGB[2]+(i+1)*hsv2)},animateFloat=function(start,end,property,round){start=parseFloat(start);end=parseFloat(end);if(!isNaN(start)&&!isNaN(end)){var s=(end-start)/steps;self.animationData[property]=[];for(i=0;i<steps;i++)end=start+(i+1)*s,self.animationData[property][steps-i-1]=round?Math.floor(end):end}};this.animationData={};for(r in hash)if(hash.hasOwnProperty(r))switch(time=r.toLowerCase(),time){case "strokecolor":case "fillcolor":animateColor(this.visProp[time],hash[r],time);break;
case "size":if(!_type.default.isPoint(this))break;animateFloat(this.visProp[time],hash[r],time,!0);break;case "strokeopacity":case "strokewidth":case "fillopacity":animateFloat(this.visProp[time],hash[r],time,!1)}this.animationCallback=options.callback;this.board.addAnimation(this);return this},update:function(){_type.default.evaluate(this.visProp.trace)&&this.cloneToBackground();return this},updateRenderer:function(){return this},fullUpdate:function(visible){return this.prepareUpdate().update().updateVisibility(visible).updateRenderer()},
setDisplayRendNode:function(val){var i,s;void 0===val&&(val=this.visPropCalc.visible);if(val===this.visPropOld.visible)return this;this.board.renderer.display(this,val);var len=this.inherits.length;for(s=0;s<len;s++){var obj=this.inherits[s];if(_type.default.isArray(obj)){var len_s=obj.length;for(i=0;i<len_s;i++)_type.default.exists(obj[i])&&_type.default.exists(obj[i].rendNode)&&"inherit"===_type.default.evaluate(obj[i].visProp.visible)&&obj[i].setDisplayRendNode(val)}else _type.default.exists(obj)&&
_type.default.exists(obj.rendNode)&&"inherit"===_type.default.evaluate(obj.visProp.visible)&&obj.setDisplayRendNode(val)}this.hasLabel&&_type.default.exists(this.label)&&_type.default.exists(this.label.rendNode)&&"inherit"===_type.default.evaluate(this.label.visProp.visible)&&this.label.setDisplayRendNode(val);return this},hide:function(){this.setAttribute({visible:!1});return this},hideElement:function(){this.hide();return this},show:function(){this.setAttribute({visible:!0});return this},showElement:function(){this.show();
return this},updateVisibility:function(parent_val){var s;if(this.needsUpdate){void 0!==parent_val?this.visPropCalc.visible=parent_val:(parent_val=_type.default.evaluate(this.visProp.visible),_type.default.exists(this.hiddenByParent)&&this.hiddenByParent&&(parent_val=!1),"inherit"!==parent_val&&(this.visPropCalc.visible=parent_val));var len=this.inherits.length;for(s=0;s<len;s++){var obj=this.inherits[s];if(_type.default.isArray(obj)){var len_s=obj.length;for(parent_val=0;parent_val<len_s;parent_val++)_type.default.exists(obj[parent_val])&&
"inherit"===_type.default.evaluate(obj[parent_val].visProp.visible)&&obj[parent_val].prepareUpdate().updateVisibility(this.visPropCalc.visible)}else _type.default.exists(obj)&&"inherit"===_type.default.evaluate(obj.visProp.visible)&&obj.prepareUpdate().updateVisibility(this.visPropCalc.visible)}_type.default.exists(this.label)&&_type.default.exists(this.label.visProp)&&_type.default.evaluate(this.label.visProp.visible)&&this.label.prepareUpdate().updateVisibility(this.visPropCalc.visible)}return this},
_set:function(property,value){var el;property=property.toLocaleLowerCase();if(this.visProp.hasOwnProperty(property)&&0<=property.indexOf("color")&&_type.default.isString(value)&&9===value.length&&"#"===value.charAt(0))value=_color.default.rgba2rgbo(value),this.visProp[property]=value[0],this.visProp[property.replace("color","opacity")]=value[1];else if(null===value||!_type.default.isObject(value)||_type.default.exists(value.id)||_type.default.exists(value.name))this.visProp[property]=value;else for(el in this.visProp[property]=
{},value)value.hasOwnProperty(el)&&(this.visProp[property][el.toLocaleLowerCase()]=value[el])},resolveShortcuts:function(attributes){var key,i,subattr=["traceattributes","traceAttributes"];for(key in _options.default.shortcuts)if(_options.default.shortcuts.hasOwnProperty(key)){if(_type.default.exists(attributes[key]))for(i=0;i<_options.default.shortcuts[key].length;i++)_type.default.exists(attributes[_options.default.shortcuts[key][i]])||(attributes[_options.default.shortcuts[key][i]]=attributes[key]);
for(i=0;i<subattr.length;i++)_type.default.isObject(attributes[subattr[i]])&&(attributes[subattr[i]]=this.resolveShortcuts(attributes[subattr[i]]))}return attributes},setLabel:function(str){this.hasLabel||this.setAttribute({withlabel:!0});this.setLabelText(str)},setLabelText:function(str){_type.default.exists(this.label)&&(str=str.replace(/</g,"\x26lt;").replace(/>/g,"\x26gt;"),this.label.setText(str));return this},setName:function(str){str=str.replace(/</g,"\x26lt;").replace(/>/g,"\x26gt;");"slider"!==
this.elType&&this.setLabelText(str);this.setAttribute({name:str})},setProperty:function(){_jxg.default.deprecated("setProperty()","setAttribute()");this.setAttribute.apply(this,arguments)},setAttribute:function(attributes){var i,j,properties={};for(i=0;i<arguments.length;i++){var value=arguments[i];_type.default.isString(value)?(value=value.split(":"),properties[_type.default.trim(value[0])]=_type.default.trim(value[1])):_type.default.isArray(value)?properties[value[0]]=value[1]:_jxg.default.extend(properties,
value)}properties=this.resolveShortcuts(properties);for(i in properties)if(properties.hasOwnProperty(i)){var le=i.replace(/\s+/g,"").toLowerCase();value=properties[i];if(_type.default.isObject(value)&&_type.default.exists(this.visProp[le]))if(this.visProp[le]=_type.default.merge(this.visProp[le],value),this.type===_constants.default.OBJECT_TYPE_TICKS&&_type.default.exists(this.labels))for(le=this.labels.length,j=0;j<le;j++)this.labels[j].setAttribute(value);else{if(_type.default.exists(this[le]))if(_type.default.isArray(this[le]))for(j=
0;j<this[le].length;j++)this[le][j].setAttribute(value);else this[le].setAttribute(value)}else{var oldvalue=this.visProp[le];switch(le){case "name":oldvalue=this.name;delete this.board.elementsByName[this.name];this.name=value;this.board.elementsByName[this.name]=this;break;case "needsregularupdate":this.needsRegularUpdate=!("false"===value||!1===value);this.board.renderer.setBuffering(this,this.needsRegularUpdate?"auto":"static");break;case "labelcolor":value=_color.default.rgba2rgbo(value);j=value[1];
value=value[0];0===j&&_type.default.exists(this.label)&&this.hasLabel&&this.label.hideElement();_type.default.exists(this.label)&&this.hasLabel&&(this.label.visProp.strokecolor=value,this.board.renderer.setObjectStrokeColor(this.label,value,j));this.elementClass===_constants.default.OBJECT_CLASS_TEXT&&(this.visProp.strokecolor=value,this.visProp.strokeopacity=j,this.board.renderer.setObjectStrokeColor(this,value,j));break;case "infoboxtext":_type.default.isString(value)?this.infoboxText=value:this.infoboxText=
!1;break;case "visible":this.visProp.visible="false"===value?!1:"true"===value?!0:value;this.setDisplayRendNode(_type.default.evaluate(this.visProp.visible));_type.default.evaluate(this.visProp.visible)&&_type.default.exists(this.updateSize)&&this.updateSize();break;case "face":_type.default.isPoint(this)&&(this.visProp.face=value,this.board.renderer.changePointStyle(this));break;case "trace":"false"===value||!1===value?(this.clearTrace(),this.visProp.trace=!1):this.visProp.trace="pause"===value?
!1:!0;break;case "gradient":this.visProp.gradient=value;this.board.renderer.setGradient(this);break;case "gradientsecondcolor":value=_color.default.rgba2rgbo(value);this.visProp.gradientsecondcolor=value[0];this.visProp.gradientsecondopacity=value[1];this.board.renderer.updateGradient(this);break;case "gradientsecondopacity":this.visProp.gradientsecondopacity=value;this.board.renderer.updateGradient(this);break;case "withlabel":this.visProp.withlabel=value;_type.default.evaluate(value)?(this.label||
this.createLabel(),this.label.setAttribute({visible:"inherit"})):this.label&&this.hasLabel&&this.label.setAttribute({visible:!1});this.hasLabel=value;break;case "radius":this.type!==_constants.default.OBJECT_TYPE_ANGLE&&this.type!==_constants.default.OBJECT_TYPE_SECTOR||this.setRadius(value);break;case "rotate":(this.elementClass===_constants.default.OBJECT_CLASS_TEXT&&"internal"===_type.default.evaluate(this.visProp.display)||this.type===_constants.default.OBJECT_TYPE_IMAGE)&&this.addRotation(value);
break;case "ticksdistance":this.type===_constants.default.OBJECT_TYPE_TICKS&&_type.default.isNumber(value)&&(this.ticksFunction=this.makeTicksFunction(value));break;case "generatelabelvalue":this.type===_constants.default.OBJECT_TYPE_TICKS&&_type.default.isFunction(value)&&(this.generateLabelValue=value);break;case "onpolygon":this.type===_constants.default.OBJECT_TYPE_GLIDER&&(this.onPolygon=!!value);break;case "disabled":_type.default.exists(this.rendNodeTag)&&(this.rendNodeTag.disabled=!!value);
break;case "checked":_type.default.exists(this.rendNodeTag)&&(this.rendNodeCheckbox.checked=!!value);break;case "maxlength":_type.default.exists(this.rendNodeTag)&&(this.rendNodeTag.maxlength=!!value);break;case "layer":this.board.renderer.setLayer(this,_type.default.evaluate(value));this._set(le,value);break;case "tabindex":_type.default.exists(this.rendNode)&&(this.rendNode.setAttribute("tabindex",value),this._set(le,value));break;default:_type.default.exists(this.visProp[le])&&(!_jxg.default.Validator[le]||
_jxg.default.Validator[le]&&_jxg.default.Validator[le](value)||_jxg.default.Validator[le]&&_type.default.isFunction(value)&&_jxg.default.Validator[le](value()))&&(value=value.toLowerCase&&"false"===value.toLowerCase()?!1:value,this._set(le,value))}this.triggerEventHandlers(["attribute:"+le],[oldvalue,value,this])}}this.triggerEventHandlers(["attribute"],[properties,this]);_type.default.evaluate(this.visProp.needsregularupdate)?this.board.update(this):this.board.fullUpdate();return this},getProperty:function(){_jxg.default.deprecated("getProperty()",
"getAttribute()");this.getProperty.apply(this,arguments)},getAttribute:function(key){key=key.toLowerCase();switch(key){case "needsregularupdate":key=this.needsRegularUpdate;break;case "labelcolor":key=this.label.visProp.strokecolor;break;case "infoboxtext":key=this.infoboxText;break;case "withlabel":key=this.hasLabel;break;default:key=this.visProp[key]}return key},setDash:function(dash){this.setAttribute({dash});return this},prepareUpdate:function(){this.needsUpdate=!0;return this},remove:function(){this.board.renderer.remove(this.board.renderer.getElementById(this.id));
this.hasLabel&&this.board.renderer.remove(this.board.renderer.getElementById(this.label.id));return this},getTextAnchor:function(){return new _coords.default(_constants.default.COORDS_BY_USER,[0,0],this.board)},getLabelAnchor:function(){return new _coords.default(_constants.default.COORDS_BY_USER,[0,0],this.board)},setArrow:function(firstArrow,lastArrow){this.visProp.firstarrow=firstArrow;if(this.visProp.lastarrow=lastArrow)this.type=_constants.default.OBJECT_TYPE_VECTOR,this.elType="arrow";this.prepareUpdate().update().updateVisibility().updateRenderer();
return this},createGradient:function(){var ev_g=_type.default.evaluate(this.visProp.gradient);"linear"!==ev_g&&"radial"!==ev_g||this.board.renderer.setGradient(this)},createLabel:function(){var that=this;if(_jxg.default.elements.text){var attr=_type.default.deepCopy(this.visProp.label,null);attr.id=this.id+"Label";attr.isLabel=!0;attr.anchor=this;attr.priv=this.visProp.priv;this.visProp.withlabel&&(this.label=_jxg.default.elements.text(this.board,[0,0,function(){return _type.default.isFunction(that.name)?
that.name():that.name}],attr),this.label.needsUpdate=!0,this.label.dump=!1,this.label.fullUpdate(),this.hasLabel=!0)}else _jxg.default.debug("JSXGraph: Can't create label: text element is not available. Make sure you include base/text");return this},highlight:function(force){force=_type.default.def(force,!1);!_type.default.evaluate(this.visProp.highlight)||this.highlighted&&!force||(this.highlighted=!0,this.board.highlightedObjects[this.id]=this,this.board.renderer.highlight(this));return this},noHighlight:function(){this.highlighted&&
(this.highlighted=!1,delete this.board.highlightedObjects[this.id],this.board.renderer.noHighlight(this));return this},clearTrace:function(){for(var obj in this.traces)this.traces.hasOwnProperty(obj)&&this.board.renderer.remove(this.traces[obj]);this.numTraces=0;return this},cloneToBackground:function(){return this},bounds:function(){return[0,0,0,0]},normalize:function(){this.stdform=_math.default.normalize(this.stdform);return this},toJSON:function(){var key,json=['{"name":',this.name];json.push(', "id":'+
this.id);var vis=[];for(key in this.visProp)this.visProp.hasOwnProperty(key)&&_type.default.exists(this.visProp[key])&&vis.push('"'+key+'":'+this.visProp[key]);json.push(', "visProp":{'+vis.toString()+"}");json.push("}");return json.join("")},addRotation:function(angle){var that=this;if((this.elementClass===_constants.default.OBJECT_CLASS_TEXT&&"internal"===_type.default.evaluate(this.visProp.display)||this.type===_constants.default.OBJECT_TYPE_IMAGE)&&0!==angle){var tOffInv=this.board.create("transform",
[function(){return-that.X()},function(){return-that.Y()}],{type:"translate"});var tOff=this.board.create("transform",[function(){return that.X()},function(){return that.Y()}],{type:"translate"});var tS=this.board.create("transform",[function(){return that.board.unitX/that.board.unitY},function(){return 1}],{type:"scale"});var tSInv=this.board.create("transform",[function(){return that.board.unitY/that.board.unitX},function(){return 1}],{type:"scale"});var tRot=this.board.create("transform",[function(){return _type.default.evaluate(angle)*
Math.PI/180}],{type:"rotate"});tOffInv.bindTo(this);tS.bindTo(this);tRot.bindTo(this);tSInv.bindTo(this);tOff.bindTo(this)}return this},highlightStrokeColor:function(sColor){_jxg.default.deprecated("highlightStrokeColor()","setAttribute()");this.setAttribute({highlightStrokeColor:sColor});return this},strokeColor:function(sColor){_jxg.default.deprecated("strokeColor()","setAttribute()");this.setAttribute({strokeColor:sColor});return this},strokeWidth:function(width){_jxg.default.deprecated("strokeWidth()",
"setAttribute()");this.setAttribute({strokeWidth:width});return this},fillColor:function(fColor){_jxg.default.deprecated("fillColor()","setAttribute()");this.setAttribute({fillColor:fColor});return this},highlightFillColor:function(fColor){_jxg.default.deprecated("highlightFillColor()","setAttribute()");this.setAttribute({highlightFillColor:fColor});return this},labelColor:function(lColor){_jxg.default.deprecated("labelColor()","setAttribute()");this.setAttribute({labelColor:lColor});return this},
dash:function(d){_jxg.default.deprecated("dash()","setAttribute()");this.setAttribute({dash:d});return this},visible:function(v){_jxg.default.deprecated("visible()","setAttribute()");this.setAttribute({visible:v});return this},shadow:function(s){_jxg.default.deprecated("shadow()","setAttribute()");this.setAttribute({shadow:s});return this},getType:function(){return this.elType},getParents:function(){return _type.default.isArray(this.parents)?this.parents:[]},snapToGrid:function(){return this},snapToPoints:function(){return this},
getAttributes:function(){var attributes=_type.default.deepCopy(this.visProp),cleanThis=[],i,len=cleanThis.length;attributes.id=this.id;attributes.name=this.name;for(i=0;i<len;i++)delete attributes[cleanThis[i]];return attributes},hasPoint:function(x,y){return!1},addTicks:function(ticks){""!==ticks.id&&_type.default.exists(ticks.id)||(ticks.id=this.id+"_ticks_"+(this.ticks.length+1));this.board.renderer.drawTicks(ticks);this.ticks.push(ticks);return ticks.id},removeAllTicks:function(){var t;if(_type.default.exists(this.ticks)){for(t=
this.ticks.length-1;0<=t;t--)this.removeTicks(this.ticks[t]);this.ticks=[];this.board.update()}},removeTicks:function(tick){var t;_type.default.exists(this.defaultTicks)&&this.defaultTicks===tick&&(this.defaultTicks=null);if(_type.default.exists(this.ticks))for(t=this.ticks.length-1;0<=t;t--)if(this.ticks[t]===tick){this.board.removeObject(this.ticks[t]);if(this.ticks[t].ticks)for(tick=0;tick<this.ticks[t].ticks.length;tick++)_type.default.exists(this.ticks[t].labels[tick])&&this.board.removeObject(this.ticks[t].labels[tick]);
delete this.ticks[t];break}},getSnapSizes:function(){var sX=_type.default.evaluate(this.visProp.snapsizex);var sY=_type.default.evaluate(this.visProp.snapsizey);if(0>=sX&&this.board.defaultAxes&&this.board.defaultAxes.x.defaultTicks){var ticks=this.board.defaultAxes.x.defaultTicks;sX=ticks.ticksDelta*(_type.default.evaluate(ticks.visProp.minorticks)+1)}0>=sY&&this.board.defaultAxes&&this.board.defaultAxes.y.defaultTicks&&(ticks=this.board.defaultAxes.y.defaultTicks,sY=ticks.ticksDelta*(_type.default.evaluate(ticks.visProp.minorticks)+
1));return[sX,sY]},handleSnapToGrid:function(force,fromParent){var attractToGrid=_type.default.evaluate(this.visProp.attracttogrid),ev_au=_type.default.evaluate(this.visProp.attractorunit),ev_ad=_type.default.evaluate(this.visProp.attractordistance);if(!_type.default.exists(this.coords)||_type.default.evaluate(this.visProp.fixed))return this;if(_type.default.evaluate(this.visProp.snaptogrid)||attractToGrid||!0===force){var x=this.coords.usrCoords[1];var y=this.coords.usrCoords[2];var boardBB=this.getSnapSizes();
force=boardBB[0];var sY=boardBB[1];if(0<force&&0<sY){boardBB=this.board.getBoundingBox();x=Math.round(x/force)*force;y=Math.round(y/sY)*sY;var rcoords=new _jxg.default.Coords(_constants.default.COORDS_BY_USER,[x,y],this.board);if(!attractToGrid||rcoords.distance("screen"===ev_au?_constants.default.COORDS_BY_SCREEN:_constants.default.COORDS_BY_USER,this.coords)<ev_ad)fromParent||(x<boardBB[0]?x+=force:x>boardBB[2]&&(x-=force),y<boardBB[3]?y+=sY:y>boardBB[1]&&(y-=sY)),this.coords.setCoordinates(_constants.default.COORDS_BY_USER,
[x,y])}}return this},getBoundingBox:function(){var i,bb=[Infinity,Infinity,-Infinity,-Infinity];if(this.type===_constants.default.OBJECT_TYPE_POLYGON){var le=this.vertices.length-1;if(0>=le)return bb;for(i=0;i<le;i++){var v=this.vertices[i].X();bb[0]=v<bb[0]?v:bb[0];bb[2]=v>bb[2]?v:bb[2];v=this.vertices[i].Y();bb[1]=v<bb[1]?v:bb[1];bb[3]=v>bb[3]?v:bb[3]}}else if(this.elementClass===_constants.default.OBJECT_CLASS_CIRCLE)i=this.center.X(),le=this.center.Y(),bb=[i-this.radius,le+this.radius,i+this.radius,
le-this.radius];else if(this.elementClass===_constants.default.OBJECT_CLASS_CURVE){le=this.vertices.length;if(0===le)return bb;for(i=0;i<le;i++)v=this.points[i].coords.usrCoords[1],bb[0]=v<bb[0]?v:bb[0],bb[2]=v>bb[2]?v:bb[2],v=this.points[i].coords.usrCoords[1],bb[1]=v<bb[1]?v:bb[1],bb[3]=v>bb[3]?v:bb[3]}return bb},addEvent:_jxg.default.shortcut(_jxg.default.GeometryElement.prototype,"on"),removeEvent:_jxg.default.shortcut(_jxg.default.GeometryElement.prototype,"off"),__evt__over:function(e){},__evt__mouseover:function(e){},
__evt__out:function(e){},__evt__mouseout:function(e){},__evt__move:function(e){},__evt__mousemove:function(e){},__evt__drag:function(e){},__evt__mousedrag:function(e){},__evt__pendrag:function(e){},__evt__touchdrag:function(e){},__evt__down:function(e){},__evt__mousedown:function(e){},__evt__pendown:function(e){},__evt__touchdown:function(e){},__evt__up:function(e){},__evt__mouseup:function(e){},__evt__penup:function(e){},__evt__touchup:function(e){},__evt__attribute:function(o,el){},__evt__attribute_:function(val,
nval,el){},__evt:function(){}});exports.default=_jxg.default.GeometryElement}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$base$element.js.map
