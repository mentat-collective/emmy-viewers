shadow$provide.module$node_modules$css_select$lib$general=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.compileGeneralSelector=void 0;var attributes_1=require("module$node_modules$css_select$lib$attributes"),pseudo_selectors_1=require("module$node_modules$css_select$lib$pseudo_selectors$index"),css_what_1=require("module$node_modules$css_what$lib$commonjs$index");exports.compileGeneralSelector=function(next,selector,options,context,compileToken){var adapter=
options.adapter,equals=options.equals;switch(selector.type){case css_what_1.SelectorType.PseudoElement:throw Error("Pseudo-elements are not supported by css-select");case css_what_1.SelectorType.ColumnCombinator:throw Error("Column combinators are not yet supported by css-select");case css_what_1.SelectorType.Attribute:if(null!=selector.namespace)throw Error("Namespaced attributes are not yet supported by css-select");if(!options.xmlMode||options.lowerCaseAttributeNames)selector.name=selector.name.toLowerCase();
return attributes_1.attributeRules[selector.action](next,selector,options);case css_what_1.SelectorType.Pseudo:return(0,pseudo_selectors_1.compilePseudoSelector)(next,selector,options,context,compileToken);case css_what_1.SelectorType.Tag:if(null!=selector.namespace)throw Error("Namespaced tag names are not yet supported by css-select");var name_1=selector.name;if(!options.xmlMode||options.lowerCaseTags)name_1=name_1.toLowerCase();return function(elem){return adapter.getName(elem)===name_1&&next(elem)};
case css_what_1.SelectorType.Descendant:if(!1===options.cacheResults||"undefined"===typeof WeakSet)return function(elem){for(;elem=adapter.getParent(elem);)if(adapter.isTag(elem)&&next(elem))return!0;return!1};var isFalseCache_1=new WeakSet;return function(elem){for(;elem=adapter.getParent(elem);)if(!isFalseCache_1.has(elem)){if(adapter.isTag(elem)&&next(elem))return!0;isFalseCache_1.add(elem)}return!1};case "_flexibleDescendant":return function(elem){do if(adapter.isTag(elem)&&next(elem))return!0;
while(elem=adapter.getParent(elem));return!1};case css_what_1.SelectorType.Parent:return function(elem$jscomp$0){return adapter.getChildren(elem$jscomp$0).some(function(elem){return adapter.isTag(elem)&&next(elem)})};case css_what_1.SelectorType.Child:return function(elem){elem=adapter.getParent(elem);return null!=elem&&adapter.isTag(elem)&&next(elem)};case css_what_1.SelectorType.Sibling:return function(elem){for(var siblings=adapter.getSiblings(elem),i=0;i<siblings.length;i++){var currentSibling=
siblings[i];if(equals(elem,currentSibling))break;if(adapter.isTag(currentSibling)&&next(currentSibling))return!0}return!1};case css_what_1.SelectorType.Adjacent:return adapter.prevElementSibling?function(elem){elem=adapter.prevElementSibling(elem);return null!=elem&&next(elem)}:function(elem){for(var siblings=adapter.getSiblings(elem),lastElement,i=0;i<siblings.length;i++){var currentSibling=siblings[i];if(equals(elem,currentSibling))break;adapter.isTag(currentSibling)&&(lastElement=currentSibling)}return!!lastElement&&
next(lastElement)};case css_what_1.SelectorType.Universal:if(null!=selector.namespace&&"*"!==selector.namespace)throw Error("Namespaced universal selectors are not yet supported by css-select");return next}}}
//# sourceMappingURL=module$node_modules$css_select$lib$general.js.map
