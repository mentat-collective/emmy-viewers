{"version":3,"sources":["mathbox/primitives/camera/camera.cljs"],"mappings":";;AAIA;;;;;;;;;;;;;;AAaEA,0CACA,AAACC,+BAAoBC","names":["mathbox.primitives.camera.camera/Camera","reagent.core/adapt-react-class","js/module$node_modules$mathbox_react$build$cjs$index.Camera"],"sourcesContent":["(ns mathbox.primitives.camera.camera\n  (:require [\"mathbox-react\" :as box]\n            [reagent.core :as r]))\n\n(def ^{:doc\n       \"*Camera instance or proxy*\n\n:classes `[]` (string array) - Custom classes, e.g. `[\\\\\\\"big\\\\\\\"]`\n:eulerOrder `\\\\\\\"xyz\\\\\\\"` (swizzle) - 3D Euler order\n:fov `null` (nullable number) - Field-of-view (degrees), e.g. `60`\n:id `null` (nullable string) - Unique ID, e.g. `\\\\\\\"sampler\\\\\\\"`\n:lookAt `null` (nullable vec3) - 3D Look at, e.g. `[2, 3, 4]`\n:position `null` (nullable vec3) - 3D Position, e.g. `[1, 2, 3]`\n:proxy `false` (bool) - Re-use existing camera\n:quaternion `null` (nullable quat) - 3D Quaternion, e.g. `[0.707, 0, 0, 0.707]`\n:rotation `null` (nullable vec3) - 3D Euler rotation, e.g. `[\u03c0/2, 0, 0]`\n:up `null` (nullable vec3) - 3D Up, e.g. `[0, 1, 0]`\"}\n  Camera\n  (r/adapt-react-class box/Camera))\n"]}