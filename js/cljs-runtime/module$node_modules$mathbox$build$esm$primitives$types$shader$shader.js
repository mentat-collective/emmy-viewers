shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$shader$shader=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Shader=void 0;var UGLSL=
function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$glsl"));global=require("module$node_modules$mathbox$build$esm$primitives$primitive");class Shader extends global.Primitive{static initClass(){this.traits=["node","bind","shader"];this.freeform=!0}init(){return this.shader=null}make(){const {language,code}=this.props;if("glsl"!==
language)throw Error("GLSL required");this._helpers.bind.make([{to:"shader.sources",trait:"source",multiple:!0}]);var snippet=this._shaders.fetch(code);const types=this._types,uniforms={},make=type=>{switch(type){case "i":return types.int();case "f":return types.number();case "v2":return types.vec2();case "v3":return types.vec3();case "v4":return types.vec4();case "m3":return types.mat3();case "m4":return types.mat4();case "t":return types.object();default:return type=type.split(""),"v"===type.pop()?
types.array(make(type.join(""))):null}};for(const def of Array.from(snippet._signatures.uniform))if(snippet=make(def.type))uniforms[def.name]=snippet;return this.reconfigure({props:{uniform:uniforms}})}made(){return this.trigger({type:"source.rebuild"})}unmake(){return this.shader=null}change(changed,_touched,_init){if(changed["shader.uniforms"]||changed["shader.code"]||changed["shader.language"])return this.rebuild()}shaderBind(uniforms){let u,v;null==uniforms&&(uniforms={});const {code,indices,
channels}=this.props;for(k in this.node.attributes)v=this.node.attributes[k],null!=v.type&&null!=v.short&&"uniform"===v.ns&&null==uniforms[v.short]&&(uniforms[v.short]=v);if(null!=(u=this.props.uniforms))for(k in u)v=u[k],uniforms[k]=v;var k=this._shaders.shader();if(null!=this.bind.sources)for(const source of Array.from(this.bind.sources))k.callback(),4!=indices&&k.pipe(UGLSL.extendVec(indices,4)),k.pipe(source.sourceShader(this._shaders.shader())),4!=channels&&k.pipe(UGLSL.truncateVec(4,channels)),
k.join();return k.pipe(code,uniforms)}}exports.Shader=Shader;Shader.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$shader$shader.js.map
