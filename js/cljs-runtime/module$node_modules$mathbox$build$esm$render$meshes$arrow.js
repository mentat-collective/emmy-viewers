shadow$provide.module$node_modules$mathbox$build$esm$render$meshes$arrow=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Arrow=void 0;var _arrowgeometry=require("module$node_modules$mathbox$build$esm$render$geometry$arrowgeometry");global=require("module$node_modules$mathbox$build$esm$render$meshes$base");var _constants=require("module$node_modules$three$src$constants"),_Mesh=require("module$node_modules$three$src$objects$Mesh");class Arrow extends global.Base{constructor(renderer,
shaders,options){super(renderer,shaders,options);var {uniforms}=options;const {material,position,color,mask,map,combine,stpq,linear}=options;null==uniforms&&(uniforms={});renderer=null!=uniforms.styleColor;this.geometry=new _arrowgeometry.ArrowGeometry({sides:options.sides,samples:options.samples,strips:options.strips,ribbons:options.ribbons,layers:options.layers,anchor:options.anchor,flip:options.flip,closed:options.closed});this._adopt(uniforms);this._adopt(this.geometry.uniforms);options={};closed&&
(options.ARROW_CLOSED="");shaders=shaders.material();uniforms=shaders.vertex;uniforms.pipe(this._vertexColor(color,mask));uniforms.require(this._vertexPosition(position,material,map,1,stpq));uniforms.pipe("arrow.position",this.uniforms,options);uniforms.pipe("project.position",this.uniforms);shaders.fragment=renderer=this._fragmentColor(renderer,material,color,mask,map,1,stpq,combine,linear);renderer.pipe("fragment.color",this.uniforms);renderer=shaders.link({side:_constants.DoubleSide});this.material=
this._material(renderer);shaders=new _Mesh.Mesh(this.geometry,this.material);shaders.frustumCulled=!1;shaders.matrixAutoUpdate=!1;shaders.userData=renderer;this._raw(shaders);this.renders=[shaders]}dispose(){this.geometry.dispose();this.material.dispose();this.renders=this.geometry=this.material=null;return super.dispose()}}exports.Arrow=Arrow}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$meshes$arrow.js.map
