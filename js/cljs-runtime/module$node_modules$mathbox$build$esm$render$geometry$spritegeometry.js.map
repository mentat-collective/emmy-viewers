{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$spritegeometry.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/geometry/spritegeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$spritegeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpriteGeometry = void 0;\n\nvar _BufferAttribute = require(\"three/src/core/BufferAttribute.js\");\n\nvar _clipgeometry = require(\"./clipgeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\nRender points as quads\n\n+----+  +----+  +----+  +----+\n|    |  |    |  |    |  |    |\n+----+  +----+  +----+  +----+\n\n+----+  +----+  +----+  +----+\n|    |  |    |  |    |  |    |\n+----+  +----+  +----+  +----+\n\n+----+  +----+  +----+  +----+\n|    |  |    |  |    |  |    |\n+----+  +----+  +----+  +----+\n\n*/\nclass SpriteGeometry extends _clipgeometry.ClipGeometry {\n  constructor(options) {\n    let depth, height, items, width;\n    super(options);\n\n    this._clipUniforms();\n\n    this.items = items = +options.items || 2;\n    this.width = width = +options.width || 1;\n    this.height = height = +options.height || 1;\n    this.depth = depth = +options.depth || 1;\n    const samples = items * width * height * depth;\n    const points = samples * 4;\n    const triangles = samples * 2;\n    this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(triangles * 3), 1));\n    this.setAttribute(\"position4\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 4), 4));\n    this.setAttribute(\"sprite\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 2), 2));\n\n    const index = this._emitter(\"index\");\n\n    const position = this._emitter(\"position4\");\n\n    const sprite = this._emitter(\"sprite\");\n\n    const quad = [[-1, -1], [-1, 1], [1, -1], [1, 1]];\n    let base = 0;\n\n    for (let i = 0, end = samples, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      index(base);\n      index(base + 1);\n      index(base + 2);\n      index(base + 1);\n      index(base + 2);\n      index(base + 3);\n      base += 4;\n    }\n\n    for (let z = 0, end1 = depth, asc1 = 0 <= end1; asc1 ? z < end1 : z > end1; asc1 ? z++ : z--) {\n      for (let y = 0, end2 = height, asc2 = 0 <= end2; asc2 ? y < end2 : y > end2; asc2 ? y++ : y--) {\n        for (let x = 0, end3 = width, asc3 = 0 <= end3; asc3 ? x < end3 : x > end3; asc3 ? x++ : x--) {\n          for (let l = 0, end4 = items, asc4 = 0 <= end4; asc4 ? l < end4 : l > end4; asc4 ? l++ : l--) {\n            for (const v of Array.from(quad)) {\n              position(x, y, z, l);\n              sprite(v[0], v[1]);\n            }\n          }\n        }\n      }\n    }\n\n    this._finalize();\n\n    this.clip();\n  }\n\n  clip(width, height, depth, items) {\n    if (width == null) {\n      ({\n        width\n      } = this);\n    }\n\n    if (height == null) {\n      ({\n        height\n      } = this);\n    }\n\n    if (depth == null) {\n      ({\n        depth\n      } = this);\n    }\n\n    if (items == null) {\n      ({\n        items\n      } = this);\n    }\n\n    this._clipGeometry(width, height, depth, items);\n\n    return this._clipOffsets(6, width, height, depth, items, this.width, this.height, this.depth, this.items);\n  }\n\n}\n\nexports.SpriteGeometry = SpriteGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SpriteGeometry","_BufferAttribute","_clipgeometry","ClipGeometry","constructor","options","height","items","width","_clipUniforms","depth","samples","points","setIndex","BufferAttribute","Uint32Array","setAttribute","Float32Array","index","_emitter","position","sprite","quad","base","i","end","asc","z","end1","asc1","y","end2","asc2","x","end3","asc3","l","end4","asc4","v","Array","from","_finalize","clip","_clipGeometry","_clipOffsets"]
}
