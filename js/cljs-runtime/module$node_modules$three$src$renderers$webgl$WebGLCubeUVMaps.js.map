{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLCubeUVMaps.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLCubeUVMaps.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLCubeUVMaps\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLCubeUVMaps = WebGLCubeUVMaps;\n\nvar _constants = require(\"../../constants.js\");\n\nvar _PMREMGenerator = require(\"../../extras/PMREMGenerator.js\");\n\nfunction WebGLCubeUVMaps(renderer) {\n  let cubeUVmaps = new WeakMap();\n  let pmremGenerator = null;\n\n  function get(texture) {\n    if (texture && texture.isTexture) {\n      const mapping = texture.mapping;\n      const isEquirectMap = mapping === _constants.EquirectangularReflectionMapping || mapping === _constants.EquirectangularRefractionMapping;\n      const isCubeMap = mapping === _constants.CubeReflectionMapping || mapping === _constants.CubeRefractionMapping; // equirect/cube map to cubeUV conversion\n\n      if (isEquirectMap || isCubeMap) {\n        if (texture.isRenderTargetTexture && texture.needsPMREMUpdate === true) {\n          texture.needsPMREMUpdate = false;\n          let renderTarget = cubeUVmaps.get(texture);\n          if (pmremGenerator === null) pmremGenerator = new _PMREMGenerator.PMREMGenerator(renderer);\n          renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture, renderTarget) : pmremGenerator.fromCubemap(texture, renderTarget);\n          cubeUVmaps.set(texture, renderTarget);\n          return renderTarget.texture;\n        } else {\n          if (cubeUVmaps.has(texture)) {\n            return cubeUVmaps.get(texture).texture;\n          } else {\n            const image = texture.image;\n\n            if (isEquirectMap && image && image.height > 0 || isCubeMap && image && isCubeTextureComplete(image)) {\n              if (pmremGenerator === null) pmremGenerator = new _PMREMGenerator.PMREMGenerator(renderer);\n              const renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular(texture) : pmremGenerator.fromCubemap(texture);\n              cubeUVmaps.set(texture, renderTarget);\n              texture.addEventListener('dispose', onTextureDispose);\n              return renderTarget.texture;\n            } else {\n              // image not yet ready. try the conversion next frame\n              return null;\n            }\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function isCubeTextureComplete(image) {\n    let count = 0;\n    const length = 6;\n\n    for (let i = 0; i < length; i++) {\n      if (image[i] !== undefined) count++;\n    }\n\n    return count === length;\n  }\n\n  function onTextureDispose(event) {\n    const texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    const cubemapUV = cubeUVmaps.get(texture);\n\n    if (cubemapUV !== undefined) {\n      cubeUVmaps.delete(texture);\n      cubemapUV.dispose();\n    }\n  }\n\n  function dispose() {\n    cubeUVmaps = new WeakMap();\n\n    if (pmremGenerator !== null) {\n      pmremGenerator.dispose();\n      pmremGenerator = null;\n    }\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLCubeUVMaps","renderer","onTextureDispose","event","texture","target","removeEventListener","cubemapUV","cubeUVmaps","get","undefined","delete","dispose","WeakMap","pmremGenerator","isTexture","mapping","isEquirectMap","_constants","EquirectangularReflectionMapping","EquirectangularRefractionMapping","isCubeMap","CubeReflectionMapping","CubeRefractionMapping","isRenderTargetTexture","needsPMREMUpdate","renderTarget","_PMREMGenerator","PMREMGenerator","fromEquirectangular","fromCubemap","set","has","image","count","i","length","addEventListener"]
}
