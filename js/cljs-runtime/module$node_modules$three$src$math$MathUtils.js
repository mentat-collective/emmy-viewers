shadow$provide.module$node_modules$three$src$math$MathUtils=function(global,require,module,exports){function euclideanModulo(n,m){return(n%m+m)%m}function lerp(x,y,t){return(1-t)*x+t*y}Object.defineProperty(exports,"__esModule",{value:!0});exports.generateUUID=function(){const d0=4294967295*Math.random()|0,d1=4294967295*Math.random()|0,d2=4294967295*Math.random()|0,d3=4294967295*Math.random()|0;return(_lut[d0&255]+_lut[d0>>8&255]+_lut[d0>>16&255]+_lut[d0>>24&255]+"-"+_lut[d1&255]+_lut[d1>>8&255]+
"-"+_lut[d1>>16&15|64]+_lut[d1>>24&255]+"-"+_lut[d2&63|128]+_lut[d2>>8&255]+"-"+_lut[d2>>16&255]+_lut[d2>>24&255]+_lut[d3&255]+_lut[d3>>8&255]+_lut[d3>>16&255]+_lut[d3>>24&255]).toLowerCase()};exports.clamp=function(value,min,max){return Math.max(min,Math.min(max,value))};exports.euclideanModulo=euclideanModulo;exports.mapLinear=function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1)};exports.inverseLerp=function(x,y,value){return x!==y?(value-x)/(y-x):0};exports.lerp=lerp;exports.damp=function(x,
y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt))};exports.pingpong=function(x,length=1){return length-Math.abs(euclideanModulo(x,2*length)-length)};exports.smoothstep=function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x)};exports.smootherstep=function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(6*x-15)+10)};exports.randInt=function(low,high){return low+Math.floor(Math.random()*(high-low+1))};exports.randFloat=
function(low,high){return low+Math.random()*(high-low)};exports.randFloatSpread=function(range){return range*(.5-Math.random())};exports.seededRandom=function(s){void 0!==s&&(_seed=s);s=_seed+=1831565813;s=Math.imul(s^s>>>15,s|1);s^=s+Math.imul(s^s>>>7,s|61);return((s^s>>>14)>>>0)/4294967296};exports.degToRad=function(degrees){return degrees*DEG2RAD};exports.radToDeg=function(radians){return radians*RAD2DEG};exports.isPowerOfTwo=function(value){return 0===(value&value-1)&&0!==value};exports.ceilPowerOfTwo=
function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2))};exports.floorPowerOfTwo=function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2))};exports.setQuaternionFromProperEuler=function(q,a,b,c,order){var cos=Math.cos;const sin=Math.sin,c2=cos(b/2);b=sin(b/2);const c13=cos((a+c)/2),s13=sin((a+c)/2),c1_3=cos((a-c)/2),s1_3=sin((a-c)/2);cos=cos((c-a)/2);a=sin((c-a)/2);switch(order){case "XYX":q.set(c2*s13,b*c1_3,b*s1_3,c2*c13);break;case "YZY":q.set(b*s1_3,c2*s13,b*c1_3,
c2*c13);break;case "ZXZ":q.set(b*c1_3,b*s1_3,c2*s13,c2*c13);break;case "XZX":q.set(c2*s13,b*a,b*cos,c2*c13);break;case "YXY":q.set(b*cos,c2*s13,b*a,c2*c13);break;case "ZYZ":q.set(b*a,b*cos,c2*s13,c2*c13);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+order)}};exports.normalize=function(value,array){switch(array.constructor){case Float32Array:return value;case Uint16Array:return Math.round(65535*value);case Uint8Array:return Math.round(255*
value);case Int16Array:return Math.round(32767*value);case Int8Array:return Math.round(127*value);default:throw Error("Invalid component type.");}};exports.denormalize=function(value,array){switch(array.constructor){case Float32Array:return value;case Uint16Array:return value/65535;case Uint8Array:return value/255;case Int16Array:return Math.max(value/32767,-1);case Int8Array:return Math.max(value/127,-1);default:throw Error("Invalid component type.");}};exports.RAD2DEG=exports.DEG2RAD=void 0;const _lut=
"00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff".split(" ");
let _seed=1234567;const DEG2RAD=Math.PI/180;exports.DEG2RAD=DEG2RAD;const RAD2DEG=180/Math.PI;exports.RAD2DEG=RAD2DEG}
//# sourceMappingURL=module$node_modules$three$src$math$MathUtils.js.map
