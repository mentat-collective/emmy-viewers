shadow$provide.module$node_modules$shadergraph$src$linker$snippet=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Snippet=void 0;class Snippet{static initClass(){this.index=0}static namespace(){return`_sn_${++Snippet.index}_`}static load(language,name,code){const program=language.parse(name,code),[sigs,compiler]=Array.from(language.compile(program));return new Snippet(language,sigs,compiler,name,code)}constructor(language,_signatures,_compiler,
_name,_original){this.language=language;this._signatures=_signatures;this._compiler=_compiler;this._name=_name;this._original=_original;this.varyings=this.attributes=this.symbols=this.externals=this.uniforms=this.entry=this.main=this.code=this.namespace=null;this.language||delete this.language;this._signatures||delete this._signatures;this._compiler||delete this._compiler;this._original||delete this._original;this._name||(this._name=null!=this._signatures?this._signatures.main.name:void 0)}clone(){return new Snippet(this.language,
this._signatures,this._compiler,this._name,this._original)}bind(config,uniforms,namespace,defines){let def$jscomp$0;var left;let v;uniforms===""+uniforms?[namespace,uniforms,defines]=Array.from([uniforms,null!=namespace?namespace:{},null!=defines?defines:{}]):namespace!==""+namespace&&([defines,namespace]=Array.from([null!=namespace?namespace:{},void 0]));this.main=this._signatures.main;this.namespace=null!=(left=null!=namespace?namespace:this.namespace)?left:Snippet.namespace();this.entry=this.namespace+
this.main.name;this.uniforms={};this.varyings={};this.attributes={};this.externals={};this.symbols=[];namespace={};const exceptions={};left=function(name){exceptions[name]=!0;return name};const local=name=>this.namespace+name;if(config.globals)for(var key of Array.from(config.globals))left(key);const _u=config.globalUniforms?left:local,_v=config.globalVaryings?left:local,_a=config.globalAttributes?left:local;config=(def,name)=>this.uniforms[_u(null!=name?name:def.name)]=def;v=def=>this.varyings[_v(def.name)]=
def;key=def=>this.attributes[_a(def.name)]=def;left=def=>{const name=local(def.name);this.externals[name]=def;return this.symbols.push(name)};const redef=def=>({type:def.type,name:def.name,value:def.value});for(def$jscomp$0 of Array.from(this._signatures.uniform))namespace[def$jscomp$0.name]=!0;for(def$jscomp$0 of Array.from(this._signatures.uniform))config(redef(def$jscomp$0));for(def$jscomp$0 of Array.from(this._signatures.varying))v(redef(def$jscomp$0));for(def$jscomp$0 of Array.from(this._signatures.external))left(def$jscomp$0);
for(def$jscomp$0 of Array.from(this._signatures.attribute))key(redef(def$jscomp$0));for(const name in uniforms)def$jscomp$0=uniforms[name],namespace[name]&&config(def$jscomp$0,name);this.body=this.code=this._compiler(this.namespace,exceptions,defines);defines&&(uniforms=(()=>{const result=[];for(const k in defines)v=defines[k],result.push(`#define ${k} ${v}`);return result})().join("\n"),uniforms.length&&(this._original=[uniforms,"//----------------------------------------",this._original].join("\n")));
return null}}exports.Snippet=Snippet;Snippet.initClass()}
//# sourceMappingURL=module$node_modules$shadergraph$src$linker$snippet.js.map
