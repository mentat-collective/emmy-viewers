{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$operator.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAmFrIC,QAASA,gBAAe,CAACC,GAAD,CAAMC,UAAN,CAAkBC,SAAlB,CAA6B,CACnD,GAAmB,WAAnB,GAAI,MAAOF,IAAX,EAA0C,IAA1C,GAAkCA,GAAlC,EAA6E,UAA7E,GAAkD,MAAOA,IAAA,CAAIC,UAAJ,CAAzD,CACE,MAAOC,UAAA,CAAUF,GAAV,CAAeC,UAAf,CAF0C,CAhFrDE,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQQ,CAAAA,QAAR,CAAmB,IAAK,EAEpBC,OAAAA,CAAUX,OAAA,CAAQ,oEAAR,CAYd,MAAMU,SAAN,QAAuBC,OAAQC,CAAAA,MAA/B,CACSC,gBAAS,EAAG,CACjB,IAAKC,CAAAA,MAAL;AAAc,CAAC,MAAD,CAAS,MAAT,CAAiB,UAAjB,CAA6B,QAA7B,CAAuC,OAAvC,CADG,CAInBC,WAAW,CAACC,MAAD,CAAS,CAClB,MAAOb,gBAAA,CAAgB,IAAKc,CAAAA,IAAKC,CAAAA,MAA1B,CAAkC,aAAlC,CAAiDC,CAAA,EAAKA,CAAEJ,CAAAA,WAAF,CAAcC,MAAd,CAAtD,CADW,CAIpBI,YAAY,CAACJ,MAAD,CAAS,CACnB,MAAOb,gBAAA,CAAgB,IAAKc,CAAAA,IAAKC,CAAAA,MAA1B,CAAkC,cAAlC,CAAkDC,CAAA,EAAKA,CAAEC,CAAAA,YAAF,CAAeJ,MAAf,CAAvD,CADY,CAIrBK,aAAa,EAAG,CACd,MAAO,KAAKJ,CAAAA,IAAKC,CAAAA,MAAOG,CAAAA,aAAjB,EADO,CAIhBC,mBAAmB,EAAG,CACpB,MAAO,KAAKL,CAAAA,IAAKC,CAAAA,MAAOI,CAAAA,mBAAjB,EADa,CAItBC,mBAAmB,EAAG,CACpB,MAAO,KAAKN,CAAAA,IAAKC,CAAAA,MAAOK,CAAAA,mBAAjB,EADa,CAItBC,kBAAkB,EAAG,CACnB,MAAO,KAAKP,CAAAA,IAAKC,CAAAA,MAAOM,CAAAA,kBAAjB,EADY,CAIrBC,IAAI,EAAG,CACL,MAAO,KAAKC,CAAAA,UAAZ;AAAyB,CAAC,CACxBC,GAAI,iBADoB,CAExBC,MAAO,QAFiB,CAGxBC,SAAU,CAAA,CAHc,CAAD,CADpB,CAQPC,IAAI,EAAG,CACL,KAAMA,CAAAA,IAAN,EAEA,OAAO,KAAKC,CAAAA,QAASd,CAAAA,IAAKa,CAAAA,IAAnB,CAAwB,IAAKJ,CAAAA,UAA7B,CAHF,CAMPM,IAAI,EAAG,CACL,IAAKC,CAAAA,MAAL,EACA,OAAO,MAAMD,CAAAA,IAAN,EAFF,CAKPE,MAAM,EAAG,CACP,MAAO,KAAKH,CAAAA,QAASd,CAAAA,IAAKiB,CAAAA,MAAnB,EADA,CAITD,MAAM,CAACE,QAAD,CAAW,CACf,MAAO,KAAKC,CAAAA,OAAL,CAAa,CAClBC,KAAM,eADY,CAAb,CADQ,CApDnB,CA4DAnC,OAAQQ,CAAAA,QAAR,CAAmBA,QACnBA,SAASG,CAAAA,SAAT,EAjFqI;",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/operator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$operator\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Operator = void 0;\n\nvar _source = require(\"../base/source\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS103: Rewrite code to no longer use __guard__, or convert again using --optional-chaining\n * DS206: Consider reworking classes to avoid initClass\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Operator extends _source.Source {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"operator\", \"source\", \"index\"];\n  }\n\n  indexShader(shader) {\n    return __guardMethod__(this.bind.source, \"indexShader\", o => o.indexShader(shader));\n  }\n\n  sourceShader(shader) {\n    return __guardMethod__(this.bind.source, \"sourceShader\", o => o.sourceShader(shader));\n  }\n\n  getDimensions() {\n    return this.bind.source.getDimensions();\n  }\n\n  getFutureDimensions() {\n    return this.bind.source.getFutureDimensions();\n  }\n\n  getActiveDimensions() {\n    return this.bind.source.getActiveDimensions();\n  }\n\n  getIndexDimensions() {\n    return this.bind.source.getIndexDimensions();\n  }\n\n  init() {\n    return this.sourceSpec = [{\n      to: \"operator.source\",\n      trait: \"source\",\n      optional: true\n    }];\n  }\n\n  make() {\n    super.make(); // Bind to attached data sources\n\n    return this._helpers.bind.make(this.sourceSpec);\n  }\n\n  made() {\n    this.resize();\n    return super.made();\n  }\n\n  unmake() {\n    return this._helpers.bind.unmake();\n  }\n\n  resize(_rebuild) {\n    return this.trigger({\n      type: \"source.resize\"\n    });\n  }\n\n}\n\nexports.Operator = Operator;\nOperator.initClass();\n\nfunction __guardMethod__(obj, methodName, transform) {\n  if (typeof obj !== \"undefined\" && obj !== null && typeof obj[methodName] === \"function\") {\n    return transform(obj, methodName);\n  } else {\n    return undefined;\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__guardMethod__","obj","methodName","transform","Object","defineProperty","value","Operator","_source","Source","initClass","traits","indexShader","shader","bind","source","o","sourceShader","getDimensions","getFutureDimensions","getActiveDimensions","getIndexDimensions","init","sourceSpec","to","trait","optional","make","_helpers","made","resize","unmake","_rebuild","trigger","type"]
}
