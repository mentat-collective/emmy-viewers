{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$lerp.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/lerp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$lerp\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Lerp = void 0;\n\nvar UGLSL = _interopRequireWildcard(require(\"../../../util/glsl.js\"));\n\nvar _operator = require(\"./operator.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Lerp extends _operator.Operator {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"operator\", \"source\", \"index\", \"lerp\", \"sampler:x\", \"sampler:y\", \"sampler:z\", \"sampler:w\"];\n  }\n\n  indexShader(shader) {\n    shader.pipe(this.indexer);\n    return super.indexShader(shader);\n  }\n\n  sourceShader(shader) {\n    return shader.pipe(this.operator);\n  }\n\n  getDimensions() {\n    return this._resample(this.bind.source.getDimensions());\n  }\n\n  getActiveDimensions() {\n    return this._resample(this.bind.source.getActiveDimensions());\n  }\n\n  getFutureDimensions() {\n    return this._resample(this.bind.source.getFutureDimensions());\n  }\n\n  getIndexDimensions() {\n    return this._resample(this.bind.source.getIndexDimensions());\n  }\n\n  _resample(dims) {\n    const r = this.resampled;\n    const c = this.centered;\n    const p = this.padding;\n\n    if (this.relativeSize) {\n      if (!c.items) {\n        dims.items--;\n      }\n\n      if (!c.width) {\n        dims.width--;\n      }\n\n      if (!c.height) {\n        dims.height--;\n      }\n\n      if (!c.depth) {\n        dims.depth--;\n      }\n\n      if (r.items != null) {\n        dims.items *= r.items;\n      }\n\n      if (r.width != null) {\n        dims.width *= r.width;\n      }\n\n      if (r.height != null) {\n        dims.height *= r.height;\n      }\n\n      if (r.depth != null) {\n        dims.depth *= r.depth;\n      }\n\n      if (!c.items) {\n        dims.items++;\n      }\n\n      if (!c.width) {\n        dims.width++;\n      }\n\n      if (!c.height) {\n        dims.height++;\n      }\n\n      if (!c.depth) {\n        dims.depth++;\n      }\n\n      dims.items -= p.items * 2;\n      dims.width -= p.width * 2;\n      dims.height -= p.height * 2;\n      dims.depth -= p.depth * 2;\n    } else {\n      if (r.items != null) {\n        dims.items = r.items;\n      }\n\n      if (r.width != null) {\n        dims.width = r.width;\n      }\n\n      if (r.height != null) {\n        dims.height = r.height;\n      }\n\n      if (r.depth != null) {\n        dims.depth = r.depth;\n      }\n    }\n\n    dims.items = Math.max(0, Math.floor(dims.items));\n    dims.width = Math.max(0, Math.floor(dims.width));\n    dims.height = Math.max(0, Math.floor(dims.height));\n    dims.depth = Math.max(0, Math.floor(dims.depth));\n    return dims;\n  }\n\n  make() {\n    let i, key;\n    super.make();\n\n    if (this.bind.source == null) {\n      return;\n    } // Get resampled dimensions\n\n\n    const {\n      size,\n      items,\n      width,\n      height,\n      depth\n    } = this.props; // Sampler behavior\n\n    const relativeSize = size === this.node.attributes[\"lerp.size\"].enum.relative;\n    this.resampled = {};\n\n    if (items != null) {\n      this.resampled.items = items;\n    }\n\n    if (width != null) {\n      this.resampled.width = width;\n    }\n\n    if (height != null) {\n      this.resampled.height = height;\n    }\n\n    if (depth != null) {\n      this.resampled.depth = depth;\n    }\n\n    this.centered = {};\n    this.centered.items = this.props.centeredW;\n    this.centered.width = this.props.centeredX;\n    this.centered.height = this.props.centeredY;\n    this.centered.depth = this.props.centeredZ;\n    this.padding = {};\n    this.padding.items = this.props.paddingW;\n    this.padding.width = this.props.paddingX;\n    this.padding.height = this.props.paddingY;\n    this.padding.depth = this.props.paddingZ; // Build shader to resample data\n\n    const operator = this._shaders.shader();\n\n    const indexer = this._shaders.shader(); // Uniforms\n\n\n    const uniforms = {\n      resampleFactor: this._attributes.make(this._types.vec4(0, 0, 0, 0)),\n      resampleBias: this._attributes.make(this._types.vec4(0, 0, 0, 0))\n    };\n    this.resampleFactor = uniforms.resampleFactor;\n    this.resampleBias = uniforms.resampleBias; // Has resize props?\n\n    const resize = items != null || width != null || height != null || depth != null; // Add padding\n\n    operator.pipe(\"resample.padding\", uniforms); // Prepare centered sampling offset\n\n    const vec = [];\n    let any = false;\n    const iterable = [\"width\", \"height\", \"depth\", \"items\"];\n\n    for (i = 0; i < iterable.length; i++) {\n      key = iterable[i];\n      const centered = this.centered[key];\n\n      if (!any) {\n        any = centered;\n      }\n\n      vec[i] = centered ? \"0.5\" : \"0.0\";\n    }\n\n    let vec4; // Add centered sampling offset (from source)\n\n    if (any && resize) {\n      vec4 = `vec4(${vec})`;\n      operator.pipe(UGLSL.binaryOperator(4, \"+\", vec4));\n      indexer.pipe(UGLSL.binaryOperator(4, \"+\", vec4));\n    } // Addressing relative to target\n\n\n    if (resize) {\n      operator.pipe(\"resample.relative\", uniforms);\n      indexer.pipe(\"resample.relative\", uniforms);\n    } else {\n      operator.pipe(UGLSL.identity(\"vec4\"));\n      indexer.pipe(UGLSL.identity(\"vec4\"));\n    } // Remove centered sampling offset (to target)\n\n\n    if (any && resize) {\n      operator.pipe(UGLSL.binaryOperator(4, \"-\", vec4));\n      indexer.pipe(UGLSL.binaryOperator(4, \"-\", vec4));\n    } // Make sampler\n\n\n    let sampler = this.bind.source.sourceShader(this._shaders.shader()); // Iterate over dimensions (items, width, height, depth)\n\n    const iterable1 = [\"width\", \"height\", \"depth\", \"items\"];\n\n    for (i = 0; i < iterable1.length; i++) {\n      key = iterable1[i];\n      const id = `lerp.${key}`;\n\n      if (this.props[key] != null) {\n        sampler = this._shaders.shader().require(sampler);\n        sampler.pipe(id, uniforms);\n      }\n    } // Combine operator and composite lerp sampler\n\n\n    operator.pipe(sampler);\n    this.operator = operator;\n    this.indexer = indexer;\n    return this.relativeSize = relativeSize;\n  }\n\n  unmake() {\n    super.unmake();\n    return this.operator = null;\n  }\n\n  resize() {\n    if (this.bind.source == null) {\n      return;\n    }\n\n    const dims = this.bind.source.getActiveDimensions();\n    const target = this.getActiveDimensions();\n\n    const axis = key => {\n      const centered = this.centered[key];\n      const pad = this.padding[key];\n      target[key] += pad * 2;\n      const res = centered ? dims[key] / Math.max(1, target[key]) : Math.max(1, dims[key] - 1) / Math.max(1, target[key] - 1);\n      return [res, pad];\n    };\n\n    const [rw, bw] = Array.from(axis(\"width\"));\n    const [rh, bh] = Array.from(axis(\"height\"));\n    const [rd, bd] = Array.from(axis(\"depth\"));\n    const [ri, bi] = Array.from(axis(\"items\"));\n    this.resampleFactor.value.set(rw, rh, rd, ri);\n    this.resampleBias.value.set(bw, bh, bd, bi);\n    return super.resize();\n  }\n\n  change(changed, touched, _init) {\n    if (touched[\"operator\"] || touched[\"lerp\"] || touched[\"sampler\"]) {\n      return this.rebuild();\n    }\n  }\n\n}\n\nexports.Lerp = Lerp;\nLerp.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Lerp","UGLSL","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_operator","Operator","initClass","traits","indexShader","shader","pipe","indexer","sourceShader","operator","getDimensions","_resample","bind","source","getActiveDimensions","getFutureDimensions","getIndexDimensions","dims","r","resampled","c","centered","p","padding","relativeSize","items","width","height","depth","Math","max","floor","make","i","size","props","node","attributes","enum","relative","centeredW","centeredX","centeredY","centeredZ","paddingW","paddingX","paddingY","paddingZ","_shaders","uniforms","resampleFactor","_attributes","_types","vec4","resampleBias","resize","vec","any","iterable","length","binaryOperator","identity","sampler","iterable1","id","unmake","target","axis","pad","res","rw","bw","Array","from","rh","bh","rd","bd","ri","bi","change","changed","touched","_init","rebuild"]
}
