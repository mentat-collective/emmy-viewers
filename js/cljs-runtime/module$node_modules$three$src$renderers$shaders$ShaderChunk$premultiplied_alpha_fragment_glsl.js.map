{
"version":3,
"file":"module$node_modules$three$src$renderers$shaders$ShaderChunk$premultiplied_alpha_fragment_glsl.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,6FAAA,CAAkH,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1JC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAWvBJ,QAAQI,CAAAA,OAAR,CARCC,gNATyJ;",
"sources":["node_modules/three/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$shaders$ShaderChunk$premultiplied_alpha_fragment_glsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default =\n/* glsl */\n`\n#ifdef PREMULTIPLIED_ALPHA\n\n\t// Get get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.\n\tgl_FragColor.rgb *= gl_FragColor.a;\n\n#endif\n`;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default"]
}
