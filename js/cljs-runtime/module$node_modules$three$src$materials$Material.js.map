{
"version":3,
"file":"module$node_modules$three$src$materials$Material.js",
"lineCount":27,
"mappings":"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",
"sources":["node_modules/three/src/materials/Material.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$materials$Material\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Material = void 0;\n\nvar _EventDispatcher = require(\"../core/EventDispatcher.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar MathUtils = _interopRequireWildcard(require(\"../math/MathUtils.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet materialId = 0;\n\nclass Material extends _EventDispatcher.EventDispatcher {\n  constructor() {\n    super();\n    this.isMaterial = true;\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.blending = _constants.NormalBlending;\n    this.side = _constants.FrontSide;\n    this.vertexColors = false;\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = _constants.SrcAlphaFactor;\n    this.blendDst = _constants.OneMinusSrcAlphaFactor;\n    this.blendEquation = _constants.AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = _constants.LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = _constants.AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = _constants.KeepStencilOp;\n    this.stencilZFail = _constants.KeepStencilOp;\n    this.stencilZPass = _constants.KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaToCoverage = false;\n    this.premultipliedAlpha = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.version = 0;\n    this._alphaTest = 0;\n  }\n\n  get alphaTest() {\n    return this._alphaTest;\n  }\n\n  set alphaTest(value) {\n    if (this._alphaTest > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._alphaTest = value;\n  }\n\n  onBuild() {}\n\n  onBeforeRender() {}\n\n  onBeforeCompile() {}\n\n  customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  }\n\n  setValues(values) {\n    if (values === undefined) return;\n\n    for (const key in values) {\n      const newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n        continue;\n      }\n\n      const currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n\n    if (isRootObject) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.sheen !== undefined) data.sheen = this.sheen;\n    if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n    if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n    if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n\n    if (this.iridescence !== undefined) data.iridescence = this.iridescence;\n    if (this.iridescenceIOR !== undefined) data.iridescenceIOR = this.iridescenceIOR;\n    if (this.iridescenceThicknessRange !== undefined) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n    if (this.iridescenceMap && this.iridescenceMap.isTexture) {\n      data.iridescenceMap = this.iridescenceMap.toJSON(meta).uuid;\n    }\n\n    if (this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture) {\n      data.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON(meta).uuid;\n    }\n\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n    if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      if (this.combine !== undefined) data.combine = this.combine;\n    }\n\n    if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n    if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n    if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.transmission !== undefined) data.transmission = this.transmission;\n    if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n    if (this.thickness !== undefined) data.thickness = this.thickness;\n    if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n    if (this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity) data.attenuationDistance = this.attenuationDistance;\n    if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== _constants.NormalBlending) data.blending = this.blending;\n    if (this.side !== _constants.FrontSide) data.side = this.side;\n    if (this.vertexColors) data.vertexColors = true;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    data.colorWrite = this.colorWrite;\n    data.stencilWrite = this.stencilWrite;\n    data.stencilWriteMask = this.stencilWriteMask;\n    data.stencilFunc = this.stencilFunc;\n    data.stencilRef = this.stencilRef;\n    data.stencilFuncMask = this.stencilFuncMask;\n    data.stencilFail = this.stencilFail;\n    data.stencilZFail = this.stencilZFail;\n    data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n    if (this.rotation !== undefined && this.rotation !== 0) data.rotation = this.rotation;\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n    if (this.linewidth !== undefined && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.visible === false) data.visible = false;\n    if (this.toneMapped === false) data.toneMapped = false;\n    if (this.fog === false) data.fog = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRootObject) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.name = source.name;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n    this.shadowSide = source.shadowSide;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.visible = source.visible;\n    this.toneMapped = source.toneMapped;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n}\n\nexports.Material = Material;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Material","_EventDispatcher","_constants","MathUtils","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","materialId","EventDispatcher","constructor","isMaterial","uuid","generateUUID","name","type","blending","NormalBlending","side","FrontSide","vertexColors","opacity","transparent","blendSrc","SrcAlphaFactor","blendDst","OneMinusSrcAlphaFactor","blendEquation","AddEquation","blendEquationAlpha","blendDstAlpha","blendSrcAlpha","depthFunc","LessEqualDepth","depthWrite","depthTest","stencilWriteMask","stencilFunc","AlwaysStencilFunc","stencilRef","stencilFuncMask","stencilZPass","stencilZFail","stencilFail","KeepStencilOp","stencilWrite","clippingPlanes","clipShadows","clipIntersection","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetUnits","polygonOffsetFactor","premultipliedAlpha","alphaToCoverage","dithering","toneMapped","visible","userData","_alphaTest","version","onBuild","onBeforeRender","onBeforeCompile","customProgramCacheKey","toString","setValues","values","undefined","newValue","console","warn","currentValue","isColor","isVector3","copy","toJSON","meta","extractFromCache","data","metadata","push","isRootObject","textures","images","generator","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","Infinity","attenuationColor","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","JSON","stringify","length","clone","source","srcPlanes","dstPlanes","n","Array","i","parse","dispose","dispatchEvent"]
}
