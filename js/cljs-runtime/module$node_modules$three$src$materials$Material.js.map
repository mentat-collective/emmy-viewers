{
"version":3,
"file":"module$node_modules$three$src$materials$Material.js",
"lineCount":26,
"mappings":"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",
"sources":["node_modules/three/src/materials/Material.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$materials$Material\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Material = void 0;\n\nvar _EventDispatcher = require(\"../core/EventDispatcher.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar MathUtils = _interopRequireWildcard(require(\"../math/MathUtils.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet materialId = 0;\n\nclass Material extends _EventDispatcher.EventDispatcher {\n  constructor() {\n    super();\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.blending = _constants.NormalBlending;\n    this.side = _constants.FrontSide;\n    this.vertexColors = false;\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = _constants.SrcAlphaFactor;\n    this.blendDst = _constants.OneMinusSrcAlphaFactor;\n    this.blendEquation = _constants.AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = _constants.LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = _constants.AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = _constants.KeepStencilOp;\n    this.stencilZFail = _constants.KeepStencilOp;\n    this.stencilZPass = _constants.KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaToCoverage = false;\n    this.premultipliedAlpha = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.version = 0;\n    this._alphaTest = 0;\n  }\n\n  get alphaTest() {\n    return this._alphaTest;\n  }\n\n  set alphaTest(value) {\n    if (this._alphaTest > 0 !== value > 0) {\n      this.version++;\n    }\n\n    this._alphaTest = value;\n  }\n\n  onBuild() {}\n\n  onBeforeRender() {}\n\n  onBeforeCompile() {}\n\n  customProgramCacheKey() {\n    return this.onBeforeCompile.toString();\n  }\n\n  setValues(values) {\n    if (values === undefined) return;\n\n    for (const key in values) {\n      const newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n        continue;\n      } // for backward compatability if shading is set in the constructor\n\n\n      if (key === 'shading') {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = newValue === _constants.FlatShading ? true : false;\n        continue;\n      }\n\n      const currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  }\n\n  toJSON(meta) {\n    const isRoot = meta === undefined || typeof meta === 'string';\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.sheen !== undefined) data.sheen = this.sheen;\n    if (this.sheenColor && this.sheenColor.isColor) data.sheenColor = this.sheenColor.getHex();\n    if (this.sheenRoughness !== undefined) data.sheenRoughness = this.sheenRoughness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.specularIntensity !== undefined) data.specularIntensity = this.specularIntensity;\n    if (this.specularColor && this.specularColor.isColor) data.specularColor = this.specularColor.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n    if (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n    if (this.clearcoatMap && this.clearcoatMap.isTexture) {\n      data.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n      data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n    }\n\n    if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n      data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n      data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n    }\n\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n    if (this.lightMap && this.lightMap.isTexture) {\n      data.lightMap = this.lightMap.toJSON(meta).uuid;\n      data.lightMapIntensity = this.lightMapIntensity;\n    }\n\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n    if (this.specularIntensityMap && this.specularIntensityMap.isTexture) data.specularIntensityMap = this.specularIntensityMap.toJSON(meta).uuid;\n    if (this.specularColorMap && this.specularColorMap.isTexture) data.specularColorMap = this.specularColorMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      if (this.combine !== undefined) data.combine = this.combine;\n    }\n\n    if (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n    if (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n    if (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.transmission !== undefined) data.transmission = this.transmission;\n    if (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n    if (this.thickness !== undefined) data.thickness = this.thickness;\n    if (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n    if (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n    if (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n    if (this.size !== undefined) data.size = this.size;\n    if (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== _constants.NormalBlending) data.blending = this.blending;\n    if (this.side !== _constants.FrontSide) data.side = this.side;\n    if (this.vertexColors) data.vertexColors = true;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite;\n    data.colorWrite = this.colorWrite;\n    data.stencilWrite = this.stencilWrite;\n    data.stencilWriteMask = this.stencilWriteMask;\n    data.stencilFunc = this.stencilFunc;\n    data.stencilRef = this.stencilRef;\n    data.stencilFuncMask = this.stencilFuncMask;\n    data.stencilFail = this.stencilFail;\n    data.stencilZFail = this.stencilZFail;\n    data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n    if (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n    if (this.polygonOffset === true) data.polygonOffset = true;\n    if (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n    if (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n    if (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.visible === false) data.visible = false;\n    if (this.toneMapped === false) data.toneMapped = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      const values = [];\n\n      for (const key in cache) {\n        const data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      const textures = extractFromCache(meta.textures);\n      const images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.stencilWriteMask = source.stencilWriteMask;\n    this.stencilFunc = source.stencilFunc;\n    this.stencilRef = source.stencilRef;\n    this.stencilFuncMask = source.stencilFuncMask;\n    this.stencilFail = source.stencilFail;\n    this.stencilZFail = source.stencilZFail;\n    this.stencilZPass = source.stencilZPass;\n    this.stencilWrite = source.stencilWrite;\n    const srcPlanes = source.clippingPlanes;\n    let dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      const n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (let i = 0; i !== n; ++i) {\n        dstPlanes[i] = srcPlanes[i].clone();\n      }\n    }\n\n    this.clippingPlanes = dstPlanes;\n    this.clipIntersection = source.clipIntersection;\n    this.clipShadows = source.clipShadows;\n    this.shadowSide = source.shadowSide;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.alphaToCoverage = source.alphaToCoverage;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.visible = source.visible;\n    this.toneMapped = source.toneMapped;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n\n}\n\nexports.Material = Material;\nMaterial.prototype.isMaterial = true;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Material","_EventDispatcher","_constants","MathUtils","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","materialId","EventDispatcher","constructor","uuid","generateUUID","name","type","fog","blending","NormalBlending","side","FrontSide","vertexColors","opacity","transparent","blendSrc","SrcAlphaFactor","blendDst","OneMinusSrcAlphaFactor","blendEquation","AddEquation","blendEquationAlpha","blendDstAlpha","blendSrcAlpha","depthFunc","LessEqualDepth","depthWrite","depthTest","stencilWriteMask","stencilFunc","AlwaysStencilFunc","stencilRef","stencilFuncMask","stencilZPass","stencilZFail","stencilFail","KeepStencilOp","stencilWrite","clippingPlanes","clipShadows","clipIntersection","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetUnits","polygonOffsetFactor","premultipliedAlpha","alphaToCoverage","dithering","toneMapped","visible","userData","_alphaTest","version","onBuild","onBeforeRender","onBeforeCompile","customProgramCacheKey","toString","setValues","values","undefined","newValue","console","warn","flatShading","FlatShading","currentValue","isColor","isVector3","copy","toJSON","meta","extractFromCache","data","metadata","push","isRoot","textures","images","generator","color","getHex","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","isTexture","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","toArray","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","size","sizeAttenuation","rotation","linewidth","dashSize","gapSize","scale","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","JSON","stringify","length","clone","source","srcPlanes","dstPlanes","n","Array","i","parse","dispose","dispatchEvent","isMaterial"]
}
