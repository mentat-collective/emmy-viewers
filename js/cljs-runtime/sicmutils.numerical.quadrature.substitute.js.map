{"version":3,"sources":["sicmutils/numerical/quadrature/substitute.cljc"],"mappings":"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","names":["sicmutils.numerical.quadrature.substitute/infinitize","integrate","js/Error","f","a","b","sicmutils$numerical$quadrature$substitute$infinitize_$_call","opts","cljs.core/not","and__4251__auto__","sicmutils.generic/infinite?","f'","t","G__102735","a'","b'","sicmutils.numerical.quadrature.common/update-interval","sicmutils.numerical.quadrature.common/flip","sicmutils.numerical.quadrature.substitute/inverse-power-law","gamma","lower?","sicmutils$numerical$quadrature$substitute$inverse_power_law_$_call","inner-pow","gamma-pow","Math/pow","t->t'","G__102738","cljs.core.update","cljs.core.partial","cljs.core/*","sicmutils.numerical.quadrature.substitute/inverse-power-law-lower","sicmutils.numerical.quadrature.substitute/inverse-power-law-upper","sicmutils.numerical.quadrature.substitute/inverse-sqrt-lower","sicmutils$numerical$quadrature$substitute$inverse_sqrt_lower_$_call","G__102740","G__102742","G__102743","G__102744","G__102745","Math/sqrt","sicmutils.numerical.quadrature.substitute/inverse-sqrt-upper","sicmutils$numerical$quadrature$substitute$inverse_sqrt_upper_$_call","G__102752","G__102753","G__102754","G__102755","G__102756","sicmutils.numerical.quadrature.substitute/exponential-upper","sicmutils$numerical$quadrature$substitute$exponential_upper_$_call","G__102786","Math/log","G__102793","G__102794","G__102795","G__102796","Math/exp"],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.numerical.quadrature.substitute\n  \"### U Substitution and Variable Changes\n\n  This namespace provides implementations of functions that accept an\n  `integrator` and perform a variable change to address some singularity, like\n  an infinite endpoint, in the definite integral.\n\n  The strategies currently implemented were each described by Press, et al. in\n  section 4.4 of ['Numerical\n  Recipes'](http://phys.uri.edu/nigh/NumRec/bookfpdf/f4-4.pdf).\"\n  (:require [sicmutils.generic :as g]\n            [sicmutils.numerical.quadrature.common :as qc]))\n\n;; ## Infinite Endpoints\n;;\n;; This first function, `infinitize`, transforms some integrator into a new\n;; integrator with the same interface that can handle an infinite endpoint.\n;;\n;; This implementation can only handle one endpoint at a time, and, the way it's\n;; written, both endpoints have to have the same sign. For an easier interface\n;; to this transformation, see `infinite/evaluate-infinite-integral` in\n;; `infinite.cljc`.\n\n(defn infinitize\n  \"Performs a variable substitution targeted at converting a single infinite\n  endpoint of an improper integral evaluation into an (open) endpoint at 0 by\n  applying the following substitution:\n\n  $$u(t) = {1 \\\\over t}$$ $$du = {-1 \\\\over t^2}$$\n\n  This works when the integrand `f` falls off at least as fast as $1 \\\\over t^2$\n  as it approaches the infinite limit.\n\n  The returned function requires that `a` and `b` have the same sign, ie:\n\n  $$ab > 0$$\n\n  Transform the bounds with $u(t)$, and cancel the negative sign by changing\n  their order:\n\n  $$\\\\int_{a}^{b} f(x) d x=\\\\int_{1 / b}^{1 / a} \\\\frac{1}{t^{2}} f\\\\left(\\\\frac{1}{t}\\\\right) dt$$\n\n  References:\n\n  - Mathworld, [\\\"Improper Integral\\\"](https://mathworld.wolfram.com/ImproperIntegral.html)\n  - Press, Numerical Recipes, [Section 4.4](http://phys.uri.edu/nigh/NumRec/bookfpdf/f4-4.pdf)\"\n  [integrate]\n  (fn call\n    ([f a b] (call f a b {}))\n    ([f a b opts]\n     {:pre [(not\n             (and (g/infinite? a)\n                  (g/infinite? b)))]}\n     (let [f' (fn [t]\n                (/ (f (/ 1.0 t))\n                   (* t t)))\n           a' (if (g/infinite? b) 0.0 (/ 1.0 b))\n           b' (if (g/infinite? a) 0.0 (/ 1.0 a))\n           opts (qc/update-interval opts qc/flip)]\n       (integrate f' a' b' opts)))))\n\n;; ## Power Law Singularities\n;;\n;; \"To deal with an integral that has an integrable power-law singularity at its\n;; lower limit, one also makes a change of variable.\" (Press, p138)\n;;\n;; A \"power-law singularity\" means that the integrand diverges as $(x -\n;; a)^{-\\gamma}$ near $x=a$.\n;;\n;; We implement the following identity (from Press) if the singularity occurs at\n;; the lower limit:\n;;\n;; $$\\int_{a}^{b} f(x) d x=\\frac{1}{1-\\gamma} \\int_{0}^{(b-a)^{1-\\gamma}} t^{\\frac{\\gamma}{1-\\gamma}} f\\left(t^{\\frac{1}{1-\\gamma}}+a\\right) d t \\quad(b>a)$$\n;;\n;; And this similar identity if the singularity occurs at the upper limit:\n;;\n;;$$\\int_{a}^{b} f(x) d x=\\frac{1}{1-\\gamma} \\int_{0}^{(b-a)^{1-\\gamma}} t^{\\frac{\\gamma}{1-\\gamma}} f\\left(b-t^{\\frac{1}{1-\\gamma}}\\right) d t \\quad(b>a)$$\n;;\n;; If you have singularities at both sides, divide the interval at some interior\n;; breakpoint, take separate integrals for both sides and add the values back\n;; together.\n\n(defn- inverse-power-law\n  \"Implements a change of variables to address a power law singularity at the\n  lower or upper integration endpoint.\n\n  An \\\"inverse power law singularity\\\" means that the integrand diverges as\n\n  $$(x - a)^{-\\\\gamma}$$\n\n  near $x=a$. Passing true for `lower?` to specify a singularity at the lower\n  endpoint, false to signal an upper-endpoint singularity.\n\n  References:\n\n  - Mathworld, [\\\"Improper Integral\\\"](https://mathworld.wolfram.com/ImproperIntegral.html)\n  - Press, Numerical Recipes, [Section 4.4](http://phys.uri.edu/nigh/NumRec/bookfpdf/f4-4.pdf)\n  - Wikipedia, [\\\"Finite-time Singularity\\\"](https://en.wikipedia.org/wiki/Singularity_(mathematics)#Finite-time_singularity)\"\n  [integrate gamma lower?]\n  {:pre [(<= 0 gamma 1)]}\n  (fn call\n    ([f a b] (call f a b {}))\n    ([f a b opts]\n     (let [inner-pow (/ 1 (- 1 gamma))\n           gamma-pow (* gamma inner-pow)\n           a' 0\n           b' (Math/pow (- b a) (- 1 gamma))\n           t->t' (if lower?\n                   (fn [t] (+ a (Math/pow t inner-pow)))\n                   (fn [t] (- b (Math/pow t inner-pow))))\n           f' (fn [t] (* (Math/pow t gamma-pow)\n                        (f (t->t' t))))]\n       (-> (integrate f' a' b' opts)\n           (update :result (partial * inner-pow)))))))\n\n(defn inverse-power-law-lower\n  \"Implements a change of variables to address a power law singularity at the\n  lower integration endpoint.\n\n  An \\\"inverse power law singularity\\\" means that the integrand diverges as\n\n  $$(x - a)^{-\\\\gamma}$$\n\n  near $x=a$.\n\n  References:\n\n  - Mathworld, [\\\"Improper Integral\\\"](https://mathworld.wolfram.com/ImproperIntegral.html)\n  - Press, Numerical Recipes, [Section 4.4](http://phys.uri.edu/nigh/NumRec/bookfpdf/f4-4.pdf)\n  - Wikipedia, [\\\"Finite-time Singularity\\\"](https://en.wikipedia.org/wiki/Singularity_(mathematics)#Finite-time_singularity)\"\n  [integrate gamma]\n  (inverse-power-law integrate gamma true))\n\n(defn inverse-power-law-upper\n  \"Implements a change of variables to address a power law singularity at the\n  upper integration endpoint.\n\n  An \\\"inverse power law singularity\\\" means that the integrand diverges as\n\n  $$(x - a)^{-\\\\gamma}$$\n\n  near $x=a$.\n\n  References:\n\n  - Mathworld, [\\\"Improper Integral\\\"](https://mathworld.wolfram.com/ImproperIntegral.html)\n  - Press, Numerical Recipes, [Section 4.4](http://phys.uri.edu/nigh/NumRec/bookfpdf/f4-4.pdf)\n  - Wikipedia, [\\\"Finite-time Singularity\\\"](https://en.wikipedia.org/wiki/Singularity_(mathematics)#Finite-time_singularity)\"\n  [integrate gamma]\n  (inverse-power-law integrate gamma false))\n\n;; ## Inverse Square Root singularities\n;;\n;; The next two functions specialize the `inverse-power-law-*` functions to the\n;; common situation of an inverse power law singularity.\n\n(defn inverse-sqrt-lower\n  \"Implements a change of variables to address an inverse square root singularity\n  at the lower integration endpoint. Use this when the integrand diverges as\n\n  $$1 \\\\over {\\\\sqrt{x - a}}$$\n\n  near the lower endpoint $a$.\"\n  [integrate]\n  (fn call\n    ([f a b] (call f a b {}))\n    ([f a b opts]\n     (let [f' (fn [t] (* t (f (+ a (* t t)))))]\n       (-> (integrate f' 0 (Math/sqrt (- b a)) opts)\n           (update :result (partial * 2)))))))\n\n(defn inverse-sqrt-upper\n  \"Implements a change of variables to address an inverse square root singularity\n  at the upper integration endpoint. Use this when the integrand diverges as\n\n  $$1 \\\\over {\\\\sqrt{x - b}}$$\n\n  near the upper endpoint $b$.\"\n  [integrate]\n  (fn call\n    ([f a b] (call f a b {}))\n    ([f a b opts]\n     (let [f' (fn [t] (* t (f (- b (* t t)))))]\n       (-> (integrate f' 0 (Math/sqrt (- b a)) opts)\n           (update :result (partial * 2)))))))\n\n;; ## Exponentially Diverging Endpoints\n\n;; From Press, section 4.4: \"Suppose the upper limit of integration is infinite,\n;; and the integrand falls off exponentially. Then we want a change of variable\n;; that maps\n;;\n;; $$\\exp{-x} dx$$\n;;\n;; into $\\pm dt$ (with the sign chosen to keep the upper limit of the new\n;; variable larger than the lower limit).\"\n;;\n;; The required identity is:\n;;\n;; $$\\int_{x=a}^{x=\\infty} f(x) d x=\\int_{t=0}^{t=e^{-a}} f(-\\log t) \\frac{d t}{t}$$\n\n(defn exponential-upper\n  \"Implements a change of variables to address an exponentially diverging upper\n  integration endpoint. Use this when the integrand diverges as $\\\\exp{x}$ near\n  the upper endpoint $b$.\"\n  [integrate]\n  (fn call\n    ([f a b] (call f a b {}))\n    ([f a b opts]\n     {:pre [(g/infinite? b)]}\n     (let [f' (fn [t] (* (f (- (Math/log t)))\n                        (/ 1 t)))\n           opts (qc/update-interval opts qc/flip)]\n       (integrate f' 0 (Math/exp (- a)) opts)))))\n"]}