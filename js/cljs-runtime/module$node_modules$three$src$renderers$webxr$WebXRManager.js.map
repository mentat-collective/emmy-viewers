{
"version":3,
"file":"module$node_modules$three$src$renderers$webxr$WebXRManager.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webxr/WebXRManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webxr$WebXRManager\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebXRManager = void 0;\n\nvar _ArrayCamera = require(\"../../cameras/ArrayCamera.js\");\n\nvar _EventDispatcher = require(\"../../core/EventDispatcher.js\");\n\nvar _PerspectiveCamera = require(\"../../cameras/PerspectiveCamera.js\");\n\nvar _Vector = require(\"../../math/Vector3.js\");\n\nvar _Vector2 = require(\"../../math/Vector4.js\");\n\nvar _WebGLAnimation = require(\"../webgl/WebGLAnimation.js\");\n\nvar _WebGLRenderTarget = require(\"../WebGLRenderTarget.js\");\n\nvar _WebXRController = require(\"./WebXRController.js\");\n\nvar _DepthTexture = require(\"../../textures/DepthTexture.js\");\n\nvar _WebGLMultisampleRenderTarget = require(\"../WebGLMultisampleRenderTarget.js\");\n\nvar _constants = require(\"../../constants.js\");\n\nclass WebXRManager extends _EventDispatcher.EventDispatcher {\n  constructor(renderer, gl) {\n    super();\n    const scope = this;\n    let session = null;\n    let framebufferScaleFactor = 1.0;\n    let referenceSpace = null;\n    let referenceSpaceType = 'local-floor';\n    const hasMultisampledRenderToTexture = renderer.extensions.has('WEBGL_multisampled_render_to_texture');\n    let pose = null;\n    let glBinding = null;\n    let glProjLayer = null;\n    let glBaseLayer = null;\n    let isMultisample = false;\n    let xrFrame = null;\n    const attributes = gl.getContextAttributes();\n    let initialRenderTarget = null;\n    let newRenderTarget = null;\n    const controllers = [];\n    const inputSourcesMap = new Map(); //\n\n    const cameraL = new _PerspectiveCamera.PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new _Vector2.Vector4();\n    const cameraR = new _PerspectiveCamera.PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new _Vector2.Vector4();\n    const cameras = [cameraL, cameraR];\n    const cameraVR = new _ArrayCamera.ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n    let _currentDepthNear = null;\n    let _currentDepthFar = null; //\n\n    this.cameraAutoUpdate = true;\n    this.enabled = false;\n    this.isPresenting = false;\n\n    this.getController = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    this.getControllerGrip = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    this.getHand = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    }; //\n\n\n    function onSessionEvent(event) {\n      const controller = inputSourcesMap.get(event.inputSource);\n\n      if (controller) {\n        controller.dispatchEvent({\n          type: event.type,\n          data: event.inputSource\n        });\n      }\n    }\n\n    function onSessionEnd() {\n      inputSourcesMap.forEach(function (controller, inputSource) {\n        controller.disconnect(inputSource);\n      });\n      inputSourcesMap.clear();\n      _currentDepthNear = null;\n      _currentDepthFar = null; // restore framebuffer/rendering state\n\n      renderer.setRenderTarget(initialRenderTarget);\n      glBaseLayer = null;\n      glProjLayer = null;\n      glBinding = null;\n      session = null;\n      newRenderTarget = null; //\n\n      animation.stop();\n      scope.isPresenting = false;\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n      }\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n      }\n    };\n\n    this.getReferenceSpace = function () {\n      return referenceSpace;\n    };\n\n    this.getBaseLayer = function () {\n      return glProjLayer !== null ? glProjLayer : glBaseLayer;\n    };\n\n    this.getBinding = function () {\n      return glBinding;\n    };\n\n    this.getFrame = function () {\n      return xrFrame;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = async function (value) {\n      session = value;\n\n      if (session !== null) {\n        initialRenderTarget = renderer.getRenderTarget();\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('squeeze', onSessionEvent);\n        session.addEventListener('squeezestart', onSessionEvent);\n        session.addEventListener('squeezeend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd);\n        session.addEventListener('inputsourceschange', onInputSourcesChange);\n\n        if (attributes.xrCompatible !== true) {\n          await gl.makeXRCompatible();\n        }\n\n        if (session.renderState.layers === undefined || renderer.capabilities.isWebGL2 === false) {\n          const layerInit = {\n            antialias: session.renderState.layers === undefined ? attributes.antialias : true,\n            alpha: attributes.alpha,\n            depth: attributes.depth,\n            stencil: attributes.stencil,\n            framebufferScaleFactor: framebufferScaleFactor\n          };\n          glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n          session.updateRenderState({\n            baseLayer: glBaseLayer\n          });\n          newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, {\n            format: _constants.RGBAFormat,\n            type: _constants.UnsignedByteType,\n            encoding: renderer.outputEncoding\n          });\n        } else {\n          isMultisample = attributes.antialias;\n          let depthFormat = null;\n          let depthType = null;\n          let glDepthFormat = null;\n\n          if (attributes.depth) {\n            glDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n            depthFormat = attributes.stencil ? _constants.DepthStencilFormat : _constants.DepthFormat;\n            depthType = attributes.stencil ? _constants.UnsignedInt248Type : _constants.UnsignedShortType;\n          }\n\n          const projectionlayerInit = {\n            colorFormat: renderer.outputEncoding === _constants.sRGBEncoding ? gl.SRGB8_ALPHA8 : gl.RGBA8,\n            depthFormat: glDepthFormat,\n            scaleFactor: framebufferScaleFactor\n          };\n          glBinding = new XRWebGLBinding(session, gl);\n          glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n          session.updateRenderState({\n            layers: [glProjLayer]\n          });\n\n          if (isMultisample) {\n            newRenderTarget = new _WebGLMultisampleRenderTarget.WebGLMultisampleRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n              format: _constants.RGBAFormat,\n              type: _constants.UnsignedByteType,\n              depthTexture: new _DepthTexture.DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n              stencilBuffer: attributes.stencil,\n              ignoreDepth: glProjLayer.ignoreDepthValues,\n              useRenderToTexture: hasMultisampledRenderToTexture,\n              encoding: renderer.outputEncoding\n            });\n          } else {\n            newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n              format: _constants.RGBAFormat,\n              type: _constants.UnsignedByteType,\n              depthTexture: new _DepthTexture.DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n              stencilBuffer: attributes.stencil,\n              ignoreDepth: glProjLayer.ignoreDepthValues,\n              encoding: renderer.outputEncoding\n            });\n          }\n        }\n\n        newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n        // Set foveation to maximum.\n\n        this.setFoveation(1.0);\n        referenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n        animation.setContext(session);\n        animation.start();\n        scope.isPresenting = true;\n        scope.dispatchEvent({\n          type: 'sessionstart'\n        });\n      }\n    };\n\n    function onInputSourcesChange(event) {\n      const inputSources = session.inputSources; // Assign inputSources to available controllers\n\n      for (let i = 0; i < controllers.length; i++) {\n        inputSourcesMap.set(inputSources[i], controllers[i]);\n      } // Notify disconnected\n\n\n      for (let i = 0; i < event.removed.length; i++) {\n        const inputSource = event.removed[i];\n        const controller = inputSourcesMap.get(inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: 'disconnected',\n            data: inputSource\n          });\n          inputSourcesMap.delete(inputSource);\n        }\n      } // Notify connected\n\n\n      for (let i = 0; i < event.added.length; i++) {\n        const inputSource = event.added[i];\n        const controller = inputSourcesMap.get(inputSource);\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: 'connected',\n            data: inputSource\n          });\n        }\n      }\n    } //\n\n\n    const cameraLPos = new _Vector.Vector3();\n    const cameraRPos = new _Vector.Vector3();\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n      const ipd = cameraLPos.distanceTo(cameraRPos);\n      const projL = cameraL.projectionMatrix.elements;\n      const projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n\n      const near = projL[14] / (projL[10] - 1);\n      const far = projL[14] / (projL[10] + 1);\n      const topFov = (projL[9] + 1) / projL[5];\n      const bottomFov = (projL[9] - 1) / projL[5];\n      const leftFov = (projL[8] - 1) / projL[0];\n      const rightFov = (projR[8] + 1) / projR[0];\n      const left = near * leftFov;\n      const right = near * rightFov; // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n\n      const zOffset = ipd / (-leftFov + rightFov);\n      const xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n      cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n\n      const near2 = near + zOffset;\n      const far2 = far + zOffset;\n      const left2 = left - xOffset;\n      const right2 = right + (ipd - xOffset);\n      const top2 = topFov * far / far2 * near2;\n      const bottom2 = bottomFov * far / far2 * near2;\n      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    this.updateCamera = function (camera) {\n      if (session === null) return;\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far\n        });\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      const parent = camera.parent;\n      const cameras = cameraVR.cameras;\n      updateCamera(cameraVR, parent);\n\n      for (let i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      }\n\n      cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n      camera.position.copy(cameraVR.position);\n      camera.quaternion.copy(cameraVR.quaternion);\n      camera.scale.copy(cameraVR.scale);\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrixWorld.copy(cameraVR.matrixWorld);\n      const children = camera.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(true);\n      } // update projection matrix for proper view frustum culling\n\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n    };\n\n    this.getCamera = function () {\n      return cameraVR;\n    };\n\n    this.getFoveation = function () {\n      if (glProjLayer !== null) {\n        return glProjLayer.fixedFoveation;\n      }\n\n      if (glBaseLayer !== null) {\n        return glBaseLayer.fixedFoveation;\n      }\n\n      return undefined;\n    };\n\n    this.setFoveation = function (foveation) {\n      // 0 = no foveation = full resolution\n      // 1 = maximum foveation = the edges render at lower resolution\n      if (glProjLayer !== null) {\n        glProjLayer.fixedFoveation = foveation;\n      }\n\n      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n        glBaseLayer.fixedFoveation = foveation;\n      }\n    }; // Animation Loop\n\n\n    let onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(referenceSpace);\n      xrFrame = frame;\n\n      if (pose !== null) {\n        const views = pose.views;\n\n        if (glBaseLayer !== null) {\n          renderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);\n          renderer.setRenderTarget(newRenderTarget);\n        }\n\n        let cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (let i = 0; i < views.length; i++) {\n          const view = views[i];\n          let viewport = null;\n\n          if (glBaseLayer !== null) {\n            viewport = glBaseLayer.getViewport(view);\n          } else {\n            const glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n            viewport = glSubImage.viewport; // For side-by-side projection, we only produce a single texture for both eyes.\n\n            if (i === 0) {\n              renderer.setRenderTargetTextures(newRenderTarget, glSubImage.colorTexture, glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture);\n              renderer.setRenderTarget(newRenderTarget);\n            }\n          }\n\n          const camera = cameras[i];\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n      } //\n\n\n      const inputSources = session.inputSources;\n\n      for (let i = 0; i < controllers.length; i++) {\n        const controller = controllers[i];\n        const inputSource = inputSources[i];\n        controller.update(inputSource, frame, referenceSpace);\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n      xrFrame = null;\n    }\n\n    const animation = new _WebGLAnimation.WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {};\n  }\n\n}\n\nexports.WebXRManager = WebXRManager;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebXRManager","_ArrayCamera","_EventDispatcher","_PerspectiveCamera","_Vector","_Vector2","_WebGLAnimation","_WebGLRenderTarget","_WebXRController","_DepthTexture","_WebGLMultisampleRenderTarget","_constants","EventDispatcher","constructor","renderer","gl","onSessionEvent","event","controller","inputSourcesMap","get","inputSource","dispatchEvent","type","data","onSessionEnd","forEach","disconnect","clear","_currentDepthFar","_currentDepthNear","setRenderTarget","initialRenderTarget","newRenderTarget","session","glBinding","glProjLayer","glBaseLayer","animation","stop","scope","isPresenting","onInputSourcesChange","inputSources","i","controllers","length","set","removed","delete","added","updateCamera","camera","parent","matrixWorld","copy","matrix","multiplyMatrices","matrixWorldInverse","invert","framebufferScaleFactor","referenceSpace","referenceSpaceType","hasMultisampledRenderToTexture","extensions","has","pose","isMultisample","xrFrame","attributes","getContextAttributes","Map","cameraL","PerspectiveCamera","layers","enable","viewport","Vector4","cameraR","cameras","cameraVR","ArrayCamera","cameraAutoUpdate","enabled","getController","this.getController","index","undefined","WebXRController","getTargetRaySpace","getControllerGrip","this.getControllerGrip","getGripSpace","getHand","this.getHand","getHandSpace","setFramebufferScaleFactor","this.setFramebufferScaleFactor","console","warn","setReferenceSpaceType","this.setReferenceSpaceType","getReferenceSpace","this.getReferenceSpace","getBaseLayer","this.getBaseLayer","getBinding","this.getBinding","getFrame","this.getFrame","getSession","this.getSession","setSession","this.setSession","getRenderTarget","addEventListener","xrCompatible","makeXRCompatible","renderState","capabilities","isWebGL2","XRWebGLLayer","layerInit","antialias","alpha","depth","stencil","updateRenderState","baseLayer","WebGLRenderTarget","framebufferWidth","framebufferHeight","format","RGBAFormat","UnsignedByteType","encoding","outputEncoding","depthFormat","depthType","glDepthFormat","DEPTH24_STENCIL8","DEPTH_COMPONENT24","DepthStencilFormat","DepthFormat","UnsignedInt248Type","UnsignedShortType","projectionlayerInit","colorFormat","sRGBEncoding","SRGB8_ALPHA8","RGBA8","scaleFactor","XRWebGLBinding","createProjectionLayer","WebGLMultisampleRenderTarget","textureWidth","textureHeight","depthTexture","DepthTexture","stencilBuffer","ignoreDepth","ignoreDepthValues","useRenderToTexture","isXRRenderTarget","setFoveation","requestReferenceSpace","setContext","start","cameraLPos","Vector3","cameraRPos","this.updateCamera","near","far","depthNear","depthFar","decompose","position","quaternion","scale","children","l","updateMatrixWorld","setFromMatrixPosition","ipd","distanceTo","projL","projectionMatrix","elements","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","translateX","translateZ","compose","near2","far2","makePerspective","getCamera","this.getCamera","getFoveation","this.getFoveation","fixedFoveation","this.setFoveation","foveation","onAnimationFrameCallback","WebGLAnimation","setAnimationLoop","onAnimationFrame","time","frame","getViewerPose","views","setRenderTargetFramebuffer","framebuffer","cameraVRNeedsUpdate","view","getViewport","glSubImage","getViewSubImage","setRenderTargetTextures","colorTexture","depthStencilTexture","fromArray","transform","x","y","width","height","push","update","this.setAnimationLoop","callback","dispose","this.dispose"]
}
