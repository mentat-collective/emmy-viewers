{
"version":3,
"file":"module$node_modules$three$src$renderers$webxr$WebXRManager.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webxr/WebXRManager.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webxr$WebXRManager\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebXRManager = void 0;\n\nvar _ArrayCamera = require(\"../../cameras/ArrayCamera.js\");\n\nvar _EventDispatcher = require(\"../../core/EventDispatcher.js\");\n\nvar _PerspectiveCamera = require(\"../../cameras/PerspectiveCamera.js\");\n\nvar _Vector = require(\"../../math/Vector3.js\");\n\nvar _Vector2 = require(\"../../math/Vector4.js\");\n\nvar _WebGLAnimation = require(\"../webgl/WebGLAnimation.js\");\n\nvar _WebGLRenderTarget = require(\"../WebGLRenderTarget.js\");\n\nvar _WebXRController = require(\"./WebXRController.js\");\n\nvar _DepthTexture = require(\"../../textures/DepthTexture.js\");\n\nvar _constants = require(\"../../constants.js\");\n\nclass WebXRManager extends _EventDispatcher.EventDispatcher {\n  constructor(renderer, gl) {\n    super();\n    const scope = this;\n    let session = null;\n    let framebufferScaleFactor = 1.0;\n    let referenceSpace = null;\n    let referenceSpaceType = 'local-floor';\n    let customReferenceSpace = null;\n    let pose = null;\n    let glBinding = null;\n    let glProjLayer = null;\n    let glBaseLayer = null;\n    let xrFrame = null;\n    const attributes = gl.getContextAttributes();\n    let initialRenderTarget = null;\n    let newRenderTarget = null;\n    const controllers = [];\n    const controllerInputSources = []; //\n\n    const cameraL = new _PerspectiveCamera.PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new _Vector2.Vector4();\n    const cameraR = new _PerspectiveCamera.PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new _Vector2.Vector4();\n    const cameras = [cameraL, cameraR];\n    const cameraVR = new _ArrayCamera.ArrayCamera();\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2);\n    let _currentDepthNear = null;\n    let _currentDepthFar = null; //\n\n    this.cameraAutoUpdate = true;\n    this.enabled = false;\n    this.isPresenting = false;\n\n    this.getController = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getTargetRaySpace();\n    };\n\n    this.getControllerGrip = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getGripSpace();\n    };\n\n    this.getHand = function (index) {\n      let controller = controllers[index];\n\n      if (controller === undefined) {\n        controller = new _WebXRController.WebXRController();\n        controllers[index] = controller;\n      }\n\n      return controller.getHandSpace();\n    }; //\n\n\n    function onSessionEvent(event) {\n      const controllerIndex = controllerInputSources.indexOf(event.inputSource);\n\n      if (controllerIndex === -1) {\n        return;\n      }\n\n      const controller = controllers[controllerIndex];\n\n      if (controller !== undefined) {\n        controller.dispatchEvent({\n          type: event.type,\n          data: event.inputSource\n        });\n      }\n    }\n\n    function onSessionEnd() {\n      session.removeEventListener('select', onSessionEvent);\n      session.removeEventListener('selectstart', onSessionEvent);\n      session.removeEventListener('selectend', onSessionEvent);\n      session.removeEventListener('squeeze', onSessionEvent);\n      session.removeEventListener('squeezestart', onSessionEvent);\n      session.removeEventListener('squeezeend', onSessionEvent);\n      session.removeEventListener('end', onSessionEnd);\n      session.removeEventListener('inputsourceschange', onInputSourcesChange);\n\n      for (let i = 0; i < controllers.length; i++) {\n        const inputSource = controllerInputSources[i];\n        if (inputSource === null) continue;\n        controllerInputSources[i] = null;\n        controllers[i].disconnect(inputSource);\n      }\n\n      _currentDepthNear = null;\n      _currentDepthFar = null; // restore framebuffer/rendering state\n\n      renderer.setRenderTarget(initialRenderTarget);\n      glBaseLayer = null;\n      glProjLayer = null;\n      glBinding = null;\n      session = null;\n      newRenderTarget = null; //\n\n      animation.stop();\n      scope.isPresenting = false;\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n      }\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n\n      if (scope.isPresenting === true) {\n        console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n      }\n    };\n\n    this.getReferenceSpace = function () {\n      return customReferenceSpace || referenceSpace;\n    };\n\n    this.setReferenceSpace = function (space) {\n      customReferenceSpace = space;\n    };\n\n    this.getBaseLayer = function () {\n      return glProjLayer !== null ? glProjLayer : glBaseLayer;\n    };\n\n    this.getBinding = function () {\n      return glBinding;\n    };\n\n    this.getFrame = function () {\n      return xrFrame;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = async function (value) {\n      session = value;\n\n      if (session !== null) {\n        initialRenderTarget = renderer.getRenderTarget();\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('squeeze', onSessionEvent);\n        session.addEventListener('squeezestart', onSessionEvent);\n        session.addEventListener('squeezeend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd);\n        session.addEventListener('inputsourceschange', onInputSourcesChange);\n\n        if (attributes.xrCompatible !== true) {\n          await gl.makeXRCompatible();\n        }\n\n        if (session.renderState.layers === undefined || renderer.capabilities.isWebGL2 === false) {\n          const layerInit = {\n            antialias: session.renderState.layers === undefined ? attributes.antialias : true,\n            alpha: attributes.alpha,\n            depth: attributes.depth,\n            stencil: attributes.stencil,\n            framebufferScaleFactor: framebufferScaleFactor\n          };\n          glBaseLayer = new XRWebGLLayer(session, gl, layerInit);\n          session.updateRenderState({\n            baseLayer: glBaseLayer\n          });\n          newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, {\n            format: _constants.RGBAFormat,\n            type: _constants.UnsignedByteType,\n            encoding: renderer.outputEncoding,\n            stencilBuffer: attributes.stencil\n          });\n        } else {\n          let depthFormat = null;\n          let depthType = null;\n          let glDepthFormat = null;\n\n          if (attributes.depth) {\n            glDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n            depthFormat = attributes.stencil ? _constants.DepthStencilFormat : _constants.DepthFormat;\n            depthType = attributes.stencil ? _constants.UnsignedInt248Type : _constants.UnsignedIntType;\n          }\n\n          const projectionlayerInit = {\n            colorFormat: gl.RGBA8,\n            depthFormat: glDepthFormat,\n            scaleFactor: framebufferScaleFactor\n          };\n          glBinding = new XRWebGLBinding(session, gl);\n          glProjLayer = glBinding.createProjectionLayer(projectionlayerInit);\n          session.updateRenderState({\n            layers: [glProjLayer]\n          });\n          newRenderTarget = new _WebGLRenderTarget.WebGLRenderTarget(glProjLayer.textureWidth, glProjLayer.textureHeight, {\n            format: _constants.RGBAFormat,\n            type: _constants.UnsignedByteType,\n            depthTexture: new _DepthTexture.DepthTexture(glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat),\n            stencilBuffer: attributes.stencil,\n            encoding: renderer.outputEncoding,\n            samples: attributes.antialias ? 4 : 0\n          });\n          const renderTargetProperties = renderer.properties.get(newRenderTarget);\n          renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n        }\n\n        newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n        // Set foveation to maximum.\n\n        this.setFoveation(1.0);\n        customReferenceSpace = null;\n        referenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n        animation.setContext(session);\n        animation.start();\n        scope.isPresenting = true;\n        scope.dispatchEvent({\n          type: 'sessionstart'\n        });\n      }\n    };\n\n    function onInputSourcesChange(event) {\n      // Notify disconnected\n      for (let i = 0; i < event.removed.length; i++) {\n        const inputSource = event.removed[i];\n        const index = controllerInputSources.indexOf(inputSource);\n\n        if (index >= 0) {\n          controllerInputSources[index] = null;\n          controllers[index].dispatchEvent({\n            type: 'disconnected',\n            data: inputSource\n          });\n        }\n      } // Notify connected\n\n\n      for (let i = 0; i < event.added.length; i++) {\n        const inputSource = event.added[i];\n        let controllerIndex = controllerInputSources.indexOf(inputSource);\n\n        if (controllerIndex === -1) {\n          // Assign input source a controller that currently has no input source\n          for (let i = 0; i < controllers.length; i++) {\n            if (i >= controllerInputSources.length) {\n              controllerInputSources.push(inputSource);\n              controllerIndex = i;\n              break;\n            } else if (controllerInputSources[i] === null) {\n              controllerInputSources[i] = inputSource;\n              controllerIndex = i;\n              break;\n            }\n          } // If all controllers do currently receive input we ignore new ones\n\n\n          if (controllerIndex === -1) break;\n        }\n\n        const controller = controllers[controllerIndex];\n\n        if (controller) {\n          controller.dispatchEvent({\n            type: 'connected',\n            data: inputSource\n          });\n        }\n      }\n    } //\n\n\n    const cameraLPos = new _Vector.Vector3();\n    const cameraRPos = new _Vector.Vector3();\n    /**\n     * Assumes 2 cameras that are parallel and share an X-axis, and that\n     * the cameras' projection and world matrices have already been set.\n     * And that near and far planes are identical for both cameras.\n     * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n     */\n\n    function setProjectionFromUnion(camera, cameraL, cameraR) {\n      cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n      cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n      const ipd = cameraLPos.distanceTo(cameraRPos);\n      const projL = cameraL.projectionMatrix.elements;\n      const projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n      // most likely identical top and bottom frustum extents.\n      // Use the left camera for these values.\n\n      const near = projL[14] / (projL[10] - 1);\n      const far = projL[14] / (projL[10] + 1);\n      const topFov = (projL[9] + 1) / projL[5];\n      const bottomFov = (projL[9] - 1) / projL[5];\n      const leftFov = (projL[8] - 1) / projL[0];\n      const rightFov = (projR[8] + 1) / projR[0];\n      const left = near * leftFov;\n      const right = near * rightFov; // Calculate the new camera's position offset from the\n      // left camera. xOffset should be roughly half `ipd`.\n\n      const zOffset = ipd / (-leftFov + rightFov);\n      const xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n      cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n      camera.translateX(xOffset);\n      camera.translateZ(zOffset);\n      camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n      // the values so that the near plane's position does not change in world space,\n      // although must now be relative to the new union camera.\n\n      const near2 = near + zOffset;\n      const far2 = far + zOffset;\n      const left2 = left - xOffset;\n      const right2 = right + (ipd - xOffset);\n      const top2 = topFov * far / far2 * near2;\n      const bottom2 = bottomFov * far / far2 * near2;\n      camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n    }\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    }\n\n    this.updateCamera = function (camera) {\n      if (session === null) return;\n      cameraVR.near = cameraR.near = cameraL.near = camera.near;\n      cameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n      if (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n        // Note that the new renderState won't apply until the next frame. See #18320\n        session.updateRenderState({\n          depthNear: cameraVR.near,\n          depthFar: cameraVR.far\n        });\n        _currentDepthNear = cameraVR.near;\n        _currentDepthFar = cameraVR.far;\n      }\n\n      const parent = camera.parent;\n      const cameras = cameraVR.cameras;\n      updateCamera(cameraVR, parent);\n\n      for (let i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      }\n\n      cameraVR.matrixWorld.decompose(cameraVR.position, cameraVR.quaternion, cameraVR.scale); // update user camera and its children\n\n      camera.matrix.copy(cameraVR.matrix);\n      camera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\n      const children = camera.children;\n\n      for (let i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(true);\n      } // update projection matrix for proper view frustum culling\n\n\n      if (cameras.length === 2) {\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n      } else {\n        // assume single camera setup (AR)\n        cameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n      }\n    };\n\n    this.getCamera = function () {\n      return cameraVR;\n    };\n\n    this.getFoveation = function () {\n      if (glProjLayer !== null) {\n        return glProjLayer.fixedFoveation;\n      }\n\n      if (glBaseLayer !== null) {\n        return glBaseLayer.fixedFoveation;\n      }\n\n      return undefined;\n    };\n\n    this.setFoveation = function (foveation) {\n      // 0 = no foveation = full resolution\n      // 1 = maximum foveation = the edges render at lower resolution\n      if (glProjLayer !== null) {\n        glProjLayer.fixedFoveation = foveation;\n      }\n\n      if (glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined) {\n        glBaseLayer.fixedFoveation = foveation;\n      }\n    }; // Animation Loop\n\n\n    let onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(customReferenceSpace || referenceSpace);\n      xrFrame = frame;\n\n      if (pose !== null) {\n        const views = pose.views;\n\n        if (glBaseLayer !== null) {\n          renderer.setRenderTargetFramebuffer(newRenderTarget, glBaseLayer.framebuffer);\n          renderer.setRenderTarget(newRenderTarget);\n        }\n\n        let cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n        if (views.length !== cameraVR.cameras.length) {\n          cameraVR.cameras.length = 0;\n          cameraVRNeedsUpdate = true;\n        }\n\n        for (let i = 0; i < views.length; i++) {\n          const view = views[i];\n          let viewport = null;\n\n          if (glBaseLayer !== null) {\n            viewport = glBaseLayer.getViewport(view);\n          } else {\n            const glSubImage = glBinding.getViewSubImage(glProjLayer, view);\n            viewport = glSubImage.viewport; // For side-by-side projection, we only produce a single texture for both eyes.\n\n            if (i === 0) {\n              renderer.setRenderTargetTextures(newRenderTarget, glSubImage.colorTexture, glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture);\n              renderer.setRenderTarget(newRenderTarget);\n            }\n          }\n\n          let camera = cameras[i];\n\n          if (camera === undefined) {\n            camera = new _PerspectiveCamera.PerspectiveCamera();\n            camera.layers.enable(i);\n            camera.viewport = new _Vector2.Vector4();\n            cameras[i] = camera;\n          }\n\n          camera.matrix.fromArray(view.transform.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n\n          if (cameraVRNeedsUpdate === true) {\n            cameraVR.cameras.push(camera);\n          }\n        }\n      } //\n\n\n      for (let i = 0; i < controllers.length; i++) {\n        const inputSource = controllerInputSources[i];\n        const controller = controllers[i];\n\n        if (inputSource !== null && controller !== undefined) {\n          controller.update(inputSource, frame, customReferenceSpace || referenceSpace);\n        }\n      }\n\n      if (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n      xrFrame = null;\n    }\n\n    const animation = new _WebGLAnimation.WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {};\n  }\n\n}\n\nexports.WebXRManager = WebXRManager;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebXRManager","_ArrayCamera","_EventDispatcher","_PerspectiveCamera","_Vector","_Vector2","_WebGLAnimation","_WebGLRenderTarget","_WebXRController","_DepthTexture","_constants","EventDispatcher","constructor","renderer","gl","onSessionEvent","event","controllerIndex","controllerInputSources","indexOf","inputSource","controller","controllers","undefined","dispatchEvent","type","data","onSessionEnd","session","removeEventListener","onInputSourcesChange","i","length","disconnect","_currentDepthFar","_currentDepthNear","setRenderTarget","initialRenderTarget","newRenderTarget","glBinding","glProjLayer","glBaseLayer","animation","stop","scope","isPresenting","removed","index","added","push","updateCamera","camera","parent","matrixWorld","copy","matrix","multiplyMatrices","matrixWorldInverse","invert","framebufferScaleFactor","referenceSpace","referenceSpaceType","customReferenceSpace","pose","xrFrame","attributes","getContextAttributes","cameraL","PerspectiveCamera","layers","enable","viewport","Vector4","cameraR","cameras","cameraVR","ArrayCamera","cameraAutoUpdate","enabled","getController","this.getController","WebXRController","getTargetRaySpace","getControllerGrip","this.getControllerGrip","getGripSpace","getHand","this.getHand","getHandSpace","setFramebufferScaleFactor","this.setFramebufferScaleFactor","console","warn","setReferenceSpaceType","this.setReferenceSpaceType","getReferenceSpace","this.getReferenceSpace","setReferenceSpace","this.setReferenceSpace","space","getBaseLayer","this.getBaseLayer","getBinding","this.getBinding","getFrame","this.getFrame","getSession","this.getSession","setSession","this.setSession","getRenderTarget","addEventListener","xrCompatible","makeXRCompatible","renderState","capabilities","isWebGL2","XRWebGLLayer","layerInit","antialias","alpha","depth","stencil","updateRenderState","baseLayer","WebGLRenderTarget","framebufferWidth","framebufferHeight","format","RGBAFormat","UnsignedByteType","encoding","outputEncoding","stencilBuffer","depthFormat","depthType","glDepthFormat","DEPTH24_STENCIL8","DEPTH_COMPONENT24","DepthStencilFormat","DepthFormat","UnsignedInt248Type","UnsignedIntType","projectionlayerInit","colorFormat","RGBA8","scaleFactor","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","depthTexture","DepthTexture","samples","properties","get","renderTargetProperties","__ignoreDepthValues","ignoreDepthValues","isXRRenderTarget","setFoveation","requestReferenceSpace","setContext","start","cameraLPos","Vector3","cameraRPos","this.updateCamera","near","far","depthNear","depthFar","decompose","position","quaternion","scale","children","l","updateMatrixWorld","setFromMatrixPosition","ipd","distanceTo","projL","projectionMatrix","elements","projR","topFov","bottomFov","leftFov","rightFov","left","right","zOffset","xOffset","translateX","translateZ","compose","near2","far2","makePerspective","getCamera","this.getCamera","getFoveation","this.getFoveation","fixedFoveation","this.setFoveation","foveation","onAnimationFrameCallback","WebGLAnimation","setAnimationLoop","onAnimationFrame","time","frame","getViewerPose","views","setRenderTargetFramebuffer","framebuffer","cameraVRNeedsUpdate","view","getViewport","glSubImage","getViewSubImage","setRenderTargetTextures","colorTexture","depthStencilTexture","fromArray","transform","set","x","y","width","height","update","this.setAnimationLoop","callback","dispose","this.dispose"]
}
