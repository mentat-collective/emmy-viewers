{
"version":3,
"file":"module$node_modules$domutils$lib$feeds.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/domutils/lib/feeds.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$domutils$lib$feeds\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFeed = void 0;\nvar stringify_1 = require(\"./stringify\");\nvar legacy_1 = require(\"./legacy\");\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n    var feedRoot = getOneElement(isValidFeed, doc);\n    return !feedRoot\n        ? null\n        : feedRoot.name === \"feed\"\n            ? getAtomFeed(feedRoot)\n            : getRssFeed(feedRoot);\n}\nexports.getFeed = getFeed;\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n    var _a;\n    var childs = feedRoot.children;\n    var feed = {\n        type: \"atom\",\n        items: (0, legacy_1.getElementsByTagName)(\"entry\", childs).map(function (item) {\n            var _a;\n            var children = item.children;\n            var entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"id\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            var href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n            if (href) {\n                entry.link = href;\n            }\n            var description = fetch(\"summary\", children) || fetch(\"content\", children);\n            if (description) {\n                entry.description = description;\n            }\n            var pubDate = fetch(\"updated\", children);\n            if (pubDate) {\n                entry.pubDate = new Date(pubDate);\n            }\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"id\", \"id\", childs);\n    addConditionally(feed, \"title\", \"title\", childs);\n    var href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs.href;\n    if (href) {\n        feed.link = href;\n    }\n    addConditionally(feed, \"description\", \"subtitle\", childs);\n    var updated = fetch(\"updated\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"email\", childs, true);\n    return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n    var _a, _b;\n    var childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n    var feed = {\n        type: feedRoot.name.substr(0, 3),\n        id: \"\",\n        items: (0, legacy_1.getElementsByTagName)(\"item\", feedRoot.children).map(function (item) {\n            var children = item.children;\n            var entry = { media: getMediaElements(children) };\n            addConditionally(entry, \"id\", \"guid\", children);\n            addConditionally(entry, \"title\", \"title\", children);\n            addConditionally(entry, \"link\", \"link\", children);\n            addConditionally(entry, \"description\", \"description\", children);\n            var pubDate = fetch(\"pubDate\", children);\n            if (pubDate)\n                entry.pubDate = new Date(pubDate);\n            return entry;\n        }),\n    };\n    addConditionally(feed, \"title\", \"title\", childs);\n    addConditionally(feed, \"link\", \"link\", childs);\n    addConditionally(feed, \"description\", \"description\", childs);\n    var updated = fetch(\"lastBuildDate\", childs);\n    if (updated) {\n        feed.updated = new Date(updated);\n    }\n    addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n    return feed;\n}\nvar MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nvar MEDIA_KEYS_INT = [\n    \"fileSize\",\n    \"bitrate\",\n    \"framerate\",\n    \"samplingrate\",\n    \"channels\",\n    \"duration\",\n    \"height\",\n    \"width\",\n];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n    return (0, legacy_1.getElementsByTagName)(\"media:content\", where).map(function (elem) {\n        var attribs = elem.attribs;\n        var media = {\n            medium: attribs.medium,\n            isDefault: !!attribs.isDefault,\n        };\n        for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {\n            var attrib = MEDIA_KEYS_STRING_1[_i];\n            if (attribs[attrib]) {\n                media[attrib] = attribs[attrib];\n            }\n        }\n        for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {\n            var attrib = MEDIA_KEYS_INT_1[_a];\n            if (attribs[attrib]) {\n                media[attrib] = parseInt(attribs[attrib], 10);\n            }\n        }\n        if (attribs.expression) {\n            media.expression =\n                attribs.expression;\n        }\n        return media;\n    });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n    return (0, legacy_1.getElementsByTagName)(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where  Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    return (0, stringify_1.textContent)((0, legacy_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse) {\n    if (recurse === void 0) { recurse = false; }\n    var val = fetch(tagName, where, recurse);\n    if (val)\n        obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getAtomFeed","feedRoot","_a","childs","children","feed","type","items","legacy_1","getElementsByTagName","map","item","entry","media","getMediaElements","addConditionally","href","getOneElement","attribs","link","description","fetch","pubDate","Date","updated","getRssFeed","_b","name","substr","id","where","elem","medium","isDefault","_i","MEDIA_KEYS_STRING_1","MEDIA_KEYS_STRING","length","attrib","MEDIA_KEYS_INT_1","MEDIA_KEYS_INT","parseInt","expression","tagName","node","recurse","stringify_1","textContent","trim","obj","prop","val","isValidFeed","value","Object","defineProperty","getFeed","doc"]
}
