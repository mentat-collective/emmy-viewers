shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$element$locus=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg"));var _symbolic=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$symbolic")),_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type"));
global.default.createLocus=function(board,parents,attributes){if(_type.default.isArray(parents)&&1===parents.length&&_type.default.isPoint(parents[0]))var p=parents[0];else throw Error("JSXGraph: Can't create locus with parent of type other than point.\nPossible parent types: [point]");var c=board.create("curve",[[null],[null]],attributes);c.dontCallServer=!1;c.elType="locus";c.setParents([p.id]);c.updateDataArray=function(){if(!(0<c.board.mode)){var spe=_symbolic.default.generatePolynomials(board,
p,!0).join("|");if(spe!==c.spe){c.spe=spe;spe=function(x$jscomp$0,y$jscomp$0,eq,t){c.dataX=x$jscomp$0;c.dataY=y$jscomp$0;c.eq=eq;c.ctime=t;c.generatePolynomial=function(equations){return function(point){var x="("+point.symbolic.x+")",y="("+point.symbolic.y+")",res=[];for(point=0;point<equations.length;point++)res[point]=equations[point].replace(/\*\*/g,"^").replace(/x/g,x).replace(/y/g,y);return res}}(eq)};var data=_symbolic.default.geometricLocusByGroebnerBase(board,p,spe);spe(data.datax,data.datay,
data.polynomial,data.exectime)}}};return c};global.default.registerElement("locus",global.default.createLocus);exports.default={createLocus:global.default.createLocus}}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$element$locus.js.map
