shadow$provide.module$node_modules$mathbox$build$esm$render$meshes$face=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Face=void 0;global=require("module$node_modules$mathbox$build$esm$render$meshes$base");var _constants=require("module$node_modules$three$src$constants"),_facegeometry=require("module$node_modules$mathbox$build$esm$render$geometry$facegeometry"),_Mesh=require("module$node_modules$three$src$objects$Mesh");class Face extends global.Base{constructor(renderer,
shaders,options){super(renderer,shaders,options);let {uniforms,material}=options;const {position,color,mask,map,combine,stpq,linear}=options;null==uniforms&&(uniforms={});null==material&&(material=!0);renderer=null!=uniforms.styleColor;this.geometry=new _facegeometry.FaceGeometry({items:options.items,width:options.width,height:options.height,depth:options.depth});this._adopt(uniforms);this._adopt(this.geometry.uniforms);shaders=shaders.material();options=shaders.vertex;options.pipe(this._vertexColor(color,
mask));options.require(this._vertexPosition(position,material,map,2,stpq));material||options.pipe("face.position",this.uniforms);material&&options.pipe("face.position.normal",this.uniforms);options.pipe("project.position",this.uniforms);shaders.fragment=renderer=this._fragmentColor(renderer,material,color,mask,map,2,stpq,combine,linear);renderer.pipe("fragment.color",this.uniforms);renderer=shaders.link({side:_constants.DoubleSide});this.material=this._material(renderer);shaders=new _Mesh.Mesh(this.geometry,
this.material);shaders.userData=renderer;this._raw(shaders);this.renders=[shaders]}dispose(){this.geometry.dispose();this.material.dispose();this.renders=this.geometry=this.material=null;return super.dispose()}}exports.Face=Face}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$meshes$face.js.map
