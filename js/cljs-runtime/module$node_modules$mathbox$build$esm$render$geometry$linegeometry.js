shadow$provide.module$node_modules$mathbox$build$esm$render$geometry$linegeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.LineGeometry=void 0;var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute");global=require("module$node_modules$mathbox$build$esm$render$geometry$clipgeometry");class LineGeometry extends global.ClipGeometry{constructor(options){var closed,detail,joint,joints;let layers,ribbons,samples;var segments;
let strips;super(options);this._clipUniforms();this.closed=closed=options.closed||!1;this.samples=samples=(+options.samples||2)+(closed?1:0);this.strips=strips=+options.strips||1;this.ribbons=ribbons=+options.ribbons||1;this.layers=layers=+options.layers||1;this.detail=detail=+options.detail||1;var lines=samples-1;this.joints=joints=detail-1;this.vertices=options=(lines-(closed?0:1))*joints+samples;this.segments=segments=(lines-(closed?0:1))*joints+lines;options=options*strips*ribbons*layers*2;this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(segments*
strips*ribbons*layers*6),1));this.setAttribute("position4",new _BufferAttribute.BufferAttribute(new Float32Array(4*options),4));this.setAttribute("line",new _BufferAttribute.BufferAttribute(new Float32Array(1*options),1));1<detail&&this.setAttribute("joint",new _BufferAttribute.BufferAttribute(new Float32Array(options),1));var y=this._emitter("index");options=this._emitter("position4");lines=this._emitter("line");1<detail&&(joint=this._emitter("joint"));var z=0;for(let i=0,end=ribbons*layers,asc=
0<=end;asc?i<end:i>end;asc?i++:i--)for(let j=0,end1=strips,asc1=0<=end1;asc1?j<end1:j>end1;asc1?j++:j--){for(let k=0,end2=segments,asc2=0<=end2;asc2?k<end2:k>end2;asc2?k++:k--)y(z),y(z+1),y(z+2),y(z+2),y(z+1),y(z+3),z+=2;z+=2}var edger=closed?()=>0:function(x){return 0===x?-1:x===samples-1?1:0};if(1<detail){var asc3;closed=0;for(asc3=0<=layers;asc3?closed<layers:closed>layers;asc3?closed++:closed--){var asc4=void 0,end4=void 0;z=0;end4=ribbons;for(asc4=0<=end4;asc4?z<end4:z>end4;asc4?z++:z--){let asc5,
end5;y=0;end5=strips;for(asc5=0<=end5;asc5?y<end5:y>end5;asc5?y++:y--){let asc6,end6,i1;segments=i1=0;end6=samples;for(asc6=0<=end6;asc6?i1<end6:i1>end6;asc6?i1++:i1--,segments=i1){var edge=edger(segments);if(0!==edge)options(segments,y,z,closed),options(segments,y,z,closed),lines(1),lines(-1),joint(.5),joint(.5);else for(let m=0,end7=detail,asc7=0<=end7;asc7?m<end7:m>end7;asc7?m++:m--)options(segments,y,z,closed),options(segments,y,z,closed),lines(1),lines(-1),joint(m/joints),joint(m/joints)}}}}}else for(closed=
0,joint=0<=layers;joint?closed<layers:closed>layers;joint?closed++:closed--)for(z=0,joints=ribbons,detail=0<=joints;detail?z<joints:z>joints;detail?z++:z--)for(y=0,edger=strips,edge=0<=edger;edge?y<edger:y>edger;edge?y++:y--)for(segments=end4=0,asc4=samples,asc3=0<=asc4;asc3?end4<asc4:end4>asc4;asc3?end4++:end4--,segments=end4)options(segments,y,z,closed),options(segments,y,z,closed),lines(1),lines(-1);this._finalize();this.clip()}clip(samples,strips,ribbons,layers){null==samples&&(samples=this.samples-
this.closed);null==strips&&({strips}=this);null==ribbons&&({ribbons}=this);null==layers&&({layers}=this);const segments=samples+(samples-(this.closed?0:2))*this.joints-(this.closed?0:1);samples+=this.closed;this._clipGeometry(samples,strips,ribbons,layers);return this._clipOffsets(6,segments,strips,ribbons,layers,this.segments,this.strips,this.ribbons,this.layers)}}exports.LineGeometry=LineGeometry}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$geometry$linegeometry.js.map
