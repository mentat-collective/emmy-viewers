shadow$provide.module$node_modules$threestrap$src$controls$VRControls=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.VRControls=void 0;var _Matrix=require("module$node_modules$three$src$math$Matrix4");class VRControls{constructor(object,onError){function gotVRDisplays(displays){this.vrDisplays=displays;0<displays.length?this.vrDisplay=displays[0]:onError&&onError("VR input not available.")}this.object=object;this.standingMatrix=new _Matrix.Matrix4;
this.frameData=null;"VRFrameData"in window&&(this.frameData=new VRFrameData);navigator.getVRDisplays&&navigator.getVRDisplays().then(gotVRDisplays).catch(function(){console.warn("VRControls: Unable to get VR Displays")});this.scale=1;this.standing=!1;this.userHeight=1.6}getVRDisplay(){return this.vrDisplay}setVRDisplay(value){this.vrDisplay=value}getVRDisplays(){console.warn("VRControls: getVRDisplays() is being deprecated.");return this.vrDisplays}getStandingMatrix(){return this.standingMatrix}update(){if(this.vrDisplay){let pose;
this.vrDisplay.getFrameData?(this.vrDisplay.getFrameData(this.frameData),pose=this.frameData.pose):this.vrDisplay.getPose&&(pose=this.vrDisplay.getPose());null!==pose.orientation&&this.object.quaternion.fromArray(pose.orientation);null!==pose.position?this.object.position.fromArray(pose.position):this.object.position.set(0,0,0);this.standing&&(this.vrDisplay.stageParameters?(this.object.updateMatrix(),this.standingMatrix.fromArray(this.vrDisplay.stageParameters.sittingToStandingTransform),this.object.applyMatrix(this.standingMatrix)):
this.object.position.setY(this.object.position.y+this.userHeight));this.object.position.multiplyScalar(this.scale)}}dispose(){this.vrDisplay=null}}exports.VRControls=VRControls}
//# sourceMappingURL=module$node_modules$threestrap$src$controls$VRControls.js.map
