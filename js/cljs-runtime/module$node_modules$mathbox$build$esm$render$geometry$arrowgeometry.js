shadow$provide.module$node_modules$mathbox$build$esm$render$geometry$arrowgeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.ArrowGeometry=void 0;var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute");global=require("module$node_modules$mathbox$build$esm$render$geometry$clipgeometry");class ArrowGeometry extends global.ClipGeometry{constructor(options){var flip,closed,layers;let ribbons;var samples;let sides,
strips;var asc;super(options);this._clipUniforms();this.sides=sides=+options.sides||12;this.samples=samples=+options.samples||2;this.strips=strips=+options.strips||1;this.ribbons=ribbons=+options.ribbons||1;this.layers=layers=+options.layers||1;this.flip=flip=null!=options.flip?options.flip:!1;this.closed=closed=null!=options.closed?options.closed:!1;this.anchor=options=null!=options.anchor?options.anchor:flip||closed?0:samples-1;var arrows=strips*ribbons*layers;var k=(sides+2)*arrows;this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(2*
sides*arrows*3),1));this.setAttribute("position4",new _BufferAttribute.BufferAttribute(new Float32Array(4*k),4));this.setAttribute("arrow",new _BufferAttribute.BufferAttribute(new Float32Array(3*k),3));this.setAttribute("attach",new _BufferAttribute.BufferAttribute(new Float32Array(2*k),2));var index=this._emitter("index");const position=this._emitter("position4"),arrow=this._emitter("arrow"),attach=this._emitter("attach"),circle=[];k=0;for(asc=0<=sides;asc?k<sides:k>sides;asc?k++:k--){var angle=
k/sides*2*Math.PI;circle.push([Math.cos(angle),Math.sin(angle),1])}asc=0;for(let i=0,end1=arrows,asc1=0<=end1;asc1?i<end1:i>end1;asc1?i++:i--){const tip=asc++,back=tip+sides+1;k=0;angle=sides;for(arrows=0<=angle;arrows?k<angle:k>angle;arrows?k++:k--){const a=asc+k%sides,b=asc+(k+1)%sides;index(tip);index(a);index(b);index(b);index(a);index(back)}asc+=sides+1}index=flip?1:closed?samples-1:-1;flip=flip&&!closed?samples-1:0;for(let l=0,end3=layers,asc3=0<=end3;asc3?l<end3:l>end3;asc3?l++:l--)for(let z=
0,end4=ribbons,asc4=0<=end4;asc4?z<end4:z>end4;asc4?z++:z--)for(let y=0,end5=strips,asc5=0<=end5;asc5?y<end5:y>end5;asc5?y++:y--){position(options,y,z,l);arrow(0,0,0);attach(index,flip);k=0;closed=sides;for(layers=0<=closed;layers?k<closed:k>closed;layers?k++:k--)position(options,y,z,l),samples=circle[k],arrow(samples[0],samples[1],samples[2]),attach(index,flip);position(options,y,z,l);arrow(0,0,1);attach(index,flip)}this._finalize();this.clip()}clip(samples,strips,ribbons,layers){null==samples&&
({samples}=this);null==strips&&({strips}=this);null==ribbons&&({ribbons}=this);null==layers&&({layers}=this);this._clipGeometry(samples,strips,ribbons,layers);samples=0<samples?this.sides*this._reduce([layers,ribbons,strips],[this.layers,this.ribbons,this.strips]):0;return this._offsets([{start:0,count:6*samples,materialIndex:0}])}}exports.ArrowGeometry=ArrowGeometry}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$geometry$arrowgeometry.js.map
