{"version":3,"sources":["mathbox.cljs"],"mappings":"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","names":["mathbox/default-options","js/module$node_modules$three$examples$jsm$controls$OrbitControls.OrbitControls","mathbox/setup","f","box","and__4251__auto__","cljs.core/not","p__95255","map__95256","cljs.core/--destructure-map","cljs.core.get","mathbox/opts->setup","background-color","camera-position","max-distance","scale","focus","three","temp__5753__auto__","vec__95261","cljs.core.nth","x","y","z","color","js/module$node_modules$three$build$three.Color","mathbox/BareMathbox","reagent.core/adapt-react-class","js/module$node_modules$mathbox_react$build$cjs$index.Mathbox","mathbox/ContainedMathbox","js/module$node_modules$mathbox_react$build$cjs$index.ContainedMathbox","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","mathbox/Mathbox","p__95272","map__95273","seq95264","G__95265","cljs.core/first","cljs.core/next","self__4851__auto__","init","style","opts","children","ref","cljs.core/map?","cljs.core/fn?","cljs.core.ex_info","cljs.core.dissoc","cljs.core.update","cljs.core.partial","cljs.core/merge","cljs.core.assoc","cljs.core.into"],"sourcesContent":["(ns mathbox\n  (:require [\"mathbox-react\" :as box]\n            [reagent.core :as r]\n            [\"three\" :as THREE]\n            [\"three/examples/jsm/controls/OrbitControls.js\" :as OrbitControls]))\n\n;; TODO take a key for orbitcontrols, trackballcontrols.\n(def default-options\n  {:plugins [\"core\" \"controls\" \"cursor\"]\n   :controls {:klass OrbitControls/OrbitControls}\n   :camera {}})\n\n(defn setup\n  \"Returns a setup function that will only run ONE time.\"\n  [f]\n  (fn [^js box]\n    (when (and box (not (.-created box)))\n      (set! (.-created box) true)\n      (f box))))\n\n(defn opts->setup\n  \"Some core options, tidied up.\"\n  [{:keys [background-color\n           camera-position\n           max-distance\n           scale focus]}]\n  (setup\n   (fn [^js box]\n     (when scale (.set box #js {:scale scale}))\n     (when focus (.set box #js {:focus focus}))\n     (let [three (.-three box)]\n       (when max-distance\n         (-> three .-controls .-maxDistance (set! max-distance)))\n       (when-let [[x y z] camera-position]\n         (-> three .-camera .-position (.set x y z)))\n       (when background-color\n         (let [color (THREE/Color. background-color)]\n           (-> three .-renderer (.setClearColor color 1.0))))))))\n\n(def BareMathbox\n  (r/adapt-react-class box/Mathbox))\n\n(def ContainedMathbox\n  (r/adapt-react-class box/ContainedMathbox))\n\n(defn Mathbox\n  \"Same as `ContainedMathBox`, but with setup options.\n\n  TODO for NOW, don't supply `:ref`. But obviously we want to allow that too.\n\n  :style maps to containerStyle.\"\n  [{:keys [init style] :as opts} & children]\n  (let [ref (cond (map? init) (opts->setup init)\n                  (fn? init)  (setup init)\n                  :else      (throw\n                              (ex-info\n                               \"Invalid init.\" {:init init})))\n        opts (-> opts\n                 (dissoc :init :style)\n                 (update :options (partial merge default-options))\n                 (assoc :ref ref\n                        :containerStyle style))]\n    (into [:> box/ContainedMathbox opts] children)))\n"]}