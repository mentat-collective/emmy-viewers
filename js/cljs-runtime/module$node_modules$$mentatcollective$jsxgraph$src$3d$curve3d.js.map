{
"version":3,
"file":"module$node_modules$$mentatcollective$jsxgraph$src$3d$curve3d.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/@mentatcollective/jsxgraph/src/3d/curve3d.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mentatcollective$jsxgraph$src$3d$curve3d\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _jxg = _interopRequireDefault(require(\"../jxg\"));\n\nvar _constants = _interopRequireDefault(require(\"../base/constants\"));\n\nvar _type = _interopRequireDefault(require(\"../utils/type\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n    Copyright 2008-2022\n        Matthias Ehmann,\n        Carsten Miller,\n        Andreas Walter,\n        Alfred Wassermann\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <http://www.gnu.org/licenses/>\n    and <http://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG:true, define: true*/\n\n/**\n * Constructor for 3D curves.\n * @class Creates a new 3D curve object. Do not use this constructor to create a 3D curve. Use {@link JXG.Board#create} with type {@link Curve3D} instead.\n *\n * @augments JXG.GeometryElement3D\n * @augments JXG.GeometryElement\n * @param {View3D} view\n * @param {Function} F\n * @param {Function} X\n * @param {Function} Y\n * @param {Function} Z\n * @param {Array} range\n * @param {Object} attributes\n * @see JXG.Board#generateName\n */\n_jxg.default.Curve3D = function (view, F, X, Y, Z, range, attributes) {\n  this.constructor(view.board, attributes, _constants.default.OBJECT_TYPE_CURVE3D, _constants.default.OBJECT_CLASS_3D);\n  this.constructor3D(view, \"surface3d\");\n  this.id = this.view.board.setId(this, \"S3D\");\n  this.board.finalizeAdding(this);\n  this.F = F;\n  /**\n   * Function which maps u to x; i.e. it defines the x-coordinate of the curve\n   * @function\n   * @returns Number\n   */\n\n  this.X = X;\n  /**\n   * Function which maps u to y; i.e. it defines the y-coordinate of the curve\n   * @function\n   * @returns Number\n   */\n\n  this.Y = Y;\n  /**\n   * Function which maps u to z; i.e. it defines the x-coordinate of the curve\n   * @function\n   * @returns Number\n   */\n\n  this.Z = Z;\n\n  if (this.F !== null) {\n    this.X = function (u) {\n      return this.F(u)[0];\n    };\n\n    this.Y = function (u) {\n      return this.F(u)[1];\n    };\n\n    this.Z = function (u) {\n      return this.F(u)[2];\n    };\n  }\n\n  this.range = range;\n  this.methodMap = _type.default.deepCopy(this.methodMap, {// TODO\n  });\n};\n\n_jxg.default.Curve3D.prototype = new _jxg.default.GeometryElement();\n\n_type.default.copyPrototypeMethods(_jxg.default.Curve3D, _jxg.default.GeometryElement3D, \"constructor3D\");\n\n_jxg.default.extend(_jxg.default.Curve3D.prototype,\n/** @lends JXG.Curve3D.prototype */\n{\n  updateDataArray: function () {\n    var steps = _type.default.evaluate(this.visProp.numberpointshigh),\n        r,\n        s,\n        e,\n        delta,\n        c2d,\n        u,\n        dataX,\n        dataY,\n        p = [0, 0, 0];\n\n    dataX = [];\n    dataY = [];\n\n    if (_type.default.isArray(this.X)) {\n      steps = this.X.length;\n\n      for (u = 0; u < steps; u++) {\n        p = [this.X[u], this.Y[u], this.Z[u]];\n        c2d = this.view.project3DTo2D(p);\n        dataX.push(c2d[1]);\n        dataY.push(c2d[2]);\n      }\n    } else {\n      r = _type.default.evaluate(this.range);\n      s = _type.default.evaluate(r[0]);\n      e = _type.default.evaluate(r[1]);\n      delta = (e - s) / (steps - 1);\n\n      for (u = s; u <= e; u += delta) {\n        if (this.F !== null) {\n          p = this.F(u);\n        } else {\n          p = [this.X(u), this.Y(u), this.Z(u)];\n        }\n\n        c2d = this.view.project3DTo2D(p);\n        dataX.push(c2d[1]);\n        dataY.push(c2d[2]);\n      }\n    }\n\n    return {\n      X: dataX,\n      Y: dataY\n    };\n  },\n  update: function () {\n    return this;\n  },\n  updateRenderer: function () {\n    this.needsUpdate = false;\n    return this;\n  }\n});\n/**\n * @class This element creates a 3D parametric curves.\n * @pseudo\n * @description A 3D parametric curve is defined by a function\n *    <i>F: R<sup>1</sup> &rarr; R<sup>3</sup></i>.\n *\n * @name Curve3D\n * @augments Curve\n * @constructor\n * @type Object\n * @throws {Exception} If the element cannot be constructed with the given parent objects an exception is thrown.\n * @param {Function_Function_Function_Array,Function} F<sub>X</sub>,F<sub>Y</sub>,F<sub>Z</sub>,range\n * F<sub>X</sub>(u), F<sub>Y</sub>(u), F<sub>Z</sub>(u) are functions returning a number, range is the array containing\n * lower and upper bound for the range of the parameter u. range may also be a function returning an array of length two.\n * @param {Function_Array,Function} F,range Alternatively: F<sub>[X,Y,Z]</sub>(u) a function returning an array [x,y,z] of\n * numbers, range as above.\n * @param {Array_Array_Array} X,Y,Z Three arrays containing the coordinate points which define the curve.\n */\n\n\n_jxg.default.createCurve3D = function (board, parents, attributes) {\n  var view = parents[0],\n      F,\n      X,\n      Y,\n      Z,\n      range,\n      attr,\n      el;\n\n  if (parents.length === 3) {\n    F = parents[1];\n    range = parents[2];\n    X = null;\n    Y = null;\n    Z = null;\n  } else {\n    X = parents[1];\n    Y = parents[2];\n    Z = parents[3];\n    range = parents[4];\n    F = null;\n  } // TODO Throw error\n\n\n  attr = _type.default.copyAttributes(attributes, board.options, \"curve3d\");\n  el = new _jxg.default.Curve3D(view, F, X, Y, Z, range, attr);\n  el.element2D = board.create(\"curve\", [[], []], attr);\n\n  el.element2D.updateDataArray = function () {\n    var ret = el.updateDataArray();\n    this.dataX = ret.X;\n    this.dataY = ret.Y;\n  };\n\n  el.addChild(el.element2D);\n  el.inherits.push(el.element2D);\n  el.element2D.setParents(el);\n  el.element2D.prepareUpdate().update();\n\n  if (!board.isSuspendedUpdate) {\n    el.element2D.updateVisibility().updateRenderer();\n  }\n\n  return el;\n};\n\n_jxg.default.registerElement(\"curve3d\", _jxg.default.createCurve3D);\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","_jxg","_constants","_type","Curve3D","_jxg.default.Curve3D","view","F","X","Y","Z","range","attributes","constructor","board","OBJECT_TYPE_CURVE3D","OBJECT_CLASS_3D","constructor3D","id","setId","finalizeAdding","this.X","u","this.Y","this.Z","methodMap","deepCopy","prototype","GeometryElement","copyPrototypeMethods","GeometryElement3D","extend","updateDataArray","steps","evaluate","visProp","numberpointshigh","s","dataX","dataY","isArray","length","p","c2d","project3DTo2D","push","r","e","delta","update","updateRenderer","needsUpdate","createCurve3D","_jxg.default.createCurve3D","parents","attr","copyAttributes","options","el","element2D","create","el.element2D.updateDataArray","ret","addChild","inherits","setParents","prepareUpdate","isSuspendedUpdate","updateVisibility","registerElement"]
}
