{
"version":3,
"file":"module$node_modules$lodash$_baseKeys.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IAC7FC,YAAcH,OAAA,CAAQ,yCAAR,CAD+E,CAE7FI,WAAaJ,OAAA,CAAQ,wCAAR,CAFgF,CAQ7FK,eAHcC,MAAOC,CAAAA,SAGQF,CAAAA,cAsBjCJ,OAAOC,CAAAA,OAAP,CAbAM,QAAiB,CAACC,MAAD,CAAS,CACxB,GAAI,CAACN,WAAA,CAAYM,MAAZ,CAAL,CACE,MAAOL,WAAA,CAAWK,MAAX,CAET,KAAIC,OAAS,EAAb,CACSC,GAAT,KAASA,GAAT,GAAgBL,OAAA,CAAOG,MAAP,CAAhB,CACMJ,cAAeO,CAAAA,IAAf,CAAoBH,MAApB,CAA4BE,GAA5B,CAAJ,EAA+C,aAA/C,EAAwCA,GAAxC,EACED,MAAOG,CAAAA,IAAP,CAAYF,GAAZ,CAGJ,OAAOD,OAViB,CAjBuE;",
"sources":["node_modules/lodash/_baseKeys.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseKeys\"] = function(global,require,module,exports) {\nvar isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n};"],
"names":["shadow$provide","global","require","module","exports","isPrototype","nativeKeys","hasOwnProperty","Object","prototype","baseKeys","object","result","key","call","push"]
}
