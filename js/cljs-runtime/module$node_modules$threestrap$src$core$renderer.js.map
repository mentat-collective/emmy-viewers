{
"version":3,
"file":"module$node_modules$threestrap$src$core$renderer.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzGC,MAAAA,CAAkBH,OAAA,CAAQ,wDAAR,CAELA,QAAAI,CAAQ,8CAARA,CAENC,CAAAA,SAAUC,CAAAA,cAArB,CAAoC,UAApC,CAAgD,CAC9CC,SAAU,CACRC,MAAOL,MAAgBM,CAAAA,cADf,CAERC,WAAY,CACVC,MAAO,CAAA,CADG,CAEVC,QAAS,CAAA,CAFC,CAGVC,sBAAuB,CAAA,CAHb,CAIVC,UAAW,CAAA,CAJD,CAFJ,CADoC,CAU9CC,OAAQ,CAAC,QAAD,CAVsC,CAW9CC,QAASA,QAAS,CAACC,KAAD,CAAQ,CAExB,MAAMC,SAAWD,KAAMC,CAAAA,QAAjBA,CAA4B,IAAI,IAAKC,CAAAA,OAAQX,CAAAA,KAAjB,CAAuB,IAAKW,CAAAA,OAAQT,CAAAA,UAApC,CAClCO,MAAMG,CAAAA,MAAN;AAAeF,QAASG,CAAAA,UAExBJ,MAAMK,CAAAA,OAAQC,CAAAA,WAAd,CAA0BL,QAASG,CAAAA,UAAnC,CALwB,CAXoB,CAkB9CG,UAAWA,QAAS,CAACP,KAAD,CAAQ,CAE1BA,KAAMK,CAAAA,OAAQG,CAAAA,WAAd,CAA0BR,KAAMC,CAAAA,QAASG,CAAAA,UAAzC,CACA,QAAOJ,KAAMC,CAAAA,QACb,QAAOD,KAAMG,CAAAA,MAJa,CAlBkB,CAwB9CM,OAAQA,QAAS,CAACC,KAAD,CAAQV,KAAR,CAAe,CACxBC,KAAAA,CAAWD,KAAMC,CAAAA,QACvB,OAAMU,GAAKV,KAASG,CAAAA,UAEhBO,GAAJ,EAAwB,QAAxB,EAAUA,EAAGC,CAAAA,OAAb,CACEX,KAASY,CAAAA,OAAT,CAAiBH,KAAMI,CAAAA,WAAvB,CAAoCJ,KAAMK,CAAAA,YAA1C,CAAwD,CAAA,CAAxD,CADF,EAIMd,KAASe,CAAAA,aAIb,EAHEf,KAASe,CAAAA,aAAT,CAAuBN,KAAMI,CAAAA,WAA7B,CAA0CJ,KAAMK,CAAAA,YAAhD,CAGF,CAAAd,KAASY,CAAAA,OAAT,CAAiBH,KAAMO,CAAAA,SAAvB,CAAkCP,KAAMQ,CAAAA,UAAxC,CAAoD,CAAA,CAApD,CARF,CAJ8B,CAxBc,CAAhD,CAP6G;",
"sources":["node_modules/threestrap/src/core/renderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$threestrap$src$core$renderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _WebGL1Renderer = require(\"three/src/renderers/WebGL1Renderer.js\");\n\nvar _bootstrap = require(\"../bootstrap\");\n\n_bootstrap.Bootstrap.registerPlugin(\"renderer\", {\n  defaults: {\n    klass: _WebGL1Renderer.WebGL1Renderer,\n    parameters: {\n      depth: true,\n      stencil: true,\n      preserveDrawingBuffer: true,\n      antialias: true\n    }\n  },\n  listen: [\"resize\"],\n  install: function (three) {\n    // Instantiate Three renderer\n    const renderer = three.renderer = new this.options.klass(this.options.parameters);\n    three.canvas = renderer.domElement; // Add to DOM\n\n    three.element.appendChild(renderer.domElement);\n  },\n  uninstall: function (three) {\n    // Remove from DOM\n    three.element.removeChild(three.renderer.domElement);\n    delete three.renderer;\n    delete three.canvas;\n  },\n  resize: function (event, three) {\n    const renderer = three.renderer;\n    const el = renderer.domElement; // Resize renderer to render size if it's a canvas\n\n    if (el && el.tagName == \"CANVAS\") {\n      renderer.setSize(event.renderWidth, event.renderHeight, false);\n    } // Or view size if it's just a DOM element or multi-renderer\n    else {\n      if (renderer.setRenderSize) {\n        renderer.setRenderSize(event.renderWidth, event.renderHeight);\n      }\n\n      renderer.setSize(event.viewWidth, event.viewHeight, false);\n    }\n  }\n});\n};"],
"names":["shadow$provide","global","require","module","exports","_WebGL1Renderer","_bootstrap","Bootstrap","registerPlugin","defaults","klass","WebGL1Renderer","parameters","depth","stencil","preserveDrawingBuffer","antialias","listen","install","three","renderer","options","canvas","domElement","element","appendChild","uninstall","removeChild","resize","event","el","tagName","setSize","renderWidth","renderHeight","setRenderSize","viewWidth","viewHeight"]
}
