{
"version":3,
"file":"module$node_modules$shadergraph$src$visualize$serialize.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/shadergraph/src/visualize/serialize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$visualize$serialize\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serialize = void 0;\n\nvar Block = _interopRequireWildcard(require(\"../block\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n// Dump graph for debug/visualization purposes\nconst serialize = function (graph) {\n  const nodes = [];\n  const links = [];\n\n  for (const node of Array.from(graph.nodes)) {\n    let outlet;\n    const record = {\n      // Data\n      id: node.id,\n      name: null,\n      type: null,\n      depth: null,\n      graph: null,\n      inputs: [],\n      outputs: []\n    };\n    nodes.push(record);\n    const {\n      inputs\n    } = record;\n    const {\n      outputs\n    } = record;\n    const block = node.owner;\n\n    if (block instanceof Block.Call) {\n      record.name = block.snippet._name;\n      record.type = \"call\";\n      record.code = block.snippet._original;\n    } else if (block instanceof Block.Callback) {\n      record.name = \"Callback\";\n      record.type = \"callback\";\n      record.graph = serialize(block.graph);\n    } else if (block instanceof Block.Isolate) {\n      record.name = \"Isolate\";\n      record.type = \"isolate\";\n      record.graph = serialize(block.graph);\n    } else if (block instanceof Block.Join) {\n      record.name = \"Join\";\n      record.type = \"join\";\n    } else if (block != null) {\n      if (record.name == null) {\n        record.name = block.name != null ? block.name : block.type;\n      }\n\n      if (record.type == null) {\n        record.type = block.type;\n      }\n\n      if (record.code == null) {\n        record.code = block.code;\n      }\n\n      if (block.graph != null) {\n        record.graph = serialize(block.graph);\n      }\n    }\n\n    const format = function (type) {\n      type = type.replace(\")(\", \")\u2192(\");\n      return type = type.replace(\"()\", \"\");\n    };\n\n    for (outlet of Array.from(node.inputs)) {\n      inputs.push({\n        id: outlet.id,\n        name: outlet.name,\n        type: format(outlet.type),\n        open: outlet.input == null\n      });\n    }\n\n    for (outlet of Array.from(node.outputs)) {\n      outputs.push({\n        id: outlet.id,\n        name: outlet.name,\n        type: format(outlet.type),\n        open: !outlet.output.length\n      });\n\n      for (const other of Array.from(outlet.output)) {\n        links.push({\n          from: node.id,\n          out: outlet.id,\n          to: other.node.id,\n          in: other.id,\n          type: format(outlet.type)\n        });\n      }\n    }\n  }\n\n  return {\n    nodes,\n    links\n  };\n};\n\nexports.serialize = serialize;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","serialize","Block","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","graph","nodes","links","node","Array","from","outlet","record","id","name","type","depth","inputs","outputs","push","block","owner","Call","snippet","_name","code","_original","Callback","Isolate","Join","format","replace","open","input","output","length","other","out","to","in"]
}
