shadow$provide.module$node_modules$shadergraph$src$graph$outlet=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Outlet=void 0;var _graph=require("module$node_modules$shadergraph$src$graph$graph");class Outlet{static initClass(){this.index=0}static make(outlet,extra){null==extra&&(extra={});if(null!=outlet.meta)for(const key in outlet.meta)extra[key]=outlet.meta[key];return new Outlet(outlet.inout,outlet.name,outlet.hint,outlet.type,extra)}static id(name){return`_io_${++Outlet.index}_${name}`}static hint(name){name=
name.replace(/^_io_[0-9]+_/,"");name=name.replace(/_i_o$/,"");return name.replace(/(In|Out|Inout|InOut)$/,"")}constructor(inout,name,hint,type,meta,id){this.inout=inout;this.name=name;this.hint=hint;this.type=type;null==meta&&(meta={});this.meta=meta;this.id=id;null==this.hint&&(this.hint=Outlet.hint(this.name));this.input=this.node=null;this.output=[];null==this.id&&(this.id=Outlet.id(this.hint))}morph(outlet){this.inout=outlet.inout;this.name=outlet.name;this.hint=outlet.hint;this.type=outlet.type;
return this.meta=outlet.meta}dupe(name){null==name&&(name=this.id);const outlet=Outlet.make(this);outlet.name=name;return outlet}connect(outlet){if(this.inout===_graph.Graph.IN&&outlet.inout===_graph.Graph.OUT)return outlet.connect(this);if(this.inout!==_graph.Graph.OUT||outlet.inout!==_graph.Graph.IN)throw Error("Can only connect out to in.");if(outlet.input!==this)return outlet.disconnect(),outlet.input=this,this.output.push(outlet)}disconnect(outlet){this.input&&this.input.disconnect(this);if(this.output.length)if(outlet){const index=
this.output.indexOf(outlet);if(0<=index)return this.output.splice(index,1),outlet.input=null}else{for(outlet of Array.from(this.output))outlet.input=null;return this.output=[]}}}exports.Outlet=Outlet;Outlet.initClass()}
//# sourceMappingURL=module$node_modules$shadergraph$src$graph$outlet.js.map
