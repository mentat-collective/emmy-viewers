{"version":3,"sources":["sci/impl/types.cljc"],"mappings":"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","names":["sci$impl$types$IBox$setVal$dyn","x__4550__auto__","m__4551__auto__","sci.impl.types/setVal","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","sci$impl$types$IBox$getVal$dyn","sci.impl.types/getVal","sci.impl.types/IBox","_this","_v","sci$impl$types$IReified$getInterfaces$dyn","sci.impl.types/getInterfaces","sci$impl$types$IReified$getMethods$dyn","sci.impl.types/getMethods","sci$impl$types$IReified$getProtocols$dyn","sci.impl.types/getProtocols","sci.impl.types/IReified","_","cljs.core/PROTOCOL_SENTINEL","this__4491__auto__","writer__4492__auto__","opt__4493__auto__","cljs.core/-write","sci.impl.types/Reified","sci.impl.types/->Reified","interfaces","meths","protocols","sci$impl$types$SciTypeInstance$_get_type$dyn","sci.impl.types/-get-type","sci$impl$types$SciTypeInstance$_mutate$dyn","sci.impl.types/-mutate","sci.impl.types/SciTypeInstance","k","v","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","sci.impl.types/type-impl","seq74622","G__74623","cljs.core/first","cljs.core/next","self__4851__auto__","x","or__4253__auto__","G__74626","cljs.core/meta","cljs.core/type","sci.impl.types/type-impl2","G__74628","sci.impl.types/EvalForm","sci.impl.types/->EvalForm","form","sci$impl$types$Stack$stack$dyn","sci.impl.types/stack","sci.impl.types/Stack","this","this__4502__auto__","k__4503__auto__","this__4504__auto__","k74630","else__4505__auto__","G__74634","cljs.core/Keyword","f","stack","cljs.core.get","__extmap","this__4522__auto__","f__4523__auto__","init__4524__auto__","cljs.core.reduce","ret__4525__auto__","p__74635","vec__74636","k__4526__auto__","cljs.core.nth","v__4527__auto__","this__4517__auto__","writer__4518__auto__","opts__4519__auto__","pr-pair__4520__auto__","keyval__4521__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__74629","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4500__auto__","__meta","this__4497__auto__","__hash","this__4506__auto__","cljs.core/count","this__4498__auto__","h__4360__auto__","coll__4499__auto__","cljs.core/hash-unordered-coll","this74631","other74632","cljs.core._EQ_","this__4512__auto__","k__4513__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4509__auto__","G__74659","this__4510__auto__","k__4511__auto__","pred__74660","cljs.core/keyword-identical?","expr__74661","cljs.core.assoc","this__4515__auto__","cljs.core/seq","cljs.core/MapEntry","this__4501__auto__","this__4507__auto__","entry__4508__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","sci.impl.types/NodeR","this__4546__auto__","cljs.core/List","writer__4547__auto__","G__74633","extmap__4542__auto__","G__74663","cljs.core/record?","sci.impl.types/->NodeR","sci.impl.types/map->NodeR","sci.impl.types/eval","expr","ctx","bindings","fexpr__74664","sci.impl.types/->constant","sci$impl$types$HasName$getName$dyn","sci.impl.types/getName","sci.impl.types/HasName"],"sourcesContent":["(ns sci.impl.types\n  {:no-doc true}\n  (:refer-clojure :exclude [eval])\n  #?(:clj (:require [sci.impl.macros :as macros]))\n  #?(:cljs (:require-macros [sci.impl.macros :as macros]\n                            [sci.impl.types :refer [->Node]]))\n  #?(:clj (:import [sci.impl.types IReified])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(defprotocol IBox\n  (setVal [_this _v])\n  (getVal [_this]))\n\n#?(:cljs\n   (defprotocol IReified\n     (getInterfaces [_])\n     (getMethods [_])\n     (getProtocols [_])))\n\n#?(:clj\n   (do (defn getMethods [obj]\n         (.getMethods ^IReified obj))\n       (defn getInterfaces [obj]\n         (.getInterfaces ^IReified obj))\n       (defn getProtocols [obj]\n         (.getProtocols ^IReified obj))))\n\n(deftype Reified [interfaces meths protocols]\n  IReified\n  (getInterfaces [_] interfaces)\n  (getMethods [_] meths)\n  (getProtocols [_] protocols))\n\n(defprotocol SciTypeInstance\n  (-get-type [_])\n  (-mutate [_ k v]))\n\n(defn type-impl\n  \"Must be varargs because used in multimethods\n  Only for internal use!\"\n  [x & _]\n  (or (when #?(:clj (instance? sci.impl.types.IReified x)\n               :cljs (cljs.core/implements? sci.impl.types.IReified x))\n        :sci.impl.protocols/reified)\n      (when (#?(:clj instance?\n                :cljs cljs.core/implements?) sci.impl.types.SciTypeInstance x)\n        (-get-type x))\n      (some-> x meta :type)\n      #?(:clj (class x) ;; no need to check for metadata anymore\n         :cljs (type x))))\n\n(defn type-impl2\n  \"Externally available type implementation.\"\n  [x]\n  (or (when (#?(:clj instance?\n                :cljs cljs.core/implements?) sci.impl.types.SciTypeInstance x)\n        (-get-type x))\n      (some-> x meta :type)\n      #?(:clj (class x) ;; no need to check for metadata anymore\n         :cljs (type x))))\n\n;; returned from analyzer when macroexpansion needs interleaved eval\n(deftype EvalForm [form]\n  IBox\n  (getVal [_this] form))\n\n(defprotocol Stack\n  (stack [this]))\n\n(extend-protocol Stack\n  #?(:clj Object :cljs default) (stack [_this] nil))\n\n#?(:clj (defprotocol Eval\n          (eval [expr ctx ^objects bindings])))\n\n#?(:cljs\n   (defrecord NodeR [f stack]\n     Stack (stack [_] stack)))\n\n#?(:cljs\n   ;; For performance reasons on CLJS we do not use eval as a protcol method but\n   ;; as a separate function which does an instance check on a concrete type.\n   (defn eval [expr ctx bindings]\n     (if (instance? NodeR expr)\n       ((.-f expr) expr ctx bindings)\n       expr)))\n\n(macros/deftime\n  (defmacro ->Node\n    [body stack]\n    (macros/?\n     :clj `(reify\n             sci.impl.types/Eval\n             (~'eval [~'this ~'ctx ~'bindings]\n              ~body)\n             sci.impl.types/Stack\n             (~'stack [_#] ~stack))\n     :cljs `(->NodeR\n             (fn [~'this ~'ctx ~'bindings]\n               ~body)\n             ~stack))))\n\n#?(:clj\n   (deftype ConstantNode [x]\n     Eval (eval [_expr _bindings _ctx]\n            x)\n     Stack (stack [_] nil)))\n\n(defn ->constant [x]\n  #?(:clj (->ConstantNode x)\n     :cljs x))\n\n(defprotocol HasName ;; INamed was already taken by CLJS\n  (getName [_]))\n"]}