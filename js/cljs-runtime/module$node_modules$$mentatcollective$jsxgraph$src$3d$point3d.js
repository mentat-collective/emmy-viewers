shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$3d$point3d=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_math=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math")),
_geometry=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$geometry")),_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type"));_jxg.default.Point3D=function(view,F,slide,attributes){this.constructor(view.board,attributes,_constants.default.OBJECT_TYPE_POINT3D,_constants.default.OBJECT_CLASS_3D);this.constructor3D(view,"point3d");this.id=this.view.board.setId(this,"P3D");this.board.finalizeAdding(this);this.coords=
[0,0,0,0];this.F=F;this.slide=slide;this.X=function(){return this.coords[1]};this.Y=function(){return this.coords[2]};this.Z=function(){return this.coords[3]};this._c2d=this._params=null;this.methodMap=_type.default.deepCopy(this.methodMap,{})};_jxg.default.Point3D.prototype=new _jxg.default.GeometryElement;_type.default.copyPrototypeMethods(_jxg.default.Point3D,_jxg.default.GeometryElement3D,"constructor3D");_jxg.default.extend(_jxg.default.Point3D.prototype,{updateCoords:function(){var i;if(_type.default.isFunction(this.F))this.coords=
[1].concat(_type.default.evaluate(this.F));else for(this.coords[0]=1,i=0;3>i;i++)_type.default.isFunction(this.F[i])&&(this.coords[i+1]=_type.default.evaluate(this.F[i]));return this},initCoords:function(){var i;if(_type.default.isFunction(this.F))this.coords=[1].concat(_type.default.evaluate(this.F));else for(this.coords[0]=1,i=0;3>i;i++)this.coords[i+1]=_type.default.evaluate(this.F[i]);return this},normalizeCoords:function(){Math.abs(this.coords[0])>_math.default.eps&&(this.coords[1]/=this.coords[0],
this.coords[2]/=this.coords[0],this.coords[3]/=this.coords[0],this.coords[0]=1);return this},setPosition:function(coords,noevent){noevent=this.coords;this.coords.slice();3===coords.length?(noevent[0]=1,noevent[1]=coords[0],noevent[2]=coords[1],noevent[3]=coords[2]):(noevent[0]=coords[0],noevent[1]=coords[1],noevent[2]=coords[2],noevent[3]=coords[2],this.normalizeCoords());return this},update:function(drag){this.element2D.draggable()&&0!==_geometry.default.distance(this._c2d,this.element2D.coords.usrCoords)?
this.slide?this.projectCoords2Surface():(drag=[1,0,0,this.coords[3]],drag=this.view.project2DTo3DPlane(this.element2D,[1,0,0,1],drag),0!==drag[0]&&(this.coords=this.view.project3DToCube(drag))):(this.updateCoords(),this.element2D.coords.setCoordinates(_constants.default.COORDS_BY_USER,this.view.project3DTo2D([1,this.X(),this.Y(),this.Z()])));this._c2d=this.element2D.coords.usrCoords.slice();return this},updateRenderer:function(){this.needsUpdate=!1;return this},projectCoords2Surface:function(){var x$jscomp$0=
[0,0],surface=this.slide,that=this;if(null!==surface){var c3d=function(n,m,x,con){n=[1,surface.X(x[0],x[1]),surface.Y(x[0],x[1]),surface.Z(x[0],x[1])];n=that.view.project3DTo2D(n);con[0]=that.element2D.X()-n[1];con[1]=that.element2D.Y()-n[2];return con[0]*con[0]+con[1]*con[1]};_type.default.exists(this._params)&&(x$jscomp$0=this._params.slice());_math.default.Nlp.FindMinimum(c3d,2,2,x$jscomp$0,5,1E-6,0,200);c3d=[1,surface.X(x$jscomp$0[0],x$jscomp$0[1]),surface.Y(x$jscomp$0[0],x$jscomp$0[1]),surface.Z(x$jscomp$0[0],
x$jscomp$0[1])];var c2d=this.view.project3DTo2D(c3d);this._params=x$jscomp$0;this.coords=c3d;this.element2D.coords.setCoordinates(_constants.default.COORDS_BY_USER,c2d);this._c2d=c2d}},__evt__update3D:function(oc){}});_jxg.default.createPoint3D=function(board,parents,attributes){var view=parents[0];var slide=2<parents.length&&_type.default.exists(parents[parents.length-1].is3D)?parents.pop():null;if(2===parents.length)parents=parents[1];else if(4===parents.length)parents=parents.slice(1);else throw Error("JSXGraph: Can't create point3d with parent types '"+
typeof parents[0]+"' and '"+typeof parents[1]+"'.\nPossible parent types: [[x,y,z]], [x,y,z]");board=_type.default.copyAttributes(attributes,board.options,"point3d");attributes=new _jxg.default.Point3D(view,parents,slide,board);attributes.initCoords();slide=view.project3DTo2D(attributes.coords);board.name=attributes.name;attributes.element2D=view.create("point",slide,board);attributes.addChild(attributes.element2D);attributes.inherits.push(attributes.element2D);attributes.element2D.setParents(attributes);
attributes._c2d=attributes.element2D.coords.usrCoords.slice();return attributes};_jxg.default.registerElement("point3d",_jxg.default.createPoint3D)}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$3d$point3d.js.map
