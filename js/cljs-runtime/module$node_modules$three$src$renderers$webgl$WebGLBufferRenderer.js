shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLBufferRenderer=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLBufferRenderer=function(gl,extensions,info,capabilities){const isWebGL2=capabilities.isWebGL2;let mode;this.setMode=function(value){mode=value};this.render=function(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1)};this.renderInstances=function(start,count,primcount){if(0!==primcount){if(isWebGL2){var extension=
gl;var methodName="drawArraysInstanced"}else if(extension=extensions.get("ANGLE_instanced_arrays"),methodName="drawArraysInstancedANGLE",null===extension){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount)}}}}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLBufferRenderer.js.map
