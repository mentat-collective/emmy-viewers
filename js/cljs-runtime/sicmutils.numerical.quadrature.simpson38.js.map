{"version":3,"sources":["sicmutils/numerical/quadrature/simpson38.cljc"],"mappings":";AAkCA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;8DAAA,sEAAAA,pIAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,0FAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,0FAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,4FAAA,5FAAMD,uGA2BFM,EAAEC,EAAEC;AA3BR,AA2BW,uGAAA,2CAAA,8CAAA,zLAACC,0FAAmBH,EAAEC,EAAEC;;;AA3BnC,CAAA,4FAAA,iBAAAN,7GAAMF,uGA4BFM,EAAEC,EAAEC;AA5BR,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;QAAA,AAAAE,4CAAAF,eAAA,8CAAA,7GA4BkBO;AA5BlB,AAAA,GA6BU,OAASA;AA7BnB;AAAA,AAAA,MAAA,KAAAT,MAAA;;;uFA8BO,gGAAA,2CAAA,3IAACU,0FAAsBL,EAAEC,EAAEC,2FAAM,2DAAA,3DAACI,+DAAYF,/UAC9C,2VAAA,IAAA,IAAA,IAAA,hWAACG;;;AA/BR,CAAA,sFAAA,tFAAMb;;AAAN,AAiCA;;;;;;;;;;;AAAAc,oDAAA,AAAAC,yDAUW,AAACC,6CAAKC,gBAAMjB,6DACbA","names":["var_args","G__90460","sicmutils.numerical.quadrature.simpson38/simpson38-sequence","js/Error","p__90461","map__90462","cljs.core/--destructure-map","cljs.core.get","f","a","b","sicmutils.numerical.quadrature.simpson38.simpson38_sequence","n","sicmutils.numerical.quadrature.trapezoid.trapezoid_sequence","sicmutils.util.stream.powers","sicmutils.polynomial.richardson.richardson_column","sicmutils.numerical.quadrature.simpson38/integral","sicmutils.numerical.quadrature.common/make-integrator-fn","cljs.core.comp","cljs.core/first"],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.numerical.quadrature.simpson38\n  (:require [sicmutils.numerical.quadrature.common :as qc :include-macros true]\n            [sicmutils.numerical.quadrature.trapezoid :as qt]\n            [sicmutils.polynomial.richardson :as pr]\n            [sicmutils.util.stream :as us]))\n\n;; ## Simpson's 3/8 Rule\n;;\n;; This numerical integration method is a [closed Newton-Cotes\n;; formula](https://en.wikipedia.org/wiki/Newton%E2%80%93Cotes_formulas#Closed_Newton%E2%80%93Cotes_formulas);\n;; for each integral slice, Simpson's 3/8 rule samples each endpoint and TWO\n;; interior, equally spaced points, and combines them into an area estimate for\n;; this slice using the following formula:\n;;\n;; $${{3h} \\over 8} (f_0 + 3f_1 + 3f_2 + f_3)$$\n;;\n;; Given a window of $[a, b]$ and a \"step size\" of $h = {{b - a} \\over 3}$. The\n;; point $f_i$ is the point $i$ steps into the window.\n;;\n;; There are a few simpler ways to understand this:\n;;\n;; - Simpson's 3/8 rule is simply the trapezoid method (see `trapezoid.cljc`),\n;;   subject to a single refinement of \"Richardson extrapolation\", with an\n;;   threefold-increase of integration slices at each step, from $n \\to 3n$.\n;;\n;; - The trapezoid method fits a line to each integration slice. Simpson's 3/8\n;;   rule fits a cubic to each slice.\n;;\n;; The test namespace contains a symbolic proof that the Richardson-extrapolated\n;; Trapezoid method is equivalent to using the formula above to calculate\n;; Simpson's 3/8 rule directly.\n\n(defn simpson38-sequence\n  \"Returns a (lazy) sequence of successively refined estimates of the integral of\n  `f` over the closed interval $[a, b]$ using Simpson's 3/8 rule.\n\n  Simpson's 3/8 rule is equivalent to the trapezoid method subject to:\n\n  - one refinement of Richardson extrapolation, and\n\n  - a geometric increase of integration slices by a factor of 3 for each\n  sequence element. (the Trapezoid method increases by a factor of 2 by\n  default.)\n\n  The trapezoid method fits a line to each integration slice. Simpson's 3/8 rule\n  fits a cubic to each slice.\n\n  Returns estimates with $n, 3n, 9n, ...n3^i$ slices, geometrically increasing by a\n  factor of 3 with each estimate.\n\n  ### Optional arguments:\n\n  If supplied, `:n` (default 1) specifies the initial number of slices to use.\n\n  NOTE: the Trapezoid method is able to reuse function evaluations as its\n  windows narrow /only/ when increasing the number of integration slices by 2.\n  Simpson's 3/8 rule increases the number of slices geometrically by a factor of\n  3 each time, so it will never hit the incremental path. You may want to\n  memoize your function before calling `simpson38-sequence`.\"\n  ([f a b] (simpson38-sequence f a b {:n 1}))\n  ([f a b {:keys [n] :or {n 1}}]\n   {:pre [(number? n)]}\n   (-> (qt/trapezoid-sequence f a b {:n (us/powers 3 n)})\n       (pr/richardson-column 1 3 2 2))))\n\n(qc/defintegrator integral\n  \"Returns an estimate of the integral of `f` over the closed interval $[a, b]$\n  using Simpson's 3/8 rule with $1, 3, 9 ... 3^n$ windows for each estimate.\n\n  Optionally accepts `opts`, a dict of optional arguments. All of these get\n  passed on to `us/seq-limit` to configure convergence checking.\n\n  See [[simpson38-sequence]] for more information about Simpson's 3/8 rule, caveats\n  that might apply when using this integration method and information on the\n  optional args in `opts` that customize this function's behavior.\"\n  :area-fn (comp first simpson38-sequence)\n  :seq-fn simpson38-sequence)\n"]}