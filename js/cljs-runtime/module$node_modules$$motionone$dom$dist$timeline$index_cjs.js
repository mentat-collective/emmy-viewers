shadow$provide.module$node_modules$$motionone$dom$dist$timeline$index_cjs=function(global,require,module,exports){function createAnimationsFromTimeline(definition,_a={}){var {defaultOptions={}}=_a,timelineOptions=tslib.__rest(_a,["defaultOptions"]);const animationDefinitions=[];_a=new Map;const elementCache={},timeLabels=new Map;var prevTime=0;let currentTime=0,totalDuration=0;for(let i=0;i<definition.length;i++){var segment=definition[i];if(utils.isString(segment)){timeLabels.set(segment,currentTime);
continue}else if(!Array.isArray(segment)){timeLabels.set(segment.name,calcTime.calcNextTime(currentTime,segment.at,prevTime,timeLabels));continue}const [elementDefinition,keyframes$1,options$1={}]=segment;void 0!==options$1.at&&(currentTime=calcTime.calcNextTime(currentTime,options$1.at,prevTime,timeLabels));segment=0;prevTime=resolveElements.resolveElements(elementDefinition,elementCache);const numElements=prevTime.length;for(let elementIndex=0;elementIndex<numElements;elementIndex++){const elementSequence=
getElementSequence(prevTime[elementIndex],_a);for(const key in keyframes$1){const valueSequence=getValueSequence(key,elementSequence);let valueKeyframes=keyframes$jscomp$0.keyframesList(keyframes$1[key]);var valueOptions=options$jscomp$0.getOptions(options$1,key);let {duration=defaultOptions.duration||utils.defaults.duration,easing=defaultOptions.easing||utils.defaults.easing}=valueOptions;if(utils.isEasingGenerator(easing)){var valueIsTransform=transforms.isTransform(key);heyListen.invariant(2===
valueKeyframes.length||!valueIsTransform,"spring must be provided 2 keyframes within timeline");valueIsTransform=easing.createAnimation(valueKeyframes,()=>"0",valueIsTransform);easing=valueIsTransform.easing;void 0!==valueIsTransform.keyframes&&(valueKeyframes=valueIsTransform.keyframes);void 0!==valueIsTransform.duration&&(duration=valueIsTransform.duration)}valueIsTransform=stagger.resolveOption(options$1.delay,elementIndex,numElements)||0;const startTime=currentTime+valueIsTransform,targetTime=
startTime+duration;({offset:valueOptions=utils.defaultOffset(valueKeyframes.length)}=valueOptions);1===valueOptions.length&&0===valueOptions[0]&&(valueOptions[1]=1);const remainder=length-valueKeyframes.length;0<remainder&&utils.fillOffset(valueOptions,remainder);1===valueKeyframes.length&&valueKeyframes.unshift(null);edit.addKeyframes(valueSequence,valueKeyframes,easing,valueOptions,startTime,targetTime);segment=Math.max(valueIsTransform+duration,segment);totalDuration=Math.max(targetTime,totalDuration)}}prevTime=
currentTime;currentTime+=segment}_a.forEach((valueSequences,element)=>{for(const key in valueSequences){const valueSequence=valueSequences[key];valueSequence.sort(sort.compareByTime);const keyframes=[],valueOffset=[],valueEasing=[];for(let i=0;i<valueSequence.length;i++){const {at,value,easing}=valueSequence[i];keyframes.push(value);valueOffset.push(utils.progress(0,totalDuration,at));valueEasing.push(easing||utils.defaults.easing)}0!==valueOffset[0]&&(valueOffset.unshift(0),keyframes.unshift(keyframes[0]),
valueEasing.unshift("linear"));1!==valueOffset[valueOffset.length-1]&&(valueOffset.push(1),keyframes.push(null));animationDefinitions.push([element,key,keyframes,Object.assign(Object.assign(Object.assign({},defaultOptions),{duration:totalDuration,easing:valueEasing,offset:valueOffset}),timelineOptions)])}});return animationDefinitions}function getElementSequence(element,sequences){!sequences.has(element)&&sequences.set(element,{});return sequences.get(element)}function getValueSequence(name,sequences){sequences[name]||
(sequences[name]=[]);return sequences[name]}Object.defineProperty(exports,"__esModule",{value:!0});var tslib=require("module$node_modules$tslib$tslib"),heyListen=require("module$node_modules$hey_listen$dist$index"),utils=require("module$node_modules$$motionone$utils$dist$index_cjs"),stagger=require("module$node_modules$$motionone$dom$dist$utils$stagger_cjs"),animateStyle=require("module$node_modules$$motionone$dom$dist$animate$animate_style_cjs"),controls=require("module$node_modules$$motionone$dom$dist$animate$utils$controls_cjs"),
keyframes$jscomp$0=require("module$node_modules$$motionone$dom$dist$animate$utils$keyframes_cjs"),options$jscomp$0=require("module$node_modules$$motionone$dom$dist$animate$utils$options_cjs"),resolveElements=require("module$node_modules$$motionone$dom$dist$utils$resolve_elements_cjs"),transforms=require("module$node_modules$$motionone$dom$dist$animate$utils$transforms_cjs"),calcTime=require("module$node_modules$$motionone$dom$dist$timeline$utils$calc_time_cjs"),edit=require("module$node_modules$$motionone$dom$dist$timeline$utils$edit_cjs"),
sort=require("module$node_modules$$motionone$dom$dist$timeline$utils$sort_cjs");exports.createAnimationsFromTimeline=createAnimationsFromTimeline;exports.timeline=function(definition$jscomp$0,options={}){var _a;definition$jscomp$0=createAnimationsFromTimeline(definition$jscomp$0,options);const animationFactories=definition$jscomp$0.map(definition=>animateStyle.animateStyle(...definition)).filter(Boolean);return controls.withControls(animationFactories,options,null===(_a=definition$jscomp$0[0])||void 0===
_a?void 0:_a[3].duration)}}
//# sourceMappingURL=module$node_modules$$motionone$dom$dist$timeline$index_cjs.js.map
