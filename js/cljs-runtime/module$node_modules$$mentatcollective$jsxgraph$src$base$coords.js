shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$base$coords=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg"));var _constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_event=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$event")),
_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type")),_math=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math"));global.default.Coords=function(method,coordinates,board,emitter){this.board=board;this.usrCoords=[];this.scrCoords=[];(this.emitter=!_type.default.exists(emitter)||emitter)&&_event.default.eventify(this);this.setCoordinates(method,coordinates,!1,!0)};global.default.extend(global.default.Coords.prototype,
{normalizeUsrCoords:function(){Math.abs(this.usrCoords[0])>_math.default.eps&&(this.usrCoords[1]/=this.usrCoords[0],this.usrCoords[2]/=this.usrCoords[0],this.usrCoords[0]=1)},usr2screen:function(doRound){var mround=Math.round,b=this.board,uc=this.usrCoords,oc=b.origin.scrCoords;!0===doRound?(this.scrCoords[0]=mround(uc[0]),this.scrCoords[1]=mround(uc[0]*oc[1]+uc[1]*b.unitX),this.scrCoords[2]=mround(uc[0]*oc[2]-uc[2]*b.unitY)):(this.scrCoords[0]=uc[0],this.scrCoords[1]=uc[0]*oc[1]+uc[1]*b.unitX,this.scrCoords[2]=
uc[0]*oc[2]-uc[2]*b.unitY)},screen2usr:function(){var o=this.board.origin.scrCoords,sc=this.scrCoords,b=this.board;this.usrCoords[0]=1;this.usrCoords[1]=(sc[1]-o[1])/b.unitX;this.usrCoords[2]=(o[2]-sc[2])/b.unitY},distance:function(coord_type,coordinates){var ucr=this.usrCoords,scr=this.scrCoords;if(coord_type===_constants.default.COORDS_BY_USER){coordinates=coordinates.usrCoords;var f=ucr[0]-coordinates[0];coord_type=f*f;if(coord_type>_math.default.eps*_math.default.eps)return Number.POSITIVE_INFINITY;
f=ucr[1]-coordinates[1];coord_type+=f*f;f=ucr[2]-coordinates[2]}else coordinates=coordinates.scrCoords,f=scr[1]-coordinates[1],coord_type=f*f,f=scr[2]-coordinates[2];return Math.sqrt(coord_type+f*f)},setCoordinates:function(coord_type,coordinates,doRound,noevent){var uc=this.usrCoords,sc=this.scrCoords,ou=[uc[0],uc[1],uc[2]],os=[sc[0],sc[1],sc[2]];coord_type===_constants.default.COORDS_BY_USER?(2===coordinates.length?(uc[0]=1,uc[1]=coordinates[0],uc[2]=coordinates[1]):(uc[0]=coordinates[0],uc[1]=
coordinates[1],uc[2]=coordinates[2],this.normalizeUsrCoords()),this.usr2screen(doRound)):(2===coordinates.length?(sc[1]=coordinates[0],sc[2]=coordinates[1]):(sc[1]=coordinates[1],sc[2]=coordinates[2]),this.screen2usr());!this.emitter||noevent||os[1]===sc[1]&&os[2]===sc[2]||this.triggerEventHandlers(["update"],[ou,os]);return this},copy:function(obj,offset){void 0===offset&&(offset=0);return this[obj].slice(offset)},isReal:function(){return!isNaN(this.usrCoords[1]+this.usrCoords[2])&&Math.abs(this.usrCoords[0])>
_math.default.eps},__evt__update:function(ou,os){},__evt:function(){}});exports.default=global.default.Coords}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$base$coords.js.map
