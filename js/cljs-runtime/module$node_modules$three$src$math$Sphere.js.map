{
"version":3,
"file":"module$node_modules$three$src$math$Sphere.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/math/Sphere.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$math$Sphere\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sphere = void 0;\n\nvar _Box = require(\"./Box3.js\");\n\nvar _Vector = require(\"./Vector3.js\");\n\nconst _box = /*@__PURE__*/new _Box.Box3();\n\nconst _v1 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _toFarthestPoint = /*@__PURE__*/new _Vector.Vector3();\n\nconst _toPoint = /*@__PURE__*/new _Vector.Vector3();\n\nclass Sphere {\n  constructor(center = new _Vector.Vector3(), radius = -1) {\n    this.center = center;\n    this.radius = radius;\n  }\n\n  set(center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  }\n\n  setFromPoints(points, optionalCenter) {\n    const center = this.center;\n\n    if (optionalCenter !== undefined) {\n      center.copy(optionalCenter);\n    } else {\n      _box.setFromPoints(points).getCenter(center);\n    }\n\n    let maxRadiusSq = 0;\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n    }\n\n    this.radius = Math.sqrt(maxRadiusSq);\n    return this;\n  }\n\n  copy(sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  }\n\n  isEmpty() {\n    return this.radius < 0;\n  }\n\n  makeEmpty() {\n    this.center.set(0, 0, 0);\n    this.radius = -1;\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  }\n\n  distanceToPoint(point) {\n    return point.distanceTo(this.center) - this.radius;\n  }\n\n  intersectsSphere(sphere) {\n    const radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  }\n\n  intersectsBox(box) {\n    return box.intersectsSphere(this);\n  }\n\n  intersectsPlane(plane) {\n    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n  }\n\n  clampPoint(point, target) {\n    const deltaLengthSq = this.center.distanceToSquared(point);\n    target.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      target.sub(this.center).normalize();\n      target.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return target;\n  }\n\n  getBoundingBox(target) {\n    if (this.isEmpty()) {\n      // Empty sphere produces empty bounding box\n      target.makeEmpty();\n      return target;\n    }\n\n    target.set(this.center, this.center);\n    target.expandByScalar(this.radius);\n    return target;\n  }\n\n  applyMatrix4(matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  }\n\n  translate(offset) {\n    this.center.add(offset);\n    return this;\n  }\n\n  expandByPoint(point) {\n    // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n    _toPoint.subVectors(point, this.center);\n\n    const lengthSq = _toPoint.lengthSq();\n\n    if (lengthSq > this.radius * this.radius) {\n      const length = Math.sqrt(lengthSq);\n      const missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n      // and the other half to position. This gives a tighter enclosure, instead of if\n      // the whole missing distance were just added to radius.\n\n      this.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n      this.radius += missingRadiusHalf;\n    }\n\n    return this;\n  }\n\n  union(sphere) {\n    // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n    // To enclose another sphere into this sphere, we only need to enclose two points:\n    // 1) Enclose the farthest point on the other sphere into this sphere.\n    // 2) Enclose the opposite point of the farthest point into this sphere.\n    if (this.center.equals(sphere.center) === true) {\n      _toFarthestPoint.set(0, 0, 1).multiplyScalar(sphere.radius);\n    } else {\n      _toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n    }\n\n    this.expandByPoint(_v1.copy(sphere.center).add(_toFarthestPoint));\n    this.expandByPoint(_v1.copy(sphere.center).sub(_toFarthestPoint));\n    return this;\n  }\n\n  equals(sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n}\n\nexports.Sphere = Sphere;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Sphere","_Box","_Vector","_box","Box3","_v1","Vector3","_toFarthestPoint","_toPoint","constructor","center","radius","set","copy","setFromPoints","points","optionalCenter","undefined","getCenter","maxRadiusSq","i","il","length","Math","max","distanceToSquared","sqrt","sphere","isEmpty","makeEmpty","containsPoint","point","distanceToPoint","distanceTo","intersectsSphere","radiusSum","intersectsBox","box","intersectsPlane","plane","abs","clampPoint","target","deltaLengthSq","sub","normalize","multiplyScalar","add","getBoundingBox","expandByScalar","applyMatrix4","matrix","getMaxScaleOnAxis","translate","offset","expandByPoint","subVectors","lengthSq","missingRadiusHalf","union","equals","clone"]
}
