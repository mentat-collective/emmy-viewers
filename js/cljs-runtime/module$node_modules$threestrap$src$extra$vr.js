shadow$provide.module$node_modules$threestrap$src$extra$vr=function(global,require,module,exports){global=require("module$node_modules$threestrap$src$bootstrap");var _VRRenderer=require("module$node_modules$threestrap$src$renderers$VRRenderer");global.Bootstrap.registerPlugin("vr",{defaults:{mode:"auto",device:null,fov:80},listen:["window.load","pre","render","resize","this.change"],install:function(three){three.VR=this.api({active:!1,devices:[],hmd:null,sensor:null,renderer:null,state:null},three)},
uninstall:function(three){delete three.VR},mocks:function(three,fov,def){return[{fake:!0,force:1,deviceId:"emu",deviceName:"Emulated",getEyeTranslation:function(key){return{left:{x:-.03,y:0,z:0},right:{x:.03,y:0,z:0}}[key]},getRecommendedEyeFieldOfView:function(key){var camera=three.camera;const fov2=(fov||camera&&camera.fov||def)/2;camera=180*Math.atan(Math.tan(fov2*Math.PI/180)*(camera&&camera.aspect||16/9)/2)/Math.PI;return{left:{rightDegrees:camera,leftDegrees:camera,downDegrees:fov2,upDegrees:fov2},
right:{rightDegrees:camera,leftDegrees:camera,downDegrees:fov2,upDegrees:fov2}}[key]}},{force:2,getState:function(){return{}}}]},load:function(event,three){event=function(devs){this.callback(devs,three)}.bind(this);navigator.getVRDevices?navigator.getVRDevices().then(event):navigator.mozGetVRDevices?navigator.mozGetVRDevices(event):(console.warn("No native VR support detected."),event(this.mocks(three,this.options.fov,this.defaults.fov),three))},callback:function(vrdevs,three){let hmd,sensor;var HMD=
window.HMDVRDevice||function(){};const SENSOR=window.PositionSensorVRDevice||function(){};vrdevs=three.VR.devices=vrdevs||three.VR.devices;var deviceId=this.options.device;let dev;for(let i=0;i<vrdevs.length;++i)if(dev=vrdevs[i],(1==dev.force||dev instanceof HMD)&&(!deviceId||deviceId==dev.deviceId)){hmd=dev;break}if(hmd){for(deviceId=0;deviceId<vrdevs.length;++deviceId)if(HMD=vrdevs[deviceId],2==HMD.force||HMD instanceof SENSOR&&HMD.hardwareUnitId==hmd.hardwareUnitId){sensor=HMD;break}this.hookup(hmd,
sensor,three)}},hookup:function(hmd,sensor,three){_VRRenderer.VRRenderer||console.log("VRRenderer not found");this.renderer=new (_VRRenderer.VRRenderer||function(){})(three.renderer,hmd);this.hmd=hmd;this.sensor=sensor;three.VR.renderer=this.renderer;three.VR.hmd=hmd;three.VR.sensor=sensor;console.log("VRRenderer",hmd.deviceName)},change:function(event,three){event.changes.device&&this.callback(null,three);this.pre(event,three)},pre:function(event,three){event=this.active;const active=this.active=
this.renderer&&"2d"!=this.options.mode;if((three.VR.active=active)&&this.sensor){const state=this.sensor.getState();three.VR.state=state}else three.VR.state=null;event!=this.active&&three.trigger({type:"vr",active,hmd:this.hmd,sensor:this.sensor})},resize:function(_event,_three){this.active&&this.renderer.initialize()},render:function(event,three){if(three.scene&&three.camera){event=this.active?this.renderer:three.renderer;if(this.last!=event&&event==three.renderer){var dpr=event.getPixelRatio();
const width=event.domElement.width/dpr;dpr=event.domElement.height/dpr;event.setScissorTest(!1);event.setViewport(0,0,width,dpr)}this.last=event;event.render(three.scene,three.camera)}}})}
//# sourceMappingURL=module$node_modules$threestrap$src$extra$vr.js.map
