shadow$provide.module$node_modules$shadergraph$src$index=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||
"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=
obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}Object.defineProperty(exports,"__esModule",{value:!0});exports.load=function(snippets,config={}){return new ShaderGraph(snippets,config)};exports.ShaderGraph=exports.inspect=exports.visualize=void 0;global=require("module$node_modules$shadergraph$src$block$index");var Factory=_interopRequireWildcard(require("module$node_modules$shadergraph$src$factory$index")),GLSL=_interopRequireWildcard(require("module$node_modules$shadergraph$src$glsl$index"));
module=_interopRequireWildcard(require("module$node_modules$shadergraph$src$graph$index"));var Linker=_interopRequireWildcard(require("module$node_modules$shadergraph$src$linker$index"));require=_interopRequireWildcard(require("module$node_modules$shadergraph$src$visualize$index"));const {library,cache}=Factory,{visualize,inspect}=require;exports.inspect=inspect;exports.visualize=visualize;const {Snippet}=Linker,merge=function(a,b={}){const out={};for(let key in a)out[key]=b[key]||a[key];return out};
class ShaderGraph{constructor(snippets,config){this.config=merge({globalUniforms:!1,globalVaryings:!0,globalAttributes:!0,globals:[],autoInspect:!1},config);this.fetch=cache(library(GLSL,snippets,Snippet.load))}shader(config){null==config&&(config={});config=merge(this.config,config);return new Factory.Factory(GLSL,this.fetch,config)}material(config){return new Factory.Material(this.shader(config),this.shader(config))}inspect(shader){return ShaderGraph.inspect(shader)}visualize(shader){return ShaderGraph.visualize(shader)}static inspect(shader){return inspect(shader)}static visualize(shader){return visualize(shader)}}
exports.ShaderGraph=ShaderGraph;ShaderGraph.Block=global.Block;ShaderGraph.Factory=Factory;ShaderGraph.GLSL=GLSL;ShaderGraph.Graph=module;ShaderGraph.Linker=Linker;ShaderGraph.Visualize=require}
//# sourceMappingURL=module$node_modules$shadergraph$src$index.js.map
