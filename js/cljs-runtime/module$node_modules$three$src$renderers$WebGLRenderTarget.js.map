{
"version":3,
"file":"module$node_modules$three$src$renderers$WebGLRenderTarget.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/renderers/WebGLRenderTarget.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$WebGLRenderTarget\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLRenderTarget = void 0;\n\nvar _EventDispatcher = require(\"../core/EventDispatcher.js\");\n\nvar _Texture = require(\"../textures/Texture.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _Vector = require(\"../math/Vector4.js\");\n\nvar _Source = require(\"../textures/Source.js\");\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends _EventDispatcher.EventDispatcher {\n  constructor(width = 1, height = 1, options = {}) {\n    super();\n    this.isWebGLRenderTarget = true;\n    this.width = width;\n    this.height = height;\n    this.depth = 1;\n    this.scissor = new _Vector.Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new _Vector.Vector4(0, 0, width, height);\n    const image = {\n      width: width,\n      height: height,\n      depth: 1\n    };\n    this.texture = new _Texture.Texture(image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.isRenderTargetTexture = true;\n    this.texture.flipY = false;\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : _constants.LinearFilter;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n    this.samples = options.samples !== undefined ? options.samples : 0;\n  }\n\n  setSize(width, height, depth = 1) {\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      this.texture.image.width = width;\n      this.texture.image.height = height;\n      this.texture.image.depth = depth;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.texture.isRenderTargetTexture = true; // ensure image object is not shared, see #20328\n\n    const image = Object.assign({}, source.texture.image);\n    this.texture.source = new _Source.Source(image);\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n    this.samples = source.samples;\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n}\n\nexports.WebGLRenderTarget = WebGLRenderTarget;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLRenderTarget","_EventDispatcher","_Texture","_constants","_Vector","_Source","EventDispatcher","constructor","width","height","options","isWebGLRenderTarget","depth","scissor","Vector4","scissorTest","viewport","texture","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","isRenderTargetTexture","flipY","generateMipmaps","undefined","internalFormat","LinearFilter","depthBuffer","stencilBuffer","depthTexture","samples","setSize","dispose","set","clone","copy","source","assign","Source","dispatchEvent"]
}
