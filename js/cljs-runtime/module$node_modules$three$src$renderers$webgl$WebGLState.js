shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLState=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLState=function(gl,extensions,capabilities){function createTexture(type,target,count){const data=new Uint8Array(4),texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(type,gl.TEXTURE_MAG_FILTER,gl.NEAREST);for(type=0;type<count;type++)gl.texImage2D(target+
type,0,gl.RGBA,1,1,0,gl.RGBA,gl.UNSIGNED_BYTE,data);return texture}function enable(id){!0!==enabledCapabilities[id]&&(gl.enable(id),enabledCapabilities[id]=!0)}function disable(id){!1!==enabledCapabilities[id]&&(gl.disable(id),enabledCapabilities[id]=!1)}function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===_constants.NoBlending)!0===currentBlendingEnabled&&(disable(gl.BLEND),currentBlendingEnabled=!1);else if(!1===
currentBlendingEnabled&&(enable(gl.BLEND),currentBlendingEnabled=!0),blending!==_constants.CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==_constants.AddEquation||currentBlendEquationAlpha!==_constants.AddEquation)gl.blendEquation(gl.FUNC_ADD),currentBlendEquationAlpha=currentBlendEquation=_constants.AddEquation;if(premultipliedAlpha)switch(blending){case _constants.NormalBlending:gl.blendFuncSeparate(gl.ONE,gl.ONE_MINUS_SRC_ALPHA,
gl.ONE,gl.ONE_MINUS_SRC_ALPHA);break;case _constants.AdditiveBlending:gl.blendFunc(gl.ONE,gl.ONE);break;case _constants.SubtractiveBlending:gl.blendFuncSeparate(gl.ZERO,gl.ONE_MINUS_SRC_COLOR,gl.ZERO,gl.ONE);break;case _constants.MultiplyBlending:gl.blendFuncSeparate(gl.ZERO,gl.SRC_COLOR,gl.ZERO,gl.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}else switch(blending){case _constants.NormalBlending:gl.blendFuncSeparate(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA,gl.ONE,
gl.ONE_MINUS_SRC_ALPHA);break;case _constants.AdditiveBlending:gl.blendFunc(gl.SRC_ALPHA,gl.ONE);break;case _constants.SubtractiveBlending:gl.blendFuncSeparate(gl.ZERO,gl.ONE_MINUS_SRC_COLOR,gl.ZERO,gl.ONE);break;case _constants.MultiplyBlending:gl.blendFunc(gl.ZERO,gl.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",blending)}currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendDst=currentBlendSrc=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha}}else{blendEquationAlpha=
blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha)gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]),currentBlendEquation=blendEquation,currentBlendEquationAlpha=blendEquationAlpha;if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha)gl.blendFuncSeparate(factorToGL[blendSrc],
factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]),currentBlendSrc=blendSrc,currentBlendDst=blendDst,currentBlendSrcAlpha=blendSrcAlpha,currentBlendDstAlpha=blendDstAlpha;currentBlending=blending;currentPremultipledAlpha=null}}function setFlipSided(flipSided){currentFlipSided!==flipSided&&(flipSided?gl.frontFace(gl.CW):gl.frontFace(gl.CCW),currentFlipSided=flipSided)}function setCullFace(cullFace){cullFace!==_constants.CullFaceNone?(enable(gl.CULL_FACE),cullFace!==currentCullFace&&
(cullFace===_constants.CullFaceBack?gl.cullFace(gl.BACK):cullFace===_constants.CullFaceFront?gl.cullFace(gl.FRONT):gl.cullFace(gl.FRONT_AND_BACK))):disable(gl.CULL_FACE);currentCullFace=cullFace}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){if(enable(gl.POLYGON_OFFSET_FILL),currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units)gl.polygonOffset(factor,units),currentPolygonOffsetFactor=factor,currentPolygonOffsetUnits=units}else disable(gl.POLYGON_OFFSET_FILL)}
function activeTexture(webglSlot){void 0===webglSlot&&(webglSlot=gl.TEXTURE0+maxTextures-1);currentTextureSlot!==webglSlot&&(gl.activeTexture(webglSlot),currentTextureSlot=webglSlot)}const isWebGL2=capabilities.isWebGL2,colorBuffer=new function(){let locked=!1;const color=new _Vector.Vector4;let currentColorMask=null;const currentColorClear=new _Vector.Vector4(0,0,0,0);return{setMask:function(colorMask){currentColorMask===colorMask||locked||(gl.colorMask(colorMask,colorMask,colorMask,colorMask),currentColorMask=
colorMask)},setLocked:function(lock){locked=lock},setClear:function(r,g,b,a,premultipliedAlpha){!0===premultipliedAlpha&&(r*=a,g*=a,b*=a);color.set(r,g,b,a);!1===currentColorClear.equals(color)&&(gl.clearColor(r,g,b,a),currentColorClear.copy(color))},reset:function(){locked=!1;currentColorMask=null;currentColorClear.set(-1,0,0,0)}}},depthBuffer=new function(){let locked=!1,currentDepthMask=null,currentDepthFunc=null,currentDepthClear=null;return{setTest:function(depthTest){depthTest?enable(gl.DEPTH_TEST):
disable(gl.DEPTH_TEST)},setMask:function(depthMask){currentDepthMask===depthMask||locked||(gl.depthMask(depthMask),currentDepthMask=depthMask)},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc)switch(depthFunc){case _constants.NeverDepth:gl.depthFunc(gl.NEVER);break;case _constants.AlwaysDepth:gl.depthFunc(gl.ALWAYS);break;case _constants.LessDepth:gl.depthFunc(gl.LESS);break;case _constants.LessEqualDepth:gl.depthFunc(gl.LEQUAL);break;case _constants.EqualDepth:gl.depthFunc(gl.EQUAL);
break;case _constants.GreaterEqualDepth:gl.depthFunc(gl.GEQUAL);break;case _constants.GreaterDepth:gl.depthFunc(gl.GREATER);break;case _constants.NotEqualDepth:gl.depthFunc(gl.NOTEQUAL);break;default:gl.depthFunc(gl.LEQUAL)}else gl.depthFunc(gl.LEQUAL);currentDepthFunc=depthFunc}},setLocked:function(lock){locked=lock},setClear:function(depth){currentDepthClear!==depth&&(gl.clearDepth(depth),currentDepthClear=depth)},reset:function(){locked=!1;currentDepthClear=currentDepthFunc=currentDepthMask=null}}},
stencilBuffer=new function(){let locked=!1,currentStencilMask=null,currentStencilFunc=null,currentStencilRef=null,currentStencilFuncMask=null,currentStencilFail=null,currentStencilZFail=null,currentStencilZPass=null,currentStencilClear=null;return{setTest:function(stencilTest){locked||(stencilTest?enable(gl.STENCIL_TEST):disable(gl.STENCIL_TEST))},setMask:function(stencilMask){currentStencilMask===stencilMask||locked||(gl.stencilMask(stencilMask),currentStencilMask=stencilMask)},setFunc:function(stencilFunc,
stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask)gl.stencilFunc(stencilFunc,stencilRef,stencilMask),currentStencilFunc=stencilFunc,currentStencilRef=stencilRef,currentStencilFuncMask=stencilMask},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass)gl.stencilOp(stencilFail,stencilZFail,stencilZPass),currentStencilFail=
stencilFail,currentStencilZFail=stencilZFail,currentStencilZPass=stencilZPass},setLocked:function(lock){locked=lock},setClear:function(stencil){currentStencilClear!==stencil&&(gl.clearStencil(stencil),currentStencilClear=stencil)},reset:function(){locked=!1;currentStencilClear=currentStencilZPass=currentStencilZFail=currentStencilFail=currentStencilFuncMask=currentStencilRef=currentStencilFunc=currentStencilMask=null}}};let enabledCapabilities={},currentBoundFramebuffers={},currentDrawbuffers=new WeakMap,
defaultDrawbuffers=[],currentProgram=null,currentBlendingEnabled=!1,currentBlending=null,currentBlendEquation=null,currentBlendSrc=null,currentBlendDst=null,currentBlendEquationAlpha=null,currentBlendSrcAlpha=null,currentBlendDstAlpha=null,currentPremultipledAlpha=!1,currentFlipSided=null,currentCullFace=null,currentLineWidth=null,currentPolygonOffsetFactor=null,currentPolygonOffsetUnits=null;const maxTextures=gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let lineWidthAvailable=!1;var version=
0;version=gl.getParameter(gl.VERSION);-1!==version.indexOf("WebGL")?(version=parseFloat(/^WebGL (\d)/.exec(version)[1]),lineWidthAvailable=1<=version):-1!==version.indexOf("OpenGL ES")&&(version=parseFloat(/^OpenGL ES (\d)/.exec(version)[1]),lineWidthAvailable=2<=version);let currentTextureSlot=null,currentBoundTextures={};version=gl.getParameter(gl.SCISSOR_BOX);const viewportParam=gl.getParameter(gl.VIEWPORT),currentScissor=(new _Vector.Vector4).fromArray(version),currentViewport=(new _Vector.Vector4).fromArray(viewportParam),
emptyTextures={};emptyTextures[gl.TEXTURE_2D]=createTexture(gl.TEXTURE_2D,gl.TEXTURE_2D,1);emptyTextures[gl.TEXTURE_CUBE_MAP]=createTexture(gl.TEXTURE_CUBE_MAP,gl.TEXTURE_CUBE_MAP_POSITIVE_X,6);colorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(gl.DEPTH_TEST);depthBuffer.setFunc(_constants.LessEqualDepth);setFlipSided(!1);setCullFace(_constants.CullFaceBack);enable(gl.CULL_FACE);setBlending(_constants.NoBlending);const equationToGL={[_constants.AddEquation]:gl.FUNC_ADD,
[_constants.SubtractEquation]:gl.FUNC_SUBTRACT,[_constants.ReverseSubtractEquation]:gl.FUNC_REVERSE_SUBTRACT};isWebGL2?(equationToGL[_constants.MinEquation]=gl.MIN,equationToGL[_constants.MaxEquation]=gl.MAX):(version=extensions.get("EXT_blend_minmax"),null!==version&&(equationToGL[_constants.MinEquation]=version.MIN_EXT,equationToGL[_constants.MaxEquation]=version.MAX_EXT));const factorToGL={[_constants.ZeroFactor]:gl.ZERO,[_constants.OneFactor]:gl.ONE,[_constants.SrcColorFactor]:gl.SRC_COLOR,[_constants.SrcAlphaFactor]:gl.SRC_ALPHA,
[_constants.SrcAlphaSaturateFactor]:gl.SRC_ALPHA_SATURATE,[_constants.DstColorFactor]:gl.DST_COLOR,[_constants.DstAlphaFactor]:gl.DST_ALPHA,[_constants.OneMinusSrcColorFactor]:gl.ONE_MINUS_SRC_COLOR,[_constants.OneMinusSrcAlphaFactor]:gl.ONE_MINUS_SRC_ALPHA,[_constants.OneMinusDstColorFactor]:gl.ONE_MINUS_DST_COLOR,[_constants.OneMinusDstAlphaFactor]:gl.ONE_MINUS_DST_ALPHA};return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable,disable,bindFramebuffer:function(target,framebuffer){return currentBoundFramebuffers[target]!==
framebuffer?(gl.bindFramebuffer(target,framebuffer),currentBoundFramebuffers[target]=framebuffer,isWebGL2&&(target===gl.DRAW_FRAMEBUFFER&&(currentBoundFramebuffers[gl.FRAMEBUFFER]=framebuffer),target===gl.FRAMEBUFFER&&(currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER]=framebuffer)),!0):!1},drawBuffers:function(renderTarget,framebuffer){let drawBuffers=defaultDrawbuffers,needsUpdate=!1;if(renderTarget)if(drawBuffers=currentDrawbuffers.get(framebuffer),void 0===drawBuffers&&(drawBuffers=[],currentDrawbuffers.set(framebuffer,
drawBuffers)),renderTarget.isWebGLMultipleRenderTargets){if(renderTarget=renderTarget.texture,drawBuffers.length!==renderTarget.length||drawBuffers[0]!==gl.COLOR_ATTACHMENT0){for(let i=0,il=renderTarget.length;i<il;i++)drawBuffers[i]=gl.COLOR_ATTACHMENT0+i;drawBuffers.length=renderTarget.length;needsUpdate=!0}}else drawBuffers[0]!==gl.COLOR_ATTACHMENT0&&(drawBuffers[0]=gl.COLOR_ATTACHMENT0,needsUpdate=!0);else drawBuffers[0]!==gl.BACK&&(drawBuffers[0]=gl.BACK,needsUpdate=!0);needsUpdate&&(capabilities.isWebGL2?
gl.drawBuffers(drawBuffers):extensions.get("WEBGL_draw_buffers").drawBuffersWEBGL(drawBuffers))},useProgram:function(program){return currentProgram!==program?(gl.useProgram(program),currentProgram=program,!0):!1},setBlending,setMaterial:function(material,frontFaceCW){material.side===_constants.DoubleSide?disable(gl.CULL_FACE):enable(gl.CULL_FACE);let flipSided=material.side===_constants.BackSide;frontFaceCW&&(flipSided=!flipSided);setFlipSided(flipSided);material.blending===_constants.NormalBlending&&
!1===material.transparent?setBlending(_constants.NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);frontFaceCW=material.stencilWrite;stencilBuffer.setTest(frontFaceCW);frontFaceCW&&(stencilBuffer.setMask(material.stencilWriteMask),
stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask),stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass));setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);!0===material.alphaToCoverage?enable(gl.SAMPLE_ALPHA_TO_COVERAGE):disable(gl.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided,setCullFace,setLineWidth:function(width){width!==currentLineWidth&&(lineWidthAvailable&&gl.lineWidth(width),currentLineWidth=
width)},setPolygonOffset,setScissorTest:function(scissorTest){scissorTest?enable(gl.SCISSOR_TEST):disable(gl.SCISSOR_TEST)},activeTexture,bindTexture:function(webglType,webglTexture){null===currentTextureSlot&&activeTexture();let boundTexture=currentBoundTextures[currentTextureSlot];void 0===boundTexture&&(boundTexture={type:void 0,texture:void 0},currentBoundTextures[currentTextureSlot]=boundTexture);if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture)gl.bindTexture(webglType,webglTexture||
emptyTextures[webglType]),boundTexture.type=webglType,boundTexture.texture=webglTexture},unbindTexture:function(){const boundTexture=currentBoundTextures[currentTextureSlot];void 0!==boundTexture&&void 0!==boundTexture.type&&(gl.bindTexture(boundTexture.type,null),boundTexture.type=void 0,boundTexture.texture=void 0)},compressedTexImage2D:function(){try{gl.compressedTexImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage2D:function(){try{gl.texImage2D.apply(gl,
arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texImage3D:function(){try{gl.texImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texStorage2D:function(){try{gl.texStorage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texStorage3D:function(){try{gl.texStorage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},texSubImage2D:function(){try{gl.texSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",
error)}},texSubImage3D:function(){try{gl.texSubImage3D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},compressedTexSubImage2D:function(){try{gl.compressedTexSubImage2D.apply(gl,arguments)}catch(error){console.error("THREE.WebGLState:",error)}},scissor:function(scissor){!1===currentScissor.equals(scissor)&&(gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w),currentScissor.copy(scissor))},viewport:function(viewport){!1===currentViewport.equals(viewport)&&(gl.viewport(viewport.x,
viewport.y,viewport.z,viewport.w),currentViewport.copy(viewport))},reset:function(){gl.disable(gl.BLEND);gl.disable(gl.CULL_FACE);gl.disable(gl.DEPTH_TEST);gl.disable(gl.POLYGON_OFFSET_FILL);gl.disable(gl.SCISSOR_TEST);gl.disable(gl.STENCIL_TEST);gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);gl.blendEquation(gl.FUNC_ADD);gl.blendFunc(gl.ONE,gl.ZERO);gl.blendFuncSeparate(gl.ONE,gl.ZERO,gl.ONE,gl.ZERO);gl.colorMask(!0,!0,!0,!0);gl.clearColor(0,0,0,0);gl.depthMask(!0);gl.depthFunc(gl.LESS);gl.clearDepth(1);
gl.stencilMask(4294967295);gl.stencilFunc(gl.ALWAYS,0,4294967295);gl.stencilOp(gl.KEEP,gl.KEEP,gl.KEEP);gl.clearStencil(0);gl.cullFace(gl.BACK);gl.frontFace(gl.CCW);gl.polygonOffset(0,0);gl.activeTexture(gl.TEXTURE0);gl.bindFramebuffer(gl.FRAMEBUFFER,null);!0===isWebGL2&&(gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER,null),gl.bindFramebuffer(gl.READ_FRAMEBUFFER,null));gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);enabledCapabilities=
{};currentTextureSlot=null;currentBoundTextures={};currentBoundFramebuffers={};currentDrawbuffers=new WeakMap;defaultDrawbuffers=[];currentProgram=null;currentBlendingEnabled=!1;currentBlendDstAlpha=currentBlendSrcAlpha=currentBlendEquationAlpha=currentBlendDst=currentBlendSrc=currentBlendEquation=currentBlending=null;currentPremultipledAlpha=!1;currentPolygonOffsetUnits=currentPolygonOffsetFactor=currentLineWidth=currentCullFace=currentFlipSided=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);
currentViewport.set(0,0,gl.canvas.width,gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset()}}};var _constants=require("module$node_modules$three$src$constants"),_Vector=require("module$node_modules$three$src$math$Vector4")}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLState.js.map
