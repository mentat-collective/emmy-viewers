{
"version":3,
"file":"module$node_modules$three$src$materials$MeshBasicMaterial.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGtHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,iBAAR,CAA4B,IAAK,EAE7BC,OAAAA,CAAYP,OAAA,CAAQ,kDAAR,CAEhB,KAAIQ,WAAaR,OAAA,CAAQ,yCAAR,CAAjB,CAEIS,OAAST,OAAA,CAAQ,0CAAR,CA8Bb,MAAMM,kBAAN,QAAgCC,OAAUG,CAAAA,QAA1C,CACEC,WAAW,CAACC,UAAD,CAAa,CACtB,KAAA,EACA,KAAKC,CAAAA,IAAL,CAAY,mBACZ;IAAKC,CAAAA,KAAL,CAAa,IAAIL,MAAOM,CAAAA,KAAX,CAAiB,QAAjB,CAGb,KAAKC,CAAAA,QAAL,CADA,IAAKC,CAAAA,GACL,CADW,IAEX,KAAKC,CAAAA,iBAAL,CAAyB,CACzB,KAAKC,CAAAA,KAAL,CAAa,IACb,KAAKC,CAAAA,cAAL,CAAsB,CAGtB,KAAKC,CAAAA,MAAL,CADA,IAAKC,CAAAA,QACL,CAFA,IAAKC,CAAAA,WAEL,CAFmB,IAGnB,KAAKC,CAAAA,OAAL,CAAehB,UAAWiB,CAAAA,iBAC1B,KAAKC,CAAAA,YAAL,CAAoB,CACpB,KAAKC,CAAAA,eAAL,CAAuB,GACvB,KAAKC,CAAAA,SAAL,CAAiB,CAAA,CACjB,KAAKC,CAAAA,kBAAL,CAA0B,CAE1B,KAAKC,CAAAA,iBAAL,CADA,IAAKC,CAAAA,gBACL,CADwB,OAExB,KAAKC,CAAAA,SAAL,CAAepB,UAAf,CApBsB,CAuBxBqB,IAAI,CAACC,MAAD,CAAS,CACX,KAAMD,CAAAA,IAAN,CAAWC,MAAX,CACA,KAAKpB,CAAAA,KAAMmB,CAAAA,IAAX,CAAgBC,MAAOpB,CAAAA,KAAvB,CACA,KAAKG,CAAAA,GAAL,CAAWiB,MAAOjB,CAAAA,GAClB,KAAKD,CAAAA,QAAL,CAAgBkB,MAAOlB,CAAAA,QACvB,KAAKE,CAAAA,iBAAL;AAAyBgB,MAAOhB,CAAAA,iBAChC,KAAKC,CAAAA,KAAL,CAAae,MAAOf,CAAAA,KACpB,KAAKC,CAAAA,cAAL,CAAsBc,MAAOd,CAAAA,cAC7B,KAAKG,CAAAA,WAAL,CAAmBW,MAAOX,CAAAA,WAC1B,KAAKD,CAAAA,QAAL,CAAgBY,MAAOZ,CAAAA,QACvB,KAAKD,CAAAA,MAAL,CAAca,MAAOb,CAAAA,MACrB,KAAKG,CAAAA,OAAL,CAAeU,MAAOV,CAAAA,OACtB,KAAKE,CAAAA,YAAL,CAAoBQ,MAAOR,CAAAA,YAC3B,KAAKC,CAAAA,eAAL,CAAuBO,MAAOP,CAAAA,eAC9B,KAAKC,CAAAA,SAAL,CAAiBM,MAAON,CAAAA,SACxB,KAAKC,CAAAA,kBAAL,CAA0BK,MAAOL,CAAAA,kBACjC,KAAKE,CAAAA,gBAAL,CAAwBG,MAAOH,CAAAA,gBAC/B,KAAKD,CAAAA,iBAAL,CAAyBI,MAAOJ,CAAAA,iBAChC,OAAO,KAlBI,CAxBf,CA+CA5B,OAAQI,CAAAA,iBAAR;AAA4BA,iBAC5BA,kBAAkB6B,CAAAA,SAAUC,CAAAA,mBAA5B,CAAkD,CAAA,CA1FoE;",
"sources":["node_modules/three/src/materials/MeshBasicMaterial.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$materials$MeshBasicMaterial\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MeshBasicMaterial = void 0;\n\nvar _Material = require(\"./Material.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _Color = require(\"../math/Color.js\");\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n * }\n */\nclass MeshBasicMaterial extends _Material.Material {\n  constructor(parameters) {\n    super();\n    this.type = 'MeshBasicMaterial';\n    this.color = new _Color.Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = _constants.MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    return this;\n  }\n\n}\n\nexports.MeshBasicMaterial = MeshBasicMaterial;\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MeshBasicMaterial","_Material","_constants","_Color","Material","constructor","parameters","type","color","Color","lightMap","map","lightMapIntensity","aoMap","aoMapIntensity","envMap","alphaMap","specularMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinejoin","wireframeLinecap","setValues","copy","source","prototype","isMeshBasicMaterial"]
}
