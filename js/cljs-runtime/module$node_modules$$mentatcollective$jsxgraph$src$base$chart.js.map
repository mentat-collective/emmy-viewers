{
"version":3,
"file":"module$node_modules$$mentatcollective$jsxgraph$src$base$chart.js",
"lineCount":41,
"mappings":"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",
"sources":["node_modules/@mentatcollective/jsxgraph/src/base/chart.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mentatcollective$jsxgraph$src$base$chart\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jxg = _interopRequireDefault(require(\"../jxg\"));\n\nvar _numerics = _interopRequireDefault(require(\"../math/numerics\"));\n\nvar _statistics = _interopRequireDefault(require(\"../math/statistics\"));\n\nvar _constants = _interopRequireDefault(require(\"./constants\"));\n\nvar _coords = _interopRequireDefault(require(\"./coords\"));\n\nvar _element = _interopRequireDefault(require(\"./element\"));\n\nvar _datasource = _interopRequireDefault(require(\"../parser/datasource\"));\n\nvar _color = _interopRequireDefault(require(\"../utils/color\"));\n\nvar _type = _interopRequireDefault(require(\"../utils/type\"));\n\nvar _env = _interopRequireDefault(require(\"../utils/env\"));\n\nvar _curve = _interopRequireDefault(require(\"./curve\"));\n\nvar _point = _interopRequireDefault(require(\"./point\"));\n\nvar _text = _interopRequireDefault(require(\"./text\"));\n\nvar _polygon = _interopRequireDefault(require(\"./polygon\"));\n\nvar _sector = _interopRequireDefault(require(\"../element/sector\"));\n\nvar _transformation = _interopRequireDefault(require(\"./transformation\"));\n\nvar _line = _interopRequireDefault(require(\"./line\"));\n\nvar _circle = _interopRequireDefault(require(\"./circle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n    Copyright 2008-2022\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <http://www.gnu.org/licenses/>\n    and <http://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true, document: true*/\n\n/*jslint nomen: true, plusplus: true*/\n\n/**\n *\n * The Chart class is a basic class for the chart object.\n * @class Creates a new basic chart object. Do not use this constructor to create a chart.\n * Use {@link JXG.Board#create} with type {@link Chart} instead.\n * @constructor\n * @augments JXG.GeometryElement\n * @param {String,JXG.Board} board The board the new chart is drawn on.\n * @param {Array} parent data arrays for the chart\n * @param {Object} attributes Javascript object containing attributes like name, id and colors.\n *\n */\n_jxg.default.Chart = function (board, parents, attributes) {\n  this.constructor(board, attributes);\n  var x, y, i, c, style, len;\n\n  if (!_type.default.isArray(parents) || parents.length === 0) {\n    throw new Error(\"JSXGraph: Can't create a chart without data\");\n  }\n  /**\n   * Contains pointers to the various subelements of the chart.\n   */\n\n\n  this.elements = [];\n\n  if (_type.default.isNumber(parents[0])) {\n    // parents looks like [a,b,c,..]\n    // x has to be filled\n    y = parents;\n    x = [];\n\n    for (i = 0; i < y.length; i++) {\n      x[i] = i + 1;\n    }\n  } else if (parents.length === 1 && _type.default.isArray(parents[0])) {\n    // parents looks like [[a,b,c,..]]\n    // x has to be filled\n    y = parents[0];\n    x = [];\n    len = _type.default.evaluate(y).length;\n\n    for (i = 0; i < len; i++) {\n      x[i] = i + 1;\n    }\n  } else if (parents.length === 2) {\n    // parents looks like [[x0,x1,x2,...],[y1,y2,y3,...]]\n    len = Math.min(parents[0].length, parents[1].length);\n    x = parents[0].slice(0, len);\n    y = parents[1].slice(0, len);\n  }\n\n  if (_type.default.isArray(y) && y.length === 0) {\n    throw new Error(\"JSXGraph: Can't create charts without data.\");\n  } // does this really need to be done here? this should be done in createChart and then\n  // there should be an extra chart for each chartstyle\n\n\n  style = attributes.chartstyle.replace(/ /g, \"\").split(\",\");\n\n  for (i = 0; i < style.length; i++) {\n    switch (style[i]) {\n      case \"bar\":\n        c = this.drawBar(board, x, y, attributes);\n        break;\n\n      case \"line\":\n        c = this.drawLine(board, x, y, attributes);\n        break;\n\n      case \"fit\":\n        c = this.drawFit(board, x, y, attributes);\n        break;\n\n      case \"spline\":\n        c = this.drawSpline(board, x, y, attributes);\n        break;\n\n      case \"pie\":\n        c = this.drawPie(board, y, attributes);\n        break;\n\n      case \"point\":\n        c = this.drawPoints(board, x, y, attributes);\n        break;\n\n      case \"radar\":\n        c = this.drawRadar(board, parents, attributes);\n        break;\n    }\n\n    this.elements.push(c);\n  }\n\n  this.id = this.board.setId(this, \"Chart\");\n  return this.elements;\n};\n\n_jxg.default.Chart.prototype = new _element.default();\n\n_jxg.default.extend(_jxg.default.Chart.prototype,\n/** @lends JXG.Chart.prototype */\n{\n  /**\n   * Create line chart defined by two data arrays.\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} x          Array of x-coordinates\n   * @param  {Array} y          Array of y-coordinates\n   * @param  {Object} attributes  Javascript object containing attributes like colors\n   * @returns {JXG.Curve}       JSXGraph curve\n   */\n  drawLine: function (board, x, y, attributes) {\n    // we don't want the line chart to be filled\n    attributes.fillcolor = \"none\";\n    attributes.highlightfillcolor = \"none\";\n    return board.create(\"curve\", [x, y], attributes);\n  },\n\n  /**\n   * Create line chart that consists of a natural spline curve\n   * defined by two data arrays.\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} x          Array of x-coordinates\n   * @param  {Array} y          Array of y-coordinates\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {JXG.Curve}       JSXGraph (natural) spline curve\n   */\n  drawSpline: function (board, x, y, attributes) {\n    // we don't want the spline chart to be filled\n    attributes.fillColor = \"none\";\n    attributes.highlightfillcolor = \"none\";\n    return board.create(\"spline\", [x, y], attributes);\n  },\n\n  /**\n   * Create line chart where the curve is given by a regression polynomial\n   * defined by two data arrays. The degree of the polynomial is supplied\n   * through the attribute \"degree\" in attributes.\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} x          Array of x-coordinates\n   * @param  {Array} y          Array of y-coordinates\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {JXG.Curve}    JSXGraph function graph object\n   */\n  drawFit: function (board, x, y, attributes) {\n    var deg = attributes.degree;\n    deg = Math.max(parseInt(deg, 10), 1) || 1; // never fill\n\n    attributes.fillcolor = \"none\";\n    attributes.highlightfillcolor = \"none\";\n    return board.create(\"functiongraph\", [_numerics.default.regressionPolynomial(deg, x, y)], attributes);\n  },\n\n  /**\n   * Create bar chart defined by two data arrays.\n   * Attributes to change the layout of the bar chart are:\n   * <ul>\n   * <li> width (optional)\n   * <li> dir: 'horizontal' or 'vertical'\n   * <li> colors: array of colors\n   * <li> labels: array of labels\n   * </ul>\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} x          Array of x-coordinates\n   * @param  {Array} y          Array of y-coordinates\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {Array}    Array of JXG polygons defining the bars\n   */\n  drawBar: function (board, x, y, attributes) {\n    var i,\n        strwidth,\n        text,\n        w,\n        xp0,\n        xp1,\n        xp2,\n        yp,\n        colors,\n        pols = [],\n        p = [],\n        attr,\n        attrSub,\n        makeXpFun = function (i, f) {\n      return function () {\n        return x[i]() - f * w;\n      };\n    },\n        hiddenPoint = {\n      fixed: true,\n      withLabel: false,\n      visible: false,\n      name: \"\"\n    };\n\n    attr = _type.default.copyAttributes(attributes, board.options, \"chart\"); // Determine the width of the bars\n\n    if (attr && attr.width) {\n      // width given\n      w = attr.width;\n    } else {\n      if (x.length <= 1) {\n        w = 1;\n      } else {\n        // Find minimum distance between to bars.\n        w = x[1] - x[0];\n\n        for (i = 1; i < x.length - 1; i++) {\n          w = x[i + 1] - x[i] < w ? x[i + 1] - x[i] : w;\n        }\n      }\n\n      w *= 0.8;\n    }\n\n    attrSub = _type.default.copyAttributes(attributes, board.options, \"chart\", \"label\");\n\n    for (i = 0; i < x.length; i++) {\n      if (_type.default.isFunction(x[i])) {\n        xp0 = makeXpFun(i, -0.5);\n        xp1 = makeXpFun(i, 0);\n        xp2 = makeXpFun(i, 0.5);\n      } else {\n        xp0 = x[i] - w * 0.5;\n        xp1 = x[i];\n        xp2 = x[i] + w * 0.5;\n      }\n\n      if (_type.default.isFunction(y[i])) {\n        yp = y[i]();\n      } else {\n        yp = y[i];\n      }\n\n      yp = y[i];\n\n      if (attr.dir === \"horizontal\") {\n        // horizontal bars\n        p[0] = board.create(\"point\", [0, xp0], hiddenPoint);\n        p[1] = board.create(\"point\", [yp, xp0], hiddenPoint);\n        p[2] = board.create(\"point\", [yp, xp2], hiddenPoint);\n        p[3] = board.create(\"point\", [0, xp2], hiddenPoint);\n\n        if (_type.default.exists(attr.labels) && _type.default.exists(attr.labels[i])) {\n          attrSub.anchorY = \"middle\";\n          text = board.create(\"text\", [yp, xp1, attr.labels[i]], attrSub);\n\n          text.visProp.anchorx = function (txt) {\n            return function () {\n              return txt.X() >= 0 ? \"left\" : \"right\";\n            };\n          }(text);\n        }\n      } else {\n        // vertical bars\n        p[0] = board.create(\"point\", [xp0, 0], hiddenPoint);\n        p[1] = board.create(\"point\", [xp0, yp], hiddenPoint);\n        p[2] = board.create(\"point\", [xp2, yp], hiddenPoint);\n        p[3] = board.create(\"point\", [xp2, 0], hiddenPoint);\n\n        if (_type.default.exists(attr.labels) && _type.default.exists(attr.labels[i])) {\n          attrSub.anchorX = \"middle\";\n          text = board.create(\"text\", [xp1, yp, attr.labels[i]], attrSub);\n\n          text.visProp.anchory = function (txt) {\n            return function () {\n              return txt.Y() >= 0 ? \"bottom\" : \"top\";\n            };\n          }(text);\n        }\n      }\n\n      if (_type.default.isArray(attr.colors)) {\n        colors = attr.colors;\n        attr.fillcolor = colors[i % colors.length];\n      }\n\n      pols[i] = board.create(\"polygon\", p, attr);\n\n      if (_type.default.exists(attr.labels) && _type.default.exists(attr.labels[i])) {\n        pols[i].text = text;\n      }\n    }\n\n    return pols;\n  },\n\n  /**\n   * Create chart consisting of JSXGraph points.\n   * Attributes to change the layout of the point chart are:\n   * <ul>\n   * <li> fixed (Boolean)\n   * <li> infoboxArray (Array): Texts for the infobox\n   * </ul>\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} x          Array of x-coordinates\n   * @param  {Array} y          Array of y-coordinates\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {Array} Array of JSXGraph points\n   */\n  drawPoints: function (board, x, y, attributes) {\n    var i,\n        points = [],\n        infoboxArray = attributes.infoboxarray;\n    attributes.fixed = true;\n    attributes.name = \"\";\n\n    for (i = 0; i < x.length; i++) {\n      attributes.infoboxtext = infoboxArray ? infoboxArray[i % infoboxArray.length] : false;\n      points[i] = board.create(\"point\", [x[i], y[i]], attributes);\n    }\n\n    return points;\n  },\n\n  /**\n   * Create pie chart.\n   * Attributes to change the layout of the pie chart are:\n   * <ul>\n   * <li> labels: array of labels\n   * <li> colors: (Array)\n   * <li> highlightColors (Array)\n   * <li> radius\n   * <li> center (coordinate array)\n   * <li> highlightOnSector (Boolean)\n   * </ul>\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} y          Array of x-coordinates\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {Object}  with keys: \"{sectors, points, midpoint}\"\n   */\n  drawPie: function (board, y, attributes) {\n    var i,\n        center,\n        p = [],\n        sector = [],\n        s = _statistics.default.sum(y),\n        colorArray = attributes.colors,\n        highlightColorArray = attributes.highlightcolors,\n        labelArray = attributes.labels,\n        r = attributes.radius || 4,\n        radius = r,\n        cent = attributes.center || [0, 0],\n        xc = cent[0],\n        yc = cent[1],\n        makeRadPointFun = function (j, fun, xc) {\n      return function () {\n        var s,\n            i,\n            rad,\n            t = 0;\n\n        for (i = 0; i <= j; i++) {\n          t += parseFloat(_type.default.evaluate(y[i]));\n        }\n\n        s = t;\n\n        for (i = j + 1; i < y.length; i++) {\n          s += parseFloat(_type.default.evaluate(y[i]));\n        }\n\n        rad = s !== 0 ? 2 * Math.PI * t / s : 0;\n        return radius() * Math[fun](rad) + xc;\n      };\n    },\n        highlightHandleLabel = function (f, s) {\n      var dx = -this.point1.coords.usrCoords[1] + this.point2.coords.usrCoords[1],\n          dy = -this.point1.coords.usrCoords[2] + this.point2.coords.usrCoords[2];\n\n      if (_type.default.exists(this.label)) {\n        this.label.rendNode.style.fontSize = s * _type.default.evaluate(this.label.visProp.fontsize) + \"px\";\n        this.label.fullUpdate();\n      }\n\n      this.point2.coords = new _coords.default(_constants.default.COORDS_BY_USER, [this.point1.coords.usrCoords[1] + dx * f, this.point1.coords.usrCoords[2] + dy * f], this.board);\n      this.fullUpdate();\n    },\n        highlightFun = function () {\n      if (!this.highlighted) {\n        this.highlighted = true;\n        this.board.highlightedObjects[this.id] = this;\n        this.board.renderer.highlight(this);\n        highlightHandleLabel.call(this, 1.1, 2);\n      }\n    },\n        noHighlightFun = function () {\n      if (this.highlighted) {\n        this.highlighted = false;\n        this.board.renderer.noHighlight(this);\n        highlightHandleLabel.call(this, 0.9090909, 1);\n      }\n    },\n        hiddenPoint = {\n      fixed: true,\n      withLabel: false,\n      visible: false,\n      name: \"\"\n    };\n\n    if (!_type.default.isArray(labelArray)) {\n      labelArray = [];\n\n      for (i = 0; i < y.length; i++) {\n        labelArray[i] = \"\";\n      }\n    }\n\n    if (!_type.default.isFunction(r)) {\n      radius = function () {\n        return r;\n      };\n    }\n\n    attributes.highlightonsector = attributes.highlightonsector || false;\n    attributes.straightfirst = false;\n    attributes.straightlast = false;\n    center = board.create(\"point\", [xc, yc], hiddenPoint);\n    p[0] = board.create(\"point\", [function () {\n      return radius() + xc;\n    }, function () {\n      return yc;\n    }], hiddenPoint);\n\n    for (i = 0; i < y.length; i++) {\n      p[i + 1] = board.create(\"point\", [makeRadPointFun(i, \"cos\", xc), makeRadPointFun(i, \"sin\", yc)], hiddenPoint);\n      attributes.name = labelArray[i];\n      attributes.withlabel = attributes.name !== \"\";\n      attributes.fillcolor = colorArray && colorArray[i % colorArray.length];\n      attributes.labelcolor = colorArray && colorArray[i % colorArray.length];\n      attributes.highlightfillcolor = highlightColorArray && highlightColorArray[i % highlightColorArray.length];\n      sector[i] = board.create(\"sector\", [center, p[i], p[i + 1]], attributes);\n\n      if (attributes.highlightonsector) {\n        // overwrite hasPoint so that the whole sector is used for highlighting\n        sector[i].hasPoint = sector[i].hasPointSector;\n      }\n\n      if (attributes.highlightbysize) {\n        sector[i].highlight = highlightFun;\n        sector[i].noHighlight = noHighlightFun;\n      }\n    } // Not enough! We need points, but this gives an error in setAttribute.\n\n\n    return {\n      sectors: sector,\n      points: p,\n      midpoint: center\n    };\n  },\n\n  /**\n   * Create radar chart.\n   * Attributes to change the layout of the pie chart are:\n   * <ul>\n   * <li> paramArray: labels for axes, [ paramx, paramy, paramz ]\n   * <li> startShiftRatio: 0 <= offset from chart center <=1\n   * <li> endShiftRatio:  0 <= offset from chart radius <=1\n   * <li> startShiftArray: Adjust offsets per each axis\n   * <li> endShiftArray: Adjust offsets per each axis\n   * <li> startArray: Values for inner circle. Default values: minimums\n   * <li> start: one value to overwrite all startArray values\n   * <li> endArray: Values for outer circle, maximums by default\n   * <li> end: one value to overwrite all endArray values\n   * <li> labelArray\n   * <li> polyStrokeWidth\n   * <li> colors\n   * <li> highlightcolors\n   * <li> labelArray: [ row1, row2, row3 ]\n   * <li> radius\n   * <li> legendPosition\n   * <li> showCircles\n   * <li> circleLabelArray\n   * <li> circleStrokeWidth\n   * </ul>\n   *\n   * @param  {String,JXG.Board} board      The board the chart is drawn on\n   * @param  {Array} parents    Array of coordinates, e.g. [[x1, y1, z1], [x2, y2, z2], [x3, y3, z3]]\n   * @param  {Object} attributes Javascript object containing attributes like colors\n   * @returns {Object} with keys \"{circles, lines, points, midpoint, polygons}\"\n   */\n  drawRadar: function (board, parents, attributes) {\n    var i,\n        j,\n        paramArray,\n        numofparams,\n        maxes,\n        mins,\n        la,\n        pdata,\n        ssa,\n        esa,\n        ssratio,\n        esratio,\n        sshifts,\n        eshifts,\n        starts,\n        ends,\n        labelArray,\n        colorArray,\n        highlightColorArray,\n        radius,\n        myAtts,\n        cent,\n        xc,\n        yc,\n        center,\n        start_angle,\n        rad,\n        p,\n        line,\n        t,\n        xcoord,\n        ycoord,\n        polygons,\n        legend_position,\n        circles,\n        lxoff,\n        lyoff,\n        cla,\n        clabelArray,\n        ncircles,\n        pcircles,\n        angle,\n        dr,\n        sw,\n        data,\n        len = parents.length,\n        get_anchor = function () {\n      var x1,\n          x2,\n          y1,\n          y2,\n          relCoords = _type.default.evaluate(this.visProp.label.offset).slice(0);\n\n      x1 = this.point1.X();\n      x2 = this.point2.X();\n      y1 = this.point1.Y();\n      y2 = this.point2.Y();\n\n      if (x2 < x1) {\n        relCoords[0] = -relCoords[0];\n      }\n\n      if (y2 < y1) {\n        relCoords[1] = -relCoords[1];\n      }\n\n      this.setLabelRelativeCoords(relCoords);\n      return new _coords.default(_constants.default.COORDS_BY_USER, [this.point2.X(), this.point2.Y()], this.board);\n    },\n        get_transform = function (angle, i) {\n      var t, tscale, trot;\n      t = board.create(\"transform\", [-(starts[i] - sshifts[i]), 0], {\n        type: \"translate\"\n      });\n      tscale = board.create(\"transform\", [radius / (ends[i] + eshifts[i] - (starts[i] - sshifts[i])), 1], {\n        type: \"scale\"\n      });\n      t.melt(tscale);\n      trot = board.create(\"transform\", [angle], {\n        type: \"rotate\"\n      });\n      t.melt(trot);\n      return t;\n    };\n\n    if (len <= 0) {\n      throw new Error(\"JSXGraph radar chart: no data\");\n    } // labels for axes\n\n\n    paramArray = attributes.paramarray;\n\n    if (!_type.default.exists(paramArray)) {\n      throw new Error(\"JSXGraph radar chart: need paramArray attribute\");\n    }\n\n    numofparams = paramArray.length;\n\n    if (numofparams <= 1) {\n      throw new Error(\"JSXGraph radar chart: need more than one param in paramArray\");\n    }\n\n    for (i = 0; i < len; i++) {\n      if (numofparams !== parents[i].length) {\n        throw new Error(\"JSXGraph radar chart: use data length equal to number of params (\" + parents[i].length + \" != \" + numofparams + \")\");\n      }\n    }\n\n    maxes = [];\n    mins = [];\n\n    for (j = 0; j < numofparams; j++) {\n      maxes[j] = parents[0][j];\n      mins[j] = maxes[j];\n    }\n\n    for (i = 1; i < len; i++) {\n      for (j = 0; j < numofparams; j++) {\n        if (parents[i][j] > maxes[j]) {\n          maxes[j] = parents[i][j];\n        }\n\n        if (parents[i][j] < mins[j]) {\n          mins[j] = parents[i][j];\n        }\n      }\n    }\n\n    la = [];\n    pdata = [];\n\n    for (i = 0; i < len; i++) {\n      la[i] = \"\";\n      pdata[i] = [];\n    }\n\n    ssa = [];\n    esa = []; // 0 <= Offset from chart center <=1\n\n    ssratio = attributes.startshiftratio || 0; // 0 <= Offset from chart radius <=1\n\n    esratio = attributes.endshiftratio || 0;\n\n    for (i = 0; i < numofparams; i++) {\n      ssa[i] = (maxes[i] - mins[i]) * ssratio;\n      esa[i] = (maxes[i] - mins[i]) * esratio;\n    } // Adjust offsets per each axis\n\n\n    sshifts = attributes.startshiftarray || ssa;\n    eshifts = attributes.endshiftarray || esa; // Values for inner circle, minimums by default\n\n    starts = attributes.startarray || mins;\n\n    if (_type.default.exists(attributes.start)) {\n      for (i = 0; i < numofparams; i++) {\n        starts[i] = attributes.start;\n      }\n    } // Values for outer circle, maximums by default\n\n\n    ends = attributes.endarray || maxes;\n\n    if (_type.default.exists(attributes.end)) {\n      for (i = 0; i < numofparams; i++) {\n        ends[i] = attributes.end;\n      }\n    }\n\n    if (sshifts.length !== numofparams) {\n      throw new Error(\"JSXGraph radar chart: start shifts length is not equal to number of parameters\");\n    }\n\n    if (eshifts.length !== numofparams) {\n      throw new Error(\"JSXGraph radar chart: end shifts length is not equal to number of parameters\");\n    }\n\n    if (starts.length !== numofparams) {\n      throw new Error(\"JSXGraph radar chart: starts length is not equal to number of parameters\");\n    }\n\n    if (ends.length !== numofparams) {\n      throw new Error(\"JSXGraph radar chart: snds length is not equal to number of parameters\");\n    } // labels for legend\n\n\n    labelArray = attributes.labelarray || la;\n    colorArray = attributes.colors;\n    highlightColorArray = attributes.highlightcolors;\n    radius = attributes.radius || 10;\n    sw = attributes.strokewidth || 1;\n\n    if (!_type.default.exists(attributes.highlightonsector)) {\n      attributes.highlightonsector = false;\n    }\n\n    myAtts = {\n      name: attributes.name,\n      id: attributes.id,\n      strokewidth: sw,\n      polystrokewidth: attributes.polystrokewidth || sw,\n      strokecolor: attributes.strokecolor || \"black\",\n      straightfirst: false,\n      straightlast: false,\n      fillcolor: attributes.fillColor || \"#FFFF88\",\n      fillopacity: attributes.fillOpacity || 0.4,\n      highlightfillcolor: attributes.highlightFillColor || \"#FF7400\",\n      highlightstrokecolor: attributes.highlightStrokeColor || \"black\",\n      gradient: attributes.gradient || \"none\"\n    };\n    cent = attributes.center || [0, 0];\n    xc = cent[0];\n    yc = cent[1];\n    center = board.create(\"point\", [xc, yc], {\n      name: \"\",\n      fixed: true,\n      withlabel: false,\n      visible: false\n    });\n    start_angle = Math.PI / 2 - Math.PI / numofparams;\n    start_angle = attributes.startangle || 0;\n    rad = start_angle;\n    p = [];\n    line = [];\n\n    for (i = 0; i < numofparams; i++) {\n      rad += 2 * Math.PI / numofparams;\n      xcoord = radius * Math.cos(rad) + xc;\n      ycoord = radius * Math.sin(rad) + yc;\n      p[i] = board.create(\"point\", [xcoord, ycoord], {\n        name: \"\",\n        fixed: true,\n        withlabel: false,\n        visible: false\n      });\n      line[i] = board.create(\"line\", [center, p[i]], {\n        name: paramArray[i],\n        strokeColor: myAtts.strokecolor,\n        strokeWidth: myAtts.strokewidth,\n        strokeOpacity: 1.0,\n        straightFirst: false,\n        straightLast: false,\n        withLabel: true,\n        highlightStrokeColor: myAtts.highlightstrokecolor\n      });\n      line[i].getLabelAnchor = get_anchor;\n      t = get_transform(rad, i);\n\n      for (j = 0; j < parents.length; j++) {\n        data = parents[j][i];\n        pdata[j][i] = board.create(\"point\", [data, 0], {\n          name: \"\",\n          fixed: true,\n          withlabel: false,\n          visible: false\n        });\n        pdata[j][i].addTransform(pdata[j][i], t);\n      }\n    }\n\n    polygons = [];\n\n    for (i = 0; i < len; i++) {\n      myAtts.labelcolor = colorArray && colorArray[i % colorArray.length];\n      myAtts.strokecolor = colorArray && colorArray[i % colorArray.length];\n      myAtts.fillcolor = colorArray && colorArray[i % colorArray.length];\n      polygons[i] = board.create(\"polygon\", pdata[i], {\n        withLines: true,\n        withLabel: false,\n        fillColor: myAtts.fillcolor,\n        fillOpacity: myAtts.fillopacity,\n        highlightFillColor: myAtts.highlightfillcolor\n      });\n\n      for (j = 0; j < numofparams; j++) {\n        polygons[i].borders[j].setAttribute(\"strokecolor:\" + colorArray[i % colorArray.length]);\n        polygons[i].borders[j].setAttribute(\"strokewidth:\" + myAtts.polystrokewidth);\n      }\n    }\n\n    legend_position = attributes.legendposition || \"none\";\n\n    switch (legend_position) {\n      case \"right\":\n        lxoff = attributes.legendleftoffset || 2;\n        lyoff = attributes.legendtopoffset || 1;\n        this.legend = board.create(\"legend\", [xc + radius + lxoff, yc + radius - lyoff], {\n          labels: labelArray,\n          colors: colorArray\n        });\n        break;\n\n      case \"none\":\n        break;\n\n      default:\n        _jxg.default.debug(\"Unknown legend position\");\n\n    }\n\n    circles = [];\n\n    if (attributes.showcircles) {\n      cla = [];\n\n      for (i = 0; i < 6; i++) {\n        cla[i] = 20 * i;\n      }\n\n      cla[0] = \"0\";\n      clabelArray = attributes.circlelabelarray || cla;\n      ncircles = clabelArray.length;\n\n      if (ncircles < 2) {\n        throw new Error(\"JSXGraph radar chart: too less circles in circleLabelArray\");\n      }\n\n      pcircles = [];\n      angle = start_angle + Math.PI / numofparams;\n      t = get_transform(angle, 0);\n      myAtts.fillcolor = \"none\";\n      myAtts.highlightfillcolor = \"none\";\n      myAtts.strokecolor = attributes.strokecolor || \"black\";\n      myAtts.strokewidth = attributes.circlestrokewidth || 0.5;\n      myAtts.layer = 0; // we have ncircles-1 intervals between ncircles circles\n\n      dr = (ends[0] - starts[0]) / (ncircles - 1);\n\n      for (i = 0; i < ncircles; i++) {\n        pcircles[i] = board.create(\"point\", [starts[0] + i * dr, 0], {\n          name: clabelArray[i],\n          size: 0,\n          fixed: true,\n          withLabel: true,\n          visible: true\n        });\n        pcircles[i].addTransform(pcircles[i], t);\n        circles[i] = board.create(\"circle\", [center, pcircles[i]], myAtts);\n      }\n    }\n\n    this.rendNode = polygons[0].rendNode;\n    return {\n      circles: circles,\n      lines: line,\n      points: pdata,\n      midpoint: center,\n      polygons: polygons\n    };\n  },\n\n  /**\n   * Uses the boards renderer to update the chart.\n   * @private\n   */\n  updateRenderer: function () {\n    return this;\n  },\n  // documented in base/element\n  update: function () {\n    if (this.needsUpdate) {\n      this.updateDataArray();\n    }\n\n    return this;\n  },\n\n  /**\n   * Template for dynamic charts update.\n   * This method is used to compute new entries\n   * for the arrays this.dataX and\n   * this.dataY. It is used in update.\n   * Default is an empty method, can be overwritten\n   * by the user.\n   *\n   * @returns {JXG.Chart} Reference to this chart object.\n   */\n  updateDataArray: function () {\n    return this;\n  }\n});\n/**\n * @class Constructor for a chart.\n * @pseudo\n * @description\n * @name Chart\n * @augments JXG.Chart\n * @constructor\n * @type JXG.Chart\n * @throws {Exception} If the element cannot be constructed with the given parent objects an exception is thrown.\n * @param {Array} x Array of x-coordinates (default case, see below for alternatives)\n * @param {Array} y Array of y-coordinates (default case, see below for alternatives)\n * <p>\n * The parent array may be of one of the following forms:\n * <ol>\n * <li> Parents array looks like [number, number, number, ...]. It is interpreted as array of y-coordinates.\n * The x coordinates are automatically set to [1, 2, ...]\n * <li> Parents array looks like [[number, number, number, ...]]. The content is interpreted as array of y-coordinates.\n * The x coordinates are automatically set to [1, 2, ...]x coordinates are automatically set to [1, 2, ...]\n * Default case: [[x0,x1,x2,...],[y1,y2,y3,...]]\n * </ol>\n *\n * The attribute value for the key 'chartStyle' determines the type(s) of the chart. 'chartStyle' is a comma\n * separated list of strings of the possible chart types\n * 'bar', 'fit', 'line',  'pie', 'point', 'radar', 'spline'.\n *\n * @see JXG.Chart#drawBar\n * @see JXG.Chart#drawFit\n * @see JXG.Chart#drawLine\n * @see JXG.Chart#drawPie\n * @see JXG.Chart#drawPoints\n * @see JXG.Chart#drawRadar\n * @see JXG.Chart#drawSpline\n *\n * @example\n *   board = JXG.JSXGraph.initBoard('jxgbox', {boundingbox:[-0.5,8,9,-2],axis:true});\n *\n *   var f = [4, 2, -1, 3, 6, 7, 2];\n *   var chart = board.create('chart', f,\n *                 {chartStyle:'bar',\n *                  width:0.8,\n *                  labels:f,\n *                  colorArray:['#8E1B77','#BE1679','#DC1765','#DA2130','#DB311B','#DF4917','#E36317','#E87F1A',\n *                              '#F1B112','#FCF302','#C1E212'],\n *                  label: {fontSize:30, display:'internal', anchorX:'left', rotate:90}\n *             });\n *\n * </pre><div id=\"JXG1528c395-9fa4-4210-ada6-7fc5652ed920\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG1528c395-9fa4-4210-ada6-7fc5652ed920',\n *             {boundingbox: [-0.5,8,9,-2], axis: true, showcopyright: false, shownavigation: false});\n *                 var f = [4,2,-1,3,6,7,2];\n *                 var chart = board.create('chart', f,\n *                     {chartStyle:'bar',\n *                      width:0.8,\n *                      labels:f,\n *                      colorArray:['#8E1B77','#BE1679','#DC1765','#DA2130','#DB311B','#DF4917','#E36317','#E87F1A',\n *                                  '#F1B112','#FCF302','#C1E212'],\n *                      label: {fontSize:30, display:'internal', anchorX:'left', rotate:90}\n *                 });\n *\n *     })();\n *\n * \u003c/script><pre>\n *\n * @example\n *   board = JXG.JSXGraph.initBoard('jxgbox', {boundingbox: [-1, 9, 13, -3], axis:true});\n *\n *   var s = board.create('slider', [[4,7],[8,7],[1,1,1.5]], {name:'S', strokeColor:'black', fillColor:'white'});\n *   var f = [function(){return (s.Value()*4.5).toFixed(2);},\n *                      function(){return (s.Value()*(-1)).toFixed(2);},\n *                      function(){return (s.Value()*3).toFixed(2);},\n *                      function(){return (s.Value()*2).toFixed(2);},\n *                      function(){return (s.Value()*(-0.5)).toFixed(2);},\n *                      function(){return (s.Value()*5.5).toFixed(2);},\n *                      function(){return (s.Value()*2.5).toFixed(2);},\n *                      function(){return (s.Value()*(-0.75)).toFixed(2);},\n *                      function(){return (s.Value()*3.5).toFixed(2);},\n *                      function(){return (s.Value()*2).toFixed(2);},\n *                      function(){return (s.Value()*(-1.25)).toFixed(2);}\n *                      ];\n *   var chart = board.create('chart', [f],\n *                                             {chartStyle:'bar',width:0.8,labels:f,\n *                                              colorArray:['#8E1B77','#BE1679','#DC1765','#DA2130','#DB311B','#DF4917','#E36317','#E87F1A',\n *                                                          '#F1B112','#FCF302','#C1E212']});\n *\n *   var dataArr = [4,1,3,2,5,6.5,1.5,2,0.5,1.5,-1];\n *   var chart2 = board.create('chart', dataArr, {chartStyle:'line,point'});\n *   chart2[0].setAttribute('strokeColor:black','strokeWidth:2pt');\n *   for(var i=0; i<11;i++) {\n *            chart2[1][i].setAttribute({strokeColor:'black',fillColor:'white',face:'[]', size:4, strokeWidth:'2pt'});\n *   }\n *   board.unsuspendUpdate();\n *\n * </pre><div id=\"JXG22deb158-48c6-41c3-8157-b88b4b968a55\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG22deb158-48c6-41c3-8157-b88b4b968a55',\n *             {boundingbox: [-1, 9, 13, -3], axis: true, showcopyright: false, shownavigation: false});\n *                 var s = board.create('slider', [[4,7],[8,7],[1,1,1.5]], {name:'S', strokeColor:'black', fillColor:'white'});\n *                 var f = [function(){return (s.Value()*4.5).toFixed(2);},\n *                          function(){return (s.Value()*(-1)).toFixed(2);},\n *                          function(){return (s.Value()*3).toFixed(2);},\n *                          function(){return (s.Value()*2).toFixed(2);},\n *                          function(){return (s.Value()*(-0.5)).toFixed(2);},\n *                          function(){return (s.Value()*5.5).toFixed(2);},\n *                          function(){return (s.Value()*2.5).toFixed(2);},\n *                          function(){return (s.Value()*(-0.75)).toFixed(2);},\n *                          function(){return (s.Value()*3.5).toFixed(2);},\n *                          function(){return (s.Value()*2).toFixed(2);},\n *                          function(){return (s.Value()*(-1.25)).toFixed(2);}\n *                          ];\n *                 var chart = board.create('chart', [f],\n *                                                 {chartStyle:'bar',width:0.8,labels:f,\n *                                                  colorArray:['#8E1B77','#BE1679','#DC1765','#DA2130','#DB311B','#DF4917','#E36317','#E87F1A',\n *                                                              '#F1B112','#FCF302','#C1E212']});\n *\n *                 var dataArr = [4,1,3,2,5,6.5,1.5,2,0.5,1.5,-1];\n *                 var chart2 = board.create('chart', dataArr, {chartStyle:'line,point'});\n *                 chart2[0].setAttribute('strokeColor:black','strokeWidth:2pt');\n *                 for(var i=0; i<11;i++) {\n *                     chart2[1][i].setAttribute({strokeColor:'black',fillColor:'white',face:'[]', size:4, strokeWidth:'2pt'});\n *                 }\n *                 board.unsuspendUpdate();\n *\n *     })();\n *\n * \u003c/script><pre>\n *\n * @example\n *         var dataArr = [4, 1.2, 3, 7, 5, 4, 1.54, function () { return 2; }];\n *         var a = board.create('chart', dataArr, {\n *                 chartStyle:'pie', colors:['#B02B2C','#3F4C6B','#C79810','#D15600'],\n *                 fillOpacity:0.9,\n *                 center:[5,2],\n *                 strokeColor:'#ffffff',\n *                 strokeWidth:6,\n *                 highlightBySize:true,\n *                 highlightOnSector:true\n *             });\n *\n * </pre><div id=\"JXG1180b7dd-b048-436a-a5ad-87ffa82d5aff\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG1180b7dd-b048-436a-a5ad-87ffa82d5aff',\n *             {boundingbox: [0, 8, 12, -4], axis: true, showcopyright: false, shownavigation: false});\n *             var dataArr = [4, 1.2, 3, 7, 5, 4, 1.54, function () { return 2; }];\n *             var a = board.create('chart', dataArr, {\n *                     chartStyle:'pie', colors:['#B02B2C','#3F4C6B','#C79810','#D15600'],\n *                     fillOpacity:0.9,\n *                     center:[5,2],\n *                     strokeColor:'#ffffff',\n *                     strokeWidth:6,\n *                     highlightBySize:true,\n *                     highlightOnSector:true\n *                 });\n *\n *     })();\n *\n * \u003c/script><pre>\n *\n * @example\n *             board = JXG.JSXGraph.initBoard('jxgbox', {boundingbox: [-12, 12, 20, -12], axis: false});\n *             board.suspendUpdate();\n *             // See labelArray and paramArray\n *             var dataArr = [[23, 14, 15.0], [60, 8, 25.0], [0, 11.0, 25.0], [10, 15, 20.0]];\n *\n *             var a = board.create('chart', dataArr, {\n *                 chartStyle:'radar',\n *                 colorArray:['#0F408D','#6F1B75','#CA147A','#DA2228','#E8801B','#FCF302','#8DC922','#15993C','#87CCEE','#0092CE'],\n *                 //fillOpacity:0.5,\n *                 //strokeColor:'black',\n *                 //strokeWidth:1,\n *                 //polyStrokeWidth:1,\n *                 paramArray:['Speed','Flexibility', 'Costs'],\n *                 labelArray:['Ruby','JavaScript', 'PHP', 'Python'],\n *                 //startAngle:Math.PI/4,\n *                 legendPosition:'right',\n *                 //\"startShiftRatio\": 0.1,\n *                 //endShiftRatio:0.1,\n *                 //startShiftArray:[0,0,0],\n *                 //endShiftArray:[0.5,0.5,0.5],\n *                 start:0\n *                 //end:70,\n *                 //startArray:[0,0,0],\n *                 //endArray:[7,7,7],\n *                 //radius:3,\n *                 //showCircles:true,\n *                 //circleLabelArray:[1,2,3,4,5],\n *                 //highlightColorArray:['#E46F6A','#F9DF82','#F7FA7B','#B0D990','#69BF8E','#BDDDE4','#92C2DF','#637CB0','#AB91BC','#EB8EBF'],\n *             });\n *             board.unsuspendUpdate();\n *\n * </pre><div id=\"JXG985fbbe6-0488-4073-b73b-cb3ebaea488a\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXG985fbbe6-0488-4073-b73b-cb3ebaea488a',\n *             {boundingbox: [-12, 12, 20, -12], axis: false, showcopyright: false, shownavigation: false});\n *                 board.suspendUpdate();\n *                 // See labelArray and paramArray\n *                 var dataArr = [[23, 14, 15.0], [60, 8, 25.0], [0, 11.0, 25.0], [10, 15, 20.0]];\n *\n *                 var a = board.create('chart', dataArr, {\n *                     chartStyle:'radar',\n *                     colorArray:['#0F408D','#6F1B75','#CA147A','#DA2228','#E8801B','#FCF302','#8DC922','#15993C','#87CCEE','#0092CE'],\n *                     //fillOpacity:0.5,\n *                     //strokeColor:'black',\n *                     //strokeWidth:1,\n *                     //polyStrokeWidth:1,\n *                     paramArray:['Speed','Flexibility', 'Costs'],\n *                     labelArray:['Ruby','JavaScript', 'PHP', 'Python'],\n *                     //startAngle:Math.PI/4,\n *                     legendPosition:'right',\n *                     //\"startShiftRatio\": 0.1,\n *                     //endShiftRatio:0.1,\n *                     //startShiftArray:[0,0,0],\n *                     //endShiftArray:[0.5,0.5,0.5],\n *                     start:0\n *                     //end:70,\n *                     //startArray:[0,0,0],\n *                     //endArray:[7,7,7],\n *                     //radius:3,\n *                     //showCircles:true,\n *                     //circleLabelArray:[1,2,3,4,5],\n *                     //highlightColorArray:['#E46F6A','#F9DF82','#F7FA7B','#B0D990','#69BF8E','#BDDDE4','#92C2DF','#637CB0','#AB91BC','#EB8EBF'],\n *                 });\n *                 board.unsuspendUpdate();\n *\n *     })();\n *\n * \u003c/script><pre>\n *\n * For more examples see\n * <ul>\n * <li><a href=\"https://jsxgraph.org/wiki/index.php/Charts_from_HTML_tables_-_tutorial\">JSXgraph wiki: Charts from HTML tables - tutorial</a>\n * <li><a href=\"https://jsxgraph.org/wiki/index.php/Pie_chart\">JSXgraph wiki: Pie chart</a>\n * <li><a href=\"https://jsxgraph.org/wiki/index.php/Different_chart_styles\">JSXgraph wiki: Various chart styles</a>\n * <li><a href=\"https://jsxgraph.org/wiki/index.php/Dynamic_bar_chart\">JSXgraph wiki: Dynamic bar chart</a>\n * </ul>\n */\n\n\n_jxg.default.createChart = function (board, parents, attributes) {\n  var data,\n      row,\n      i,\n      j,\n      col,\n      charts = [],\n      w,\n      x,\n      showRows,\n      attr,\n      originalWidth,\n      name,\n      strokeColor,\n      fillColor,\n      hStrokeColor,\n      hFillColor,\n      len,\n      table = _env.default.isBrowser ? board.document.getElementById(parents[0]) : null;\n\n  if (parents.length === 1 && _type.default.isString(parents[0])) {\n    if (_type.default.exists(table)) {\n      // extract the data\n      attr = _type.default.copyAttributes(attributes, board.options, \"chart\");\n      table = new _datasource.default().loadFromTable(parents[0], attr.withheaders, attr.withheaders);\n      data = table.data;\n      col = table.columnHeaders;\n      row = table.rowHeaders;\n      originalWidth = attr.width;\n      name = attr.name;\n      strokeColor = attr.strokecolor;\n      fillColor = attr.fillcolor;\n      hStrokeColor = attr.highlightstrokecolor;\n      hFillColor = attr.highlightfillcolor;\n      board.suspendUpdate();\n      len = data.length;\n      showRows = [];\n\n      if (attr.rows && _type.default.isArray(attr.rows)) {\n        for (i = 0; i < len; i++) {\n          for (j = 0; j < attr.rows.length; j++) {\n            if (attr.rows[j] === i || attr.withheaders && attr.rows[j] === row[i]) {\n              showRows.push(data[i]);\n              break;\n            }\n          }\n        }\n      } else {\n        showRows = data;\n      }\n\n      len = showRows.length;\n\n      for (i = 0; i < len; i++) {\n        x = [];\n\n        if (attr.chartstyle && attr.chartstyle.indexOf(\"bar\") !== -1) {\n          if (originalWidth) {\n            w = originalWidth;\n          } else {\n            w = 0.8;\n          }\n\n          x.push(1 - w / 2 + (i + 0.5) * w / len);\n\n          for (j = 1; j < showRows[i].length; j++) {\n            x.push(x[j - 1] + 1);\n          }\n\n          attr.width = w / len;\n        }\n\n        if (name && name.length === len) {\n          attr.name = name[i];\n        } else if (attr.withheaders) {\n          attr.name = col[i];\n        }\n\n        if (strokeColor && strokeColor.length === len) {\n          attr.strokecolor = strokeColor[i];\n        } else {\n          attr.strokecolor = _color.default.hsv2rgb((i + 1) / len * 360, 0.9, 0.6);\n        }\n\n        if (fillColor && fillColor.length === len) {\n          attr.fillcolor = fillColor[i];\n        } else {\n          attr.fillcolor = _color.default.hsv2rgb((i + 1) / len * 360, 0.9, 1.0);\n        }\n\n        if (hStrokeColor && hStrokeColor.length === len) {\n          attr.highlightstrokecolor = hStrokeColor[i];\n        } else {\n          attr.highlightstrokecolor = _color.default.hsv2rgb((i + 1) / len * 360, 0.9, 1.0);\n        }\n\n        if (hFillColor && hFillColor.length === len) {\n          attr.highlightfillcolor = hFillColor[i];\n        } else {\n          attr.highlightfillcolor = _color.default.hsv2rgb((i + 1) / len * 360, 0.9, 0.6);\n        }\n\n        if (attr.chartstyle && attr.chartstyle.indexOf(\"bar\") !== -1) {\n          charts.push(new _jxg.default.Chart(board, [x, showRows[i]], attr));\n        } else {\n          charts.push(new _jxg.default.Chart(board, [showRows[i]], attr));\n        }\n      }\n\n      board.unsuspendUpdate();\n    }\n\n    return charts;\n  }\n\n  attr = _type.default.copyAttributes(attributes, board.options, \"chart\");\n  return new _jxg.default.Chart(board, parents, attr);\n};\n\n_jxg.default.registerElement(\"chart\", _jxg.default.createChart);\n/**\n * Legend for chart\n * TODO\n *\n * The Legend class is a basic class for legends.\n * @class Creates a new Lgend object. Do not use this constructor to create a legend.\n * Use {@link JXG.Board#create} with type {@link Legend} instead.\n * <p>\n * The legend object consists of segements with labels. These lines can be\n * access with the property \"lines\" of the element.\n * @constructor\n * @augments JXG.GeometryElement\n * @param {String,JXG.Board} board The board the new legend is drawn on.\n * @param {Array} coords Coordinates of the left top point of the legend.\n * @param  {Object} attributes Attributes of the legend\n */\n\n\n_jxg.default.Legend = function (board, coords, attributes) {\n  var attr;\n  /* Call the constructor of GeometryElement */\n\n  this.constructor();\n  attr = _type.default.copyAttributes(attributes, board.options, \"legend\");\n  this.board = board;\n  this.coords = new _coords.default(_constants.default.COORDS_BY_USER, coords, this.board);\n  this.myAtts = {};\n  this.label_array = attr.labelarray || attr.labels;\n  this.color_array = attr.colorarray || attr.colors;\n  this.lines = [];\n  this.myAtts.strokewidth = attr.strokewidth || 5;\n  this.myAtts.straightfirst = false;\n  this.myAtts.straightlast = false;\n  this.myAtts.withlabel = true;\n  this.myAtts.fixed = true;\n  this.style = attr.legendstyle || attr.style;\n\n  if (this.style === \"vertical\") {\n    this.drawVerticalLegend(board, attr);\n  } else {\n    throw new Error(\"JSXGraph: Unknown legend style: \" + this.style);\n  }\n};\n\n_jxg.default.Legend.prototype = new _element.default();\n/**\n * Draw a vertical legend.\n *\n * @private\n * @param  {String,JXG.Board} board      The board the legend is drawn on\n * @param  {Object} attributes Attributes of the legend\n */\n\n_jxg.default.Legend.prototype.drawVerticalLegend = function (board, attributes) {\n  var i,\n      line_length = attributes.linelength || 1,\n      offy = (attributes.rowheight || 20) / this.board.unitY,\n      getLabelAnchor = function () {\n    this.setLabelRelativeCoords(this.visProp.label.offset);\n    return new _coords.default(_constants.default.COORDS_BY_USER, [this.point2.X(), this.point2.Y()], this.board);\n  };\n\n  for (i = 0; i < this.label_array.length; i++) {\n    this.myAtts.name = this.label_array[i];\n    this.myAtts.strokecolor = this.color_array[i % this.color_array.length];\n    this.myAtts.highlightstrokecolor = this.color_array[i % this.color_array.length];\n    this.myAtts.label = {\n      offset: [10, 0],\n      strokeColor: this.color_array[i % this.color_array.length],\n      strokeWidth: this.myAtts.strokewidth\n    };\n    this.lines[i] = board.create(\"line\", [[this.coords.usrCoords[1], this.coords.usrCoords[2] - i * offy], [this.coords.usrCoords[1] + line_length, this.coords.usrCoords[2] - i * offy]], this.myAtts);\n    this.lines[i].getLabelAnchor = getLabelAnchor;\n    this.lines[i].prepareUpdate().update().updateVisibility(_type.default.evaluate(this.lines[i].visProp.visible)).updateRenderer();\n  }\n};\n/**\n * @class This element is used to provide a constructor for a chart legend.\n * Parameter is a pair of coordinates. The label names and  the label colors are\n * supplied in the attributes:\n * <ul>\n * <li> labels (Array): array of strings containing label names\n * <li> labelArray (Array): alternative array for label names (has precedence over 'labels')\n * <li> colors (Array): array of color values\n * <li> colorArray (Array): alternative array for color values (has precedence over 'colors')\n * <li> legendStyle or style: at the time being only 'vertical' is supported.\n * <li> rowHeight.\n * </ul>\n *\n * @pseudo\n * @description\n * @name Legend\n * @augments JXG.Legend\n * @constructor\n * @type JXG.Legend\n * @throws {Exception} If the element cannot be constructed with the given parent objects an exception is thrown.\n * @param {Number} x Horizontal coordinate of the left top point of the legend\n * @param {Number} y Vertical coordinate of the left top point of the legend\n *\n * @example\n * var board = JXG.JSXGraph.initBoard('jxgbox', {axis:true,boundingbox:[-4,48.3,12.0,-2.3]});\n * var x       = [-3,-2,-1,0,1,2,3,4,5,6,7,8];\n * var dataArr = [4,7,7,27,33,37,46,22,11,4,1,0];\n *\n * colors = ['green', 'yellow', 'red', 'blue'];\n * board.create('chart', [x,dataArr], {chartStyle:'bar', width:1.0, labels:dataArr, colors: colors} );\n * board.create('legend', [8, 45], {labels:dataArr, colors: colors, strokeWidth:5} );\n *\n * </pre><div id=\"JXGeeb588d9-a4fd-41bf-93f4-cd6f7a016682\" class=\"jxgbox\" style=\"width: 300px; height: 300px;\"></div>\n * <script type=\"text/javascript\">\n *     (function() {\n *         var board = JXG.JSXGraph.initBoard('JXGeeb588d9-a4fd-41bf-93f4-cd6f7a016682',\n *             {boundingbox: [-4,48.3,12.0,-2.3], axis: true, showcopyright: false, shownavigation: false});\n *     var x       = [-3,-2,-1,0,1,2,3,4,5,6,7,8];\n *     var dataArr = [4,7,7,27,33,37,46,22,11,4,1,0];\n *\n *     colors = ['green', 'yellow', 'red', 'blue'];\n *     board.create('chart', [x,dataArr], {chartStyle:'bar', width:1.0, labels:dataArr, colors: colors} );\n *     board.create('legend', [8, 45], {labels:dataArr, colors: colors, strokeWidth:5} );\n *\n *     })();\n *\n * \u003c/script><pre>\n *\n *\n */\n\n\n_jxg.default.createLegend = function (board, parents, attributes) {\n  //parents are coords of left top point of the legend\n  var start_from = [0, 0];\n\n  if (_type.default.exists(parents) && parents.length === 2) {\n    start_from = parents;\n  } else {\n    throw new Error(\"JSXGraph: Legend element needs two numbers as parameters\");\n  }\n\n  return new _jxg.default.Legend(board, start_from, attributes);\n};\n\n_jxg.default.registerElement(\"legend\", _jxg.default.createLegend);\n\nvar _default = {\n  Chart: _jxg.default.Chart,\n  Legend: _jxg.default.Legend,\n  createChart: _jxg.default.createChart,\n  createLegend: _jxg.default.createLegend\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_jxg","_numerics","_statistics","_constants","_coords","_element","_datasource","_color","_type","_env","Chart","_jxg.default.Chart","board","parents","attributes","constructor","i","isArray","length","Error","elements","isNumber","y","x","len","evaluate","Math","min","slice","style","chartstyle","replace","split","c","drawBar","drawLine","drawFit","drawSpline","drawPie","drawPoints","drawRadar","push","id","setId","prototype","extend","fillcolor","highlightfillcolor","create","fillColor","deg","degree","max","parseInt","regressionPolynomial","pols","p","attr","makeXpFun","f","w","hiddenPoint","fixed","withLabel","visible","name","copyAttributes","options","width","attrSub","isFunction","xp0","xp1","xp2","yp","dir","exists","labels","anchorY","text","visProp","anchorx","txt","X","anchorX","anchory","Y","colors","points","infoboxArray","infoboxarray","infoboxtext","sector","sum","colorArray","highlightColorArray","highlightcolors","labelArray","r","radius","cent","center","xc","yc","makeRadPointFun","j","fun","t","parseFloat","s","rad","PI","highlightHandleLabel","dx","point1","coords","usrCoords","point2","dy","label","rendNode","fontSize","fontsize","fullUpdate","COORDS_BY_USER","highlightFun","highlighted","highlightedObjects","renderer","highlight","call","noHighlightFun","noHighlight","highlightonsector","straightfirst","straightlast","withlabel","labelcolor","hasPoint","hasPointSector","highlightbysize","sectors","midpoint","get_anchor","relCoords","offset","x1","x2","y1","y2","setLabelRelativeCoords","get_transform","angle","starts","sshifts","type","tscale","ends","eshifts","melt","trot","paramArray","paramarray","numofparams","maxes","mins","la","pdata","ssa","esa","ssratio","startshiftratio","esratio","endshiftratio","startshiftarray","endshiftarray","startarray","start","endarray","end","labelarray","sw","strokewidth","myAtts","polystrokewidth","strokecolor","fillopacity","fillOpacity","highlightFillColor","highlightstrokecolor","highlightStrokeColor","gradient","start_angle","startangle","line","xcoord","cos","ycoord","sin","strokeColor","strokeWidth","strokeOpacity","straightFirst","straightLast","getLabelAnchor","data","addTransform","polygons","withLines","borders","setAttribute","legendposition","lxoff","legendleftoffset","lyoff","legendtopoffset","legend","debug","circles","showcircles","cla","clabelArray","circlelabelarray","ncircles","pcircles","circlestrokewidth","layer","dr","size","lines","updateRenderer","update","needsUpdate","updateDataArray","createChart","_jxg.default.createChart","charts","table","isBrowser","document","getElementById","isString","loadFromTable","withheaders","col","columnHeaders","row","rowHeaders","originalWidth","hStrokeColor","hFillColor","suspendUpdate","showRows","rows","indexOf","hsv2rgb","unsuspendUpdate","registerElement","Legend","_jxg.default.Legend","label_array","color_array","colorarray","legendstyle","drawVerticalLegend","_jxg.default.Legend.prototype.drawVerticalLegend","line_length","linelength","offy","rowheight","unitY","prepareUpdate","updateVisibility","createLegend","_jxg.default.createLegend","_default"]
}
