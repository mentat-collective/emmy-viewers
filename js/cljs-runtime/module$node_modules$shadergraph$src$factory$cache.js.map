{
"version":3,
"file":"module$node_modules$shadergraph$src$factory$cache.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAAgB,IAAK,EAErB,KAAIC,OAASP,OAAA,CAAQ,mDAAR,CAAb,CAEIQ,MAAQR,OAAA,CAAQ,kDAAR,CAoCZE,QAAQI,CAAAA,KAAR,CAtBcA,QAAS,CAACG,KAAD,CAAQ,CAC7B,MAAMC,OAAS,EAAf,CACMC,KAAO,GAAIJ,MAAOK,CAAAA,KAAX,EAAkB,GAAlB,CAEb,OAAO,SAAS,CAACC,IAAD,CAAO,CACrB,MAAMC,IAAoB,EAAd,CAAAD,IAAKE,CAAAA,MAAL,CAAmB,IAAnB,CAA0B,GAAIP,KAAMQ,CAAAA,IAAV,EAAgBH,IAAhB,CAAsBI,CAAAA,QAAtB,CAA+B,EAA/B,CAA1B,CAA+DJ,IAA3E,CAEMK,OAASP,IAAA,CAAKG,GAAL,CAED,KAAd;AAAII,MAAJ,EACE,OAAOR,MAAA,CAAOQ,MAAP,CAIU,KAAnB,EAAIR,MAAA,CAAOI,GAAP,CAAJ,GACEJ,MAAA,CAAOI,GAAP,CADF,CACgBL,KAAA,CAAMI,IAAN,CADhB,CAIA,OAAOH,OAAA,CAAOI,GAAP,CAAYK,CAAAA,KAAZ,EAdc,CAJM,CAxB+E;",
"sources":["node_modules/shadergraph/src/factory/cache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$factory$cache\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cache = void 0;\n\nvar _queue = require(\"./queue\");\n\nvar _hash = require(\"./hash\");\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\n  Cache decorator\n  Fetches snippets once, clones for reuse\n  Inline code is hashed to avoid bloat\n*/\nconst cache = function (fetch) {\n  const cached = {};\n  const push = (0, _queue.queue)(100); // Snippet factory\n\n  return function (name) {\n    const key = name.length > 32 ? \"##\" + (0, _hash.hash)(name).toString(16) : name; // Push new key onto queue, see if an old key expired\n\n    const expire = push(key);\n\n    if (expire != null) {\n      delete cached[expire];\n    } // Clone cached snippet\n\n\n    if (cached[key] == null) {\n      cached[key] = fetch(name);\n    }\n\n    return cached[key].clone();\n  };\n};\n\nexports.cache = cache;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","cache","_queue","_hash","fetch","cached","push","queue","name","key","length","hash","toString","expire","clone"]
}
