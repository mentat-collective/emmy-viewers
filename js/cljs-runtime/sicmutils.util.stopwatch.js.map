{"version":3,"sources":["sicmutils/util/stopwatch.cljc"],"mappings":"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","names":["sicmutils$util$stopwatch$IStopwatch$running_QMARK_$dyn","x__4550__auto__","m__4551__auto__","sicmutils.util.stopwatch/running?","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","sicmutils$util$stopwatch$IStopwatch$start$dyn","sicmutils.util.stopwatch/start","sicmutils$util$stopwatch$IStopwatch$stop$dyn","sicmutils.util.stopwatch/stop","sicmutils$util$stopwatch$IStopwatch$reset$dyn","sicmutils.util.stopwatch/reset","sicmutils$util$stopwatch$IStopwatch$_elapsed$dyn","sicmutils.util.stopwatch/-elapsed","sicmutils$util$stopwatch$IStopwatch$repr$dyn","sicmutils.util.stopwatch/repr","sicmutils.util.stopwatch/IStopwatch","this","unit","var_args","G__98927","sicmutils.util.stopwatch/elapsed","js/Error","sw","sicmutils.util.stopwatch/units","sicmutils.util.stopwatch/abbreviate","->micros","->ms","->s","->m","->h","->d","sicmutils.util.stopwatch/from-nanos","ns","G__98931","cljs.core/Keyword","sicmutils.util/illegal","sicmutils.util.stopwatch/choose-unit","or__4253__auto__","cljs.core/reverse","cljs.core.map","p1__98932#","cljs.core.juxt","cljs.core/identity","cljs.core.filter","p1__98933#","cljs.core.comp","cljs.core/first","cljs.core/PROTOCOL_SENTINEL","this__4491__auto__","writer__4492__auto__","opt__4493__auto__","cljs.core/-write","sicmutils.util.stopwatch/Stopwatch","sicmutils.util.stopwatch/->Stopwatch","elapsed-fn","offset","is-running?","_","stopwatch.core/start","offset'","sicmutils.util.stopwatch.elapsed","cljs.core/constantly","vec__98938","cljs.core.nth","x","sicmutils.util.stopwatch/wrapped","stopwatch","cljs.core.atom","js/sicmutils","js/sicmutils.util","js/sicmutils.util.stopwatch","js/sicmutils.util.stopwatch.t_sicmutils$util$stopwatch98943","sicmutils.util.stopwatch/t_sicmutils$util$stopwatch98943","_98945","meta98944","sicmutils.util.stopwatch/->t_sicmutils$util$stopwatch98943","cljs.core/deref","cljs.core.swap_BANG_","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","sicmutils.util.stopwatch/stopwatch","p__98974","map__98975","cljs.core/--destructure-map","cljs.core.get","seq98970","self__4852__auto__","cljs.core/seq","started?","watch"],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.util.stopwatch\n  (:require [sicmutils.util :as u]\n            [stopwatch.core :as sw]))\n\n(defprotocol IStopwatch\n  (running? [this])\n  (start [this])\n  (stop [this])\n  (reset [this])\n  (-elapsed [this unit] \"Displays the current elapsed time in the supplied units.\")\n  (repr [this] \"Prints a string representation of the stopwatch.\"))\n\n(defn elapsed\n  \"Wrapper that handles a default implementation.\"\n  ([sw] (-elapsed sw :nanos))\n  ([sw unit] (-elapsed sw unit)))\n\n(def units\n  \"Allowed units of time, ordered from most precise to least.\"\n  [:nanos :micros :millis :seconds :minutes :hours :days])\n\n(def ^:private abbreviate\n  {:nanos \"ns\"\n   :micros \"\\u03bcs\"\n   :millis \"ms\"\n   :seconds \"s\"\n   :minutes \"min\"\n   :hours \"h\"\n   :days \"d\"})\n\n;; ## Native Stopwatch Implementation\n\n;; Conversions from nanoseconds. The stopwatch library stores nanos, so we only\n;; need to convert FROM nanos, ever, not between other units.\n(let [->micros 1e3\n      ->ms (* ->micros 1e3)\n      ->s (* ->ms 1e3)\n      ->m (* ->s 60)\n      ->h (* ->m 60)\n      ->d (* ->h 24)]\n  (defn- from-nanos\n    [ns unit]\n    (/ ns\n       (case unit\n         :nanos 1\n         :micros ->micros\n         :millis ->ms\n         :seconds ->s\n         :minutes ->m\n         :hours ->h\n         :days ->d\n         (u/illegal (str \"Unknown unit: \" unit))))))\n\n(defn- choose-unit\n  \"Returns a pair of [value, unit].\"\n  [ns]\n  (or (->> (reverse units)\n           (map (juxt #(from-nanos ns %) identity))\n           (filter (comp #(> % 1) first))\n           first)\n      [0 :nanos]))\n\n;; Implementation of an \"immutable\" stopwatch (minus the must-be-mutable\n;; `elapsed-fn`, of course). The final stopwatch will wrap this in an `atom`.\n\n(deftype Stopwatch [elapsed-fn offset is-running?]\n  IStopwatch\n  (running? [_] is-running?)\n\n  (start [this]\n    (if is-running?\n      this\n      (Stopwatch. (sw/start) offset true)))\n\n  (stop [this]\n    (if is-running?\n      (let [offset' (elapsed this :nanos)]\n        (Stopwatch. (constantly offset') offset' false))\n      this))\n\n  (reset [_] (Stopwatch. nil 0 false))\n\n  (-elapsed [_ unit]\n    (-> (if is-running?\n          (+ (elapsed-fn)\n             offset)\n          offset)\n        (from-nanos unit)))\n\n  (repr [this]\n    (let [[x unit] (choose-unit (elapsed this :nanos))]\n      (str x \" \" (abbreviate unit)))))\n\n(defn- wrapped\n  \"Accepts some object implementing `IStopWatch` and returns a mutable\n  implementation that wraps an immutable stopwatch in an atom.\"\n  [stopwatch]\n  (let [sw (atom stopwatch)]\n    (reify IStopwatch\n      (running? [_] (running? @sw))\n      (start [this] (swap! sw start) this)\n      (stop [this] (swap! sw stop) this)\n      (reset [this] (swap! sw reset) this)\n      (-elapsed [_ unit] (-elapsed @sw unit))\n      (repr [_] (repr @sw))\n\n      Object\n      (toString [_] (repr @sw)))))\n\n(defn stopwatch\n  \"Returns an implementation of [[IStopwatch]].\"\n  [& {:keys [started?] :or {started? true}}]\n  (let [watch (Stopwatch. nil 0 false)]\n    (wrapped\n     (if started?\n       (start watch)\n       watch))))\n"]}