shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLClipping=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLClipping=function(properties){function resetGlobalState(){uniform.value!==globalState&&(uniform.value=globalState,uniform.needsUpdate=0<numGlobalPlanes);scope.numPlanes=numGlobalPlanes;scope.numIntersection=0}function projectPlanes(planes,camera,dstOffset,skipTransform){const nPlanes=null!==planes?planes.length:0;let dstArray=
null;if(0!==nPlanes){dstArray=uniform.value;if(!0!==skipTransform||null===dstArray){skipTransform=dstOffset+4*nPlanes;camera=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(camera);if(null===dstArray||dstArray.length<skipTransform)dstArray=new Float32Array(skipTransform);for(let i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4)plane.copy(planes[i]).applyMatrix4(camera,viewNormalMatrix),plane.normal.toArray(dstArray,i4),dstArray[i4+3]=plane.constant}uniform.value=dstArray;uniform.needsUpdate=!0}scope.numPlanes=
nPlanes;scope.numIntersection=0;return dstArray}const scope=this;let globalState=null,numGlobalPlanes=0,localClippingEnabled=!1,renderingShadows=!1;const plane=new _Plane.Plane,viewNormalMatrix=new _Matrix.Matrix3,uniform={value:null,needsUpdate:!1};this.uniform=uniform;this.numIntersection=this.numPlanes=0;this.init=function(planes,enableLocalClipping,camera){const enabled=0!==planes.length||enableLocalClipping||0!==numGlobalPlanes||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=
projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled};this.beginShadows=function(){renderingShadows=!0;projectPlanes(null)};this.endShadows=function(){renderingShadows=!1;resetGlobalState()};this.setState=function(material,camera,useCache){const planes=material.clippingPlanes,clipIntersection=material.clipIntersection;var clipShadows=material.clipShadows;material=properties.get(material);if(!localClippingEnabled||null===planes||0===planes.length||renderingShadows&&!clipShadows)renderingShadows?
projectPlanes(null):resetGlobalState();else{clipShadows=renderingShadows?0:numGlobalPlanes;const lGlobal=4*clipShadows;let dstArray=material.clippingState||null;uniform.value=dstArray;dstArray=projectPlanes(planes,camera,lGlobal,useCache);for(camera=0;camera!==lGlobal;++camera)dstArray[camera]=globalState[camera];material.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=clipShadows}}};var _Matrix=require("module$node_modules$three$src$math$Matrix3"),_Plane=
require("module$node_modules$three$src$math$Plane")}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLClipping.js.map
