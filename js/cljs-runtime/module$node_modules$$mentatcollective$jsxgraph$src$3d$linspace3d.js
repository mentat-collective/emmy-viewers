shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$3d$linspace3d=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type")),
_math=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math")),_geometry=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$geometry"));_jxg.default.Line3D=function(view,point,direction,range,attributes){this.constructor(view.board,attributes,_constants.default.OBJECT_TYPE_LINE3D,_constants.default.OBJECT_CLASS_3D);this.constructor3D(view,"line3d");this.id=this.view.board.setId(this,"L3D");this.board.finalizeAdding(this);
this.point=point;this.direction=direction;this.range=range||[-Infinity,Infinity];this.point2=this.point1=null;this.methodMap=_type.default.deepCopy(this.methodMap,{})};_jxg.default.Line3D.prototype=new _jxg.default.GeometryElement;_type.default.copyPrototypeMethods(_jxg.default.Line3D,_jxg.default.GeometryElement3D,"constructor3D");_jxg.default.extend(_jxg.default.Line3D.prototype,{getPointCoords:function(r){var d=[],i;var p=[this.point.X(),this.point.Y(),this.point.Z()];if(_type.default.isFunction(this.direction))d=
this.direction();else for(i=1;4>i;i++)d.push(_type.default.evaluate(this.direction[i]));r=_type.default.evaluate(r);Infinity===Math.abs(r)&&this.view.intersectionLineCube(p,d,r);return[p[0]+d[0]*r,p[1]+d[1]*r,p[2]+d[2]*r]},update:function(){return this},updateRenderer:function(){this.needsUpdate=!1;return this}});_jxg.default.createLine3D=function(board,parents,attributes){var view=parents[0];board=_type.default.copyAttributes(attributes,board.options,"line3d");var point=_type.default.providePoints3D(view,
[parents[1]],attributes,"line3d",["point"])[0];if(_type.default.isPoint3D(parents[2])||3===parents.length&&(_type.default.isArray(parents[2])||_type.default.isFunction(parents[2]))){var direction=point;var point2=_type.default.providePoints3D(view,[parents[2]],attributes,"line3d",["point2"])[0];parents=[0,1];var el=new _jxg.default.Line3D(view,point,function(){return[point2.X()-point.X(),point2.Y()-point.Y(),point2.Z()-point.Z()]},parents,board)}else _type.default.isFunction(parents[2])?direction=
parents[2]:3===parents[2].length?direction=[1].concat(parents[2]):4===parents[2].length&&(direction=parents[2]),parents=parents[3],attributes=_type.default.providePoints3D(view,[[0,0,0],[0,0,0]],attributes,"line3d",["point1","point2"]),el=new _jxg.default.Line3D(view,point,direction,parents,board),attributes[0].F=function(){return el.getPointCoords(_type.default.evaluate(el.range[0]))},attributes[0].prepareUpdate().update(),direction=attributes[0],attributes[1].F=function(){return el.getPointCoords(_type.default.evaluate(el.range[1]))},
attributes[1].prepareUpdate().update(),point2=attributes[1];el.element2D=view.create("segment",[direction.element2D,point2.element2D],board);el.addChild(el.element2D);el.inherits.push(el.element2D);el.element2D.setParents(el);direction.addChild(el);point2.addChild(el);el.point1=direction;el.point2=point2;el.update();el.element2D.prepareUpdate().update().updateRenderer();return el};_jxg.default.registerElement("line3d",_jxg.default.createLine3D);_jxg.default.Plane3D=function(view,point,dir1,range1,
dir2,range2,attributes){this.constructor(view.board,attributes,_constants.default.OBJECT_TYPE_PLANE3D,_constants.default.OBJECT_CLASS_3D);this.constructor3D(view,"plane3d");this.id=this.view.board.setId(this,"PL3D");this.board.finalizeAdding(this);this.point=point;this.direction1=dir1;this.direction2=dir2;this.range1=range1||[-Infinity,Infinity];this.range2=range2||[-Infinity,Infinity];this.vec1=[0,0,0];this.vec2=[0,0,0];this.grid=null;this.normal=[0,0,0];this.d=0;this.updateNormal();this.methodMap=
_type.default.deepCopy(this.methodMap,{})};_jxg.default.Plane3D.prototype=new _jxg.default.GeometryElement;_type.default.copyPrototypeMethods(_jxg.default.Plane3D,_jxg.default.GeometryElement3D,"constructor3D");_jxg.default.extend(_jxg.default.Plane3D.prototype,{updateNormal:function(){var i;for(i=0;3>i;i++)this.vec1[i]=_type.default.evaluate(this.direction1[i]),this.vec2[i]=_type.default.evaluate(this.direction2[i]);this.normal=_math.default.crossProduct(this.vec1,this.vec2);var len=_math.default.norm(this.normal);
if(Math.abs(len)>_math.default.eps)for(i=0;3>i;i++)this.normal[i]/=len;this.d=_math.default.innerProduct(this.point.coords.slice(1),this.normal,3);return this},updateDataArray:function(){var l1;var e1=["xPlaneRear","yPlaneRear","zPlaneRear"];var s1=[];var p=[0,0,0],i,a,view=this.view;this.dataX=[];this.dataY=[];this.updateNormal();if("axisplane3d"!==this.elType&&view.defaultAxes&&-Infinity===_type.default.evaluate(this.range1[0])&&Infinity===_type.default.evaluate(this.range1[1])&&-Infinity===_type.default.evaluate(this.range2[0])&&
Infinity===_type.default.evaluate(this.range2[1])){for(l1=0;l1<e1.length;l1++){p=view.intersectionPlanePlane(this,view.defaultAxes[e1[l1]]);if(3===p[0].length&&3===p[1].length){for(i=0;i<s1.length&&!(_geometry.default.distance(p[0],s1[i][0],3)<_math.default.eps&&_geometry.default.distance(p[1],s1[i][1],3)<_math.default.eps||_geometry.default.distance(p[0],s1[i][1],3)<_math.default.eps&&_geometry.default.distance(p[1],s1[i][0],3)<_math.default.eps);i++);i===s1.length&&s1.push(p.slice())}p=[0,0,0];
p[l1]=view.bbox3D[l1][1];p=_math.default.innerProduct(p,view.defaultAxes[e1[l1]].normal,3);p=view.intersectionPlanePlane(this,view.defaultAxes[e1[l1]],p);if(3===p[0].length&&3===p[1].length){for(i=0;i<s1.length&&!(_geometry.default.distance(p[0],s1[i][0],3)<_math.default.eps&&_geometry.default.distance(p[1],s1[i][1],3)<_math.default.eps||_geometry.default.distance(p[0],s1[i][1],3)<_math.default.eps&&_geometry.default.distance(p[1],s1[i][0],3)<_math.default.eps);i++);i===s1.length&&s1.push(p.slice())}}i=
a=0;do{p=s1[a][i];if(3===p.length){var c2d=view.project3DTo2D(p);this.dataX.push(c2d[1]);this.dataY.push(c2d[2])}i=(i+1)%2;p=s1[a][i];var b=a;for(l1=0;l1<s1.length;l1++){if(l1!==a&&_geometry.default.distance(p,s1[l1][0])<_math.default.eps){a=l1;i=0;break}if(l1!==a&&_geometry.default.distance(p,s1[l1][1])<_math.default.eps){a=l1;i=1;break}}if(a===b){console.log("Error: update plane3d: did not find next",a);break}}while(0!==a);c2d=view.project3DTo2D(s1[0][0]);this.dataX.push(c2d[1]);this.dataY.push(c2d[2])}else{s1=
_type.default.evaluate(this.range1[0]);e1=_type.default.evaluate(this.range1[1]);var s2=_type.default.evaluate(this.range2[0]);var e2=_type.default.evaluate(this.range2[1]);var q=this.point.coords.slice(1);var v1=this.vec1.slice();var v2=this.vec2.slice();l1=_math.default.norm(v1,3);c2d=_math.default.norm(v2,3);for(i=0;3>i;i++)v1[i]/=l1,v2[i]/=c2d;for(l1=0;4>l1;l1++){switch(l1){case 0:a=s1;b=s2;break;case 1:a=e1;b=s2;break;case 2:a=e1;b=e2;break;case 3:a=s1,b=e2}for(i=0;3>i;i++)p[i]=q[i]+a*v1[i]+
b*v2[i];c2d=view.project3DTo2D(p);this.dataX.push(c2d[1]);this.dataY.push(c2d[2])}this.dataX.push(this.dataX[0]);this.dataY.push(this.dataY[0])}return{X:this.dataX,Y:this.dataY}},update:function(){return this},updateRenderer:function(){this.needsUpdate=!1;return this}});_jxg.default.createPlane3D=function(board,parents,attributes){var view=parents[0],dir1=parents[2],dir2=parents[3],range1=parents[4]||[-Infinity,Infinity],range2=parents[5]||[-Infinity,Infinity];var point=_type.default.providePoints3D(view,
[parents[1]],attributes,"plane3d",["point"])[0];parents=_type.default.copyAttributes(attributes,board.options,"plane3d");var el=new _jxg.default.Plane3D(view,point,dir1,range1,dir2,range2,parents);point.addChild(el);el.element2D=view.create("curve",[[],[]],parents);el.element2D.updateDataArray=function(){var ret=el.updateDataArray();this.dataX=ret.X;this.dataY=ret.Y};el.addChild(el.element2D);el.inherits.push(el.element2D);el.element2D.setParents(el);parents=_type.default.copyAttributes(attributes.mesh3d,
board.options,"mesh3d");Infinity!==Math.abs(el.range1[0])&&Infinity!==Math.abs(el.range1[1])&&Infinity!==Math.abs(el.range2[0])&&Infinity!==Math.abs(el.range2[1])&&(attributes=view.create("mesh3d",[function(){return point.coords},dir1,range1,dir2,range2],parents),el.grid=attributes,el.addChild(attributes),el.inherits.push(attributes),attributes.setParents(el));el.element2D.prepareUpdate().update();board.isSuspendedUpdate||el.element2D.updateVisibility().updateRenderer();return el};_jxg.default.registerElement("plane3d",
_jxg.default.createPlane3D)}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$3d$linspace3d.js.map
