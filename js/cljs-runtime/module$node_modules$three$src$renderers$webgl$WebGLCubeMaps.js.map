{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLCubeMaps.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAMAA,QAAsB,CAACC,QAAD,CAAW,CAG/BC,QAASA,kBAAiB,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACvCA,OAAJ,GAAgBC,UAAWC,CAAAA,gCAA3B,CACEH,OAAQC,CAAAA,OADV,CACoBC,UAAWE,CAAAA,qBAD/B,CAEWH,OAFX,GAEuBC,UAAWG,CAAAA,gCAFlC,GAGEL,OAAQC,CAAAA,OAHV,CAGoBC,UAAWI,CAAAA,qBAH/B,CAMA,OAAON,QAPoC,CAsC7CO,QAASA,iBAAgB,CAACC,KAAD,CAAQ,CACzBR,KAAAA;AAAUQ,KAAMC,CAAAA,MACtBT,MAAQU,CAAAA,mBAAR,CAA4B,SAA5B,CAAuCH,gBAAvC,CACA,OAAMI,QAAUC,QAASC,CAAAA,GAAT,CAAab,KAAb,CAEAc,KAAAA,EAAhB,GAAIH,OAAJ,GACEC,QAASG,CAAAA,MAAT,CAAgBf,KAAhB,CACA,CAAAW,OAAQK,CAAAA,OAAR,EAFF,CAL+B,CAxCjC,IAAIJ,SAAW,IAAIK,OAuDnB,OAAO,CACLJ,IA5CFA,QAAY,CAACb,OAAD,CAAU,CACpB,GAAIA,OAAJ,EAAeA,OAAQkB,CAAAA,SAAvB,EAAsE,CAAA,CAAtE,GAAoClB,OAAQmB,CAAAA,qBAA5C,CAA6E,CAC3E,IAAMlB,QAAUD,OAAQC,CAAAA,OAExB,IAAIA,OAAJ,GAAgBC,UAAWC,CAAAA,gCAA3B,EAA+DF,OAA/D,GAA2EC,UAAWG,CAAAA,gCAAtF,CACE,MAAIO,SAASQ,CAAAA,GAAT,CAAapB,OAAb,CAAJ,EACQW,OACC,CADSC,QAASC,CAAAA,GAAT,CAAab,OAAb,CAAsBA,CAAAA,OAC/B,CAAAD,iBAAA,CAAkBY,OAAlB;AAA2BX,OAAQC,CAAAA,OAAnC,CAFT,EAME,CAFMoB,OAEN,CAFcrB,OAAQqB,CAAAA,KAEtB,GAA4B,CAA5B,CAAaA,OAAMC,CAAAA,MAAnB,EACQC,OAIC,CAJc,IAAIC,sBAAuBC,CAAAA,qBAA3B,CAAiDJ,OAAMC,CAAAA,MAAvD,CAAgE,CAAhE,CAId,CAHPC,OAAaG,CAAAA,0BAAb,CAAwC5B,QAAxC,CAAkDE,OAAlD,CAGO,CAFPY,QAASe,CAAAA,GAAT,CAAa3B,OAAb,CAAsBuB,OAAtB,CAEO,CADPvB,OAAQ4B,CAAAA,gBAAR,CAAyB,SAAzB,CAAoCrB,gBAApC,CACO,CAAAR,iBAAA,CAAkBwB,OAAavB,CAAAA,OAA/B,CAAwCA,OAAQC,CAAAA,OAAhD,CALT,EAQS,IAlB8D,CAwB7E,MAAOD,QAzBa,CA2Cf,CAELgB,QANFA,QAAgB,EAAG,CACjBJ,QAAA,CAAW,IAAIK,OADE,CAIZ,CAxDwB,CAJjC,KAAIf,WAAaX,OAAA,CAAQ,yCAAR,CAAjB,CAEIiC,uBAAyBjC,OAAA,CAAQ,+DAAR,CAV2F;",
"sources":["node_modules/three/src/renderers/webgl/WebGLCubeMaps.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLCubeMaps\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLCubeMaps = WebGLCubeMaps;\n\nvar _constants = require(\"../../constants.js\");\n\nvar _WebGLCubeRenderTarget = require(\"../WebGLCubeRenderTarget.js\");\n\nfunction WebGLCubeMaps(renderer) {\n  let cubemaps = new WeakMap();\n\n  function mapTextureMapping(texture, mapping) {\n    if (mapping === _constants.EquirectangularReflectionMapping) {\n      texture.mapping = _constants.CubeReflectionMapping;\n    } else if (mapping === _constants.EquirectangularRefractionMapping) {\n      texture.mapping = _constants.CubeRefractionMapping;\n    }\n\n    return texture;\n  }\n\n  function get(texture) {\n    if (texture && texture.isTexture && texture.isRenderTargetTexture === false) {\n      const mapping = texture.mapping;\n\n      if (mapping === _constants.EquirectangularReflectionMapping || mapping === _constants.EquirectangularRefractionMapping) {\n        if (cubemaps.has(texture)) {\n          const cubemap = cubemaps.get(texture).texture;\n          return mapTextureMapping(cubemap, texture.mapping);\n        } else {\n          const image = texture.image;\n\n          if (image && image.height > 0) {\n            const renderTarget = new _WebGLCubeRenderTarget.WebGLCubeRenderTarget(image.height / 2);\n            renderTarget.fromEquirectangularTexture(renderer, texture);\n            cubemaps.set(texture, renderTarget);\n            texture.addEventListener('dispose', onTextureDispose);\n            return mapTextureMapping(renderTarget.texture, texture.mapping);\n          } else {\n            // image not yet ready. try the conversion next frame\n            return null;\n          }\n        }\n      }\n    }\n\n    return texture;\n  }\n\n  function onTextureDispose(event) {\n    const texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    const cubemap = cubemaps.get(texture);\n\n    if (cubemap !== undefined) {\n      cubemaps.delete(texture);\n      cubemap.dispose();\n    }\n  }\n\n  function dispose() {\n    cubemaps = new WeakMap();\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLCubeMaps","renderer","mapTextureMapping","texture","mapping","_constants","EquirectangularReflectionMapping","CubeReflectionMapping","EquirectangularRefractionMapping","CubeRefractionMapping","onTextureDispose","event","target","removeEventListener","cubemap","cubemaps","get","undefined","delete","dispose","WeakMap","isTexture","isRenderTargetTexture","has","image","height","renderTarget","_WebGLCubeRenderTarget","WebGLCubeRenderTarget","fromEquirectangularTexture","set","addEventListener"]
}
