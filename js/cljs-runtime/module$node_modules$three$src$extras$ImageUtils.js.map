{
"version":3,
"file":"module$node_modules$three$src$extras$ImageUtils.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/three/src/extras/ImageUtils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$extras$ImageUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageUtils = void 0;\n\nvar _utils = require(\"../utils.js\");\n\nvar _Color = require(\"../math/Color.js\");\n\nlet _canvas;\n\nclass ImageUtils {\n  static getDataURL(image) {\n    if (/^data:/i.test(image.src)) {\n      return image.src;\n    }\n\n    if (typeof HTMLCanvasElement == 'undefined') {\n      return image.src;\n    }\n\n    let canvas;\n\n    if (image instanceof HTMLCanvasElement) {\n      canvas = image;\n    } else {\n      if (_canvas === undefined) _canvas = (0, _utils.createElementNS)('canvas');\n      _canvas.width = image.width;\n      _canvas.height = image.height;\n\n      const context = _canvas.getContext('2d');\n\n      if (image instanceof ImageData) {\n        context.putImageData(image, 0, 0);\n      } else {\n        context.drawImage(image, 0, 0, image.width, image.height);\n      }\n\n      canvas = _canvas;\n    }\n\n    if (canvas.width > 2048 || canvas.height > 2048) {\n      console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n      return canvas.toDataURL('image/jpeg', 0.6);\n    } else {\n      return canvas.toDataURL('image/png');\n    }\n  }\n\n  static sRGBToLinear(image) {\n    if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n      const canvas = (0, _utils.createElementNS)('canvas');\n      canvas.width = image.width;\n      canvas.height = image.height;\n      const context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height);\n      const imageData = context.getImageData(0, 0, image.width, image.height);\n      const data = imageData.data;\n\n      for (let i = 0; i < data.length; i++) {\n        data[i] = (0, _Color.SRGBToLinear)(data[i] / 255) * 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n      return canvas;\n    } else if (image.data) {\n      const data = image.data.slice(0);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n          data[i] = Math.floor((0, _Color.SRGBToLinear)(data[i] / 255) * 255);\n        } else {\n          // assuming float\n          data[i] = (0, _Color.SRGBToLinear)(data[i]);\n        }\n      }\n\n      return {\n        data: data,\n        width: image.width,\n        height: image.height\n      };\n    } else {\n      console.warn('THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.');\n      return image;\n    }\n  }\n\n}\n\nexports.ImageUtils = ImageUtils;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","ImageUtils","_utils","_Color","_canvas","getDataURL","image","test","src","HTMLCanvasElement","canvas","undefined","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","console","warn","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","i","length","SRGBToLinear","slice","Uint8Array","Uint8ClampedArray","Math","floor"]
}
