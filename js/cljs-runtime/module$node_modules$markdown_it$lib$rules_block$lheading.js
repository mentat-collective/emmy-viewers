shadow$provide.module$node_modules$markdown_it$lib$rules_block$lheading=function(global,require,module,exports){module.exports=function(state,startLine,endLine){var l;var token=startLine+1;var terminatorRules=state.md.block.ruler.getRules("paragraph");if(4<=state.sCount[startLine]-state.blkIndent)return!1;var oldParentType=state.parentType;for(state.parentType="paragraph";token<endLine&&!state.isEmpty(token);token++)if(!(3<state.sCount[token]-state.blkIndent)){if(state.sCount[token]>=state.blkIndent){var terminate=
state.bMarks[token]+state.tShift[token];var i=state.eMarks[token];if(terminate<i){var marker=state.src.charCodeAt(terminate);if(45===marker||61===marker)if(terminate=state.skipChars(terminate,marker),terminate=state.skipSpaces(terminate),terminate>=i){var level=61===marker?1:2;break}}}if(!(0>state.sCount[token])){terminate=!1;i=0;for(l=terminatorRules.length;i<l;i++)if(terminatorRules[i](state,token,endLine,!0)){terminate=!0;break}if(terminate)break}}if(!level)return!1;endLine=state.getLines(startLine,
token,state.blkIndent,!1).trim();state.line=token+1;token=state.push("heading_open","h"+String(level),1);token.markup=String.fromCharCode(marker);token.map=[startLine,state.line];token=state.push("inline","",0);token.content=endLine;token.map=[startLine,state.line-1];token.children=[];token=state.push("heading_close","h"+String(level),-1);token.markup=String.fromCharCode(marker);state.parentType=oldParentType;return!0}}
//# sourceMappingURL=module$node_modules$markdown_it$lib$rules_block$lheading.js.map
