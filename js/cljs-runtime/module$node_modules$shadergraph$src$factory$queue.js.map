{
"version":3,
"file":"module$node_modules$shadergraph$src$factory$queue.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAAgB,IAAK,EAgGrBJ,QAAQI,CAAAA,KAAR,CAvFcA,QAAS,CAACC,KAAD,CAAQ,CAChB,IAAb,EAAIA,KAAJ,GACEA,KADF,CACU,GADV,CAIA,OAAMC,IAAM,EACZ,KAAIC,KAAO,IAAX,CACIC,KAAO,IADX,CAEIC,MAAQ,CAEZ,OAAMC,IAAMA,QAAS,CAACC,IAAD,CAAO,CAC1BA,IAAKC,CAAAA,IAAL,CAAY,IACZD,KAAKE,CAAAA,IAAL,CAAYN,IAEA,KAAZ,EAAIA,IAAJ,GACEA,IAAKK,CAAAA,IADP,CACcD,IADd,CAIAJ,KAAA,CAAOI,IAEP,IAAY,IAAZ,EAAIH,IAAJ,CACE,MAAOA,KAAP,CAAcG,IAXU,CAA5B,CAgBMG,OAASA,QAAS,CAACH,IAAD,CAAO,CAC7B,MAAM,CACJC,IADI,CAAA,CAEFD,IAFJ,CAGM,CACJE,IADI,CAAA,CAEFF,IAEQ,KAAZ,EAAIC,IAAJ,GACEA,IAAKC,CAAAA,IADP,CACcA,IADd,CAIY,KAAZ,EAAIA,IAAJ,GACEA,IAAKD,CAAAA,IADP;AACcA,IADd,CAIIL,KAAJ,GAAaI,IAAb,GACEJ,IADF,CACSM,IADT,CAIA,IAAIL,IAAJ,GAAaG,IAAb,CACE,MAAOH,KAAP,CAAcI,IArBa,CA0B/B,OAAO,SAAS,CAACG,GAAD,CAAM,CAAA,IAChBC,IADgB,CACVL,IAEV,EAAKA,IAAL,CAAYL,GAAA,CAAIS,GAAJ,CAAZ,GAAyBJ,IAAzB,GAAkCJ,IAAlC,EAEEO,MAAA,CAAOH,IAAP,CACA,CAAAD,GAAA,CAAIC,IAAJ,CAHF,GAMMF,KAAJ,GAAcJ,KAAd,EAEEW,IAGA,CAHOR,IAAKO,CAAAA,GAGZ,CAFAD,MAAA,CAAON,IAAP,CAEA,CAAA,OAAOF,GAAA,CAAIU,IAAJ,CALT,EAOEP,KAAA,EAWF,CAPAE,IAOA,CAPO,CACLE,KAAMN,IADD,CAELK,KAAM,IAFD,CAGLG,GAHK,CAOP,CAFAL,GAAA,CAAIC,IAAJ,CAEA,CAAAL,GAAA,CAAIS,GAAJ,CAAA,CAAWJ,IAxBb,CA4BA,OAAOK,KA/Ba,CApDO,CAf+E;",
"sources":["node_modules/shadergraph/src/factory/queue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$factory$queue\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queue = void 0;\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n// Least-recently-used queue for key expiry via linked list\nconst queue = function (limit) {\n  if (limit == null) {\n    limit = 100;\n  }\n\n  const map = {};\n  let head = null;\n  let tail = null;\n  let count = 0; // Insert at front\n\n  const add = function (item) {\n    item.prev = null;\n    item.next = head;\n\n    if (head != null) {\n      head.prev = item;\n    }\n\n    head = item;\n\n    if (tail == null) {\n      return tail = item;\n    }\n  }; // Remove from list\n\n\n  const remove = function (item) {\n    const {\n      prev\n    } = item;\n    const {\n      next\n    } = item;\n\n    if (prev != null) {\n      prev.next = next;\n    }\n\n    if (next != null) {\n      next.prev = prev;\n    }\n\n    if (head === item) {\n      head = next;\n    }\n\n    if (tail === item) {\n      return tail = prev;\n    }\n  }; // Push key to top of list\n\n\n  return function (key) {\n    let dead, item;\n\n    if ((item = map[key]) && item !== head) {\n      // Already in queue\n      remove(item);\n      add(item);\n    } else {\n      // Check capacity\n      if (count === limit) {\n        // Pop tail\n        dead = tail.key;\n        remove(tail); // Expire key\n\n        delete map[dead];\n      } else {\n        count++;\n      } // Replace head\n\n\n      item = {\n        next: head,\n        prev: null,\n        key\n      };\n      add(item); // Map record for lookup\n\n      map[key] = item;\n    } // Return expired key\n\n\n    return dead;\n  };\n};\n\nexports.queue = queue;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","queue","limit","map","head","tail","count","add","item","prev","next","remove","key","dead"]
}
