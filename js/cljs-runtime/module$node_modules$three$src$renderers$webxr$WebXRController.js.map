{
"version":3,
"file":"module$node_modules$three$src$renderers$webxr$WebXRController.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webxr/WebXRController.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webxr$WebXRController\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebXRController = void 0;\n\nvar _Vector = require(\"../../math/Vector3.js\");\n\nvar _Group = require(\"../../objects/Group.js\");\n\nconst _moveEvent = {\n  type: 'move'\n};\n\nclass WebXRController {\n  constructor() {\n    this._targetRay = null;\n    this._grip = null;\n    this._hand = null;\n  }\n\n  getHandSpace() {\n    if (this._hand === null) {\n      this._hand = new _Group.Group();\n      this._hand.matrixAutoUpdate = false;\n      this._hand.visible = false;\n      this._hand.joints = {};\n      this._hand.inputState = {\n        pinching: false\n      };\n    }\n\n    return this._hand;\n  }\n\n  getTargetRaySpace() {\n    if (this._targetRay === null) {\n      this._targetRay = new _Group.Group();\n      this._targetRay.matrixAutoUpdate = false;\n      this._targetRay.visible = false;\n      this._targetRay.hasLinearVelocity = false;\n      this._targetRay.linearVelocity = new _Vector.Vector3();\n      this._targetRay.hasAngularVelocity = false;\n      this._targetRay.angularVelocity = new _Vector.Vector3();\n    }\n\n    return this._targetRay;\n  }\n\n  getGripSpace() {\n    if (this._grip === null) {\n      this._grip = new _Group.Group();\n      this._grip.matrixAutoUpdate = false;\n      this._grip.visible = false;\n      this._grip.hasLinearVelocity = false;\n      this._grip.linearVelocity = new _Vector.Vector3();\n      this._grip.hasAngularVelocity = false;\n      this._grip.angularVelocity = new _Vector.Vector3();\n    }\n\n    return this._grip;\n  }\n\n  dispatchEvent(event) {\n    if (this._targetRay !== null) {\n      this._targetRay.dispatchEvent(event);\n    }\n\n    if (this._grip !== null) {\n      this._grip.dispatchEvent(event);\n    }\n\n    if (this._hand !== null) {\n      this._hand.dispatchEvent(event);\n    }\n\n    return this;\n  }\n\n  disconnect(inputSource) {\n    this.dispatchEvent({\n      type: 'disconnected',\n      data: inputSource\n    });\n\n    if (this._targetRay !== null) {\n      this._targetRay.visible = false;\n    }\n\n    if (this._grip !== null) {\n      this._grip.visible = false;\n    }\n\n    if (this._hand !== null) {\n      this._hand.visible = false;\n    }\n\n    return this;\n  }\n\n  update(inputSource, frame, referenceSpace) {\n    let inputPose = null;\n    let gripPose = null;\n    let handPose = null;\n    const targetRay = this._targetRay;\n    const grip = this._grip;\n    const hand = this._hand;\n\n    if (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n      if (hand && inputSource.hand) {\n        handPose = true;\n\n        for (const inputjoint of inputSource.hand.values()) {\n          // Update the joints groups with the XRJoint poses\n          const jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n          if (hand.joints[inputjoint.jointName] === undefined) {\n            // The transform of this joint will be updated with the joint pose on each frame\n            const joint = new _Group.Group();\n            joint.matrixAutoUpdate = false;\n            joint.visible = false;\n            hand.joints[inputjoint.jointName] = joint; // ??\n\n            hand.add(joint);\n          }\n\n          const joint = hand.joints[inputjoint.jointName];\n\n          if (jointPose !== null) {\n            joint.matrix.fromArray(jointPose.transform.matrix);\n            joint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n            joint.jointRadius = jointPose.radius;\n          }\n\n          joint.visible = jointPose !== null;\n        } // Custom events\n        // Check pinchz\n\n\n        const indexTip = hand.joints['index-finger-tip'];\n        const thumbTip = hand.joints['thumb-tip'];\n        const distance = indexTip.position.distanceTo(thumbTip.position);\n        const distanceToPinch = 0.02;\n        const threshold = 0.005;\n\n        if (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n          hand.inputState.pinching = false;\n          this.dispatchEvent({\n            type: 'pinchend',\n            handedness: inputSource.handedness,\n            target: this\n          });\n        } else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n          hand.inputState.pinching = true;\n          this.dispatchEvent({\n            type: 'pinchstart',\n            handedness: inputSource.handedness,\n            target: this\n          });\n        }\n      } else {\n        if (grip !== null && inputSource.gripSpace) {\n          gripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n          if (gripPose !== null) {\n            grip.matrix.fromArray(gripPose.transform.matrix);\n            grip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n            if (gripPose.linearVelocity) {\n              grip.hasLinearVelocity = true;\n              grip.linearVelocity.copy(gripPose.linearVelocity);\n            } else {\n              grip.hasLinearVelocity = false;\n            }\n\n            if (gripPose.angularVelocity) {\n              grip.hasAngularVelocity = true;\n              grip.angularVelocity.copy(gripPose.angularVelocity);\n            } else {\n              grip.hasAngularVelocity = false;\n            }\n          }\n        }\n      }\n\n      if (targetRay !== null) {\n        inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace); // Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\n        if (inputPose === null && gripPose !== null) {\n          inputPose = gripPose;\n        }\n\n        if (inputPose !== null) {\n          targetRay.matrix.fromArray(inputPose.transform.matrix);\n          targetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n          if (inputPose.linearVelocity) {\n            targetRay.hasLinearVelocity = true;\n            targetRay.linearVelocity.copy(inputPose.linearVelocity);\n          } else {\n            targetRay.hasLinearVelocity = false;\n          }\n\n          if (inputPose.angularVelocity) {\n            targetRay.hasAngularVelocity = true;\n            targetRay.angularVelocity.copy(inputPose.angularVelocity);\n          } else {\n            targetRay.hasAngularVelocity = false;\n          }\n\n          this.dispatchEvent(_moveEvent);\n        }\n      }\n    }\n\n    if (targetRay !== null) {\n      targetRay.visible = inputPose !== null;\n    }\n\n    if (grip !== null) {\n      grip.visible = gripPose !== null;\n    }\n\n    if (hand !== null) {\n      hand.visible = handPose !== null;\n    }\n\n    return this;\n  }\n\n}\n\nexports.WebXRController = WebXRController;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebXRController","_Vector","_Group","_moveEvent","type","constructor","_hand","_grip","_targetRay","getHandSpace","Group","matrixAutoUpdate","visible","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","Vector3","hasAngularVelocity","angularVelocity","getGripSpace","dispatchEvent","event","disconnect","inputSource","data","update","frame","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","session","visibilityState","inputjoint","values","jointPose","getJointPose","undefined","jointName","joint","add","matrix","fromArray","transform","decompose","position","rotation","scale","jointRadius","radius","distance","indexTip","distanceTo","thumbTip","handedness","target","gripSpace","getPose","copy","targetRaySpace"]
}
