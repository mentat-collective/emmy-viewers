{
"version":3,
"file":"module$node_modules$$motionone$dom$dist$animate$utils$style_object_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sEAAA,CAA2F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,MAAQN,OAAA,CAAQ,qDAAR,CAAZ,CACIO,WAAaP,OAAA,CAAQ,sEAAR,CAgCjBE,QAAQM,CAAAA,YAAR,CA9BAA,QAAqB,CAACC,SAAD,CAAY,CAC7B,MAAMC,iBAAmB,EAAzB,CACMC,cAAgB,EACtB,KAAK,IAAIC,GAAT,GAAgBH,UAAhB,CAA2B,CACvB,MAAMJ,MAAQI,SAAA,CAAUG,GAAV,CACVL,WAAWM,CAAAA,WAAX,CAAuBD,GAAvB,CAAJ;CACQL,UAAWO,CAAAA,cAAX,CAA0BF,GAA1B,CAGJ,GAFIA,GAEJ,CAFUL,UAAWO,CAAAA,cAAX,CAA0BF,GAA1B,CAEV,EADAD,aAAcI,CAAAA,IAAd,CAAmBH,GAAnB,CACA,CAAAA,GAAA,CAAML,UAAWS,CAAAA,iBAAX,CAA6BJ,GAA7B,CAJV,CAMA,KAAIK,gBAAkBC,KAAMC,CAAAA,OAAN,CAAcd,KAAd,CAAA,CAAuBA,KAAA,CAAM,CAAN,CAAvB,CAAkCA,KAKxD,OAAMe,WAAab,UAAWc,CAAAA,oBAAqBC,CAAAA,GAAhC,CAAoCV,GAApC,CACfQ,WAAJ,GACIH,eADJ,CACsBX,KAAMiB,CAAAA,QAAN,CAAelB,KAAf,CAAA,CACZe,UAAWI,CAAAA,aAAX,CAAyBnB,KAAzB,CADY,CAEZA,KAHV,CAKAK,iBAAA,CAAiBE,GAAjB,CAAA,CAAwBK,eAnBD,CAqBvBN,aAAcc,CAAAA,MAAlB,GACIf,gBAAiBgB,CAAAA,SADrB,CACiCnB,UAAWoB,CAAAA,sBAAX,CAAkChB,aAAlC,CADjC,CAGA,OAAOD,iBA3BsB,CARkG;",
"sources":["node_modules/@motionone/dom/dist/animate/utils/style-object.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$dom$dist$animate$utils$style_object_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar transforms = require('./transforms.cjs.js');\n\nfunction createStyles(keyframes) {\n    const initialKeyframes = {};\n    const transformKeys = [];\n    for (let key in keyframes) {\n        const value = keyframes[key];\n        if (transforms.isTransform(key)) {\n            if (transforms.transformAlias[key])\n                key = transforms.transformAlias[key];\n            transformKeys.push(key);\n            key = transforms.asTransformCssVar(key);\n        }\n        let initialKeyframe = Array.isArray(value) ? value[0] : value;\n        /**\n         * If this is a number and we have a default value type, convert the number\n         * to this type.\n         */\n        const definition = transforms.transformDefinitions.get(key);\n        if (definition) {\n            initialKeyframe = utils.isNumber(value)\n                ? definition.toDefaultUnit(value)\n                : value;\n        }\n        initialKeyframes[key] = initialKeyframe;\n    }\n    if (transformKeys.length) {\n        initialKeyframes.transform = transforms.buildTransformTemplate(transformKeys);\n    }\n    return initialKeyframes;\n}\n\nexports.createStyles = createStyles;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","transforms","createStyles","keyframes","initialKeyframes","transformKeys","key","isTransform","transformAlias","push","asTransformCssVar","initialKeyframe","Array","isArray","definition","transformDefinitions","get","isNumber","toDefaultUnit","length","transform","buildTransformTemplate"]
}
