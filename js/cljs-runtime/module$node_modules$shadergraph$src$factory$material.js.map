{
"version":3,
"file":"module$node_modules$shadergraph$src$factory$material.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/shadergraph/src/factory/material.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$factory$material\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Material = void 0;\n\nvar Visualize = _interopRequireWildcard(require(\"../visualize\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst debug = false;\n\nconst tick = function () {\n  const now = +new Date();\n  return function (label) {\n    const delta = +new Date() - now;\n    console.log(label, delta + \" ms\");\n    return delta;\n  };\n};\n\nclass Material {\n  constructor(vertex, fragment) {\n    this.vertex = vertex;\n    this.fragment = fragment;\n\n    if (debug) {\n      this.tock = tick();\n    }\n  }\n\n  build(options) {\n    return this.link(options);\n  }\n\n  link(options) {\n    if (options == null) {\n      options = {};\n    }\n\n    const uniforms = {};\n    const varyings = {};\n    const attributes = {};\n    const vertex = this.vertex.link(\"main\");\n    const fragment = this.fragment.link(\"main\");\n\n    for (const shader of [vertex, fragment]) {\n      for (const key in shader.uniforms) {\n        const value = shader.uniforms[key];\n        uniforms[key] = value;\n      }\n\n      for (const key in shader.varyings) {\n        const value = shader.varyings[key];\n        varyings[key] = value;\n      }\n\n      for (const key in shader.attributes) {\n        const value = shader.attributes[key];\n        attributes[key] = value;\n      }\n    }\n\n    options.vertexShader = vertex.code;\n    options.vertexGraph = vertex.graph;\n    options.fragmentShader = fragment.code;\n    options.fragmentGraph = fragment.graph;\n    options.attributes = attributes;\n    options.uniforms = uniforms;\n    options.varyings = varyings;\n\n    options.inspect = () => Visualize.inspect(\"Vertex Shader\", vertex, \"Fragment Shader\", fragment.graph);\n\n    if (debug) {\n      this.tock(\"Material build\");\n    }\n\n    return options;\n  }\n\n  inspect() {\n    return Visualize.inspect(\"Vertex Shader\", this.vertex, \"Fragment Shader\", this.fragment.graph);\n  }\n\n}\n\nexports.Material = Material;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Material","Visualize","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","constructor","vertex","fragment","build","options","link","uniforms","varyings","attributes","shader","vertexShader","code","vertexGraph","graph","fragmentShader","fragmentGraph","inspect","options.inspect"]
}
