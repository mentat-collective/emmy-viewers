{
"version":3,
"file":"module$node_modules$markdown_it$lib$helpers$parse_link_title.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMzH,IAAIC,YAAcH,OAAA,CAAQ,kDAAR,CAA2BG,CAAAA,WAG7CF,OAAOC,CAAAA,OAAP,CAAiBE,QAAuB,CAACC,GAAD,CAAMC,GAAN,CAAWC,GAAX,CAAgB,CAAA,IAGlDC,MAAQ,CAH0C,CAIlDC,MAAQH,GAJ0C,CAKlDI,OAAS,CACPC,GAAI,CAAA,CADG,CAEPL,IAAK,CAFE,CAGPE,MAAO,CAHA,CAIPH,IAAK,EAJE,CAOb,IAAIC,GAAJ,EAAWC,GAAX,CAAkB,MAAOG,OAEzB,KAAAE,OAASP,GAAIQ,CAAAA,UAAJ,CAAeP,GAAf,CAET,IAAe,EAAf,GAAIM,MAAJ,EAA0C,EAA1C,GAA+BA,MAA/B,EAAqE,EAArE,GAA0DA,MAA1D,CAAqF,MAAOF,OAE5FJ,IAAA,EAKA,KAFe,EAEf,GAFIM,MAEJ,GAFuBA,MAEvB,CAFgC,EAEhC,EAAON,GAAP,CAAaC,GAAb,CAAA,CAAkB,CAChB,IAAAO,KAAOT,GAAIQ,CAAAA,UAAJ,CAAeP,GAAf,CACP,IAAIQ,IAAJ,GAAaF,MAAb,CAAqB,CACnBF,MAAOJ,CAAAA,GAAP;AAAaA,GAAb,CAAmB,CACnBI,OAAOF,CAAAA,KAAP,CAAeA,KACfE,OAAOL,CAAAA,GAAP,CAAaF,WAAA,CAAYE,GAAIU,CAAAA,KAAJ,CAAUN,KAAV,CAAkB,CAAlB,CAAqBH,GAArB,CAAZ,CACbI,OAAOC,CAAAA,EAAP,CAAY,CAAA,CACZ,MALmB,CAArB,IAMO,IAAa,EAAb,GAAIG,IAAJ,EAAwC,EAAxC,GAA6BF,MAA7B,CACL,KADK,KAEa,GAAb,GAAIE,IAAJ,CACLN,KAAA,EADK,CAEa,EAFb,GAEIM,IAFJ,EAE6BR,GAF7B,CAEmC,CAFnC,CAEuCC,GAFvC,GAGLD,GAAA,EACA,CAA4B,EAA5B,GAAID,GAAIQ,CAAAA,UAAJ,CAAeP,GAAf,CAAJ,EACEE,KAAA,EALG,CASPF,IAAA,EAnBgB,CAsBlB,MAAOI,OA7C+C,CATiE;",
"sources":["node_modules/markdown-it/lib/helpers/parse_link_title.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$helpers$parse_link_title\"] = function(global,require,module,exports) {\n// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","unescapeAll","module.exports","str","pos","max","lines","start","result","ok","marker","charCodeAt","code","slice"]
}
