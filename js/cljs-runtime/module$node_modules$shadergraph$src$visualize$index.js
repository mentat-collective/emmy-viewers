shadow$provide.module$node_modules$shadergraph$src$visualize$index=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.inspect=exports.visualize=exports.markup=
exports.serialize=void 0;global=require("module$node_modules$shadergraph$src$visualize$serialize");var _markup=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&
Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$shadergraph$src$visualize$markup"));const serialize=global.serialize;exports.serialize=serialize;exports.markup=_markup;const resolve=function(arg){return null==arg?arg:arg instanceof Array?
arg.map(resolve):null!=arg.vertex&&null!=arg.fragment?[resolve(arg.vertex,resolve(arg.fragment))]:null!=arg._graph?arg._graph:null!=arg.graph?arg.graph:arg},merge=function(args){let out=[];for(const arg of Array.from(args))arg instanceof Array?out=out.concat(merge(arg)):null!=arg&&out.push(arg);return out},visualize=function(){const list=merge(resolve([].slice.call(arguments)));return _markup.merge(Array.from(list).filter(graph=>graph).map(graph=>{graph?graph.nodes&&(graph=serialize(graph),graph=
_markup.process(graph)):graph=void 0;return graph}))};exports.visualize=visualize;exports.inspect=function(){const contents=visualize.apply(null,arguments),element=_markup.overlay(contents);for(const el of Array.from(document.querySelectorAll(".shadergraph-overlay")))el.remove();document.body.appendChild(element);contents.update();return element}}
//# sourceMappingURL=module$node_modules$shadergraph$src$visualize$index.js.map
