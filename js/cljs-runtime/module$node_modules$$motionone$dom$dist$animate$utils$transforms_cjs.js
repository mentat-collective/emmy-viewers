shadow$provide.module$node_modules$$motionone$dom$dist$animate$utils$transforms_cjs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$motionone$utils$dist$index_cjs"),data=require("module$node_modules$$motionone$dom$dist$animate$data_cjs");const axes=["","X","Y","Z"],transformAlias={x:"translateX",y:"translateY",z:"translateZ"};global={syntax:"\x3cangle\x3e",initialValue:"0deg",toDefaultUnit:v=>v+"deg"};const baseTransformProperties=
{translate:{syntax:"\x3clength-percentage\x3e",initialValue:"0px",toDefaultUnit:v=>v+"px"},rotate:global,scale:{syntax:"\x3cnumber\x3e",initialValue:1,toDefaultUnit:utils.noopReturn},skew:global},transformDefinitions=new Map,transforms=["x","y","z"];["translate","scale","rotate","skew"].forEach(name=>{axes.forEach(axis=>{transforms.push(name+axis);transformDefinitions.set(`--motion-${name+axis}`,baseTransformProperties[name])})});const compareTransformOrder=(a,b)=>transforms.indexOf(a)-transforms.indexOf(b),
transformLookup=new Set(transforms),buildTransformTemplate=transforms=>transforms.sort(compareTransformOrder).reduce(transformListToString,"").trim(),transformListToString=(template,name)=>`${template} ${name}(var(${`--motion-${name}`}))`;exports.addTransformToElement=(element,name)=>{transformAlias[name]&&(name=transformAlias[name]);const {transforms}=data.getAnimationData(element);utils.addUniqueItem(transforms,name);element.style.transform=buildTransformTemplate(transforms)};exports.asTransformCssVar=
name=>`--motion-${name}`;exports.axes=axes;exports.buildTransformTemplate=buildTransformTemplate;exports.compareTransformOrder=compareTransformOrder;exports.isTransform=name=>transformLookup.has(name);exports.transformAlias=transformAlias;exports.transformDefinitions=transformDefinitions}
//# sourceMappingURL=module$node_modules$$motionone$dom$dist$animate$utils$transforms_cjs.js.map
