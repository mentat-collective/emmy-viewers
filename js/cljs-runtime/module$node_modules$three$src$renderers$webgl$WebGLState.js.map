{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLState.js",
"lineCount":33,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLState\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLState = WebGLState;\n\nvar _constants = require(\"../../constants.js\");\n\nvar _Vector = require(\"../../math/Vector4.js\");\n\nfunction WebGLState(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  function ColorBuffer() {\n    let locked = false;\n    const color = new _Vector.Vector4();\n    let currentColorMask = null;\n    const currentColorClear = new _Vector.Vector4(0, 0, 0, 0);\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    let locked = false;\n    let currentDepthMask = null;\n    let currentDepthFunc = null;\n    let currentDepthClear = null;\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(gl.DEPTH_TEST);\n        } else {\n          disable(gl.DEPTH_TEST);\n        }\n      },\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          if (depthFunc) {\n            switch (depthFunc) {\n              case _constants.NeverDepth:\n                gl.depthFunc(gl.NEVER);\n                break;\n\n              case _constants.AlwaysDepth:\n                gl.depthFunc(gl.ALWAYS);\n                break;\n\n              case _constants.LessDepth:\n                gl.depthFunc(gl.LESS);\n                break;\n\n              case _constants.LessEqualDepth:\n                gl.depthFunc(gl.LEQUAL);\n                break;\n\n              case _constants.EqualDepth:\n                gl.depthFunc(gl.EQUAL);\n                break;\n\n              case _constants.GreaterEqualDepth:\n                gl.depthFunc(gl.GEQUAL);\n                break;\n\n              case _constants.GreaterDepth:\n                gl.depthFunc(gl.GREATER);\n                break;\n\n              case _constants.NotEqualDepth:\n                gl.depthFunc(gl.NOTEQUAL);\n                break;\n\n              default:\n                gl.depthFunc(gl.LEQUAL);\n            }\n          } else {\n            gl.depthFunc(gl.LEQUAL);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n\n  function StencilBuffer() {\n    let locked = false;\n    let currentStencilMask = null;\n    let currentStencilFunc = null;\n    let currentStencilRef = null;\n    let currentStencilFuncMask = null;\n    let currentStencilFail = null;\n    let currentStencilZFail = null;\n    let currentStencilZPass = null;\n    let currentStencilClear = null;\n    return {\n      setTest: function (stencilTest) {\n        if (!locked) {\n          if (stencilTest) {\n            enable(gl.STENCIL_TEST);\n          } else {\n            disable(gl.STENCIL_TEST);\n          }\n        }\n      },\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  } //\n\n\n  const colorBuffer = new ColorBuffer();\n  const depthBuffer = new DepthBuffer();\n  const stencilBuffer = new StencilBuffer();\n  let enabledCapabilities = {};\n  let currentBoundFramebuffers = {};\n  let currentDrawbuffers = new WeakMap();\n  let defaultDrawbuffers = [];\n  let currentProgram = null;\n  let currentBlendingEnabled = false;\n  let currentBlending = null;\n  let currentBlendEquation = null;\n  let currentBlendSrc = null;\n  let currentBlendDst = null;\n  let currentBlendEquationAlpha = null;\n  let currentBlendSrcAlpha = null;\n  let currentBlendDstAlpha = null;\n  let currentPremultipledAlpha = false;\n  let currentFlipSided = null;\n  let currentCullFace = null;\n  let currentLineWidth = null;\n  let currentPolygonOffsetFactor = null;\n  let currentPolygonOffsetUnits = null;\n  const maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  let lineWidthAvailable = false;\n  let version = 0;\n  const glVersion = gl.getParameter(gl.VERSION);\n\n  if (glVersion.indexOf('WebGL') !== -1) {\n    version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n    version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n\n  let currentTextureSlot = null;\n  let currentBoundTextures = {};\n  const scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n  const viewportParam = gl.getParameter(gl.VIEWPORT);\n  const currentScissor = new _Vector.Vector4().fromArray(scissorParam);\n  const currentViewport = new _Vector.Vector4().fromArray(viewportParam);\n\n  function createTexture(type, target, count) {\n    const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n    const texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (let i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  const emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(gl.DEPTH_TEST);\n  depthBuffer.setFunc(_constants.LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(_constants.CullFaceBack);\n  enable(gl.CULL_FACE);\n  setBlending(_constants.NoBlending); //\n\n  function enable(id) {\n    if (enabledCapabilities[id] !== true) {\n      gl.enable(id);\n      enabledCapabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (enabledCapabilities[id] !== false) {\n      gl.disable(id);\n      enabledCapabilities[id] = false;\n    }\n  }\n\n  function bindFramebuffer(target, framebuffer) {\n    if (currentBoundFramebuffers[target] !== framebuffer) {\n      gl.bindFramebuffer(target, framebuffer);\n      currentBoundFramebuffers[target] = framebuffer;\n\n      if (isWebGL2) {\n        // gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n        if (target === gl.DRAW_FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n        }\n\n        if (target === gl.FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function drawBuffers(renderTarget, framebuffer) {\n    let drawBuffers = defaultDrawbuffers;\n    let needsUpdate = false;\n\n    if (renderTarget) {\n      drawBuffers = currentDrawbuffers.get(framebuffer);\n\n      if (drawBuffers === undefined) {\n        drawBuffers = [];\n        currentDrawbuffers.set(framebuffer, drawBuffers);\n      }\n\n      if (renderTarget.isWebGLMultipleRenderTargets) {\n        const textures = renderTarget.texture;\n\n        if (drawBuffers.length !== textures.length || drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          for (let i = 0, il = textures.length; i < il; i++) {\n            drawBuffers[i] = gl.COLOR_ATTACHMENT0 + i;\n          }\n\n          drawBuffers.length = textures.length;\n          needsUpdate = true;\n        }\n      } else {\n        if (drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          drawBuffers[0] = gl.COLOR_ATTACHMENT0;\n          needsUpdate = true;\n        }\n      }\n    } else {\n      if (drawBuffers[0] !== gl.BACK) {\n        drawBuffers[0] = gl.BACK;\n        needsUpdate = true;\n      }\n    }\n\n    if (needsUpdate) {\n      if (capabilities.isWebGL2) {\n        gl.drawBuffers(drawBuffers);\n      } else {\n        extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(drawBuffers);\n      }\n    }\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n\n    return false;\n  }\n\n  const equationToGL = {\n    [_constants.AddEquation]: gl.FUNC_ADD,\n    [_constants.SubtractEquation]: gl.FUNC_SUBTRACT,\n    [_constants.ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n  };\n\n  if (isWebGL2) {\n    equationToGL[_constants.MinEquation] = gl.MIN;\n    equationToGL[_constants.MaxEquation] = gl.MAX;\n  } else {\n    const extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      equationToGL[_constants.MinEquation] = extension.MIN_EXT;\n      equationToGL[_constants.MaxEquation] = extension.MAX_EXT;\n    }\n  }\n\n  const factorToGL = {\n    [_constants.ZeroFactor]: gl.ZERO,\n    [_constants.OneFactor]: gl.ONE,\n    [_constants.SrcColorFactor]: gl.SRC_COLOR,\n    [_constants.SrcAlphaFactor]: gl.SRC_ALPHA,\n    [_constants.SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n    [_constants.DstColorFactor]: gl.DST_COLOR,\n    [_constants.DstAlphaFactor]: gl.DST_ALPHA,\n    [_constants.OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n    [_constants.OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n    [_constants.OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n    [_constants.OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n  };\n\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === _constants.NoBlending) {\n      if (currentBlendingEnabled === true) {\n        disable(gl.BLEND);\n        currentBlendingEnabled = false;\n      }\n\n      return;\n    }\n\n    if (currentBlendingEnabled === false) {\n      enable(gl.BLEND);\n      currentBlendingEnabled = true;\n    }\n\n    if (blending !== _constants.CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        if (currentBlendEquation !== _constants.AddEquation || currentBlendEquationAlpha !== _constants.AddEquation) {\n          gl.blendEquation(gl.FUNC_ADD);\n          currentBlendEquation = _constants.AddEquation;\n          currentBlendEquationAlpha = _constants.AddEquation;\n        }\n\n        if (premultipliedAlpha) {\n          switch (blending) {\n            case _constants.NormalBlending:\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n\n            case _constants.AdditiveBlending:\n              gl.blendFunc(gl.ONE, gl.ONE);\n              break;\n\n            case _constants.SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n\n            case _constants.MultiplyBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        } else {\n          switch (blending) {\n            case _constants.NormalBlending:\n              gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n\n            case _constants.AdditiveBlending:\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n              break;\n\n            case _constants.SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n\n            case _constants.MultiplyBlending:\n              gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        }\n\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      return;\n    } // custom blending\n\n\n    blendEquationAlpha = blendEquationAlpha || blendEquation;\n    blendSrcAlpha = blendSrcAlpha || blendSrc;\n    blendDstAlpha = blendDstAlpha || blendDst;\n\n    if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n      gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n      currentBlendEquation = blendEquation;\n      currentBlendEquationAlpha = blendEquationAlpha;\n    }\n\n    if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n      gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n      currentBlendSrc = blendSrc;\n      currentBlendDst = blendDst;\n      currentBlendSrcAlpha = blendSrcAlpha;\n      currentBlendDstAlpha = blendDstAlpha;\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = null;\n  }\n\n  function setMaterial(material, frontFaceCW) {\n    material.side === _constants.DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n    let flipSided = material.side === _constants.BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n    setFlipSided(flipSided);\n    material.blending === _constants.NormalBlending && material.transparent === false ? setBlending(_constants.NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    const stencilWrite = material.stencilWrite;\n    stencilBuffer.setTest(stencilWrite);\n\n    if (stencilWrite) {\n      stencilBuffer.setMask(material.stencilWriteMask);\n      stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n      stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n    }\n\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    material.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n  } //\n\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== _constants.CullFaceNone) {\n      enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === _constants.CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === _constants.CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(gl.SCISSOR_TEST);\n    } else {\n      disable(gl.SCISSOR_TEST);\n    }\n  } // texture\n\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      activeTexture();\n    }\n\n    let boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function unbindTexture() {\n    const boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture !== undefined && boundTexture.type !== undefined) {\n      gl.bindTexture(boundTexture.type, null);\n      boundTexture.type = undefined;\n      boundTexture.texture = undefined;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage2D() {\n    try {\n      gl.texSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage3D() {\n    try {\n      gl.texSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function compressedTexSubImage2D() {\n    try {\n      gl.compressedTexSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage2D() {\n    try {\n      gl.texStorage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage3D() {\n    try {\n      gl.texStorage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage3D() {\n    try {\n      gl.texImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  } //\n\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  } //\n\n\n  function reset() {\n    // reset state\n    gl.disable(gl.BLEND);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ZERO);\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0, 0, 0, 0);\n    gl.depthMask(true);\n    gl.depthFunc(gl.LESS);\n    gl.clearDepth(1);\n    gl.stencilMask(0xffffffff);\n    gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.clearStencil(0);\n    gl.cullFace(gl.BACK);\n    gl.frontFace(gl.CCW);\n    gl.polygonOffset(0, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    if (isWebGL2 === true) {\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n    }\n\n    gl.useProgram(null);\n    gl.lineWidth(1);\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n    enabledCapabilities = {};\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBoundFramebuffers = {};\n    currentDrawbuffers = new WeakMap();\n    defaultDrawbuffers = [];\n    currentProgram = null;\n    currentBlendingEnabled = false;\n    currentBlending = null;\n    currentBlendEquation = null;\n    currentBlendSrc = null;\n    currentBlendDst = null;\n    currentBlendEquationAlpha = null;\n    currentBlendSrcAlpha = null;\n    currentBlendDstAlpha = null;\n    currentPremultipledAlpha = false;\n    currentFlipSided = null;\n    currentCullFace = null;\n    currentLineWidth = null;\n    currentPolygonOffsetFactor = null;\n    currentPolygonOffsetUnits = null;\n    currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n    currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    enable: enable,\n    disable: disable,\n    bindFramebuffer: bindFramebuffer,\n    drawBuffers: drawBuffers,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    unbindTexture: unbindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    texImage2D: texImage2D,\n    texImage3D: texImage3D,\n    texStorage2D: texStorage2D,\n    texStorage3D: texStorage3D,\n    texSubImage2D: texSubImage2D,\n    texSubImage3D: texSubImage3D,\n    compressedTexSubImage2D: compressedTexSubImage2D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLState","gl","extensions","capabilities","createTexture","type","target","count","data","Uint8Array","texture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","i","texImage2D","RGBA","UNSIGNED_BYTE","enable","id","enabledCapabilities","disable","setBlending","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","_constants","NoBlending","currentBlendingEnabled","BLEND","CustomBlending","currentBlending","currentPremultipledAlpha","currentBlendEquation","AddEquation","currentBlendEquationAlpha","FUNC_ADD","NormalBlending","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","AdditiveBlending","blendFunc","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","MultiplyBlending","SRC_COLOR","SRC_ALPHA","console","error","currentBlendDstAlpha","currentBlendSrcAlpha","currentBlendDst","currentBlendSrc","blendEquationSeparate","equationToGL","factorToGL","setFlipSided","flipSided","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","CULL_FACE","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","units","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","activeTexture","webglSlot","undefined","TEXTURE0","maxTextures","currentTextureSlot","isWebGL2","colorBuffer","ColorBuffer","locked","color","_Vector","Vector4","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","r","g","b","a","set","equals","clearColor","copy","reset","depthBuffer","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthTest","DEPTH_TEST","depthMask","setFunc","depthFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LessEqualDepth","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","depth","clearDepth","stencilBuffer","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","currentBoundFramebuffers","currentDrawbuffers","WeakMap","defaultDrawbuffers","currentProgram","currentLineWidth","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","version","glVersion","VERSION","indexOf","parseFloat","exec","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","MinEquation","MIN","MaxEquation","MAX","extension","get","MIN_EXT","MAX_EXT","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","DstColorFactor","DST_COLOR","DstAlphaFactor","DST_ALPHA","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","buffers","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","renderTarget","needsUpdate","isWebGLMultipleRenderTargets","textures","length","COLOR_ATTACHMENT0","il","drawBuffersWEBGL","useProgram","program","setMaterial","material","frontFaceCW","side","DoubleSide","BackSide","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","width","lineWidth","setScissorTest","scissorTest","SCISSOR_TEST","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","texImage3D","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","scissor","x","y","z","w","viewport","KEEP","READ_FRAMEBUFFER","canvas","height"]
}
