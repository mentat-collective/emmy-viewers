{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLState.js",
"lineCount":35,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLState\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLState = WebGLState;\n\nvar _constants = require(\"../../constants.js\");\n\nvar _Vector = require(\"../../math/Vector4.js\");\n\nfunction WebGLState(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n\n  function ColorBuffer() {\n    let locked = false;\n    const color = new _Vector.Vector4();\n    let currentColorMask = null;\n    const currentColorClear = new _Vector.Vector4(0, 0, 0, 0);\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    let locked = false;\n    let currentDepthMask = null;\n    let currentDepthFunc = null;\n    let currentDepthClear = null;\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(gl.DEPTH_TEST);\n        } else {\n          disable(gl.DEPTH_TEST);\n        }\n      },\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          switch (depthFunc) {\n            case _constants.NeverDepth:\n              gl.depthFunc(gl.NEVER);\n              break;\n\n            case _constants.AlwaysDepth:\n              gl.depthFunc(gl.ALWAYS);\n              break;\n\n            case _constants.LessDepth:\n              gl.depthFunc(gl.LESS);\n              break;\n\n            case _constants.LessEqualDepth:\n              gl.depthFunc(gl.LEQUAL);\n              break;\n\n            case _constants.EqualDepth:\n              gl.depthFunc(gl.EQUAL);\n              break;\n\n            case _constants.GreaterEqualDepth:\n              gl.depthFunc(gl.GEQUAL);\n              break;\n\n            case _constants.GreaterDepth:\n              gl.depthFunc(gl.GREATER);\n              break;\n\n            case _constants.NotEqualDepth:\n              gl.depthFunc(gl.NOTEQUAL);\n              break;\n\n            default:\n              gl.depthFunc(gl.LEQUAL);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n\n  function StencilBuffer() {\n    let locked = false;\n    let currentStencilMask = null;\n    let currentStencilFunc = null;\n    let currentStencilRef = null;\n    let currentStencilFuncMask = null;\n    let currentStencilFail = null;\n    let currentStencilZFail = null;\n    let currentStencilZPass = null;\n    let currentStencilClear = null;\n    return {\n      setTest: function (stencilTest) {\n        if (!locked) {\n          if (stencilTest) {\n            enable(gl.STENCIL_TEST);\n          } else {\n            disable(gl.STENCIL_TEST);\n          }\n        }\n      },\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  } //\n\n\n  const colorBuffer = new ColorBuffer();\n  const depthBuffer = new DepthBuffer();\n  const stencilBuffer = new StencilBuffer();\n  const uboBindings = new WeakMap();\n  const uboProgamMap = new WeakMap();\n  let enabledCapabilities = {};\n  let currentBoundFramebuffers = {};\n  let currentDrawbuffers = new WeakMap();\n  let defaultDrawbuffers = [];\n  let currentProgram = null;\n  let currentBlendingEnabled = false;\n  let currentBlending = null;\n  let currentBlendEquation = null;\n  let currentBlendSrc = null;\n  let currentBlendDst = null;\n  let currentBlendEquationAlpha = null;\n  let currentBlendSrcAlpha = null;\n  let currentBlendDstAlpha = null;\n  let currentPremultipledAlpha = false;\n  let currentFlipSided = null;\n  let currentCullFace = null;\n  let currentLineWidth = null;\n  let currentPolygonOffsetFactor = null;\n  let currentPolygonOffsetUnits = null;\n  const maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  let lineWidthAvailable = false;\n  let version = 0;\n  const glVersion = gl.getParameter(gl.VERSION);\n\n  if (glVersion.indexOf('WebGL') !== -1) {\n    version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n    version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n\n  let currentTextureSlot = null;\n  let currentBoundTextures = {};\n  const scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n  const viewportParam = gl.getParameter(gl.VIEWPORT);\n  const currentScissor = new _Vector.Vector4().fromArray(scissorParam);\n  const currentViewport = new _Vector.Vector4().fromArray(viewportParam);\n\n  function createTexture(type, target, count) {\n    const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n    const texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (let i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  const emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(gl.DEPTH_TEST);\n  depthBuffer.setFunc(_constants.LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(_constants.CullFaceBack);\n  enable(gl.CULL_FACE);\n  setBlending(_constants.NoBlending); //\n\n  function enable(id) {\n    if (enabledCapabilities[id] !== true) {\n      gl.enable(id);\n      enabledCapabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (enabledCapabilities[id] !== false) {\n      gl.disable(id);\n      enabledCapabilities[id] = false;\n    }\n  }\n\n  function bindFramebuffer(target, framebuffer) {\n    if (currentBoundFramebuffers[target] !== framebuffer) {\n      gl.bindFramebuffer(target, framebuffer);\n      currentBoundFramebuffers[target] = framebuffer;\n\n      if (isWebGL2) {\n        // gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n        if (target === gl.DRAW_FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n        }\n\n        if (target === gl.FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function drawBuffers(renderTarget, framebuffer) {\n    let drawBuffers = defaultDrawbuffers;\n    let needsUpdate = false;\n\n    if (renderTarget) {\n      drawBuffers = currentDrawbuffers.get(framebuffer);\n\n      if (drawBuffers === undefined) {\n        drawBuffers = [];\n        currentDrawbuffers.set(framebuffer, drawBuffers);\n      }\n\n      if (renderTarget.isWebGLMultipleRenderTargets) {\n        const textures = renderTarget.texture;\n\n        if (drawBuffers.length !== textures.length || drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          for (let i = 0, il = textures.length; i < il; i++) {\n            drawBuffers[i] = gl.COLOR_ATTACHMENT0 + i;\n          }\n\n          drawBuffers.length = textures.length;\n          needsUpdate = true;\n        }\n      } else {\n        if (drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          drawBuffers[0] = gl.COLOR_ATTACHMENT0;\n          needsUpdate = true;\n        }\n      }\n    } else {\n      if (drawBuffers[0] !== gl.BACK) {\n        drawBuffers[0] = gl.BACK;\n        needsUpdate = true;\n      }\n    }\n\n    if (needsUpdate) {\n      if (capabilities.isWebGL2) {\n        gl.drawBuffers(drawBuffers);\n      } else {\n        extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(drawBuffers);\n      }\n    }\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n\n    return false;\n  }\n\n  const equationToGL = {\n    [_constants.AddEquation]: gl.FUNC_ADD,\n    [_constants.SubtractEquation]: gl.FUNC_SUBTRACT,\n    [_constants.ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n  };\n\n  if (isWebGL2) {\n    equationToGL[_constants.MinEquation] = gl.MIN;\n    equationToGL[_constants.MaxEquation] = gl.MAX;\n  } else {\n    const extension = extensions.get('EXT_blend_minmax');\n\n    if (extension !== null) {\n      equationToGL[_constants.MinEquation] = extension.MIN_EXT;\n      equationToGL[_constants.MaxEquation] = extension.MAX_EXT;\n    }\n  }\n\n  const factorToGL = {\n    [_constants.ZeroFactor]: gl.ZERO,\n    [_constants.OneFactor]: gl.ONE,\n    [_constants.SrcColorFactor]: gl.SRC_COLOR,\n    [_constants.SrcAlphaFactor]: gl.SRC_ALPHA,\n    [_constants.SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n    [_constants.DstColorFactor]: gl.DST_COLOR,\n    [_constants.DstAlphaFactor]: gl.DST_ALPHA,\n    [_constants.OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n    [_constants.OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n    [_constants.OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n    [_constants.OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n  };\n\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === _constants.NoBlending) {\n      if (currentBlendingEnabled === true) {\n        disable(gl.BLEND);\n        currentBlendingEnabled = false;\n      }\n\n      return;\n    }\n\n    if (currentBlendingEnabled === false) {\n      enable(gl.BLEND);\n      currentBlendingEnabled = true;\n    }\n\n    if (blending !== _constants.CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        if (currentBlendEquation !== _constants.AddEquation || currentBlendEquationAlpha !== _constants.AddEquation) {\n          gl.blendEquation(gl.FUNC_ADD);\n          currentBlendEquation = _constants.AddEquation;\n          currentBlendEquationAlpha = _constants.AddEquation;\n        }\n\n        if (premultipliedAlpha) {\n          switch (blending) {\n            case _constants.NormalBlending:\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n\n            case _constants.AdditiveBlending:\n              gl.blendFunc(gl.ONE, gl.ONE);\n              break;\n\n            case _constants.SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n\n            case _constants.MultiplyBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        } else {\n          switch (blending) {\n            case _constants.NormalBlending:\n              gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n\n            case _constants.AdditiveBlending:\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n              break;\n\n            case _constants.SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n\n            case _constants.MultiplyBlending:\n              gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n              break;\n\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        }\n\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n\n      return;\n    } // custom blending\n\n\n    blendEquationAlpha = blendEquationAlpha || blendEquation;\n    blendSrcAlpha = blendSrcAlpha || blendSrc;\n    blendDstAlpha = blendDstAlpha || blendDst;\n\n    if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n      gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n      currentBlendEquation = blendEquation;\n      currentBlendEquationAlpha = blendEquationAlpha;\n    }\n\n    if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n      gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n      currentBlendSrc = blendSrc;\n      currentBlendDst = blendDst;\n      currentBlendSrcAlpha = blendSrcAlpha;\n      currentBlendDstAlpha = blendDstAlpha;\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = null;\n  }\n\n  function setMaterial(material, frontFaceCW) {\n    material.side === _constants.DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n    let flipSided = material.side === _constants.BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n    setFlipSided(flipSided);\n    material.blending === _constants.NormalBlending && material.transparent === false ? setBlending(_constants.NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    const stencilWrite = material.stencilWrite;\n    stencilBuffer.setTest(stencilWrite);\n\n    if (stencilWrite) {\n      stencilBuffer.setMask(material.stencilWriteMask);\n      stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n      stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n    }\n\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    material.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n  } //\n\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== _constants.CullFaceNone) {\n      enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === _constants.CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === _constants.CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(gl.SCISSOR_TEST);\n    } else {\n      disable(gl.SCISSOR_TEST);\n    }\n  } // texture\n\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture, webglSlot) {\n    if (webglSlot === undefined) {\n      if (currentTextureSlot === null) {\n        webglSlot = gl.TEXTURE0 + maxTextures - 1;\n      } else {\n        webglSlot = currentTextureSlot;\n      }\n    }\n\n    let boundTexture = currentBoundTextures[webglSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[webglSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function unbindTexture() {\n    const boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture !== undefined && boundTexture.type !== undefined) {\n      gl.bindTexture(boundTexture.type, null);\n      boundTexture.type = undefined;\n      boundTexture.texture = undefined;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function compressedTexImage3D() {\n    try {\n      gl.compressedTexImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage2D() {\n    try {\n      gl.texSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texSubImage3D() {\n    try {\n      gl.texSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function compressedTexSubImage2D() {\n    try {\n      gl.compressedTexSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function compressedTexSubImage3D() {\n    try {\n      gl.compressedTexSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage2D() {\n    try {\n      gl.texStorage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texStorage3D() {\n    try {\n      gl.texStorage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage3D() {\n    try {\n      gl.texImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  } //\n\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }\n\n  function updateUBOMapping(uniformsGroup, program) {\n    let mapping = uboProgamMap.get(program);\n\n    if (mapping === undefined) {\n      mapping = new WeakMap();\n      uboProgamMap.set(program, mapping);\n    }\n\n    let blockIndex = mapping.get(uniformsGroup);\n\n    if (blockIndex === undefined) {\n      blockIndex = gl.getUniformBlockIndex(program, uniformsGroup.name);\n      mapping.set(uniformsGroup, blockIndex);\n    }\n  }\n\n  function uniformBlockBinding(uniformsGroup, program) {\n    const mapping = uboProgamMap.get(program);\n    const blockIndex = mapping.get(uniformsGroup);\n\n    if (uboBindings.get(uniformsGroup) !== blockIndex) {\n      // bind shader specific block index to global block point\n      gl.uniformBlockBinding(program, blockIndex, uniformsGroup.__bindingPointIndex);\n      uboBindings.set(uniformsGroup, blockIndex);\n    }\n  } //\n\n\n  function reset() {\n    // reset state\n    gl.disable(gl.BLEND);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ZERO);\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0, 0, 0, 0);\n    gl.depthMask(true);\n    gl.depthFunc(gl.LESS);\n    gl.clearDepth(1);\n    gl.stencilMask(0xffffffff);\n    gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.clearStencil(0);\n    gl.cullFace(gl.BACK);\n    gl.frontFace(gl.CCW);\n    gl.polygonOffset(0, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    if (isWebGL2 === true) {\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n    }\n\n    gl.useProgram(null);\n    gl.lineWidth(1);\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n    enabledCapabilities = {};\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBoundFramebuffers = {};\n    currentDrawbuffers = new WeakMap();\n    defaultDrawbuffers = [];\n    currentProgram = null;\n    currentBlendingEnabled = false;\n    currentBlending = null;\n    currentBlendEquation = null;\n    currentBlendSrc = null;\n    currentBlendDst = null;\n    currentBlendEquationAlpha = null;\n    currentBlendSrcAlpha = null;\n    currentBlendDstAlpha = null;\n    currentPremultipledAlpha = false;\n    currentFlipSided = null;\n    currentCullFace = null;\n    currentLineWidth = null;\n    currentPolygonOffsetFactor = null;\n    currentPolygonOffsetUnits = null;\n    currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n    currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    enable: enable,\n    disable: disable,\n    bindFramebuffer: bindFramebuffer,\n    drawBuffers: drawBuffers,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    unbindTexture: unbindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    compressedTexImage3D: compressedTexImage3D,\n    texImage2D: texImage2D,\n    texImage3D: texImage3D,\n    updateUBOMapping: updateUBOMapping,\n    uniformBlockBinding: uniformBlockBinding,\n    texStorage2D: texStorage2D,\n    texStorage3D: texStorage3D,\n    texSubImage2D: texSubImage2D,\n    texSubImage3D: texSubImage3D,\n    compressedTexSubImage2D: compressedTexSubImage2D,\n    compressedTexSubImage3D: compressedTexSubImage3D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLState","gl","extensions","capabilities","createTexture","type","target","count","data","Uint8Array","texture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","i","texImage2D","RGBA","UNSIGNED_BYTE","enable","id","enabledCapabilities","disable","setBlending","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","_constants","NoBlending","currentBlendingEnabled","BLEND","CustomBlending","currentBlending","currentPremultipledAlpha","currentBlendEquation","AddEquation","currentBlendEquationAlpha","FUNC_ADD","NormalBlending","blendFuncSeparate","ONE","ONE_MINUS_SRC_ALPHA","AdditiveBlending","blendFunc","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","MultiplyBlending","SRC_COLOR","SRC_ALPHA","console","error","currentBlendDstAlpha","currentBlendSrcAlpha","currentBlendDst","currentBlendSrc","blendEquationSeparate","equationToGL","factorToGL","setFlipSided","flipSided","currentFlipSided","frontFace","CW","CCW","setCullFace","cullFace","CullFaceNone","CULL_FACE","currentCullFace","CullFaceBack","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setPolygonOffset","polygonOffset","factor","units","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","isWebGL2","colorBuffer","ColorBuffer","locked","color","_Vector","Vector4","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","r","g","b","a","set","equals","clearColor","copy","reset","depthBuffer","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthTest","DEPTH_TEST","depthMask","setFunc","depthFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LessEqualDepth","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","depth","clearDepth","stencilBuffer","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","uboBindings","WeakMap","uboProgamMap","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentLineWidth","maxTextures","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","version","glVersion","VERSION","indexOf","parseFloat","exec","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","MinEquation","MIN","MaxEquation","MAX","extension","get","MIN_EXT","MAX_EXT","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","DstColorFactor","DST_COLOR","DstAlphaFactor","DST_ALPHA","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","buffers","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","renderTarget","needsUpdate","isWebGLMultipleRenderTargets","undefined","textures","length","COLOR_ATTACHMENT0","il","drawBuffersWEBGL","useProgram","program","setMaterial","material","frontFaceCW","side","DoubleSide","BackSide","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","SAMPLE_ALPHA_TO_COVERAGE","setLineWidth","width","lineWidth","setScissorTest","scissorTest","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","compressedTexImage3D","texImage3D","updateUBOMapping","uniformsGroup","mapping","blockIndex","getUniformBlockIndex","name","uniformBlockBinding","__bindingPointIndex","texStorage2D","texStorage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","scissor","x","y","z","w","viewport","KEEP","READ_FRAMEBUFFER","canvas","height"]
}
