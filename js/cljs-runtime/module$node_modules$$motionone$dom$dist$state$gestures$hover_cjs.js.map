{
"version":3,
"file":"module$node_modules$$motionone$dom$dist$state$gestures$hover_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,OAASN,OAAA,CAAQ,gEAAR,CAEb,OAAMO,WAAa,CAACC,OAAD,CAAUC,IAAV,CAAgBC,MAAhB,CAAAH,EAA4BI,KAAD,EAAW,CACjDA,KAAMC,CAAAA,WAAV,EAA+C,OAA/C,GAAyBD,KAAMC,CAAAA,WAA/B,GAEAF,MAAA,EACA,CAAAJ,MAAOO,CAAAA,oBAAP,CAA4BL,OAA5B,CAAqCC,IAArC,CAA2CE,KAA3C,CAHA,CADqD,CAoBzDT,QAAQY,CAAAA,KAAR,CAdcA,CACVC,SAAWC,OAADD,EAAa,CAAA,CAAQC,OAAQF,CAAAA,KAD7BA,CAEVG,UAAW,CAACT,OAAD,CAAU,CAAEU,MAAF,CAAUC,OAAV,CAAV,CAAAF;AAAkC,CACzC,MAAMG,QAAUb,UAAA,CAAWC,OAAX,CAAoB,YAApB,CAAkCU,MAAlC,CAAhB,CACMG,QAAUd,UAAA,CAAWC,OAAX,CAAoB,UAApB,CAAgCW,OAAhC,CAChBX,QAAQc,CAAAA,gBAAR,CAAyB,cAAzB,CAAyCF,OAAzC,CACAZ,QAAQc,CAAAA,gBAAR,CAAyB,cAAzB,CAAyCD,OAAzC,CACA,OAAO,EAAA,EAAM,CACTb,OAAQe,CAAAA,mBAAR,CAA4B,cAA5B,CAA4CH,OAA5C,CACAZ,QAAQe,CAAAA,mBAAR,CAA4B,cAA5B,CAA4CF,OAA5C,CAFS,CAL4B,CAFnCP,CAb+G;",
"sources":["node_modules/@motionone/dom/dist/state/gestures/hover.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$dom$dist$state$gestures$hover_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar events = require('../utils/events.cjs.js');\n\nconst mouseEvent = (element, name, action) => (event) => {\n    if (event.pointerType && event.pointerType !== \"mouse\")\n        return;\n    action();\n    events.dispatchPointerEvent(element, name, event);\n};\nconst hover = {\n    isActive: (options) => Boolean(options.hover),\n    subscribe: (element, { enable, disable }) => {\n        const onEnter = mouseEvent(element, \"hoverstart\", enable);\n        const onLeave = mouseEvent(element, \"hoverend\", disable);\n        element.addEventListener(\"pointerenter\", onEnter);\n        element.addEventListener(\"pointerleave\", onLeave);\n        return () => {\n            element.removeEventListener(\"pointerenter\", onEnter);\n            element.removeEventListener(\"pointerleave\", onLeave);\n        };\n    },\n};\n\nexports.hover = hover;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","events","mouseEvent","element","name","action","event","pointerType","dispatchPointerEvent","hover","isActive","options","subscribe","enable","disable","onEnter","onLeave","addEventListener","removeEventListener"]
}
