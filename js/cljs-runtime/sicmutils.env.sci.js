goog.provide('sicmutils.env.sci');
sicmutils.env.sci.macro_QMARK_ = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"macro","macro",-867863404),cljs.core.meta);
sicmutils.env.sci.dynamic_QMARK_ = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"dynamic","dynamic",704819571),cljs.core.meta);
/**
 * Given a map of symbol => var, returns a sequence of the symbols associated with
 *   macro value.
 */
sicmutils.env.sci.ns_macros = (function sicmutils$env$sci$ns_macros(sym__GT_var){
return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__103993){
var vec__103994 = p__103993;
var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__103994,(0),null);
var var$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__103994,(1),null);
if(cljs.core.truth_(sicmutils.env.sci.macro_QMARK_(var$))){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym], null);
} else {
return cljs.core.PersistentVector.EMPTY;
}
}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__GT_var], 0));
});
/**
 * Given a map of symbol => var, returns a map of symbol => var with:
 * 
 *   - any pair removed whose value is a macro (tagged with `:macro true` metadata)
 *   - all other values resolved
 */
sicmutils.env.sci.sci_ns = (function sicmutils$env$sci$sci_ns(sym__GT_var){
var process = (function sicmutils$env$sci$sci_ns_$_process(p__104003){
var vec__104005 = p__104003;
var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__104005,(0),null);
var var$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__104005,(1),null);
if(cljs.core.truth_(sicmutils.env.sci.macro_QMARK_(var$))){
return cljs.core.PersistentVector.EMPTY;
} else {
if(cljs.core.truth_(sicmutils.env.sci.dynamic_QMARK_(var$))){
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,var$], null)], null);
} else {
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,cljs.core.deref(var$)], null)], null);

}
}
});
return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(process),sym__GT_var);
});
/**
 * Map whose values are the symbols of of all namespaces explicitly
 *  checked and whitelisted for SCI compilation and interesting enough in their own
 *  right to expose to a user by default. Each value is the sym->var map for the
 *  corresponding namespace.
 */
sicmutils.env.sci.ns__GT_publics = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,"sicmutils.util.def","sicmutils.util.def",-1731630303,null),new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"sicmutils.numerical.quadrature","sicmutils.numerical.quadrature",-889649827,null),new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"sicmutils.abstract.number","sicmutils.abstract.number",1725359089,null),new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sicmutils.util.logic","sicmutils.util.logic",1571775071,null),new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"pattern.consequence","pattern.consequence",-139029692,null),new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"sicmutils.numerical.minimize","sicmutils.numerical.minimize",2114619701,null),new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"sicmutils.calculus.coordinate","sicmutils.calculus.coordinate",1791156794,null),new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"sicmutils.numerical.multimin.nelder-mead","sicmutils.numerical.multimin.nelder-mead",-52170042,null),new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"sicmutils.mechanics.noether","sicmutils.mechanics.noether",1498111737,null),new cljs.core.Symbol(null,"sicmutils.mechanics.time-evolution","sicmutils.mechanics.time-evolution",-162436091,null),new cljs.core.Symbol(null,"sicmutils.calculus.hodge-star","sicmutils.calculus.hodge-star",630082700,null),new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"sicmutils.numerical.unimin.brent","sicmutils.numerical.unimin.brent",1843521505,null),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null)],[cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lowercase-symbols"),new cljs.core.Var(function(){return sicmutils.util.def.lowercase_symbols;},new cljs.core.Symbol("sicmutils.util.def","lowercase-symbols","sicmutils.util.def/lowercase-symbols",-1201687085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.util.def","sicmutils.util.def",-1731630303,null),new cljs.core.Symbol(null,"lowercase-symbols","lowercase-symbols",230254121,null),"sicmutils/util/def.cljc",32,1,18,18,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.def.lowercase_symbols)?sicmutils.util.def.lowercase_symbols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arglists"),new cljs.core.Var(function(){return sicmutils.util.def.arglists;},new cljs.core.Symbol("sicmutils.util.def","arglists","sicmutils.util.def/arglists",280078299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.util.def","sicmutils.util.def",-1731630303,null),new cljs.core.Symbol(null,"arglists","arglists",-992446015,null),"sicmutils/util/def.cljc",24,1,22,22,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"returns a list of `:arglists` entries appropriate for a generic function with\n  arities between `a` and `b` inclusive.",(cljs.core.truth_(sicmutils.util.def.arglists)?sicmutils.util.def.arglists.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("careful-def"),new cljs.core.Var(function(){return sicmutils.util.def.careful_def;},new cljs.core.Symbol("sicmutils.util.def","careful-def","sicmutils.util.def/careful-def",-2114771430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.def","sicmutils.util.def",-1731630303,null),new cljs.core.Symbol(null,"careful-def","careful-def",1574540304,null),"sicmutils/util/def.cljc",18,1,116,116,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Given some namespace `ns`, returns a function of some binding symbol and a form\n  to bind. The function returns either\n\n  - A form like `(def ~sym ~form)`, if `sym` is not currently bound into `ns`\n\n  - If `sym` is bound already, returns a form that emits a warning and then\n    uses `ns-unmap` and `intern` to reassign the binding.\n\n  In Clojure, this behavior matches redefinitions of symbols bound in\n  `clojure.core`. Symbols bound with `def` that are already imported from other\n  namespaces cause an exception, hence this more careful workaround.\n\n  (In Clojurescript, only forms like `(def ~sym ~form)` are emitted, since the\n  compiler does not currently error in case 2 and already handles emitting the\n  warning for us.)",(cljs.core.truth_(sicmutils.util.def.careful_def)?sicmutils.util.def.careful_def.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.operator.arity;},new cljs.core.Symbol("sicmutils.operator","arity","sicmutils.operator/arity",-1891486109,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/operator.cljc",12,1,175,175,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),"Returns the arity of the supplied [[Operator]]. Errors if a non-[[Operator]] is\n  supplied.",(cljs.core.truth_(sicmutils.operator.arity)?sicmutils.operator.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Operator"),new cljs.core.Var(function(){return sicmutils.operator.Operator;},new cljs.core.Symbol("sicmutils.operator","Operator","sicmutils.operator/Operator",1857429511,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/operator.cljc",new cljs.core.Keyword(null,"line","line",212345235),29,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Operator","Operator",-197127296,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.operator.Operator)?sicmutils.operator.Operator.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("commutator"),new cljs.core.Var(function(){return sicmutils.operator.commutator;},new cljs.core.Symbol("sicmutils.operator","commutator","sicmutils.operator/commutator",-1875777874,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"commutator","commutator",1038087209,null),"sicmutils/operator.cljc",17,1,418,418,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o","o",290524299,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),null,(cljs.core.truth_(sicmutils.operator.commutator)?sicmutils.operator.commutator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity"),new cljs.core.Var(function(){return sicmutils.operator.identity;},new cljs.core.Symbol("sicmutils.operator","identity","sicmutils.operator/identity",-1202733687,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"identity","identity",-1007039734,null),"sicmutils/operator.cljc",11,1,236,237,cljs.core.List.EMPTY,"Identity operator. Returns its argument unchanged.",(cljs.core.truth_(sicmutils.operator.identity)?sicmutils.operator.identity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("name"),new cljs.core.Var(function(){return sicmutils.operator.name;},new cljs.core.Symbol("sicmutils.operator","name","sicmutils.operator/name",1700672759,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"name","name",-810760592,null),"sicmutils/operator.cljc",11,1,183,183,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),"Returns the stored name of the supplied [[Operator]]. Errors if a\n  non-[[Operator]] is supplied.",(cljs.core.truth_(sicmutils.operator.name)?sicmutils.operator.name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp"),new cljs.core.Var(function(){return sicmutils.operator.exp;},new cljs.core.Symbol("sicmutils.operator","exp","sicmutils.operator/exp",-996334922,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"exp","exp",1378825265,null),"sicmutils/operator.cljc",10,1,424,424,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),"Returns an operator represented by a Taylor series expansion of $e^x$, applied\n  to `op`. This expanded series of operators is itself an operator that applies\n  each element to its argument.\n\n  Put another way: `(exp g)` to an operator g means forming the power series\n\n  ```\n  I + g + 1/2 g^2 + ... + 1/n! g^n\n  ```\n\n  where (as elsewhere) exponentiating the operator means `n`-fold composition.",(cljs.core.truth_(sicmutils.operator.exp)?sicmutils.operator.exp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-operator"),new cljs.core.Var(function(){return sicmutils.operator.make_operator;},new cljs.core.Symbol("sicmutils.operator","make-operator","sicmutils.operator/make-operator",-1539863085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"make-operator","make-operator",329621074,null),"sicmutils/operator.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,210,210,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null)),"Returns an [[Operator]] wrapping the supplied procedure `f` with the symbolic\n  name `name`. (`name` defaults to `'???`.)\n\n  Optionally accepts a `context` map that will be stored inside the\n  returned [[Operator]].",(cljs.core.truth_(sicmutils.operator.make_operator)?sicmutils.operator.make_operator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("procedure"),new cljs.core.Var(function(){return sicmutils.operator.procedure;},new cljs.core.Symbol("sicmutils.operator","procedure","sicmutils.operator/procedure",-624740782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"procedure","procedure",1817254099,null),"sicmutils/operator.cljc",16,1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),"Returns the backing procedure of the supplied [[Operator]]. Errors if a\n  non-[[Operator]] is supplied.",(cljs.core.truth_(sicmutils.operator.procedure)?sicmutils.operator.procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expn"),new cljs.core.Var(function(){return sicmutils.operator.expn;},new cljs.core.Symbol("sicmutils.operator","expn","sicmutils.operator/expn",-400239819,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"expn","expn",381067956,null),"sicmutils/operator.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,444,444,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Similar to `exp`, but takes an optional argument `n` that defines an order for\n  each term of the taylor series expansion.",(cljs.core.truth_(sicmutils.operator.expn)?sicmutils.operator.expn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Operator"),new cljs.core.Var(function(){return sicmutils.operator.__GT_Operator;},new cljs.core.Symbol("sicmutils.operator","->Operator","sicmutils.operator/->Operator",6867223,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"->Operator","->Operator",2055658388,null),"sicmutils/operator.cljc",18,1,new cljs.core.Keyword(null,"positional","positional",-203580463),29,29,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o","o",290524299,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),"Positional factory function for sicmutils.operator/Operator.",(cljs.core.truth_(sicmutils.operator.__GT_Operator)?sicmutils.operator.__GT_Operator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operator?"),new cljs.core.Var(function(){return sicmutils.operator.operator_QMARK_;},new cljs.core.Symbol("sicmutils.operator","operator?","sicmutils.operator/operator?",-257890633,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"operator?","operator?",1708561462,null),"sicmutils/operator.cljc",16,1,161,161,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if the supplied `x` is an instance of [[Operator]], false\n  otherwise.",(cljs.core.truth_(sicmutils.operator.operator_QMARK_)?sicmutils.operator.operator_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-context"),new cljs.core.Var(function(){return sicmutils.operator.with_context;},new cljs.core.Symbol("sicmutils.operator","with-context","sicmutils.operator/with-context",1549522554,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"with-context","with-context",582336763,null),"sicmutils/operator.cljc",28,1,199,199,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"ctx","ctx",1146921409,null)], null)),"Returns a copy of the supplied operator with `ctx` substituted for its\n  context.",(cljs.core.truth_(sicmutils.operator.with_context)?sicmutils.operator.with_context.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("anticommutator"),new cljs.core.Var(function(){return sicmutils.operator.anticommutator;},new cljs.core.Symbol("sicmutils.operator","anticommutator","sicmutils.operator/anticommutator",-1130576289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"anticommutator","anticommutator",369809372,null),"sicmutils/operator.cljc",21,1,421,421,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o","o",290524299,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),null,(cljs.core.truth_(sicmutils.operator.anticommutator)?sicmutils.operator.anticommutator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("context"),new cljs.core.Var(function(){return sicmutils.operator.context;},new cljs.core.Symbol("sicmutils.operator","context","sicmutils.operator/context",-1361132865,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.operator","sicmutils.operator",901966039,null),new cljs.core.Symbol(null,"context","context",810340414,null),"sicmutils/operator.cljc",14,1,191,191,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null)], null)),"Returns the context field of the supplied [[Operator]]. Errors if a\n  non-[[Operator]] is supplied.",(cljs.core.truth_(sicmutils.operator.context)?sicmutils.operator.context.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("IRational"),new cljs.core.Var(function(){return sicmutils.ratio.IRational;},new cljs.core.Symbol("sicmutils.ratio","IRational","sicmutils.ratio/IRational",324435,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"IRational","IRational",1043551137,null),"sicmutils/ratio.cljc",23,1,33,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 2, [cljs.core.with_meta(new cljs.core.Symbol(null,"numerator","numerator",1479770423,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"denominator","denominator",836166431,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null)], null)], null),33,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"numerator","numerator",-160761104),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"numerator","numerator",1479770423,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.Keyword(null,"denominator","denominator",-804365096),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"denominator","denominator",836166431,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.ratio.IRational)?sicmutils.ratio.IRational.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ratiotype"),new cljs.core.Var(function(){return sicmutils.ratio.ratiotype;},new cljs.core.Symbol("sicmutils.ratio","ratiotype","sicmutils.ratio/ratiotype",-617246671,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"ratiotype","ratiotype",-653757565,null),"sicmutils/ratio.cljc",24,1,24,24,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.ratio.ratiotype)?sicmutils.ratio.ratiotype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matches?"),new cljs.core.Var(function(){return sicmutils.ratio.matches_QMARK_;},new cljs.core.Symbol("sicmutils.ratio","matches?","sicmutils.ratio/matches?",265614184,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"matches?","matches?",231232054,null),"sicmutils/ratio.cljc",15,1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.ratio.matches_QMARK_)?sicmutils.ratio.matches_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("numerator"),new cljs.core.Var(function(){return sicmutils.ratio.numerator;},new cljs.core.Symbol("sicmutils.ratio","numerator","sicmutils.ratio/numerator",1513039557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.ratio","IRational","sicmutils.ratio/IRational",324435,null),new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"numerator","numerator",1479770423,null),"sicmutils/ratio.cljc",13,1,33,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(sicmutils.ratio.numerator)?sicmutils.ratio.numerator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ratio?"),new cljs.core.Var(function(){return sicmutils.ratio.ratio_QMARK_;},new cljs.core.Symbol("sicmutils.ratio","ratio?","sicmutils.ratio/ratio?",-465834171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"ratio?","ratio?",-498643049,null),"sicmutils/ratio.cljc",12,1,29,29,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.ratio.ratio_QMARK_)?sicmutils.ratio.ratio_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parse-ratio"),new cljs.core.Var(function(){return sicmutils.ratio.parse_ratio;},new cljs.core.Symbol("sicmutils.ratio","parse-ratio","sicmutils.ratio/parse-ratio",1871920965,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"parse-ratio","parse-ratio",1768923063,null),"sicmutils/ratio.cljc",18,1,95,95,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Parser for the `#sicm/ratio` literal.",(cljs.core.truth_(sicmutils.ratio.parse_ratio)?sicmutils.ratio.parse_ratio.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rationalize"),new cljs.core.Var(function(){return sicmutils.ratio.rationalize;},new cljs.core.Symbol("sicmutils.ratio","rationalize","sicmutils.ratio/rationalize",322986471,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"rationalize","rationalize",290767001,null),"sicmutils/ratio.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,64,64,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Construct a ratio.",(cljs.core.truth_(sicmutils.ratio.rationalize)?sicmutils.ratio.rationalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("denominator"),new cljs.core.Var(function(){return sicmutils.ratio.denominator;},new cljs.core.Symbol("sicmutils.ratio","denominator","sicmutils.ratio/denominator",939147885,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.ratio","IRational","sicmutils.ratio/IRational",324435,null),new cljs.core.Symbol(null,"sicmutils.ratio","sicmutils.ratio",-1186427896,null),new cljs.core.Symbol(null,"denominator","denominator",836166431,null),"sicmutils/ratio.cljc",15,1,33,35,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(sicmutils.ratio.denominator)?sicmutils.ratio.denominator.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("available-methods"),new cljs.core.Var(function(){return sicmutils.numerical.quadrature.available_methods;},new cljs.core.Symbol("sicmutils.numerical.quadrature","available-methods","sicmutils.numerical.quadrature/available-methods",-558268640,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.quadrature","sicmutils.numerical.quadrature",-889649827,null),new cljs.core.Symbol(null,"available-methods","available-methods",96037987,null),"sicmutils/numerical/quadrature.cljc",23,1,74,74,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numerical.quadrature.available_methods)?sicmutils.numerical.quadrature.available_methods.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-integrator"),new cljs.core.Var(function(){return sicmutils.numerical.quadrature.get_integrator;},new cljs.core.Symbol("sicmutils.numerical.quadrature","get-integrator","sicmutils.numerical.quadrature/get-integrator",133466178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.quadrature","sicmutils.numerical.quadrature",-889649827,null),new cljs.core.Symbol(null,"get-integrator","get-integrator",-285958527,null),"sicmutils/numerical/quadrature.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,102,102,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Takes:\n\n  - An integration method, specified as either:\n    - a keyword naming one of the available methods in `available-methods`\n    - a function with the proper integrator signature\n    - a dictionary of integrator options with a `:method` key\n\n  - `a` and `b` integration endpoints\n  - an optional dictionary of options `m`\n\n  And returns a pair of an integrator function and a possibly-enhanced options\n  dictionary.\n\n  (Some integration functions require extra options, so the returned dictionary\n  may have more entries than the `m` you pass in.)\n\n  If either endpoint is infinite, the returned integrator is wrapped in\n  `qi/improper` and able to handle infinite endpoints (as well as non-infinite\n  endpoints by passing through directly to the underlying integrator).",(cljs.core.truth_(sicmutils.numerical.quadrature.get_integrator)?sicmutils.numerical.quadrature.get_integrator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("definite-integral"),new cljs.core.Var(function(){return sicmutils.numerical.quadrature.definite_integral;},new cljs.core.Symbol("sicmutils.numerical.quadrature","definite-integral","sicmutils.numerical.quadrature/definite-integral",-1034548080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.quadrature","sicmutils.numerical.quadrature",-889649827,null),new cljs.core.Symbol(null,"definite-integral","definite-integral",760619981,null),"sicmutils/numerical/quadrature.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Keyword(null,"open","open",-1763596448),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),false,new cljs.core.Symbol(null,"info?","info?",2002457080,null),false], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Keyword(null,"open","open",-1763596448),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),false,new cljs.core.Symbol(null,"info?","info?",2002457080,null),false], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,137,137,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"method","method",1696235119,null),new cljs.core.Keyword(null,"open","open",-1763596448),new cljs.core.Symbol(null,"compile?","compile?",813843877,null),false,new cljs.core.Symbol(null,"info?","info?",2002457080,null),false], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Evaluates the definite integral of integrand `f` across the interval $a, b$.\n  Optionally accepts a dictionary `opts` of customizing options; All `opts` will\n  be passed through to the supplied `integrate` functions.\n\n  If you'd like more control, or to retrieve the integration function directly\n  without looking it up via `:method` each time, see `get-integrator`.\n\n  All supplied options are passed through to the underlying integrator; see the\n  specific integrator for information on what options are available.\n\n  ## Keyword arguments:\n\n  `:method`: Specifies the integration method used. Must be\n\n  - a keyword naming one of the available methods in `available-methods`\n  - a function with the proper integrator signature\n  - a dictionary of integrator options with a `:method` key\n\n  Defaults to `:open`, which specifies an adaptive bulirsch-stoer quadrature method.\n\n  `:compile?` If true, the generic function will be simplified and compiled\n  before execution.\n\n  `:info?` If true, `definite-integral` will return a map of integration\n  information returned by the underlying integrator. Else, returns an estimate\n  of the definite integral.",(cljs.core.truth_(sicmutils.numerical.quadrature.definite_integral)?sicmutils.numerical.quadrature.definite_integral.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kbn"),new cljs.core.Var(function(){return sicmutils.algebra.fold.kbn;},new cljs.core.Symbol("sicmutils.algebra.fold","kbn","sicmutils.algebra.fold/kbn",1434804574,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"kbn","kbn",-176972830,null),"sicmutils/algebra/fold.cljc",6,1,390,391,cljs.core.List.EMPTY,"Alias for [[kahan-babushka-neumaier]].",(cljs.core.truth_(sicmutils.algebra.fold.kbn)?sicmutils.algebra.fold.kbn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("join"),new cljs.core.Var(function(){return sicmutils.algebra.fold.join;},new cljs.core.Symbol("sicmutils.algebra.fold","join","sicmutils.algebra.fold/join",1413212585,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"join","join",881669637,null),"sicmutils/algebra/fold.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"folds","folds",1449129970,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,187,187,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"folds","folds",1449129970,null)], null)),"Given some number of `folds`, returns a new fold with the following properties:\n\n  - the accumulator is a vector of the accumulators of each input fold\n  - each `x` is merged into each accumulator using the appropriate fold\n  - `present` is called for every entry in the final vector\n\n  Given a single `fold`, acts as identity.\n\n  The no-argument call `(join)` is equivalent to `([[constant]] [])`.",(cljs.core.truth_(sicmutils.algebra.fold.join)?sicmutils.algebra.fold.join.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("min"),new cljs.core.Var(function(){return sicmutils.algebra.fold.min;},new cljs.core.Symbol("sicmutils.algebra.fold","min","sicmutils.algebra.fold/min",-574265203,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"min","min",2085523049,null),"sicmutils/algebra/fold.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,147,147,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Fold that stores its minimum encountered value in its accumulator, and returns\n  it when called on to present.\n\n  Accumulation initializes with `nil`.",(cljs.core.truth_(sicmutils.algebra.fold.min)?sicmutils.algebra.fold.min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kahan-babushka-neumaier"),new cljs.core.Var(function(){return sicmutils.algebra.fold.kahan_babushka_neumaier;},new cljs.core.Symbol("sicmutils.algebra.fold","kahan-babushka-neumaier","sicmutils.algebra.fold/kahan-babushka-neumaier",274603534,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"kahan-babushka-neumaier","kahan-babushka-neumaier",-1310408534,null),"sicmutils/algebra/fold.cljc",30,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,370,370,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Implements a fold that tracks the summation of a sequence of floating point\n  numbers, using Neumaier's improvement to [[kahan]].\n\n  This algorithm is more efficient than [[kahan]], handles a wider range of\n  cases (adding in numbers larger than the current running sum, for example) and\n  should be preferred.",(cljs.core.truth_(sicmutils.algebra.fold.kahan_babushka_neumaier)?sicmutils.algebra.fold.kahan_babushka_neumaier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kbk-n-body"),new cljs.core.Var(function(){return sicmutils.algebra.fold.kbk_n_body;},new cljs.core.Symbol("sicmutils.algebra.fold","kbk-n-body","sicmutils.algebra.fold/kbk-n-body",-590397577,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"kbk-n-body","kbk-n-body",1010832619,null),"sicmutils/algebra/fold.cljc",26,1,470,470,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Given some order `n`, generates the function body of a fold implementing `n`-th\n  order Kahan-Babushka-Klein summation.\n\n  See [[kbk-n]] for more detail.",(cljs.core.truth_(sicmutils.algebra.fold.kbk_n_body)?sicmutils.algebra.fold.kbk_n_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generic-sum-fold"),new cljs.core.Var(function(){return sicmutils.algebra.fold.generic_sum_fold;},new cljs.core.Symbol("sicmutils.algebra.fold","generic-sum-fold","sicmutils.algebra.fold/generic-sum-fold",-1414766232,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"generic-sum-fold","generic-sum-fold",136678028,null),"sicmutils/algebra/fold.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,32,32,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Fold-style function. The 2-arity merge operation adds the value `x` into the\n  accumulating stating using [[sicmutils.generic/+]].\n\n  - given 0 arguments, returns an accumulator of 0.0\n  - given a single argument `acc`, acts as identity.",(cljs.core.truth_(sicmutils.algebra.fold.generic_sum_fold)?sicmutils.algebra.fold.generic_sum_fold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kahan"),new cljs.core.Var(function(){return sicmutils.algebra.fold.kahan;},new cljs.core.Symbol("sicmutils.algebra.fold","kahan","sicmutils.algebra.fold/kahan",144329363,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"kahan","kahan",-1458265841,null),"sicmutils/algebra/fold.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,338,338,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Fold that tracks the summation of a sequence of floating point numbers, using\n  the [Kahan summation\n  algorithm](https://en.wikipedia.org/wiki/Kahan_summation_algorithm) for\n  maintaining stability in the face of accumulating floating point errors.",(cljs.core.truth_(sicmutils.algebra.fold.kahan)?sicmutils.algebra.fold.kahan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant"),new cljs.core.Var(function(){return sicmutils.algebra.fold.constant;},new cljs.core.Symbol("sicmutils.algebra.fold","constant","sicmutils.algebra.fold/constant",-1465705492,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null),"sicmutils/algebra/fold.cljc",15,1,129,129,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"const","const",-944505927,null)], null)),"Given some value `const`, returns a fold that ignores all input and returns\n  `const` for a call to any of its arities.",(cljs.core.truth_(sicmutils.algebra.fold.constant)?sicmutils.algebra.fold.constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fold->scan-fn"),new cljs.core.Var(function(){return sicmutils.algebra.fold.fold__GT_scan_fn;},new cljs.core.Symbol("sicmutils.algebra.fold","fold->scan-fn","sicmutils.algebra.fold/fold->scan-fn",-777061582,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"fold->scan-fn","fold->scan-fn",1897258390,null),"sicmutils/algebra/fold.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,228,228,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)),"Given\n\n  - a 0-argument fn `init` that returns some \"empty\" accumulating value\n\n  - a 2-argument fn `fold` of `(accumulator, x) => accumulator` responsible for\n    merging some value `x` into the ongoing accumulation\n\n  - a 1-argument fn `present` from `accumulator => final-result`\n\n  Returns a function with two arities. The first arity takes a sequence `xs` and\n  returns a lazy sequence of all intermediate results of the summation. For\n  example, given [0 1 2 3], the return sequence would be equivalent to:\n\n  ```clj\n  (def sum-fn (fold->sum-fn init fold present))\n\n  [(sum-fn [0])\n   (sum-fn [0 1])\n   (sum-fn [0 1 2])\n   (sum-fn [0 1 2 3])]\n  ```\n\n  The second arity takes a transformation function `f`, an inclusive lower bound\n  `low` and an exclusive upper bound `high` and returns a lazy sequence of all\n  intermediate results of accumulating `(map f (range low high))`.\n\n  ## Other Arities\n\n  Given a single argument `fold`, `fold` is passed as each of the 0, 1 and 2\n  arity arguments.\n\n  Given `fold` and `present`, `fold` is used for the 0 and 2 arity arguments,\n  `present` for the 1-arity argument.",(cljs.core.truth_(sicmutils.algebra.fold.fold__GT_scan_fn)?sicmutils.algebra.fold.fold__GT_scan_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kahan-babushka-klein"),new cljs.core.Var(function(){return sicmutils.algebra.fold.kahan_babushka_klein;},new cljs.core.Symbol("sicmutils.algebra.fold","kahan-babushka-klein","sicmutils.algebra.fold/kahan-babushka-klein",472314236,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"kahan-babushka-klein","kahan-babushka-klein",-1129341992,null),"sicmutils/algebra/fold.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"cs","cs",-117024463,null),new cljs.core.Symbol(null,"ccs","ccs",2099570085,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"cs","cs",-117024463,null),new cljs.core.Symbol(null,"ccs","ccs",2099570085,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,404,404,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"cs","cs",-117024463,null),new cljs.core.Symbol(null,"ccs","ccs",2099570085,null)], null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Implements a fold that tracks the summation of a sequence of floating point\n  numbers, using a second-order variation of [[kahan-babushka-neumaier]].\n\n  See [this Wikipedia\n  page](https://en.wikipedia.org/wiki/Kahan_summation_algorithm#Further_enhancements)\n  for more information.\n\n  This algorithm was proposed by Klein in ['A Generalized Kahan-Babushka\n  Summation\n  Algorithm'](https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.582.288&rep=rep1&type=pdf),\n  along with the higher-order versions implemented by [[kbk-n]].",(cljs.core.truth_(sicmutils.algebra.fold.kahan_babushka_klein)?sicmutils.algebra.fold.kahan_babushka_klein.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fold->sum-fn"),new cljs.core.Var(function(){return sicmutils.algebra.fold.fold__GT_sum_fn;},new cljs.core.Symbol("sicmutils.algebra.fold","fold->sum-fn","sicmutils.algebra.fold/fold->sum-fn",-1328742370,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"fold->sum-fn","fold->sum-fn",323282874,null),"sicmutils/algebra/fold.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,61,61,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"init","init",-234949907,null),new cljs.core.Symbol(null,"fold","fold",753070195,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)),"Given\n\n  - a 0-argument fn `init` that returns some \"empty\" accumulating value\n\n  - a 2-argument fn `fold` of `(accumulator, x) => accumulator` responsible for\n    merging some value `x` into the ongoing accumulation\n\n  - a 1-argument fn `present` from `accumulator => final-result`\n\n  Returns a function with two arities. The first arity takes a sequence `xs` and\n  returns the result of accumulating all elements in `xs` using the functions\n  above, then `present`ing the result.\n\n  The second arity takes a transformation function `f`, an inclusive lower bound\n  `low` and an exclusive upper bound `high` and returns the result of\n  accumulating `(map f (range low high))`.\n\n  ## Other Arities\n\n  Given a single argument `fold`, `fold` is passed as each of the 0, 1 and 2\n  arity arguments.\n\n  Given `fold` and `present`, `fold` is used for the 0 and 2 arity arguments,\n  `present` for the 1-arity argument.",(cljs.core.truth_(sicmutils.algebra.fold.fold__GT_sum_fn)?sicmutils.algebra.fold.fold__GT_sum_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("max"),new cljs.core.Var(function(){return sicmutils.algebra.fold.max;},new cljs.core.Symbol("sicmutils.algebra.fold","max","sicmutils.algebra.fold/max",-973468993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"max","max",1701898075,null),"sicmutils/algebra/fold.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,159,159,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"acc","acc",-1815869457,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Fold that stores its maximum encountered value in its accumulator, and returns\n  it when called on to present.\n\n  Accumulation initializes with `nil`.",(cljs.core.truth_(sicmutils.algebra.fold.max)?sicmutils.algebra.fold.max.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("count"),new cljs.core.Var(function(){return sicmutils.algebra.fold.count;},new cljs.core.Symbol("sicmutils.algebra.fold","count","sicmutils.algebra.fold/count",1188972056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.algebra.fold","sicmutils.algebra.fold",-72274112,null),new cljs.core.Symbol(null,"count","count",-514511684,null),"sicmutils/algebra/fold.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,135,135,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Given some predicate `pred`, returns a fold that counts the number of items it\n  encounters that return true when passed to `pred`, false otherwise.",(cljs.core.truth_(sicmutils.algebra.fold.count)?sicmutils.algebra.fold.count.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-number"),new cljs.core.Var(function(){return sicmutils.abstract$.number.literal_number;},new cljs.core.Symbol("sicmutils.abstract.number","literal-number","sicmutils.abstract.number/literal-number",292875284,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.abstract.number","sicmutils.abstract.number",1725359089,null),new cljs.core.Symbol(null,"literal-number","literal-number",1180750380,null),"sicmutils/abstract/number.cljc",21,1,33,33,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns its argument, wrapped in a marker type that responds to the generic\n  operations registered in [[sicmutils.numsymb]].\n\n  Symbols are automatically treated as [[literal-number]] instances, so\n\n  ```clojure\n  (* 10 (literal-number 'x))\n  ```\n\n  is equivalent to\n\n  ```clojure\n  (* 10 'x)\n  ```\n\n  If you pass an actual number, sicmutils will attempt to preserve exact values\n  through various operations:\n\n  ```clojure\n  (g/+ 1 (g/cos (g/* 2 (literal-number 4))))\n  ;;=> (+ 1 (cos 8))\n  ```\n\n  Notice that the `(g/* 2 ...)` is evaluated, but `cos` evaluation is deferred,\n  since the result is inexact. On the other hand, if the number is inexact to\n  begin with:\n\n  ```clojure\n  (g/+ 1 (g/cos (g/* 2 (literal-number 2.2))))\n  ;;=> 0.6926671300215806\n  ```\n\n  the system will go ahead and evaluate it.",(cljs.core.truth_(sicmutils.abstract$.number.literal_number)?sicmutils.abstract$.number.literal_number.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-number?"),new cljs.core.Var(function(){return sicmutils.abstract$.number.literal_number_QMARK_;},new cljs.core.Symbol("sicmutils.abstract.number","literal-number?","sicmutils.abstract.number/literal-number?",-980343593,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.abstract.number","sicmutils.abstract.number",1725359089,null),new cljs.core.Symbol(null,"literal-number?","literal-number?",-1668954321,null),"sicmutils/abstract/number.cljc",22,1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is an explicit symbolic expression or something passed to\n  `literal-number`, false otherwise.\n\n  See [[abstract-number?]] for a similar function that also responds true to\n  symbols.",(cljs.core.truth_(sicmutils.abstract$.number.literal_number_QMARK_)?sicmutils.abstract$.number.literal_number_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abstract-number?"),new cljs.core.Var(function(){return sicmutils.abstract$.number.abstract_number_QMARK_;},new cljs.core.Symbol("sicmutils.abstract.number","abstract-number?","sicmutils.abstract.number/abstract-number?",1429795700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.abstract.number","sicmutils.abstract.number",1725359089,null),new cljs.core.Symbol(null,"abstract-number?","abstract-number?",740601180,null),"sicmutils/abstract/number.cljc",23,1,80,80,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is:\n\n  - a symbolic expression\n  - some object wrapped by a call to [[literal-number]]\n  - a symbol (which implicitly acts as a [[literal-number]])\n\n  See [[literal-number?]] for a similar function that won't respond true to\n  symbols, only to explicit symbolic expressions or wrapped literal numbers.",(cljs.core.truth_(sicmutils.abstract$.number.abstract_number_QMARK_)?sicmutils.abstract$.number.abstract_number_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("simplify-numerical-expression"),new cljs.core.Var(function(){return sicmutils.abstract$.number.simplify_numerical_expression;},new cljs.core.Symbol("sicmutils.abstract.number","simplify-numerical-expression","sicmutils.abstract.number/simplify-numerical-expression",-392700912,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.abstract.number","sicmutils.abstract.number",1725359089,null),new cljs.core.Symbol(null,"simplify-numerical-expression","simplify-numerical-expression",-1079247240,null),"sicmutils/abstract/number.cljc",45,1,224,224,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"This function will only simplify instances of [[expression/Literal]]; if `x` is\n  of that type, [[simplify-numerical-expression]] acts as a memoized version\n  of [[generic/simplify]]. Else, acts as identity.\n\n  This trick is used in [[sicmutils.calculus.manifold]] to memoize\n  simplification _only_ for non-[[differential/Differential]] types.",(cljs.core.truth_(sicmutils.abstract$.number.simplify_numerical_expression)?sicmutils.abstract$.number.simplify_numerical_expression.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-rank"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.get_rank;},new cljs.core.Symbol("sicmutils.calculus.form-field","get-rank","sicmutils.calculus.form-field/get-rank",1216752344,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"get-rank","get-rank",1510807712,null),"sicmutils/calculus/form_field.cljc",15,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns the rank of the supplied differential form `f`. Functions are treated\n  as differential forms of rank 0.\n\n  Throws for any non differential form supplied.",(cljs.core.truth_(sicmutils.calculus.form_field.get_rank)?sicmutils.calculus.form_field.get_rank.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis-oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.coordinate_basis_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","coordinate-basis-oneform-field","sicmutils.calculus.form-field/coordinate-basis-oneform-field",-377917622,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"coordinate-basis-oneform-field","coordinate-basis-oneform-field",-68149918,null),"sicmutils/calculus/form_field.cljc",37,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"indices","indices",422393184,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,253,253,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),"Given some `coordinate-system`, a symbolic `name` and a sequence of indices\n  into the structure of the coordinate system's representation, returns a\n  one-form field.\n\n  The returned one-form field at each structural spot takes a vector field and\n  returns a function that takes the directional derivative in that coordinate's\n  direction using the vector field.",(cljs.core.truth_(sicmutils.calculus.form_field.coordinate_basis_oneform_field)?sicmutils.calculus.form_field.coordinate_basis_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis-components->oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.basis_components__GT_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","basis-components->oneform-field","sicmutils.calculus.form-field/basis-components->oneform-field",320865162,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"basis-components->oneform-field","basis-components->oneform-field",785978786,null),"sicmutils/calculus/form_field.cljc",38,1,300,300,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"oneform-basis","oneform-basis",387946054,null)], null)),"Given a structure of `components` functions defined on manifold points and and\n  a matching `oneform-basis` (of identical structure),\n\n  Returns a new one-form field that\n\n  - passes its vector-field argument to `oneform-basis`, returning a new\n    equivalent structure with each slot populated by functions from a manifold\n    point to the directional derivative (using the vector field) in that\n    coordinate direction\n\n  - contracts the result of that operation with the result of applying each\n    component in `components` to the manifold point.\n\n  NOTE:\n  - This is for any basis, not just a coordinate basis\n  - The `components` are evaluated at a manifold point, not its coordinates\n  - Given a dual basis, you can retrieve the original components\n    with [[oneform-field->basis-components]]",(cljs.core.truth_(sicmutils.calculus.form_field.basis_components__GT_oneform_field)?sicmutils.calculus.form_field.basis_components__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("form-field?"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.form_field_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.form-field","form-field?","sicmutils.calculus.form-field/form-field?",1495611660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"form-field?","form-field?",1252796196,null),"sicmutils/calculus/form_field.cljc",18,1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ff","ff",-1993208340,null)], null)),"Returns true if the supplied `f` is a form field operator, false otherwise.",(cljs.core.truth_(sicmutils.calculus.form_field.form_field_QMARK_)?sicmutils.calculus.form_field.form_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->basis-components"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.oneform_field__GT_basis_components;},new cljs.core.Symbol("sicmutils.calculus.form-field","oneform-field->basis-components","sicmutils.calculus.form-field/oneform-field->basis-components",1626458861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"oneform-field->basis-components","oneform-field->basis-components",524891333,null),"sicmutils/calculus/form_field.cljc",38,1,324,324,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"w","w",1994700528,null),new cljs.core.Symbol(null,"vector-basis","vector-basis",770571439,null)], null)),"Given a structure `w` of and a vector field basis `vector-basis`, returns a new\n  structure generated by applying the full vector basis to each element of `w`.\n\n  Here's an example of how to use this function to round trip a structure of\n  basis components:\n\n  ```clojure\n  (let [vb    (vf/coordinate-system->vector-basis coordsys)\n        basis (coordinate-system->oneform-basis coordsys)\n        components (down d:dx d:dy)]\n    (= components\n       (-> components\n           (basis-components->oneform-field basis)\n           (oneform-field->basis-components vb))))\n  ```",(cljs.core.truth_(sicmutils.calculus.form_field.oneform_field__GT_basis_components)?sicmutils.calculus.form_field.oneform_field__GT_basis_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->oneform-basis"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.coordinate_system__GT_oneform_basis;},new cljs.core.Symbol("sicmutils.calculus.form-field","coordinate-system->oneform-basis","sicmutils.calculus.form-field/coordinate-system->oneform-basis",-1600950979,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"coordinate-system->oneform-basis","coordinate-system->oneform-basis",1426882309,null),"sicmutils/calculus/form_field.cljc",39,1,274,274,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given some `coordinate-system`, returns a structure of\n  `coordinate-basis-oneform-field` instances.\n\n  The one-form field at each structural spot takes a vector field and returns a\n  function that takes the directional derivative in that coordinate's direction\n  using the vector field.\n\n  When applied as a function, the structure behaves equivalently to\n\n  ```clojure\n  (coordinate-basis-oneform-field <coordinate-system> 'ignored-name)\n  ```\n\n  With no indices supplied.",(cljs.core.truth_(sicmutils.calculus.form_field.coordinate_system__GT_oneform_basis)?sicmutils.calculus.form_field.coordinate_system__GT_oneform_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->components"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.oneform_field__GT_components;},new cljs.core.Symbol("sicmutils.calculus.form-field","oneform-field->components","sicmutils.calculus.form-field/oneform-field->components",528705534,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"oneform-field->components","oneform-field->components",154814502,null),"sicmutils/calculus/form_field.cljc",32,1,199,199,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given a one-form field `form` and a `coordinate-system`, returns a function\n  from the coordinate representation of a manifold point to a coordinate\n  representation of the coordinatized components of the form field at that\n  point.\n\n  For example:\n\n  ```clojure\n  (let-coordinates [[x y] R2-rect]\n    (let [f (literal-oneform-field 'f R2-rect)]\n      ((oneform-field->components f R2-rect)\n       (up 'x0 'y0))))\n\n  ;;=> (down (f_0 (up x0 y0))\n  ;;         (f_1 (up x0 y0)))\n  ```",(cljs.core.truth_(sicmutils.calculus.form_field.oneform_field__GT_components)?sicmutils.calculus.form_field.oneform_field__GT_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("alt-wedge"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.alt_wedge;},new cljs.core.Symbol("sicmutils.calculus.form-field","alt-wedge","sicmutils.calculus.form-field/alt-wedge",-259307730,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"alt-wedge","alt-wedge",-1039108858,null),"sicmutils/calculus/form_field.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,477,477,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Alternative definition of [[wedge]] in terms of alternation.",(cljs.core.truth_(sicmutils.calculus.form_field.alt_wedge)?sicmutils.calculus.form_field.alt_wedge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exterior-derivative"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.exterior_derivative;},new cljs.core.Symbol("sicmutils.calculus.form-field","exterior-derivative","sicmutils.calculus.form-field/exterior-derivative",1965382910,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"exterior-derivative","exterior-derivative",465479974,null),"sicmutils/calculus/form_field.cljc",25,1,564,564,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.form_field.exterior_derivative)?sicmutils.calculus.form_field.exterior_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field-procedure"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.oneform_field_procedure;},new cljs.core.Symbol("sicmutils.calculus.form-field","oneform-field-procedure","sicmutils.calculus.form-field/oneform-field-procedure",-529235650,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"oneform-field-procedure","oneform-field-procedure",-201460986,null),"sicmutils/calculus/form_field.cljc",39,1,157,157,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Takes:\n\n  - a `down` tuple of `components` of the one-form field relative to\n    `coordinate-system`\n  - the `coordinate-system`\n\n  And returns a procedure (not yet an operator!) that takes a structure of vector fields\n  and produces a new structure of functions of manifold points.",(cljs.core.truth_(sicmutils.calculus.form_field.oneform_field_procedure)?sicmutils.calculus.form_field.oneform_field_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.components__GT_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","components->oneform-field","sicmutils.calculus.form-field/components->oneform-field",688393104,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"components->oneform-field","components->oneform-field",997325256,null),"sicmutils/calculus/form_field.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,176,176,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Takes:\n\n  - a `down` tuple of `components` of the one-form field relative to\n    `coordinate-system`\n  - the `coordinate-system`\n\n  And returns a full one-form field.\n\n  A one-field field is an operator that takes a vector field to a real-valued\n  function on the manifold.",(cljs.core.truth_(sicmutils.calculus.form_field.components__GT_oneform_field)?sicmutils.calculus.form_field.components__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-name->ff-name"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.coordinate_name__GT_ff_name;},new cljs.core.Symbol("sicmutils.calculus.form-field","coordinate-name->ff-name","sicmutils.calculus.form-field/coordinate-name->ff-name",1580784960,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"coordinate-name->ff-name","coordinate-name->ff-name",1820568424,null),"sicmutils/calculus/form_field.cljc",40,1,268,268,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"From the name of a coordinate, produce the name of the coordinate basis\n  one-form field (as a symbol)",(cljs.core.truth_(sicmutils.calculus.form_field.coordinate_name__GT_ff_name)?sicmutils.calculus.form_field.coordinate_name__GT_ff_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nform-field?"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.nform_field_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.form-field","nform-field?","sicmutils.calculus.form-field/nform-field?",-110855343,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"nform-field?","nform-field?",-822258039,null),"sicmutils/calculus/form_field.cljc",19,1,65,65,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns true if the supplied `f` is an [form field of rank\n  n](https://en.wikipedia.org/wiki/Differential_form), false otherwise.\n\n  A form-field of rank n is an operator that takes n vector fields to a\n  real-valued function on the manifold.",(cljs.core.truth_(sicmutils.calculus.form_field.nform_field_QMARK_)?sicmutils.calculus.form_field.nform_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential-of-function"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.differential_of_function;},new cljs.core.Symbol("sicmutils.calculus.form-field","differential-of-function","sicmutils.calculus.form-field/differential-of-function",686772257,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"differential-of-function","differential-of-function",997752521,null),"sicmutils/calculus/form_field.cljc",27,1,358,363,cljs.core.List.EMPTY,"Alias for [[function->oneform-field]].\n  One of the two incompatible definitions of differential.\n\n  This differential is a special case of exterior derivative. The other one\n  lives at [[map/differential]].",(cljs.core.truth_(sicmutils.calculus.form_field.differential_of_function)?sicmutils.calculus.form_field.differential_of_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field?"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.oneform_field_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.form-field","oneform-field?","sicmutils.calculus.form-field/oneform-field?",-2055692863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"oneform-field?","oneform-field?",-1326324759,null),"sicmutils/calculus/form_field.cljc",21,1,75,75,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if the supplied `f` is\n  a [One-form](https://en.wikipedia.org/wiki/One-form), false\n  otherwise.\n\n  A [One-form](https://en.wikipedia.org/wiki/One-form) takes a single vector\n  field to a real-valued function on the manifold.",(cljs.core.truth_(sicmutils.calculus.form_field.oneform_field_QMARK_)?sicmutils.calculus.form_field.oneform_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("procedure->nform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.procedure__GT_nform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","procedure->nform-field","sicmutils.calculus.form-field/procedure->nform-field",-1176988700,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"procedure->nform-field","procedure->nform-field",-1750081268,null),"sicmutils/calculus/form_field.cljc",38,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,118,118,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Accepts a function `f` and an optional symbolic `name`, and returns an n-form\n  field, ie, a subtype of [[sicmutils.operator/Operator]].\n\n  `f` should be a function from n vector field arguments to a smooth real-valued\n  function `g` of a manifold.\n\n  If `n` is 0, the function will be called immediately and its return value\n  returned.",(cljs.core.truth_(sicmutils.calculus.form_field.procedure__GT_nform_field)?sicmutils.calculus.form_field.procedure__GT_nform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ff:zero"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.ff_COLON_zero;},new cljs.core.Symbol("sicmutils.calculus.form-field","ff:zero","sicmutils.calculus.form-field/ff:zero",385040343,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"ff:zero","ff:zero",628755951,null),"sicmutils/calculus/form_field.cljc",14,1,35,35,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Returns a form field that returns, for any supplied vector field `vf`, a\n  manifold function [[manifold/zero-manifold-function]] that maps every input\n  manifold `point` to the scalar value 0.",(cljs.core.truth_(sicmutils.calculus.form_field.ff_COLON_zero)?sicmutils.calculus.form_field.ff_COLON_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("wedge"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.wedge;},new cljs.core.Symbol("sicmutils.calculus.form-field","wedge","sicmutils.calculus.form-field/wedge",-565556438,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"wedge","wedge",868448626,null),"sicmutils/calculus/form_field.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"fs","fs",-482394717,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,405,405,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"fs","fs",-482394717,null)], null)),"Computes the wedge product of the sequence `fs` of one-forms.\n\n  Higher rank forms can be constructed from one-forms by wedging them together.\n  This antisymmetric tensor product is computed as a determinant. The purpose of\n  this is to allow us to use the construction dx^dy to compute the area\n  described by the vectors that are given to it.\n\n  See Spivak p275 v1 of 'Differential Geometry' to see the correct definition.\n  The key is that the wedge of the coordinate basis forms had better be the\n  volume element.",(cljs.core.truth_(sicmutils.calculus.form_field.wedge)?sicmutils.calculus.form_field.wedge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("function->oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.function__GT_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","function->oneform-field","sicmutils.calculus.form-field/function->oneform-field",-785291846,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"function->oneform-field","function->oneform-field",596015058,null),"sicmutils/calculus/form_field.cljc",30,1,343,343,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"One of the two incompatible definitions of differential.\n\n  This differential is a special case of exterior derivative. The other one\n  lives at [[map/differential]].",(cljs.core.truth_(sicmutils.calculus.form_field.function__GT_oneform_field)?sicmutils.calculus.form_field.function__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.literal_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","literal-oneform-field","sicmutils.calculus.form-field/literal-oneform-field",-1804465939,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"literal-oneform-field","literal-oneform-field",-502718763,null),"sicmutils/calculus/form_field.cljc",28,1,224,224,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given a symbolic name `sym` and a `coordinate-system`, returns a one-form field\n  consisting of literal real-valued functions from the coordinate system's\n  dimension for each coordinate component.\n\n  These functions are passed to [[components->oneform-field]], along with the\n  supplied `coordinate-system` and symbolic name `sym`.\n\n  For coordinate systems of dimension 1, `literal-form-field`'s component\n  functions will accept a single non-structural argument.",(cljs.core.truth_(sicmutils.calculus.form_field.literal_oneform_field)?sicmutils.calculus.form_field.literal_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Alt"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.Alt;},new cljs.core.Symbol("sicmutils.calculus.form-field","Alt","sicmutils.calculus.form-field/Alt",-872754351,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"Alt","Alt",-1183702663,null),"sicmutils/calculus/form_field.cljc",10,1,430,430,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null)),"Returns the alternation of the supplied differential `form`.",(cljs.core.truth_(sicmutils.calculus.form_field.Alt)?sicmutils.calculus.form_field.Alt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("procedure->oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.procedure__GT_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.form-field","procedure->oneform-field","sicmutils.calculus.form-field/procedure->oneform-field",-1801669708,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"procedure->oneform-field","procedure->oneform-field",-501922340,null),"sicmutils/calculus/form_field.cljc",40,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,140,140,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Accepts a function `f` and an optional symbolic `name`, and returns a one-form\n  field, ie, a subtype of [[sicmutils.operator/Operator]].\n\n  `f` should be a function from a vector field to a smooth real-valued function\n  `g` of a manifold.",(cljs.core.truth_(sicmutils.calculus.form_field.procedure__GT_oneform_field)?sicmutils.calculus.form_field.procedure__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("d"),new cljs.core.Var(function(){return sicmutils.calculus.form_field.d;},new cljs.core.Symbol("sicmutils.calculus.form-field","d","sicmutils.calculus.form-field/d",-382987145,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.form-field","sicmutils.calculus.form-field",1700967878,null),new cljs.core.Symbol(null,"d","d",-682293345,null),"sicmutils/calculus/form_field.cljc",7,1,568,568,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.form_field.d)?sicmutils.calculus.form_field.d.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->Routhian"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Lagrangian__GT_Routhian;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Lagrangian->Routhian","sicmutils.mechanics.routhian/Lagrangian->Routhian",-1494366483,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Lagrangian->Routhian","Lagrangian->Routhian",222397111,null),"sicmutils/mechanics/routhian.cljc",27,1,24,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Lagrangian__GT_Routhian)?sicmutils.mechanics.routhian.Lagrangian__GT_Routhian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Routh-equations"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Routh_equations;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Routh-equations","sicmutils.mechanics.routhian/Routh-equations",-1046150273,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Routh-equations","Routh-equations",-1119256779,null),"sicmutils/mechanics/routhian.cljc",22,1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Routhian","Routhian",-451266995,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Routh_equations)?sicmutils.mechanics.routhian.Routh_equations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Routhian->acceleration"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Routhian__GT_acceleration;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Routhian->acceleration","sicmutils.mechanics.routhian/Routhian->acceleration",-597860864,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Routhian->acceleration","Routhian->acceleration",1211175498,null),"sicmutils/mechanics/routhian.cljc",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,43,43,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Routhian__GT_acceleration)?sicmutils.mechanics.routhian.Routhian__GT_acceleration.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Routhian->state-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Routhian__GT_state_derivative;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Routhian->state-derivative","sicmutils.mechanics.routhian/Routhian->state-derivative",-911100476,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Routhian->state-derivative","Routhian->state-derivative",1713797386,null),"sicmutils/mechanics/routhian.cljc",33,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Routhian__GT_state_derivative)?sicmutils.mechanics.routhian.Routhian__GT_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian-state->Routhian-state"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Lagrangian_state__GT_Routhian_state;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Lagrangian-state->Routhian-state","sicmutils.mechanics.routhian/Lagrangian-state->Routhian-state",-861959916,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Lagrangian-state->Routhian-state","Lagrangian-state->Routhian-state",1611386074,null),"sicmutils/mechanics/routhian.cljc",39,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Lagrangian_state__GT_Routhian_state)?sicmutils.mechanics.routhian.Lagrangian_state__GT_Routhian_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Routhian-state->Lagrangian-state"),new cljs.core.Var(function(){return sicmutils.mechanics.routhian.Routhian_state__GT_Lagrangian_state;},new cljs.core.Symbol("sicmutils.mechanics.routhian","Routhian-state->Lagrangian-state","sicmutils.mechanics.routhian/Routhian-state->Lagrangian-state",686213869,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.routhian","sicmutils.mechanics.routhian",-2008241924,null),new cljs.core.Symbol(null,"Routhian-state->Lagrangian-state","Routhian-state->Lagrangian-state",1553598135,null),"sicmutils/mechanics/routhian.cljc",39,1,125,125,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.routhian.Routhian_state__GT_Lagrangian_state)?sicmutils.mechanics.routhian.Routhian_state__GT_Lagrangian_state.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("curl"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.curl;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","curl","sicmutils.calculus.vector-calculus/curl",1284931534,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"curl","curl",213545217,null),"sicmutils/calculus/vector_calculus.cljc",11,1,86,86,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"orthonormal-basis","orthonormal-basis",735254493,null)], null)),"[[curl]] implements equation (10.7) of Functional Differential Geometry,\n  defined on page 155.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.curl)?sicmutils.calculus.vector_calculus.curl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Laplacian"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.Laplacian;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","Laplacian","sicmutils.calculus.vector-calculus/Laplacian",-237849289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"Laplacian","Laplacian",-1308705980,null),"sicmutils/calculus/vector_calculus.cljc",16,1,104,104,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"orthonormal-basis","orthonormal-basis",735254493,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.vector_calculus.Laplacian)?sicmutils.calculus.vector_calculus.Laplacian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divergence"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.divergence;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","divergence","sicmutils.calculus.vector-calculus/divergence",1244650101,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"divergence","divergence",175362438,null),"sicmutils/calculus/vector_calculus.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"orthonormal-basis","orthonormal-basis",735254493,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"orthonormal-basis","orthonormal-basis",735254493,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"orthonormal-basis","orthonormal-basis",735254493,null)], null)),"Both arities of [[divergence]] are defined on page 156 of Functional Differential Geometry.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.divergence)?sicmutils.calculus.vector_calculus.divergence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Div"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.Div;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","Div","sicmutils.calculus.vector-calculus/Div",1013917012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"Div","Div",2085306215,null),"sicmutils/calculus/vector_calculus.cljc",6,1,45,50,cljs.core.List.EMPTY,"Operator that takes a function `f` and returns a function that\n  calculates the [Divergence](https://en.wikipedia.org/wiki/Divergence) of\n  `f` at its input point.\n\n The divergence is a one-level contraction of the gradient.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.Div)?sicmutils.calculus.vector_calculus.Div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->Lame-coefficients"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.coordinate_system__GT_Lame_coefficients;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","coordinate-system->Lame-coefficients","sicmutils.calculus.vector-calculus/coordinate-system->Lame-coefficients",-194598939,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"coordinate-system->Lame-coefficients","coordinate-system->Lame-coefficients",-1264922352,null),"sicmutils/calculus/vector_calculus.cljc",43,1,108,108,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.vector_calculus.coordinate_system__GT_Lame_coefficients)?sicmutils.calculus.vector_calculus.coordinate_system__GT_Lame_coefficients.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Curl"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.Curl;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","Curl","sicmutils.calculus.vector-calculus/Curl",1869521197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"Curl","Curl",797096696,null),"sicmutils/calculus/vector_calculus.cljc",7,1,70,75,cljs.core.List.EMPTY,"Operator that takes a function `f` and returns a function that\n  calculates the [Curl](https://en.wikipedia.org/wiki/Curl_(mathematics)) of `f`\n  at its input point.\n\n  `f` must be a function from $\\mathbb{R}^3 \\to \\mathbb{R}^3$.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.Curl)?sicmutils.calculus.vector_calculus.Curl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Grad"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.Grad;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","Grad","sicmutils.calculus.vector-calculus/Grad",-458097525,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"Grad","Grad",-1533675656,null),"sicmutils/calculus/vector_calculus.cljc",7,1,27,33,cljs.core.List.EMPTY,"Operator that takes a function `f` and returns a new function that\n  calculates the [Gradient](https://en.wikipedia.org/wiki/Gradient) of `f`.\n\n  The related [[D]] operator returns a function that produces a structure of the\n  opposite orientation as [[Grad]]. Both of these functions use forward-mode\n  automatic differentiation.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.Grad)?sicmutils.calculus.vector_calculus.Grad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->orthonormal-vector-basis"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.coordinate_system__GT_orthonormal_vector_basis;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","coordinate-system->orthonormal-vector-basis","sicmutils.calculus.vector-calculus/coordinate-system->orthonormal-vector-basis",98211750,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"coordinate-system->orthonormal-vector-basis","coordinate-system->orthonormal-vector-basis",1168548313,null),"sicmutils/calculus/vector_calculus.cljc",50,1,116,116,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.vector_calculus.coordinate_system__GT_orthonormal_vector_basis)?sicmutils.calculus.vector_calculus.coordinate_system__GT_orthonormal_vector_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gradient"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.gradient;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","gradient","sicmutils.calculus.vector-calculus/gradient",-1410593013,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"gradient","gradient",-343377444,null),"sicmutils/calculus/vector_calculus.cljc",15,1,39,39,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"[[gradient]] implements equation (10.3) in Functional Differential Geometry,\n  defined on page 154.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.gradient)?sicmutils.calculus.vector_calculus.gradient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lap"),new cljs.core.Var(function(){return sicmutils.calculus.vector_calculus.Lap;},new cljs.core.Symbol("sicmutils.calculus.vector-calculus","Lap","sicmutils.calculus.vector-calculus/Lap",1101174178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-calculus","sicmutils.calculus.vector-calculus",-1002842970,null),new cljs.core.Symbol(null,"Lap","Lap",25592799,null),"sicmutils/calculus/vector_calculus.cljc",6,1,96,100,cljs.core.List.EMPTY,"Operator that takes a function `f` and returns a function that\n  calculates the [Vector\n  Laplacian](https://en.wikipedia.org/wiki/Laplace_operator#Vector_Laplacian) of\n  `f` at its input point.",(cljs.core.truth_(sicmutils.calculus.vector_calculus.Lap)?sicmutils.calculus.vector_calculus.Lap.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.literal_vector_field;},new cljs.core.Symbol("sicmutils.calculus.vector-field","literal-vector-field","sicmutils.calculus.vector-field/literal-vector-field",-1854399670,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"literal-vector-field","literal-vector-field",1681711331,null),"sicmutils/calculus/vector_field.cljc",27,1,151,151,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given a symbolic name `sym` and a `coordinate-system`, returns a vector field\n  consisting of literal real-valued functions from the coordinate system's\n  dimension for each coordinate component.\n\n  These functions are passed to [[components->vector-field]], along with the\n  supplied `coordinate-system` and symbolic name `sym`.\n\n  For coordinate systems of dimension 1, `literal-vector-field`'s component\n  functions will accept a single non-structural argument.",(cljs.core.truth_(sicmutils.calculus.vector_field.literal_vector_field)?sicmutils.calculus.vector_field.literal_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->vector-basis"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.coordinate_system__GT_vector_basis;},new cljs.core.Symbol("sicmutils.calculus.vector-field","coordinate-system->vector-basis","sicmutils.calculus.vector-field/coordinate-system->vector-basis",-1841791405,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"coordinate-system->vector-basis","coordinate-system->vector-basis",-1896061788,null),"sicmutils/calculus/vector_field.cljc",38,1,201,201,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given some `coordinate-system`, returns a structure of\n  `coordinate-basis-vector-field` instances. The vector field at each structural\n  spot takes a function and computes its directional derivative with respect to\n  that coordinate.\n\n  When applied as a function, the structure behaves equivalently to\n\n  ```clojure\n  (coordinate-basis-vector-field <coordinate-system> 'ignored-name)\n  ```\n\n  With no indices supplied.",(cljs.core.truth_(sicmutils.calculus.vector_field.coordinate_system__GT_vector_basis)?sicmutils.calculus.vector_field.coordinate_system__GT_vector_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vf:zero"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.vf_COLON_zero;},new cljs.core.Symbol("sicmutils.calculus.vector-field","vf:zero","sicmutils.calculus.vector-field/vf:zero",-520345997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"vf:zero","vf:zero",-742903868,null),"sicmutils/calculus/vector_field.cljc",14,1,126,126,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Returns a vector field that returns, for any supplied function `f`, a manifold\n  function [[manifold/zero-manifold-function]] that maps every input manifold\n  `point` to the scalar value 0.",(cljs.core.truth_(sicmutils.calculus.vector_field.vf_COLON_zero)?sicmutils.calculus.vector_field.vf_COLON_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinatize"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.coordinatize;},new cljs.core.Symbol("sicmutils.calculus.vector-field","coordinatize","sicmutils.calculus.vector-field/coordinatize",1993856572,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"coordinatize","coordinatize",-1986275097,null),"sicmutils/calculus/vector_field.cljc",19,1,285,285,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vf","vf",1319108258,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Returns an operator that acts as a coordinate version of the supplied vector\n  field `vf` with respect to `coordinate-system`.\n\n  The returned operator takes a function and returns a new function that takes\n  directional derivatives of coordinate representations of manifold points, with\n  respect to `coordinate-system`.",(cljs.core.truth_(sicmutils.calculus.vector_field.coordinatize)?sicmutils.calculus.vector_field.coordinatize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field-procedure"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.vector_field_procedure;},new cljs.core.Symbol("sicmutils.calculus.vector-field","vector-field-procedure","sicmutils.calculus.vector-field/vector-field-procedure",-2112620786,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"vector-field-procedure","vector-field-procedure",-1764233817,null),"sicmutils/calculus/vector_field.cljc",38,1,59,59,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"component-fns","component-fns",-413802723,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Takes:\n\n  - an `up` tuple, `components`, of the functions that each return the\n    corresponding component of the vector field relative to `coordinate-system`\n  - the `coordinate-system`\n\n  And returns a procedure (not yet an operator!) that takes a smooth real-valued\n  function of manifold points and produces a NEW function that computes the\n  directional derivative of the given function at each point of the manifold.",(cljs.core.truth_(sicmutils.calculus.vector_field.vector_field_procedure)?sicmutils.calculus.vector_field.vector_field_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("procedure->vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.procedure__GT_vector_field;},new cljs.core.Symbol("sicmutils.calculus.vector-field","procedure->vector-field","sicmutils.calculus.vector-field/procedure->vector-field",1494078947,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"procedure->vector-field","procedure->vector-field",1307696776,null),"sicmutils/calculus/vector_field.cljc",39,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,43,43,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Accepts a function `f` and an optional symbolic `name`, and returns a vector\n  field, ie, a subtype of [[sicmutils.operator/Operator]].\n\n  `f` should be a function from a smooth real-valued function `g` of a manifold\n  to a new function on the manifold which computes the directional derivative of\n  `g` at each point of the manifold.",(cljs.core.truth_(sicmutils.calculus.vector_field.procedure__GT_vector_field)?sicmutils.calculus.vector_field.procedure__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis-components->vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.basis_components__GT_vector_field;},new cljs.core.Symbol("sicmutils.calculus.vector-field","basis-components->vector-field","sicmutils.calculus.vector-field/basis-components->vector-field",-1731957519,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"basis-components->vector-field","basis-components->vector-field",-2054657112,null),"sicmutils/calculus/vector_field.cljc",37,1,223,223,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"vector-basis","vector-basis",770571439,null)], null)),"Given a structure of `components` and and a matching `vector-basis` (of\n  identical structure with orientations flipped), returns a new vector field\n  generated contracting by these two structures together.\n\n  The returned vector field passes its input function to the operator generated\n  by this contraction.\n\n  For example:\n\n  ```clojure\n  (let-coordinates [[x y] R2-rect]\n    (basis-components->vector-field\n     (up x y)\n     (coordinate-system->vector-basis R2-rect)))\n  ;; => (+ (* x d:dx) (* y d:dy))\n  ```\n\n  NOTE:\n  - This is for any basis, not just a coordinate basis\n  - The `components` are evaluated at a manifold point, not its coordinates\n  - Given a dual basis, you can retrieve the original components\n    with [[vector-field->basis-components]]",(cljs.core.truth_(sicmutils.calculus.vector_field.basis_components__GT_vector_field)?sicmutils.calculus.vector_field.basis_components__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field?"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.vector_field_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.vector-field","vector-field?","sicmutils.calculus.vector-field/vector-field?",959010299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"vector-field?","vector-field?",921525260,null),"sicmutils/calculus/vector_field.cljc",20,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vf","vf",1319108258,null)], null)),"Returns true if the supplied argument `vf` is a vector field operator, false\n  otherwise.",(cljs.core.truth_(sicmutils.calculus.vector_field.vector_field_QMARK_)?sicmutils.calculus.vector_field.vector_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis-vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.coordinate_basis_vector_field;},new cljs.core.Symbol("sicmutils.calculus.vector-field","coordinate-basis-vector-field","sicmutils.calculus.vector-field/coordinate-basis-vector-field",613667989,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"coordinate-basis-vector-field","coordinate-basis-vector-field",928502764,null),"sicmutils/calculus/vector_field.cljc",36,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"indices","indices",422393184,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,179,179,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),"Given some `coordinate-system`, a symbolic `name` and a sequence of indices\n  into the structure of the coordinate system's representation,\n\n  returns a vector field that takes a function and returns a new function that\n  computes the partial derivative of that function with respect to the supplied\n  `indices` into `coordinate-system`.\n\n  To compute the full Jacobian, pass no indices.",(cljs.core.truth_(sicmutils.calculus.vector_field.coordinate_basis_vector_field)?sicmutils.calculus.vector_field.coordinate_basis_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->basis-components"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.vector_field__GT_basis_components;},new cljs.core.Symbol("sicmutils.calculus.vector-field","vector-field->basis-components","sicmutils.calculus.vector-field/vector-field->basis-components",-465315911,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"vector-field->basis-components","vector-field->basis-components",-247472946,null),"sicmutils/calculus/vector_field.cljc",37,1,264,264,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vf","vf",1319108258,null),new cljs.core.Symbol(null,"dual-basis","dual-basis",-73332233,null)], null)),"Given a vector field `vf` generated from [[basis-components->vector-field]] and\n  a dual basis, returns the original basis components.\n\n  NOTE: You can generate a dual basis with [[basis/vector-basis->dual-basis]].\n\n  Here's an example of how to use this function to round trip a structure of\n  basis components:\n\n  ```clojure\n  (let [basis (coordinate-system->vector-basis coordsys)\n        dual  (basis/vector-basis->dual basis coordsys)]\n    (= basis-components\n       (-> basis-components\n           (basis-components->vector-field basis)\n           (vector-field->basis-components dual))))\n  ```",(cljs.core.truth_(sicmutils.calculus.vector_field.vector_field__GT_basis_components)?sicmutils.calculus.vector_field.vector_field__GT_basis_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.components__GT_vector_field;},new cljs.core.Symbol("sicmutils.calculus.vector-field","components->vector-field","sicmutils.calculus.vector-field/components->vector-field",-1995369654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"components->vector-field","components->vector-field",-1160967663,null),"sicmutils/calculus/vector_field.cljc",31,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"name","name",-810760592,null)], null)),"Takes:\n\n  - an `up` tuple of the functions that each return the corresponding component\n  of the vector field relative `coordinate-system`\n  - the `coordinate-system`\n  - optionally, a symbolic name for the vector field operator\n\n  And returns a vector field.\n\n  A vector field is an operator that takes a smooth real-valued function of\n  manifold points and produces a NEW function that computes the directional\n  derivative of the given function at each point of the manifold.",(cljs.core.truth_(sicmutils.calculus.vector_field.components__GT_vector_field)?sicmutils.calculus.vector_field.components__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-name->vf-name"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.coordinate_name__GT_vf_name;},new cljs.core.Symbol("sicmutils.calculus.vector-field","coordinate-name->vf-name","sicmutils.calculus.vector-field/coordinate-name->vf-name",998798925,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"coordinate-name->vf-name","coordinate-name->vf-name",676098324,null),"sicmutils/calculus/vector_field.cljc",40,1,195,195,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"From the name `n` of a coordinate, produce the name of the coordinate basis\n  vector field (as a symbol)",(cljs.core.truth_(sicmutils.calculus.vector_field.coordinate_name__GT_vf_name)?sicmutils.calculus.vector_field.coordinate_name__GT_vf_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evolution"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.evolution;},new cljs.core.Symbol("sicmutils.calculus.vector-field","evolution","sicmutils.calculus.vector-field/evolution",-1981985085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"evolution","evolution",-1709615212,null),"sicmutils/calculus/vector_field.cljc",16,1,303,303,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"order","order",385854271,null)], null)),"We can use the coordinatized vector field to build an evolution along an\n  integral curve.\n\n  NOTE: I don't see how this has anything to do with [[coordinatize]]!",(cljs.core.truth_(sicmutils.calculus.vector_field.evolution)?sicmutils.calculus.vector_field.evolution.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->components"),new cljs.core.Var(function(){return sicmutils.calculus.vector_field.vector_field__GT_components;},new cljs.core.Symbol("sicmutils.calculus.vector-field","vector-field->components","sicmutils.calculus.vector-field/vector-field->components",-2073722219,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.vector-field","sicmutils.calculus.vector-field",-1669343941,null),new cljs.core.Symbol(null,"vector-field->components","vector-field->components",-1993765828,null),"sicmutils/calculus/vector_field.cljc",31,1,102,102,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vf","vf",1319108258,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given a vector field `vf` and a `coordinate-system`, returns a function from\n  the coordinate representation of a manifold point to a coordinate\n  representation of the coordinatized components of the vector field at that\n  point.\n\n  For example:\n\n  ```clojure\n  (let-coordinates [[x y] R2-rect]\n    (let [f (literal-vector-field 'f R2-rect)]\n        ((vector-field->components f R2-rect)\n         (up 'x0 'y0))))\n\n  ;;=> (up (f\u21910 (up x0 y0))\n  ;;       (f\u21911 (up x0 y0)))\n  ```",(cljs.core.truth_(sicmutils.calculus.vector_field.vector_field__GT_components)?sicmutils.calculus.vector_field.vector_field__GT_components.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd"),new cljs.core.Var(function(){return sicmutils.generic.gcd;},new cljs.core.Symbol("sicmutils.generic","gcd","sicmutils.generic/gcd",-288390901,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null),"sicmutils/generic.cljc",16,1,472,472,cljs.core.List.EMPTY,"generic gcd.\n\nReturns the [greatest common\n  divisor](https://en.wikipedia.org/wiki/Greatest_common_divisor) of the two\n  inputs `a` and `b`.",(cljs.core.truth_(sicmutils.generic.gcd)?sicmutils.generic.gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coth"),new cljs.core.Var(function(){return sicmutils.generic.coth;},new cljs.core.Symbol("sicmutils.generic","coth","sicmutils.generic/coth",-816002772,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"coth","coth",1130257730,null),"sicmutils/generic.cljc",17,1,707,707,cljs.core.List.EMPTY,"generic coth.\n\nComputes the [hyperbolic\n cotangent](https://mathworld.wolfram.com/HyperbolicCotangent.html) of the supplied\n argument `a`.\n\ndefaults to `cosh(x) / sinh(x)`.",(cljs.core.truth_(sicmutils.generic.coth)?sicmutils.generic.coth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add"),new cljs.core.Var(function(){return sicmutils.generic.add;},new cljs.core.Symbol("sicmutils.generic","add","sicmutils.generic/add",-1681313812,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"add","add",1875819266,null),"sicmutils/generic.cljc",25,1,48,48,cljs.core.List.EMPTY,"generic add.\n\nReturns the sum of arguments `a` and `b`.\n\n  See [[+]] for a variadic version of [[add]].",(cljs.core.truth_(sicmutils.generic.add)?sicmutils.generic.add.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negate"),new cljs.core.Var(function(){return sicmutils.generic.negate;},new cljs.core.Symbol("sicmutils.generic","negate","sicmutils.generic/negate",1613515768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"negate","negate",337772450,null),"sicmutils/generic.cljc",19,1,79,79,cljs.core.List.EMPTY,"generic negate.\n\nReturns the negation of `a`.\n\n  Equivalent to `(- (v/zero-like a) a)`.",(cljs.core.truth_(sicmutils.generic.negate)?sicmutils.generic.negate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinhc"),new cljs.core.Var(function(){return sicmutils.generic.sinhc;},new cljs.core.Symbol("sicmutils.generic","sinhc","sicmutils.generic/sinhc",634749496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sinhc","sinhc",-1445515294,null),"sicmutils/generic.cljc",18,1,900,900,cljs.core.List.EMPTY,"generic sinhc.\n\nThe [sinhc function](https://en.wikipedia.org/wiki/Sinhc_function),\n  equivalent to $\\frac{\\sinh x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Sinhc_function)\n   - [Mathworld page on Sinhc](https://mathworld.wolfram.com/SinhcFunction.html)",(cljs.core.truth_(sicmutils.generic.sinhc)?sicmutils.generic.sinhc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-rectangular"),new cljs.core.Var(function(){return sicmutils.generic.make_rectangular;},new cljs.core.Symbol("sicmutils.generic","make-rectangular","sicmutils.generic/make-rectangular",988272184,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"make-rectangular","make-rectangular",-1494662174,null),"sicmutils/generic.cljc",29,1,941,941,cljs.core.List.EMPTY,"generic make-rectangular",(cljs.core.truth_(sicmutils.generic.make_rectangular)?sicmutils.generic.make_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real-part"),new cljs.core.Var(function(){return sicmutils.generic.real_part;},new cljs.core.Symbol("sicmutils.generic","real-part","sicmutils.generic/real-part",1017715801,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"real-part","real-part",-2001752061,null),"sicmutils/generic.cljc",22,1,943,943,cljs.core.List.EMPTY,"generic real-part",(cljs.core.truth_(sicmutils.generic.real_part)?sicmutils.generic.real_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asinh"),new cljs.core.Var(function(){return sicmutils.generic.asinh;},new cljs.core.Symbol("sicmutils.generic","asinh","sicmutils.generic/asinh",413770157,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"asinh","asinh",-1398350397,null),"sicmutils/generic.cljc",18,1,755,755,cljs.core.List.EMPTY,"generic asinh.\n\nComputes the [inverse hyperbolic\n sine](https://mathworld.wolfram.com/InverseHyperbolicSine.html) of the\n supplied argument `a`.\n\ndefaults to `ln(x + sqrt(1 + x^2))`.",(cljs.core.truth_(sicmutils.generic.asinh)?sicmutils.generic.asinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log"),new cljs.core.Var(function(){return sicmutils.generic.log;},new cljs.core.Symbol("sicmutils.generic","log","sicmutils.generic/log",-1230799543,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"log","log",45015523,null),"sicmutils/generic.cljc",16,1,265,265,cljs.core.List.EMPTY,"generic log.\n\nReturns the natural logarithm of `x`.",(cljs.core.truth_(sicmutils.generic.log)?sicmutils.generic.log.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp10"),new cljs.core.Var(function(){return sicmutils.generic.exp10;},new cljs.core.Symbol("sicmutils.generic","exp10","sicmutils.generic/exp10",1343883149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"exp10","exp10",-1005012445,null),"sicmutils/generic.cljc",18,1,260,260,cljs.core.List.EMPTY,"generic exp10.\n\nReturns the base-10 exponential of `x`. Equivalent to `(expt 10 x)`.",(cljs.core.truth_(sicmutils.generic.exp10)?sicmutils.generic.exp10.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acos"),new cljs.core.Var(function(){return sicmutils.generic.acos;},new cljs.core.Symbol("sicmutils.generic","acos","sicmutils.generic/acos",-2128060571,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acos","acos",353741763,null),"sicmutils/generic.cljc",17,1,592,592,cljs.core.List.EMPTY,"generic acos.\n\nComputes the inverse cosine of the supplied argument `a`.\n\nDefaults to `atan(sqrt(1-x^2)/x)`.",(cljs.core.truth_(sicmutils.generic.acos)?sicmutils.generic.acos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("floor"),new cljs.core.Var(function(){return sicmutils.generic.floor;},new cljs.core.Symbol("sicmutils.generic","floor","sicmutils.generic/floor",1173704026,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"floor","floor",-772394748,null),"sicmutils/generic.cljc",18,1,374,374,cljs.core.List.EMPTY,"generic floor.\n\nReturns the largest integer less than or equal to `a`.\n\n  Extensions beyond real numbers may behave differently; see the [Documentation\n  site](https://cljdoc.org/d/sicmutils/sicmutils/CURRENT/doc/basics/generics)\n  for more detail.",(cljs.core.truth_(sicmutils.generic.floor)?sicmutils.generic.floor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinc"),new cljs.core.Var(function(){return sicmutils.generic.sinc;},new cljs.core.Symbol("sicmutils.generic","sinc","sicmutils.generic/sinc",-1751779517,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sinc","sinc",60189925,null),"sicmutils/generic.cljc",17,1,840,840,cljs.core.List.EMPTY,"generic sinc.\n\nThe unnormalized [sinc\n  function](https://en.wikipedia.org/wiki/Sinc_function), equivalent to\n  $\\frac{\\sin x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Sinc_function)\n   - [Mathworld page on Sinc](https://mathworld.wolfram.com/SincFunction.html)\n   - [Boost notes on [[sinc]]\n     and [[sinch]]](https://www.boost.org/doc/libs/1_65_0/libs/math/doc/html/math_toolkit/sinc/sinc_overview.html)",(cljs.core.truth_(sicmutils.generic.sinc)?sicmutils.generic.sinc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanh"),new cljs.core.Var(function(){return sicmutils.generic.tanh;},new cljs.core.Symbol("sicmutils.generic","tanh","sicmutils.generic/tanh",-392135069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"tanh","tanh",480481797,null),"sicmutils/generic.cljc",17,1,676,676,cljs.core.List.EMPTY,"generic tanh.\n\nComputes the [hyperbolic\n tangent](https://mathworld.wolfram.com/HyperbolicTangent.html) of the supplied\n argument `a`.\n\ndefaults to `sinh(x) / cosh(x)`.",(cljs.core.truth_(sicmutils.generic.tanh)?sicmutils.generic.tanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sech"),new cljs.core.Var(function(){return sicmutils.generic.sech;},new cljs.core.Symbol("sicmutils.generic","sech","sicmutils.generic/sech",945704675,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sech","sech",-1403979131,null),"sicmutils/generic.cljc",17,1,690,690,cljs.core.List.EMPTY,"generic sech.\n\nComputes the [hyperbolic\n secant](https://mathworld.wolfram.com/HyperbolicSecant.html) of the supplied\n argument `a`.\n\ndefaults to `1 / cosh(x)`.",(cljs.core.truth_(sicmutils.generic.sech)?sicmutils.generic.sech.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("default-expt"),new cljs.core.Var(function(){return sicmutils.generic.default_expt;},new cljs.core.Symbol("sicmutils.generic","default-expt","sicmutils.generic/default-expt",-492262533,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"default-expt","default-expt",1989492517,null),"sicmutils/generic.cljc",28,1,295,295,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)),"Default implementation of exponentiation for integral exponents `e`.\n\n  This implementation uses ['Exponentation by\n  Squaring'](https://en.wikipedia.org/wiki/Exponentiation_by_squaring), and will\n  work for any type that implements `g/mul`.\n\n  The multiplication operation is looked up once and cached at the beginning of\n  computation.",(cljs.core.truth_(sicmutils.generic.default_expt)?sicmutils.generic.default_expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.generic.invert;},new cljs.core.Symbol("sicmutils.generic","invert","sicmutils.generic/invert",174172344,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/generic.cljc",19,1,175,175,cljs.core.List.EMPTY,"generic invert.\n\nReturns the multiplicative inverse of `a`.\n\n  Equivalent to `(/ 1 a)`.",(cljs.core.truth_(sicmutils.generic.invert)?sicmutils.generic.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("conjugate"),new cljs.core.Var(function(){return sicmutils.generic.conjugate;},new cljs.core.Symbol("sicmutils.generic","conjugate","sicmutils.generic/conjugate",1958514877,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"conjugate","conjugate",-1063123193,null),"sicmutils/generic.cljc",22,1,947,947,cljs.core.List.EMPTY,"generic conjugate",(cljs.core.truth_(sicmutils.generic.conjugate)?sicmutils.generic.conjugate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-derivative"),new cljs.core.Var(function(){return sicmutils.generic.Lie_derivative;},new cljs.core.Symbol("sicmutils.generic","Lie-derivative","sicmutils.generic/Lie-derivative",1305276185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"Lie-derivative","Lie-derivative",-641072185,null),"sicmutils/generic.cljc",27,1,1009,1009,cljs.core.List.EMPTY,"generic Lie-derivative",(cljs.core.truth_(sicmutils.generic.Lie_derivative)?sicmutils.generic.Lie_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear"),new cljs.core.Var(function(){return sicmutils.generic.solve_linear;},new cljs.core.Symbol("sicmutils.generic","solve-linear","sicmutils.generic/solve-linear",-1598664670,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"solve-linear","solve-linear",481545288,null),"sicmutils/generic.cljc",25,1,976,976,cljs.core.List.EMPTY,"generic solve-linear.\n\nFor a given `a` and `b`, returns `x` such that `a*x = b`.\n\n  See[[solve-linear-right]] for a similar function that solves for `a = x*b`.",(cljs.core.truth_(sicmutils.generic.solve_linear)?sicmutils.generic.solve_linear.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divide"),new cljs.core.Var(function(){return sicmutils.generic.divide;},new cljs.core.Symbol("sicmutils.generic","divide","sicmutils.generic/divide",1669256054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"divide","divide",-545489112,null),"sicmutils/generic.cljc",9,1,235,236,cljs.core.List.EMPTY,"Alias for [[/]].",(cljs.core.truth_(sicmutils.generic.divide)?sicmutils.generic.divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*"),new cljs.core.Var(function(){return sicmutils.generic._STAR_;},new cljs.core.Symbol("sicmutils.generic","*","sicmutils.generic/*",-2137788809,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"*","*",345799209,null),"sicmutils/generic.cljc",8,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,146,146,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Generic implementation of `*`. Returns the product of all supplied\n  arguments. `(*)` returns 1, the multiplicative identity.\n\n  When applied between numbers, acts like `clojure.core/*`. Dispatch is open,\n  however, making it possible to 'multiply' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (* 2 #sicm/complex \"3 + 1i\")\n  ;;=> #sicm/complex \"6 + 2i\"\n  ```",(cljs.core.truth_(sicmutils.generic._STAR_)?sicmutils.generic._STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt"),new cljs.core.Var(function(){return sicmutils.generic.expt;},new cljs.core.Symbol("sicmutils.generic","expt","sicmutils.generic/expt",177589967,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"expt","expt",2123850345,null),"sicmutils/generic.cljc",17,1,283,283,cljs.core.List.EMPTY,"generic expt",(cljs.core.truth_(sicmutils.generic.expt)?sicmutils.generic.expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modulo-default"),new cljs.core.Var(function(){return sicmutils.generic.modulo_default;},new cljs.core.Symbol("sicmutils.generic","modulo-default","sicmutils.generic/modulo-default",935781103,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"modulo-default","modulo-default",-2084467063,null),"sicmutils/generic.cljc",30,1,416,416,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"The default implementation for [[modulo]] depends on the identity:\n\n  x mod y == x - y \u230Ax/y\u230B\n\n  This is the Knuth definition described\n  by [Wikipedia](https://en.wikipedia.org/wiki/Modulo_operation).",(cljs.core.truth_(sicmutils.generic.modulo_default)?sicmutils.generic.modulo_default.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atan"),new cljs.core.Var(function(){return sicmutils.generic.atan;},new cljs.core.Symbol("sicmutils.generic","atan","sicmutils.generic/atan",1457367767,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"atan","atan",-1026550135,null),"sicmutils/generic.cljc",17,1,560,560,cljs.core.List.EMPTY,"generic atan.\n\nComputes the inverse tangent of the supplied argument `a`. Given two\n  arguments `a` and `a`, returns the inverse tangent of the angle formed by the\n  point `(a, b)` in a 2-dimensional euclidean plane.\n\n  The two-argument version is sometimes\n  called [Atan2](https://en.wikipedia.org/wiki/Atan2).",(cljs.core.truth_(sicmutils.generic.atan)?sicmutils.generic.atan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integer-part"),new cljs.core.Var(function(){return sicmutils.generic.integer_part;},new cljs.core.Symbol("sicmutils.generic","integer-part","sicmutils.generic/integer-part",464431255,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"integer-part","integer-part",-1884537015,null),"sicmutils/generic.cljc",25,1,396,396,cljs.core.List.EMPTY,"generic integer-part.\n\nReturns the integer part of `a` by removing any fractional digits.",(cljs.core.truth_(sicmutils.generic.integer_part)?sicmutils.generic.integer_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear-left"),new cljs.core.Var(function(){return sicmutils.generic.solve_linear_left;},new cljs.core.Symbol("sicmutils.generic","solve-linear-left","sicmutils.generic/solve-linear-left",565058800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"solve-linear-left","solve-linear-left",1437395114,null),"sicmutils/generic.cljc",24,1,986,986,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Alias for [[solve-linear]]; present for compatibility with the original\n  `scmutils` codebase.\n\n  NOTE: In `scmutils`, `solve-linear-left` and `solve-linear` act identically in\n  all cases except matrices. `solve-linear-left` only accepted a column\n  matrix (or up structure) in the `b` position, while `solve-linear` accepted\n  either a column or row (up or down structure).\n\n  In SICMUtils, both functions accept either type.",(cljs.core.truth_(sicmutils.generic.solve_linear_left)?sicmutils.generic.solve_linear_left.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negative?"),new cljs.core.Var(function(){return sicmutils.generic.negative_QMARK_;},new cljs.core.Symbol("sicmutils.generic","negative?","sicmutils.generic/negative?",-1974444692,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"negative?","negative?",374534410,null),"sicmutils/generic.cljc",22,1,355,355,cljs.core.List.EMPTY,"generic negative?.\n\nReturns true if the argument `a` is less than `(v/zero-like a)`,\n  false otherwise. The default implementation depends on a proper Comparable\n  implementation on the type.`",(cljs.core.truth_(sicmutils.generic.negative_QMARK_)?sicmutils.generic.negative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear-right"),new cljs.core.Var(function(){return sicmutils.generic.solve_linear_right;},new cljs.core.Symbol("sicmutils.generic","solve-linear-right","sicmutils.generic/solve-linear-right",830875169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"solve-linear-right","solve-linear-right",-1518292405,null),"sicmutils/generic.cljc",31,1,981,981,cljs.core.List.EMPTY,"generic solve-linear-right.\n\nFor a given `a` and `b`, returns `x` such that `a = x*b`.\n\n  See[[solve-linear]] for a similar function that solves for `a*x = b`.",(cljs.core.truth_(sicmutils.generic.solve_linear_right)?sicmutils.generic.solve_linear_right.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asec"),new cljs.core.Var(function(){return sicmutils.generic.asec;},new cljs.core.Symbol("sicmutils.generic","asec","sicmutils.generic/asec",1729846993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"asec","asec",-81933685,null),"sicmutils/generic.cljc",17,1,618,618,cljs.core.List.EMPTY,"generic asec.\n\nComputes the [inverse\n secant](https://mathworld.wolfram.com/InverseSecant.html) of the supplied\n argument `a`.\n\ndefaults to `atan(sqrt(x^2 - 1))`.",(cljs.core.truth_(sicmutils.generic.asec)?sicmutils.generic.asec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cos"),new cljs.core.Var(function(){return sicmutils.generic.cos;},new cljs.core.Symbol("sicmutils.generic","cos","sicmutils.generic/cos",493843181,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"cos","cos",-1452677493,null),"sicmutils/generic.cljc",16,1,498,498,cljs.core.List.EMPTY,"generic cos.\n\nReturns the [cosine](https://en.wikipedia.org/wiki/Sine_and_cosine) of the\n  supplied argument `a`.",(cljs.core.truth_(sicmutils.generic.cos)?sicmutils.generic.cos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log10"),new cljs.core.Var(function(){return sicmutils.generic.log10;},new cljs.core.Symbol("sicmutils.generic","log10","sicmutils.generic/log10",-1457709291,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"log10","log10",891257803,null),"sicmutils/generic.cljc",18,1,275,275,cljs.core.List.EMPTY,"generic log10.\n\nReturns the base-10 logarithm of `x`, ie, $log_10(x)$.",(cljs.core.truth_(sicmutils.generic.log10)?sicmutils.generic.log10.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acoth"),new cljs.core.Var(function(){return sicmutils.generic.acoth;},new cljs.core.Symbol("sicmutils.generic","acoth","sicmutils.generic/acoth",-709459891,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acoth","acoth",1639672811,null),"sicmutils/generic.cljc",18,1,785,785,cljs.core.List.EMPTY,"generic acoth.\n\nComputes the [inverse hyperbolic\n cotangent](https://mathworld.wolfram.com/InverseHyperbolicCotangent.html) of\n the supplied argument `a`.\n\ndefaults to `1/2 ln((x+1)/(x-1))`.",(cljs.core.truth_(sicmutils.generic.acoth)?sicmutils.generic.acoth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dot-product"),new cljs.core.Var(function(){return sicmutils.generic.dot_product;},new cljs.core.Symbol("sicmutils.generic","dot-product","sicmutils.generic/dot-product",1743188054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"dot-product","dot-product",-203055892,null),"sicmutils/generic.cljc",24,1,955,955,cljs.core.List.EMPTY,"generic dot-product",(cljs.core.truth_(sicmutils.generic.dot_product)?sicmutils.generic.dot_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tan"),new cljs.core.Var(function(){return sicmutils.generic.tan;},new cljs.core.Symbol("sicmutils.generic","tan","sicmutils.generic/tan",968872262,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"tan","tan",-1380825876,null),"sicmutils/generic.cljc",16,1,511,511,cljs.core.List.EMPTY,"generic tan.\n\nComputes the trigonometric tangent function of the supplied argument `a`.\n\nEquivalent to `(/ (sin a) (cos a))`.",(cljs.core.truth_(sicmutils.generic.tan)?sicmutils.generic.tan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("csc"),new cljs.core.Var(function(){return sicmutils.generic.csc;},new cljs.core.Symbol("sicmutils.generic","csc","sicmutils.generic/csc",2055073058,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"csc","csc",-427853492,null),"sicmutils/generic.cljc",16,1,546,546,cljs.core.List.EMPTY,"generic csc.\n\nComputes the cosecant of the supplied argument `a`.\n\nEquivalent to `(invert (sin a))`.",(cljs.core.truth_(sicmutils.generic.csc)?sicmutils.generic.csc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asech"),new cljs.core.Var(function(){return sicmutils.generic.asech;},new cljs.core.Symbol("sicmutils.generic","asech","sicmutils.generic/asech",287511558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"asech","asech",-316284500,null),"sicmutils/generic.cljc",18,1,800,800,cljs.core.List.EMPTY,"generic asech.\n\nComputes the [inverse hyperbolic\n secant](https://mathworld.wolfram.com/InverseHyperbolicSecant.html) of the\n supplied argument `a`.\n\ndefaults to `ln((1 + sqrt(1-x^2)) / x)`.",(cljs.core.truth_(sicmutils.generic.asech)?sicmutils.generic.asech.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cot"),new cljs.core.Var(function(){return sicmutils.generic.cot;},new cljs.core.Symbol("sicmutils.generic","cot","sicmutils.generic/cot",314466730,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"cot","cot",-1635649012,null),"sicmutils/generic.cljc",16,1,524,524,cljs.core.List.EMPTY,"generic cot.\n\nComputes the trigonometric cotangent function of the supplied argument `a`.\n\nEquivalent to `(invert (tan a))`, or `(/ (cos a) (sin a))`.",(cljs.core.truth_(sicmutils.generic.cot)?sicmutils.generic.cot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivative"),new cljs.core.Var(function(){return sicmutils.generic.partial_derivative;},new cljs.core.Symbol("sicmutils.generic","partial-derivative","sicmutils.generic/partial-derivative",2059311267,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"partial-derivative","partial-derivative",-1901056819,null),"sicmutils/generic.cljc",31,1,1008,1008,cljs.core.List.EMPTY,"generic partial-derivative",(cljs.core.truth_(sicmutils.generic.partial_derivative)?sicmutils.generic.partial_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sub"),new cljs.core.Var(function(){return sicmutils.generic.sub;},new cljs.core.Symbol("sicmutils.generic","sub","sicmutils.generic/sub",-1862271616,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),"sicmutils/generic.cljc",25,1,86,86,cljs.core.List.EMPTY,"generic sub.\n\nReturns the difference of `a` and `b`.\n\n  Equivalent to `(+ a (negate b))`.\n\n  See [[-]] for a variadic version of [[sub]].",(cljs.core.truth_(sicmutils.generic.sub)?sicmutils.generic.sub.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("imag-part"),new cljs.core.Var(function(){return sicmutils.generic.imag_part;},new cljs.core.Symbol("sicmutils.generic","imag-part","sicmutils.generic/imag-part",-186384332,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"imag-part","imag-part",2028041294,null),"sicmutils/generic.cljc",22,1,944,944,cljs.core.List.EMPTY,"generic imag-part",(cljs.core.truth_(sicmutils.generic.imag_part)?sicmutils.generic.imag_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("simplify"),new cljs.core.Var(function(){return sicmutils.generic.simplify;},new cljs.core.Symbol("sicmutils.generic","simplify","sicmutils.generic/simplify",-1038816256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null),"sicmutils/generic.cljc",21,1,1011,1011,cljs.core.List.EMPTY,"generic simplify",(cljs.core.truth_(sicmutils.generic.simplify)?sicmutils.generic.simplify.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt"),new cljs.core.Var(function(){return sicmutils.generic.sqrt;},new cljs.core.Symbol("sicmutils.generic","sqrt","sicmutils.generic/sqrt",-1575436920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sqrt","sqrt",370479598,null),"sicmutils/generic.cljc",17,1,344,344,cljs.core.List.EMPTY,"generic sqrt",(cljs.core.truth_(sicmutils.generic.sqrt)?sicmutils.generic.sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acsch"),new cljs.core.Var(function(){return sicmutils.generic.acsch;},new cljs.core.Symbol("sicmutils.generic","acsch","sicmutils.generic/acsch",496363040,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acsch","acsch",-1449651634,null),"sicmutils/generic.cljc",18,1,819,819,cljs.core.List.EMPTY,"generic acsch.\n\nComputes the [inverse hyperbolic\n cosecant](https://mathworld.wolfram.com/InverseHyperbolicCosecant.html) of the\n supplied argument `a`.\n\ndefaults to `ln((1 + sqrt(1+x^2)) / x)`.",(cljs.core.truth_(sicmutils.generic.acsch)?sicmutils.generic.acsch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inner-product"),new cljs.core.Var(function(){return sicmutils.generic.inner_product;},new cljs.core.Symbol("sicmutils.generic","inner-product","sicmutils.generic/inner-product",518247252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"inner-product","inner-product",-1963110418,null),"sicmutils/generic.cljc",26,1,956,956,cljs.core.List.EMPTY,"generic inner-product",(cljs.core.truth_(sicmutils.generic.inner_product)?sicmutils.generic.inner_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose"),new cljs.core.Var(function(){return sicmutils.generic.transpose;},new cljs.core.Symbol("sicmutils.generic","transpose","sicmutils.generic/transpose",-914460523,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),"sicmutils/generic.cljc",22,1,951,951,cljs.core.List.EMPTY,"generic transpose",(cljs.core.truth_(sicmutils.generic.transpose)?sicmutils.generic.transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("csch"),new cljs.core.Var(function(){return sicmutils.generic.csch;},new cljs.core.Symbol("sicmutils.generic","csch","sicmutils.generic/csch",130403637,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"csch","csch",-1950330545,null),"sicmutils/generic.cljc",17,1,722,722,cljs.core.List.EMPTY,"generic csch.\n\nComputes the [hyperbolic\n cosecant](https://mathworld.wolfram.com/HyperbolicCosecant.html) of the supplied\n argument `a`.\n\ndefaults to `1 / sinh(x)`.",(cljs.core.truth_(sicmutils.generic.csch)?sicmutils.generic.csch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace"),new cljs.core.Var(function(){return sicmutils.generic.trace;},new cljs.core.Symbol("sicmutils.generic","trace","sicmutils.generic/trace",-1791336290,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"trace","trace",557784112,null),"sicmutils/generic.cljc",18,1,952,952,cljs.core.List.EMPTY,"generic trace",(cljs.core.truth_(sicmutils.generic.trace)?sicmutils.generic.trace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-"),new cljs.core.Var(function(){return sicmutils.generic._;},new cljs.core.Symbol("sicmutils.generic","-","sicmutils.generic/-",1608649162,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"-","-",-471816912,null),"sicmutils/generic.cljc",8,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,99,99,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Generic implementation of `-`.\n\n  If one argument is supplied, returns the negation of `a`. Else returns the\n  difference of the first argument `a` and the sum of all remaining\n  arguments. `(-)` returns 0.\n\n  When applied between numbers, acts like `clojure.core/-`. Dispatch is open,\n  however, making it possible to 'subtract' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (- [1 2 3] [2 3 4])\n  ;;=> (up -1 -1 -1)\n\n  (- [1 10])\n  ;;=> (up -1 -10)\n  ```",(cljs.core.truth_(sicmutils.generic._)?sicmutils.generic._.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp"),new cljs.core.Var(function(){return sicmutils.generic.exp;},new cljs.core.Symbol("sicmutils.generic","exp","sicmutils.generic/exp",-433223521,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"exp","exp",1378825265,null),"sicmutils/generic.cljc",16,1,248,248,cljs.core.List.EMPTY,"generic exp.\n\nReturns the base-e exponential of `x`. Equivalent to `(expt e x)`, given\n  some properly-defined `e` symbol.",(cljs.core.truth_(sicmutils.generic.exp)?sicmutils.generic.exp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("derivative-symbol"),new cljs.core.Var(function(){return sicmutils.generic.derivative_symbol;},new cljs.core.Symbol("sicmutils.generic","derivative-symbol","sicmutils.generic/derivative-symbol",1701964107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"derivative-symbol","derivative-symbol",-378635087,null),"sicmutils/generic.cljc",32,1,1006,1006,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.generic.derivative_symbol)?sicmutils.generic.derivative_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acosh"),new cljs.core.Var(function(){return sicmutils.generic.acosh;},new cljs.core.Symbol("sicmutils.generic","acosh","sicmutils.generic/acosh",74522143,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acosh","acosh",-2005748303,null),"sicmutils/generic.cljc",18,1,739,739,cljs.core.List.EMPTY,"generic acosh.\n\nComputes the [inverse hyperbolic\n cosine](https://mathworld.wolfram.com/InverseHyperbolicCosine.html) of the supplied\n argument `a`.\n\ndefaults to `2 ln(sqrt((x+1)/2) + sqrt((x-1)/2))`.",(cljs.core.truth_(sicmutils.generic.acosh)?sicmutils.generic.acosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanc"),new cljs.core.Var(function(){return sicmutils.generic.tanc;},new cljs.core.Symbol("sicmutils.generic","tanc","sicmutils.generic/tanc",1472778683,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"tanc","tanc",-1009303983,null),"sicmutils/generic.cljc",17,1,878,878,cljs.core.List.EMPTY,"generic tanc.\n\n`tanc` is defined, by analogy with [[sinc]], to be equal to $\\frac{\\tan\n  x}{x}$ for nonzero $x$ and equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Tanc_function)\n   - [Mathworld page on Sinc](https://mathworld.wolfram.com/TancFunction.html)",(cljs.core.truth_(sicmutils.generic.tanc)?sicmutils.generic.tanc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ceiling"),new cljs.core.Var(function(){return sicmutils.generic.ceiling;},new cljs.core.Symbol("sicmutils.generic","ceiling","sicmutils.generic/ceiling",889645983,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"ceiling","ceiling",-1593475279,null),"sicmutils/generic.cljc",20,1,386,386,cljs.core.List.EMPTY,"generic ceiling.\n\nReturns the result of rounding `a` up to the next largest integer.\n\n  Extensions beyond real numbers may behave differently; see the [Documentation\n  site](https://cljdoc.org/d/sicmutils/sicmutils/CURRENT/doc/basics/generics)\n  for more detail.",(cljs.core.truth_(sicmutils.generic.ceiling)?sicmutils.generic.ceiling.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("determinant"),new cljs.core.Var(function(){return sicmutils.generic.determinant;},new cljs.core.Symbol("sicmutils.generic","determinant","sicmutils.generic/determinant",1097677224,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"determinant","determinant",-580156910,null),"sicmutils/generic.cljc",24,1,953,953,cljs.core.List.EMPTY,"generic determinant",(cljs.core.truth_(sicmutils.generic.determinant)?sicmutils.generic.determinant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cosh"),new cljs.core.Var(function(){return sicmutils.generic.cosh;},new cljs.core.Symbol("sicmutils.generic","cosh","sicmutils.generic/cosh",386373224,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"cosh","cosh",-1962788142,null),"sicmutils/generic.cljc",17,1,650,650,cljs.core.List.EMPTY,"generic cosh.\n\nComputes the [hyperbolic\n cosine](https://mathworld.wolfram.com/HyperbolicCosine.html) of the supplied\n argument `a`.\n\ndefaults to `(e^x + e^{-x}) / 2`.",(cljs.core.truth_(sicmutils.generic.cosh)?sicmutils.generic.cosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("outer-product"),new cljs.core.Var(function(){return sicmutils.generic.outer_product;},new cljs.core.Symbol("sicmutils.generic","outer-product","sicmutils.generic/outer-product",-1588674734,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"outer-product","outer-product",491531252,null),"sicmutils/generic.cljc",26,1,957,957,cljs.core.List.EMPTY,"generic outer-product",(cljs.core.truth_(sicmutils.generic.outer_product)?sicmutils.generic.outer_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cross-product"),new cljs.core.Var(function(){return sicmutils.generic.cross_product;},new cljs.core.Symbol("sicmutils.generic","cross-product","sicmutils.generic/cross-product",1494516691,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"cross-product","cross-product",-823528331,null),"sicmutils/generic.cljc",26,1,958,958,cljs.core.List.EMPTY,"generic cross-product",(cljs.core.truth_(sicmutils.generic.cross_product)?sicmutils.generic.cross_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("magnitude"),new cljs.core.Var(function(){return sicmutils.generic.magnitude;},new cljs.core.Symbol("sicmutils.generic","magnitude","sicmutils.generic/magnitude",1215571411,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null),"sicmutils/generic.cljc",22,1,945,945,cljs.core.List.EMPTY,"generic magnitude",(cljs.core.truth_(sicmutils.generic.magnitude)?sicmutils.generic.magnitude.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("/"),new cljs.core.Var(function(){return sicmutils.generic._SLASH_;},new cljs.core.Symbol("sicmutils.generic","/","sicmutils.generic//",573850291,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"/","/",-1371932971,null),"sicmutils/generic.cljc",new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,209,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Generic implementation of `/`.\n\n  If one argument is supplied, returns the multiplicative inverse of `a`. Else\n  returns the result of dividing first argument `a` by the product of all\n  remaining arguments. `(/)` returns 1, the multiplicative identity.\n\n  When applied between numbers, acts like `clojure.core//`. Dispatch is open,\n  however, making it possible to 'divide' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (/ [2 4 6] 2)\n  ;;=> (up 1 2 3)\n  ```",(cljs.core.truth_(sicmutils.generic._SLASH_)?sicmutils.generic._SLASH_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log2"),new cljs.core.Var(function(){return sicmutils.generic.log2;},new cljs.core.Symbol("sicmutils.generic","log2","sicmutils.generic/log2",-306930545,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"log2","log2",-1850656939,null),"sicmutils/generic.cljc",17,1,269,269,cljs.core.List.EMPTY,"generic log2.\n\nReturns the base-2 logarithm of `x`, ie, $log_2(x)$.",(cljs.core.truth_(sicmutils.generic.log2)?sicmutils.generic.log2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("angle"),new cljs.core.Var(function(){return sicmutils.generic.angle;},new cljs.core.Symbol("sicmutils.generic","angle","sicmutils.generic/angle",913320843,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null),"sicmutils/generic.cljc",18,1,946,946,cljs.core.List.EMPTY,"generic angle",(cljs.core.truth_(sicmutils.generic.angle)?sicmutils.generic.angle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asin"),new cljs.core.Var(function(){return sicmutils.generic.asin;},new cljs.core.Symbol("sicmutils.generic","asin","sicmutils.generic/asin",1579065372,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"asin","asin",-904130570,null),"sicmutils/generic.cljc",17,1,581,581,cljs.core.List.EMPTY,"generic asin.\n\nComputes the inverse sine of the supplied argument `a`.\n\nDefaults to `atan(x/sqrt(1-x^2))`.",(cljs.core.truth_(sicmutils.generic.asin)?sicmutils.generic.asin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("infinite?"),new cljs.core.Var(function(){return sicmutils.generic.infinite_QMARK_;},new cljs.core.Symbol("sicmutils.generic","infinite?","sicmutils.generic/infinite?",361009389,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"infinite?","infinite?",-377355081,null),"sicmutils/generic.cljc",22,1,363,363,cljs.core.List.EMPTY,"generic infinite?.\n\nReturns true if `a` is either numerically infinite (ie, equal to `##Inf`) or\n  a compound number (complex or quaterion, for example) with some infinite\n  component.",(cljs.core.truth_(sicmutils.generic.infinite_QMARK_)?sicmutils.generic.infinite_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("div"),new cljs.core.Var(function(){return sicmutils.generic.div;},new cljs.core.Symbol("sicmutils.generic","div","sicmutils.generic/div",348426941,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"div","div",-1597244137,null),"sicmutils/generic.cljc",16,1,191,191,cljs.core.List.EMPTY,"generic div.\n\nReturns the result of dividing `a` and `b`.\n\n  Equivalent to `(* a (negate b))`.\n\n  See [[/]] for a variadic version of [[div]].",(cljs.core.truth_(sicmutils.generic.div)?sicmutils.generic.div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("remainder-default"),new cljs.core.Var(function(){return sicmutils.generic.remainder_default;},new cljs.core.Symbol("sicmutils.generic","remainder-default","sicmutils.generic/remainder-default",-1058539331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"remainder-default","remainder-default",1290425111,null),"sicmutils/generic.cljc",33,1,447,447,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),null,(cljs.core.truth_(sicmutils.generic.remainder_default)?sicmutils.generic.remainder_default.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acsc"),new cljs.core.Var(function(){return sicmutils.generic.acsc;},new cljs.core.Symbol("sicmutils.generic","acsc","sicmutils.generic/acsc",930809278,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acsc","acsc",-1149851176,null),"sicmutils/generic.cljc",17,1,631,631,cljs.core.List.EMPTY,"generic acsc.\n\nComputes the [inverse\n cosecant](https://mathworld.wolfram.com/InverseCosecant.html) of the supplied\n argument `a`.\n\ndefaults to `atan(1 / sqrt(x^2 - 1))`.",(cljs.core.truth_(sicmutils.generic.acsc)?sicmutils.generic.acsc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mul"),new cljs.core.Var(function(){return sicmutils.generic.mul;},new cljs.core.Symbol("sicmutils.generic","mul","sicmutils.generic/mul",-794311777,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),"sicmutils/generic.cljc",25,1,128,128,cljs.core.List.EMPTY,"generic mul.\n\nReturns the product of `a` and `b`.\n\n  See [[*]] for a variadic version of [[mul]].",(cljs.core.truth_(sicmutils.generic.mul)?sicmutils.generic.mul.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acot"),new cljs.core.Var(function(){return sicmutils.generic.acot;},new cljs.core.Symbol("sicmutils.generic","acot","sicmutils.generic/acot",1035820755,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"acot","acot",1103016569,null),"sicmutils/generic.cljc",17,1,604,604,cljs.core.List.EMPTY,"generic acot.\n\nComputes the [inverse\n cotangent](https://mathworld.wolfram.com/InverseCotangent.html) of the supplied\n argument `a`.\n\ndefaults to `pi/2 - atan(x)`.",(cljs.core.truth_(sicmutils.generic.acot)?sicmutils.generic.acot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("+"),new cljs.core.Var(function(){return sicmutils.generic._PLUS_;},new cljs.core.Symbol("sicmutils.generic","+","sicmutils.generic/+",668273852,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"+","+",-740910886,null),"sicmutils/generic.cljc",8,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,56,56,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Generic implementation of `+`. Returns the sum of all supplied arguments. `(+)`\n  returns 0, the additive identity.\n\n  When applied between numbers, acts like `clojure.core/+`. Dispatch is open,\n  however, making it possible to 'add' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (+ [1 2 3] [2 3 4])\n  ;;=> (up 3 5 7)\n  ```",(cljs.core.truth_(sicmutils.generic._PLUS_)?sicmutils.generic._PLUS_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanhc"),new cljs.core.Var(function(){return sicmutils.generic.tanhc;},new cljs.core.Symbol("sicmutils.generic","tanhc","sicmutils.generic/tanhc",-1894731684,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"tanhc","tanhc",991235322,null),"sicmutils/generic.cljc",18,1,919,919,cljs.core.List.EMPTY,"generic tanhc.\n\nThe [tanhc function](https://en.wikipedia.org/wiki/Tanhc_function),\n  equivalent to $\\frac{\\tanh x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Tanhc_function)\n   - [Mathworld page on Tanhc](https://mathworld.wolfram.com/TanhcFunction.html)",(cljs.core.truth_(sicmutils.generic.tanhc)?sicmutils.generic.tanhc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abs"),new cljs.core.Var(function(){return sicmutils.generic.abs;},new cljs.core.Symbol("sicmutils.generic","abs","sicmutils.generic/abs",-551747360,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"abs","abs",1394505050,null),"sicmutils/generic.cljc",16,1,370,370,cljs.core.List.EMPTY,"generic abs",(cljs.core.truth_(sicmutils.generic.abs)?sicmutils.generic.abs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinh"),new cljs.core.Var(function(){return sicmutils.generic.sinh;},new cljs.core.Symbol("sicmutils.generic","sinh","sicmutils.generic/sinh",1223830108,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sinh","sinh",-990423302,null),"sicmutils/generic.cljc",17,1,663,663,cljs.core.List.EMPTY,"generic sinh.\n\nComputes the [hyperbolic\n sine](https://mathworld.wolfram.com/HyperbolicSine.html) of the supplied\n argument `a`.\n\ndefaults to `(e^x - e^{-x}) / 2`.",(cljs.core.truth_(sicmutils.generic.sinh)?sicmutils.generic.sinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fractional-part"),new cljs.core.Var(function(){return sicmutils.generic.fractional_part;},new cljs.core.Symbol("sicmutils.generic","fractional-part","sicmutils.generic/fractional-part",500216452,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"fractional-part","fractional-part",-505422086,null),"sicmutils/generic.cljc",28,1,399,399,cljs.core.List.EMPTY,"generic fractional-part.\n\nReturns the fractional part of the given value, defined as `x - \u230Ax\u230B`.\n\n  For positive numbers, this is identical to `(- a (integer-part a))`. For\n  negative `a`, because [[floor]] truncates toward negative infinity, you might\n  be surprised to find that [[fractional-part]] returns the distance between `a`\n  and the next-lowest integer:\n\n```clojure\n(= 0.6 (fractional-part -0.4))\n```",(cljs.core.truth_(sicmutils.generic.fractional_part)?sicmutils.generic.fractional_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp2"),new cljs.core.Var(function(){return sicmutils.generic.exp2;},new cljs.core.Symbol("sicmutils.generic","exp2","sicmutils.generic/exp2",-1208070192,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"exp2","exp2",603509626,null),"sicmutils/generic.cljc",17,1,253,253,cljs.core.List.EMPTY,"generic exp2.\n\nReturns the base-2 exponential of `x`. Equivalent to `(expt 2 x)`.",(cljs.core.truth_(sicmutils.generic.exp2)?sicmutils.generic.exp2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atanh"),new cljs.core.Var(function(){return sicmutils.generic.atanh;},new cljs.core.Symbol("sicmutils.generic","atanh","sicmutils.generic/atanh",1909285426,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"atanh","atanh",-1915750692,null),"sicmutils/generic.cljc",18,1,770,770,cljs.core.List.EMPTY,"generic atanh.\n\nComputes the [inverse hyperbolic\n tangent](https://mathworld.wolfram.com/InverseHyperbolicTangent.html) of the\n supplied argument `a`.\n\ndefaults to `1/2 ln((1+x)/(1-x))`.",(cljs.core.truth_(sicmutils.generic.atanh)?sicmutils.generic.atanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("square"),new cljs.core.Var(function(){return sicmutils.generic.square;},new cljs.core.Symbol("sicmutils.generic","square","sicmutils.generic/square",238804630,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"square","square",-1842001092,null),"sicmutils/generic.cljc",19,1,336,336,cljs.core.List.EMPTY,"generic square",(cljs.core.truth_(sicmutils.generic.square)?sicmutils.generic.square.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lcm"),new cljs.core.Var(function(){return sicmutils.generic.lcm;},new cljs.core.Symbol("sicmutils.generic","lcm","sicmutils.generic/lcm",-290327946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"lcm","lcm",-1699262564,null),"sicmutils/generic.cljc",16,1,477,477,cljs.core.List.EMPTY,"generic lcm.\n\nReturns the [least common\n  multiple](https://en.wikipedia.org/wiki/Least_common_multiple) of the two\n  inputs `a` and `b`.",(cljs.core.truth_(sicmutils.generic.lcm)?sicmutils.generic.lcm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sin"),new cljs.core.Var(function(){return sicmutils.generic.sin;},new cljs.core.Symbol("sicmutils.generic","sin","sicmutils.generic/sin",-223954885,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sin","sin",1721439389,null),"sicmutils/generic.cljc",16,1,503,503,cljs.core.List.EMPTY,"generic sin.\n\nReturns the [sine](https://en.wikipedia.org/wiki/Sine_and_cosine) of the\n  supplied argument `a`.",(cljs.core.truth_(sicmutils.generic.sin)?sicmutils.generic.sin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dimension"),new cljs.core.Var(function(){return sicmutils.generic.dimension;},new cljs.core.Symbol("sicmutils.generic","dimension","sicmutils.generic/dimension",-164937689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"dimension","dimension",-2111181571,null),"sicmutils/generic.cljc",22,1,954,954,cljs.core.List.EMPTY,"generic dimension",(cljs.core.truth_(sicmutils.generic.dimension)?sicmutils.generic.dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-polar"),new cljs.core.Var(function(){return sicmutils.generic.make_polar;},new cljs.core.Symbol("sicmutils.generic","make-polar","sicmutils.generic/make-polar",-470282509,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"make-polar","make-polar",2147326621,null),"sicmutils/generic.cljc",23,1,942,942,cljs.core.List.EMPTY,"generic make-polar",(cljs.core.truth_(sicmutils.generic.make_polar)?sicmutils.generic.make_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*in-default-invert*"),new cljs.core.Var(function(){return sicmutils.generic._STAR_in_default_invert_STAR_;},new cljs.core.Symbol("sicmutils.generic","*in-default-invert*","sicmutils.generic/*in-default-invert*",985838491,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"*in-default-invert*","*in-default-invert*",-1228462211,null),"sicmutils/generic.cljc",22,1,true,182,184,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.generic._STAR_in_default_invert_STAR_)?sicmutils.generic._STAR_in_default_invert_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sec"),new cljs.core.Var(function(){return sicmutils.generic.sec;},new cljs.core.Symbol("sicmutils.generic","sec","sicmutils.generic/sec",-1751643728,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"sec","sec",60154974,null),"sicmutils/generic.cljc",16,1,535,535,cljs.core.List.EMPTY,"generic sec.\n\nComputes the secant of the supplied argument `a`.\n\nEquivalent to `(invert (cos a))`.",(cljs.core.truth_(sicmutils.generic.sec)?sicmutils.generic.sec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quotient"),new cljs.core.Var(function(){return sicmutils.generic.quotient;},new cljs.core.Symbol("sicmutils.generic","quotient","sicmutils.generic/quotient",-1098745800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"quotient","quotient",-1029733218,null),"sicmutils/generic.cljc",21,1,414,414,cljs.core.List.EMPTY,"generic quotient",(cljs.core.truth_(sicmutils.generic.quotient)?sicmutils.generic.quotient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exact-divide"),new cljs.core.Var(function(){return sicmutils.generic.exact_divide;},new cljs.core.Symbol("sicmutils.generic","exact-divide","sicmutils.generic/exact-divide",1915390996,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"exact-divide","exact-divide",-836167490,null),"sicmutils/generic.cljc",25,1,239,239,cljs.core.List.EMPTY,"generic exact-divide.\n\nSimilar to the binary case of [[/]], but throws if `(v/exact? <result>)`\n  returns false.",(cljs.core.truth_(sicmutils.generic.exact_divide)?sicmutils.generic.exact_divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modulo"),new cljs.core.Var(function(){return sicmutils.generic.modulo;},new cljs.core.Symbol("sicmutils.generic","modulo","sicmutils.generic/modulo",-1489337852,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"modulo","modulo",725580254,null),"sicmutils/generic.cljc",19,1,426,426,cljs.core.List.EMPTY,"generic modulo.\n\nReturns the result of the\n  mathematical [Modulo](https://en.wikipedia.org/wiki/Modulo_operation)\n  operation between `a` and `b` (using the Knuth definition listed).\n\n The contract satisfied by [[modulo]] is:\n\n```clojure\n(= a (+ (* b (floor (/ a b)))\n        (modulo a b)))\n```\n\n For numbers, this differs from the contract offered by [[remainder]]\n because `(floor (/ a b))` rounds toward negative infinity, while\n the [[quotient]] operation in the contract for [[remainder]] rounds toward 0.\n\n The result will be either `0` or of the same sign as the divisor `b`.",(cljs.core.truth_(sicmutils.generic.modulo)?sicmutils.generic.modulo.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cube"),new cljs.core.Var(function(){return sicmutils.generic.cube;},new cljs.core.Symbol("sicmutils.generic","cube","sicmutils.generic/cube",-1669681995,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"cube","cube",138920159,null),"sicmutils/generic.cljc",17,1,340,340,cljs.core.List.EMPTY,"generic cube",(cljs.core.truth_(sicmutils.generic.cube)?sicmutils.generic.cube.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("remainder"),new cljs.core.Var(function(){return sicmutils.generic.remainder;},new cljs.core.Symbol("sicmutils.generic","remainder","sicmutils.generic/remainder",740920805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.generic","sicmutils.generic",-1563152501,null),new cljs.core.Symbol(null,"remainder","remainder",-1608248897,null),"sicmutils/generic.cljc",22,1,453,453,cljs.core.List.EMPTY,"generic remainder.\n\nReturns the remainder of dividing the dividend `a` by divisor `b`.\n\n The contract satisfied by [[remainder]] is:\n\n```clojure\n(= a (+ (* b (quotient a b))\n        (remainder a b)))\n```\n\n For numbers, this differs from the contract offered by [[modulo]]\n because [[quotient]] rounds toward 0, while `(floor (/ a b))` rounds toward\n negative infinity.\n\n The result will be either `0` or of the same sign as the dividend `a`.",(cljs.core.truth_(sicmutils.generic.remainder)?sicmutils.generic.remainder.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*log-assumptions?*"),new cljs.core.Var(function(){return sicmutils.util.logic._STAR_log_assumptions_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.util.logic","*log-assumptions?*","sicmutils.util.logic/*log-assumptions?*",695516542,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.logic","sicmutils.util.logic",1571775071,null),new cljs.core.Symbol(null,"*log-assumptions?*","*log-assumptions?*",-1003046769,null),"sicmutils/util/logic.cljc",21,1,true,7,9,cljs.core.List.EMPTY,"If true, logs assumptions.",(cljs.core.truth_(sicmutils.util.logic._STAR_log_assumptions_QMARK__STAR_)?sicmutils.util.logic._STAR_log_assumptions_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("assume!"),new cljs.core.Var(function(){return sicmutils.util.logic.assume_BANG_;},new cljs.core.Symbol("sicmutils.util.logic","assume!","sicmutils.util.logic/assume!",737000112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.logic","sicmutils.util.logic",1571775071,null),new cljs.core.Symbol(null,"assume!","assume!",1219209121,null),"sicmutils/util/logic.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"_if-false","_if-false",-353608572,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"_if-false","_if-false",-353608572,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,12,12,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"assumption","assumption",-169353111,null),new cljs.core.Symbol(null,"context","context",810340414,null),new cljs.core.Symbol(null,"_if-false","_if-false",-353608572,null)], null)),"Log an assumption.\n\n  NOTE that `if-false` is not used right now. Currently this always returns true.\n\n  NOTE: what this WILL do is check if the assumption is correct, to the extent\n  that this is possible, and fail if it's provably false.",(cljs.core.truth_(sicmutils.util.logic.assume_BANG_)?sicmutils.util.logic.assume_BANG_.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("not-integral?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.not_integral_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","not-integral?","sicmutils.simplify.rules/not-integral?",-453531407,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"not-integral?","not-integral?",1746552960,null),"sicmutils/simplify/rules.cljc",20,1,214,214,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.not_integral_QMARK_)?sicmutils.simplify.rules.not_integral_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt-expand"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sqrt_expand;},new cljs.core.Symbol("sicmutils.simplify.rules","sqrt-expand","sicmutils.simplify.rules/sqrt-expand",883646615,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sqrt-expand","sqrt-expand",-1216298848,null),"sicmutils/simplify/rules.cljc",18,1,605,605,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Returns a rule simplifier that distributes the radical sign across products and\n  quotients. The companion rule [[sqrt-contract]] reassembles what remains.\n\n  NOTE that doing this may allow equal subexpressions within the radicals to\n  cancel in various ways.\n\n  Turn this simplifier on and off with [[*sqrt-factor-simplify?*]].",(cljs.core.truth_(sicmutils.simplify.rules.sqrt_expand)?sicmutils.simplify.rules.sqrt_expand.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*inverse-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_inverse_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*inverse-simplify?*","sicmutils.simplify.rules/*inverse-simplify?*",-18443087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*inverse-simplify?*","*inverse-simplify?*",2101097792,null),"sicmutils/simplify/rules.cljc",22,1,true,106,115,cljs.core.List.EMPTY,"When `true`, allows trigonometric inverse functions to simplify:\n\n```\n(asin (sin x)) => x\n```\n\nBecause trigonometric functions like `sin` and `cos` are cyclic, this can lose\nmulti-value info (as with [[*log-exp-simplify*]]).",(cljs.core.truth_(sicmutils.simplify.rules._STAR_inverse_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_inverse_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt-contract"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sqrt_contract;},new cljs.core.Symbol("sicmutils.simplify.rules","sqrt-contract","sicmutils.simplify.rules/sqrt-contract",-1169859149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sqrt-contract","sqrt-contract",958414240,null),"sicmutils/simplify/rules.cljc",20,1,642,642,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.sqrt_contract)?sicmutils.simplify.rules.sqrt_contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trig:product->sum"),new cljs.core.Var(function(){return sicmutils.simplify.rules.trig_COLON_product__GT_sum;},new cljs.core.Symbol("sicmutils.simplify.rules","trig:product->sum","sicmutils.simplify.rules/trig:product->sum",1446995441,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"trig:product->sum","trig:product->sum",-715536960,null),"sicmutils/simplify/rules.cljc",23,1,1151,1151,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.trig_COLON_product__GT_sum)?sicmutils.simplify.rules.trig_COLON_product__GT_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("logexp->specfun"),new cljs.core.Var(function(){return sicmutils.simplify.rules.logexp__GT_specfun;},new cljs.core.Symbol("sicmutils.simplify.rules","logexp->specfun","sicmutils.simplify.rules/logexp->specfun",-132676304,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"logexp->specfun","logexp->specfun",2100487617,null),"sicmutils/simplify/rules.cljc",21,1,739,739,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.logexp__GT_specfun)?sicmutils.simplify.rules.logexp__GT_specfun.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expand-multiangle"),new cljs.core.Var(function(){return sicmutils.simplify.rules.expand_multiangle;},new cljs.core.Symbol("sicmutils.simplify.rules","expand-multiangle","sicmutils.simplify.rules/expand-multiangle",-1646618832,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"expand-multiangle","expand-multiangle",-521128157,null),"sicmutils/simplify/rules.cljc",23,1,1081,1081,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.expand_multiangle)?sicmutils.simplify.rules.expand_multiangle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("occurs-in?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.occurs_in_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","occurs-in?","sicmutils.simplify.rules/occurs-in?",1293936117,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"occurs-in?","occurs-in?",-800766492,null),"sicmutils/simplify/rules.cljc",26,1,1575,1575,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"syms","syms",64639765,null),new cljs.core.Symbol(null,"all","all",-1762306027,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.occurs_in_QMARK_)?sicmutils.simplify.rules.occurs_in_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("odd-integer?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.odd_integer_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","odd-integer?","sicmutils.simplify.rules/odd-integer?",420283414,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"odd-integer?","odd-integer?",-1780439963,null),"sicmutils/simplify/rules.cljc",19,1,227,227,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.odd_integer_QMARK_)?sicmutils.simplify.rules.odd_integer_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("universal-reductions"),new cljs.core.Var(function(){return sicmutils.simplify.rules.universal_reductions;},new cljs.core.Symbol("sicmutils.simplify.rules","universal-reductions","sicmutils.simplify.rules/universal-reductions",-714243238,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"universal-reductions","universal-reductions",1476944709,null),"sicmutils/simplify/rules.cljc",27,1,1580,1580,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Returns a rule simplifier of rules that are almost always helpful.",(cljs.core.truth_(sicmutils.simplify.rules.universal_reductions)?sicmutils.simplify.rules.universal_reductions.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exponent-contract"),new cljs.core.Var(function(){return sicmutils.simplify.rules.exponent_contract;},new cljs.core.Symbol("sicmutils.simplify.rules","exponent-contract","sicmutils.simplify.rules/exponent-contract",-701471019,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"exponent-contract","exponent-contract",1372913958,null),"sicmutils/simplify/rules.cljc",20,1,349,351,cljs.core.List.EMPTY,"Set of rules that collect adjacent products, exponents and nested\n exponents into exponent terms.",(cljs.core.truth_(sicmutils.simplify.rules.exponent_contract)?sicmutils.simplify.rules.exponent_contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trig:special"),new cljs.core.Var(function(){return sicmutils.simplify.rules.trig_COLON_special;},new cljs.core.Symbol("sicmutils.simplify.rules","trig:special","sicmutils.simplify.rules/trig:special",956747896,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"trig:special","trig:special",-1108594585,null),"sicmutils/simplify/rules.cljc",19,1,985,985,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"TODO consolidate the symbolic checkers here with the constructor\n  simplifications in [[trig:special]]. ",(cljs.core.truth_(sicmutils.simplify.rules.trig_COLON_special)?sicmutils.simplify.rules.trig_COLON_special.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divide-numbers-through"),new cljs.core.Var(function(){return sicmutils.simplify.rules.divide_numbers_through;},new cljs.core.Symbol("sicmutils.simplify.rules","divide-numbers-through","sicmutils.simplify.rules/divide-numbers-through",-317896584,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"divide-numbers-through","divide-numbers-through",1612965991,null),"sicmutils/simplify/rules.cljc",28,1,1533,1533,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.divide_numbers_through)?sicmutils.simplify.rules.divide_numbers_through.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sincos->exp1"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sincos__GT_exp1;},new cljs.core.Symbol("sicmutils.simplify.rules","sincos->exp1","sicmutils.simplify.rules/sincos->exp1",580100564,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sincos->exp1","sincos->exp1",-1351286233,null),"sicmutils/simplify/rules.cljc",18,1,1338,1338,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.sincos__GT_exp1)?sicmutils.simplify.rules.sincos__GT_exp1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("commutative"),new cljs.core.Var(function(){return sicmutils.simplify.rules.commutative;},new cljs.core.Symbol("sicmutils.simplify.rules","commutative","sicmutils.simplify.rules/commutative",2139812891,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"commutative","commutative",-77507576,null),"sicmutils/simplify/rules.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"ops","ops",-1417105706,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,312,312,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),"Takes any number of operator symbols `ops` like `'+`, `'*` and returns a rule\n  that sorts the argument list of any multiple-arity call to any of the supplied\n  operators. Sorting is accomplished with [[sicmutils.expression/sort]].\n\n  For example:\n\n  ```clojure\n  (let [rule (commutative '* '+)]\n    (= '(* 2 3 a b c (+ c a b))\n       (rule '(* c a b (+ c a b) 3 2))))\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.commutative)?sicmutils.simplify.rules.commutative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp->sincos"),new cljs.core.Var(function(){return sicmutils.simplify.rules.exp__GT_sincos;},new cljs.core.Symbol("sicmutils.simplify.rules","exp->sincos","sicmutils.simplify.rules/exp->sincos",1224364319,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"exp->sincos","exp->sincos",-887623320,null),"sicmutils/simplify/rules.cljc",17,1,1363,1363,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.exp__GT_sincos)?sicmutils.simplify.rules.exp__GT_sincos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*divide-numbers-through-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_divide_numbers_through_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*divide-numbers-through-simplify?*","sicmutils.simplify.rules/*divide-numbers-through-simplify?*",-1923876360,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*divide-numbers-through-simplify?*","*divide-numbers-through-simplify?*",276306313,null),"sicmutils/simplify/rules.cljc",37,1,true,153,162,cljs.core.List.EMPTY,"When `true`, allows division through the numerator by numbers in\n       the denominator:\n\n```\n(/ (+ (* 4 x) 5) 3) => (+ (* 4/3 x) 5/3)\n```\n\nThis setting is `true` by default.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_divide_numbers_through_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_divide_numbers_through_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant-promotion"),new cljs.core.Var(function(){return sicmutils.simplify.rules.constant_promotion;},new cljs.core.Symbol("sicmutils.simplify.rules","constant-promotion","sicmutils.simplify.rules/constant-promotion",1268409114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"constant-promotion","constant-promotion",-1000242423,null),"sicmutils/simplify/rules.cljc",25,1,271,271,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null)], null)),"Takes an operator symbol `op` and an identity element `constant` and returns a\n  rule that turns binary forms with `constant` on either side into `constant`.\n\n  This rule is useful for commutative annihilators like:\n\n  ```clojure\n  (* 0 <anything>) => 0\n  (and false <anything>) => false\n  (or true <anything>) => true\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.constant_promotion)?sicmutils.simplify.rules.constant_promotion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sincos->exp2"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sincos__GT_exp2;},new cljs.core.Symbol("sicmutils.simplify.rules","sincos->exp2","sicmutils.simplify.rules/sincos->exp2",-1158934469,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sincos->exp2","sincos->exp2",935948490,null),"sicmutils/simplify/rules.cljc",18,1,1350,1350,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.sincos__GT_exp2)?sicmutils.simplify.rules.sincos__GT_exp2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("non-negative-factors!"),new cljs.core.Var(function(){return sicmutils.simplify.rules.non_negative_factors_BANG_;},new cljs.core.Symbol("sicmutils.simplify.rules","non-negative-factors!","sicmutils.simplify.rules/non-negative-factors!",-2051871464,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"non-negative-factors!","non-negative-factors!",106433803,null),"sicmutils/simplify/rules.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,593,593,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null)),"Takes one or two simplified expressions `x` and `y` and a symbolic identifier\n  `id` and registers an assumption that both sides are non-negative.\n\n  Returns the conjuction of both assumptions in the two argument case, or the\n  single assumption in the one-argument case.",(cljs.core.truth_(sicmutils.simplify.rules.non_negative_factors_BANG_)?sicmutils.simplify.rules.non_negative_factors_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sincos->trig"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sincos__GT_trig;},new cljs.core.Symbol("sicmutils.simplify.rules","sincos->trig","sicmutils.simplify.rules/sincos->trig",-2113378308,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sincos->trig","sincos->trig",23955403,null),"sicmutils/simplify/rules.cljc",18,1,863,863,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.sincos__GT_trig)?sicmutils.simplify.rules.sincos__GT_trig.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log-contract"),new cljs.core.Var(function(){return sicmutils.simplify.rules.log_contract;},new cljs.core.Symbol("sicmutils.simplify.rules","log-contract","sicmutils.simplify.rules/log-contract",1602979964,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"log-contract","log-contract",-590272403,null),"sicmutils/simplify/rules.cljc",19,1,755,755,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.log_contract)?sicmutils.simplify.rules.log_contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contract-expt-trig"),new cljs.core.Var(function(){return sicmutils.simplify.rules.contract_expt_trig;},new cljs.core.Symbol("sicmutils.simplify.rules","contract-expt-trig","sicmutils.simplify.rules/contract-expt-trig",1931194914,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"contract-expt-trig","contract-expt-trig",-294579507,null),"sicmutils/simplify/rules.cljc",24,1,1170,1170,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.contract_expt_trig)?sicmutils.simplify.rules.contract_expt_trig.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("odd-positive-integer?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.odd_positive_integer_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","odd-positive-integer?","sicmutils.simplify.rules/odd-positive-integer?",983871138,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"odd-positive-integer?","odd-positive-integer?",-1115599027,null),"sicmutils/simplify/rules.cljc",28,1,231,231,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.odd_positive_integer_QMARK_)?sicmutils.simplify.rules.odd_positive_integer_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("even?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.even_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","even?","sicmutils.simplify.rules/even?",375880061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"even?","even?",-1827825394,null),"sicmutils/simplify/rules.cljc",12,1,217,217,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.even_QMARK_)?sicmutils.simplify.rules.even_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*log-exp-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_log_exp_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*log-exp-simplify?*","sicmutils.simplify.rules/*log-exp-simplify?*",-1346260193,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*log-exp-simplify?*","*log-exp-simplify?*",587076366,null),"sicmutils/simplify/rules.cljc",22,1,true,37,46,cljs.core.List.EMPTY,"If true, allows the following simplification to proceed:\n\n```clojure\n(log (exp x)) => x.\n```\n\nBecause `exp(i*x) == exp(i*(x+n*2pi))` for all integral `n`, this setting can\nconfuse `x` with `x+n*2pi`.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_log_exp_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_log_exp_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("simplify-square-roots"),new cljs.core.Var(function(){return sicmutils.simplify.rules.simplify_square_roots;},new cljs.core.Symbol("sicmutils.simplify.rules","simplify-square-roots","sicmutils.simplify.rules/simplify-square-roots",-1774515359,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"simplify-square-roots","simplify-square-roots",320711438,null),"sicmutils/simplify/rules.cljc",28,1,518,518,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.simplify_square_roots)?sicmutils.simplify.rules.simplify_square_roots.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trig->sincos"),new cljs.core.Var(function(){return sicmutils.simplify.rules.trig__GT_sincos;},new cljs.core.Symbol("sicmutils.simplify.rules","trig->sincos","sicmutils.simplify.rules/trig->sincos",-2129822943,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"trig->sincos","trig->sincos",1047780302,null),"sicmutils/simplify/rules.cljc",18,1,848,848,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.trig__GT_sincos)?sicmutils.simplify.rules.trig__GT_sincos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("half-angle"),new cljs.core.Var(function(){return sicmutils.simplify.rules.half_angle;},new cljs.core.Symbol("sicmutils.simplify.rules","half-angle","sicmutils.simplify.rules/half-angle",-1582317540,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"half-angle","half-angle",584327215,null),"sicmutils/simplify/rules.cljc",17,1,1187,1187,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.half_angle)?sicmutils.simplify.rules.half_angle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("logexp"),new cljs.core.Var(function(){return sicmutils.simplify.rules.logexp;},new cljs.core.Symbol("sicmutils.simplify.rules","logexp","sicmutils.simplify.rules/logexp",-627581988,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"logexp","logexp",1571978223,null),"sicmutils/simplify/rules.cljc",13,1,387,387,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Returns a rule simplifier that attempts to simplify nested exp and log forms.\n\n  You can tune the behavior of this simplifier with [[*log-exp-simplify?*]]\n  and [[*sqrt-expt-simplify?*]].\n\n  NOTE: [[logexp]] returns a `rule-simplifier`, which memoizes its traversal\n  through the supplied expression. This means that if you try to\n  customize [[logexp]] with dynamic binding variables AFTER passing an\n  expression into it, you may get a memoized result which used the previous\n  dynamic binding.\n\n  This is a problem we should address!",(cljs.core.truth_(sicmutils.simplify.rules.logexp)?sicmutils.simplify.rules.logexp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("associative"),new cljs.core.Var(function(){return sicmutils.simplify.rules.associative;},new cljs.core.Symbol("sicmutils.simplify.rules","associative","sicmutils.simplify.rules/associative",-1176422047,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"associative","associative",1021237616,null),"sicmutils/simplify/rules.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"ops","ops",-1417105706,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,287,287,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),"Takes any number of operator symbols `ops` like `'+`, `'*` and returns a rule\n  that collapses nested applications of each operation into a single\n  sequence. (The associative property lets us strip parentheses.)\n\n  ```clojure\n  (let [rule (associative '+ '*)\n        f    (rule-simplifier rule)]\n    (= (+ x y z a (* b c d) cake face)\n       (f '(+ x (+ y (+ z a) (* b (* c d))\n                   (+ cake face))))))\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.associative)?sicmutils.simplify.rules.associative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*sqrt-expt-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_sqrt_expt_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*sqrt-expt-simplify?*","sicmutils.simplify.rules/*sqrt-expt-simplify?*",1964358595,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*sqrt-expt-simplify?*","*sqrt-expt-simplify?*",-352822736,null),"sicmutils/simplify/rules.cljc",24,1,true,70,75,cljs.core.List.EMPTY,"If x is real, then `(sqrt (square x)) = (abs x)`.\n\n  Setting [[*sqrt-expt-simplify?*]] to `true` allows `(sqrt (square x)) = x`,\n  potentially causing a problem if `x` is in fact negative.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_sqrt_expt_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_sqrt_expt_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*commute-partials?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_commute_partials_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*commute-partials?*","sicmutils.simplify.rules/*commute-partials?*",-1546538368,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*commute-partials?*","*commute-partials?*",549147281,null),"sicmutils/simplify/rules.cljc",22,1,true,132,150,cljs.core.List.EMPTY,"When true, allows commutation of partial derivatives so that partial derivatives appear in order.\n\nFor example:\n\n```clojure\n(((* (partial 2 1) (partial 1 1)) FF) (up t (up x y) (down p_x p_y)))\n```\n\nSince the partial indices in the outer derivative are lexically greater than\nthose of the inner, we canonicalize by swapping the order:\n\n```clojure\n(((* (partial 1 1) (partial 2 1)) FF) (up t (up x y) (down p_x p_y)))\n```\n\nWhen the components selected by the partials are unstructured (e.g. real), this\nis okay due to the 'equality of mixed partials'.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_commute_partials_QMARK__STAR_)?sicmutils.simplify.rules._STAR_commute_partials_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("specfun->logexp"),new cljs.core.Var(function(){return sicmutils.simplify.rules.specfun__GT_logexp;},new cljs.core.Symbol("sicmutils.simplify.rules","specfun->logexp","sicmutils.simplify.rules/specfun->logexp",1530299266,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"specfun->logexp","specfun->logexp",-540007439,null),"sicmutils/simplify/rules.cljc",21,1,712,712,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.specfun__GT_logexp)?sicmutils.simplify.rules.specfun__GT_logexp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trig:sum->product"),new cljs.core.Var(function(){return sicmutils.simplify.rules.trig_COLON_sum__GT_product;},new cljs.core.Symbol("sicmutils.simplify.rules","trig:sum->product","sicmutils.simplify.rules/trig:sum->product",-153803421,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"trig:sum->product","trig:sum->product",1941161330,null),"sicmutils/simplify/rules.cljc",23,1,1124,1124,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.trig_COLON_sum__GT_product)?sicmutils.simplify.rules.trig_COLON_sum__GT_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp-expand"),new cljs.core.Var(function(){return sicmutils.simplify.rules.exp_expand;},new cljs.core.Symbol("sicmutils.simplify.rules","exp-expand","sicmutils.simplify.rules/exp-expand",13590017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"exp-expand","exp-expand",-2082275726,null),"sicmutils/simplify/rules.cljc",16,1,1449,1449,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.exp_expand)?sicmutils.simplify.rules.exp_expand.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*half-angle-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_half_angle_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*half-angle-simplify?*","sicmutils.simplify.rules/*half-angle-simplify?*",1747019395,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*half-angle-simplify?*","*half-angle-simplify?*",-451115374,null),"sicmutils/simplify/rules.cljc",25,1,true,125,129,cljs.core.List.EMPTY,"When `true`, enables the half-angle reductions described in [[half-angle]].\n\nNote from GJS: 'Sign of result is hairy!'",(cljs.core.truth_(sicmutils.simplify.rules._STAR_half_angle_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_half_angle_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("triginv"),new cljs.core.Var(function(){return sicmutils.simplify.rules.triginv;},new cljs.core.Symbol("sicmutils.simplify.rules","triginv","sicmutils.simplify.rules/triginv",1698667393,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"triginv","triginv",-535102478,null),"sicmutils/simplify/rules.cljc",14,1,879,879,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.triginv)?sicmutils.simplify.rules.triginv.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*trig-product-to-sum-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_trig_product_to_sum_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*trig-product-to-sum-simplify?*","sicmutils.simplify.rules/*trig-product-to-sum-simplify?*",-918038176,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*trig-product-to-sum-simplify?*","*trig-product-to-sum-simplify?*",1248606547,null),"sicmutils/simplify/rules.cljc",34,1,true,165,177,cljs.core.List.EMPTY,"Transforms products of trig functions into functions of sums of\n       angles.\n\nFor example:\n\n```\n(* (sin x) (cos y))\n;;=>\n (+ (* 1/2 (sin (+ x y)))\n    (* 1/2 (sin (+ x (* -1 y)))) )\n```",(cljs.core.truth_(sicmutils.simplify.rules._STAR_trig_product_to_sum_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_trig_product_to_sum_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("split-high-degree-sincos"),new cljs.core.Var(function(){return sicmutils.simplify.rules.split_high_degree_sincos;},new cljs.core.Symbol("sicmutils.simplify.rules","split-high-degree-sincos","sicmutils.simplify.rules/split-high-degree-sincos",1056364000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"split-high-degree-sincos","split-high-degree-sincos",-1143884333,null),"sicmutils/simplify/rules.cljc",30,1,1249,1249,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.split_high_degree_sincos)?sicmutils.simplify.rules.split_high_degree_sincos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unary-elimination"),new cljs.core.Var(function(){return sicmutils.simplify.rules.unary_elimination;},new cljs.core.Symbol("sicmutils.simplify.rules","unary-elimination","sicmutils.simplify.rules/unary-elimination",-1503107584,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"unary-elimination","unary-elimination",696583795,null),"sicmutils/simplify/rules.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"ops","ops",-1417105706,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,243,243,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),"Takes a sequence `ops` of operator symbols like `'+`, `'*` and returns a rule\n  that strips these operations off of unary applications.\n\n  ```clojure\n  (let [rule (unary-elimination '+ '*)\n        f    (rule-simplifier rule)]\n    (f '(+ x y (* z) (+ a))))\n  ;;=> (+ x y z a)\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.unary_elimination)?sicmutils.simplify.rules.unary_elimination.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex-rules"),new cljs.core.Var(function(){return sicmutils.simplify.rules.complex_rules;},new cljs.core.Symbol("sicmutils.simplify.rules","complex-rules","sicmutils.simplify.rules/complex-rules",-634718587,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"complex-rules","complex-rules",1594824372,null),"sicmutils/simplify/rules.cljc",19,1,1512,1512,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.complex_rules)?sicmutils.simplify.rules.complex_rules.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*aggressive-atan-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_aggressive_atan_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*aggressive-atan-simplify?*","sicmutils.simplify.rules/*aggressive-atan-simplify?*",-554277685,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*aggressive-atan-simplify?*","*aggressive-atan-simplify?*",1507641140,null),"sicmutils/simplify/rules.cljc",30,1,true,91,103,cljs.core.List.EMPTY,"When `true`, allows:\n\n```\n(atan y x) => (atan (/ y d) (/ x d))\n```\n\nwhere `d=(gcd x y)`.\n\nThis is fine if `d` is a number (Numeric `gcd` is always positive), but may lose\nquadrant information if `d` is a symbolic expression that can be negative for\nsome values of its variables.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_aggressive_atan_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_aggressive_atan_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp-contract"),new cljs.core.Var(function(){return sicmutils.simplify.rules.exp_contract;},new cljs.core.Symbol("sicmutils.simplify.rules","exp-contract","sicmutils.simplify.rules/exp-contract",-676298907,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"exp-contract","exp-contract",1533009748,null),"sicmutils/simplify/rules.cljc",18,1,1424,1424,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.exp_contract)?sicmutils.simplify.rules.exp_contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("magnitude"),new cljs.core.Var(function(){return sicmutils.simplify.rules.magnitude;},new cljs.core.Symbol("sicmutils.simplify.rules","magnitude","sicmutils.simplify.rules/magnitude",1465384516,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null),"sicmutils/simplify/rules.cljc",12,1,437,438,cljs.core.List.EMPTY,"Rule simplifier for forms that contain `magnitude` entries.",(cljs.core.truth_(sicmutils.simplify.rules.magnitude)?sicmutils.simplify.rules.magnitude.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("idempotent"),new cljs.core.Var(function(){return sicmutils.simplify.rules.idempotent;},new cljs.core.Symbol("sicmutils.simplify.rules","idempotent","sicmutils.simplify.rules/idempotent",2009367300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"idempotent","idempotent",-220060811,null),"sicmutils/simplify/rules.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"ops","ops",-1417105706,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,330,330,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ops","ops",-1417105706,null)], null)),"Returns a simplifier that will remove consecutive duplicate arguments to any\n  of the operations supplied as `ops`. Acts as identity otherwise.\n\n  ```clojure\n  (let [rule (idempotent 'and)]\n    (= '(and a b c d)\n       (rule '(and a b b c c c d))))\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.idempotent)?sicmutils.simplify.rules.idempotent.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sincos-random"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sincos_random;},new cljs.core.Symbol("sicmutils.simplify.rules","sincos-random","sicmutils.simplify.rules/sincos-random",-1028718361,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sincos-random","sincos-random",1576329430,null),"sicmutils/simplify/rules.cljc",20,1,1302,1302,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.sincos_random)?sicmutils.simplify.rules.sincos_random.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*sin-cos-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_sin_cos_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*sin-cos-simplify?*","sicmutils.simplify.rules/*sin-cos-simplify?*",2046242761,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*sin-cos-simplify?*","*sin-cos-simplify?*",-187838922,null),"sicmutils/simplify/rules.cljc",22,1,true,118,122,cljs.core.List.EMPTY,"When `true`, allows arguments of `sin`, `cos` and `tan` that are\n  rational multiples of `'pi` to be reduced. See [[trig:special]] for these\n  rules.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_sin_cos_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_sin_cos_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cos-sq->sin-sq"),new cljs.core.Var(function(){return sicmutils.simplify.rules.cos_sq__GT_sin_sq;},new cljs.core.Symbol("sicmutils.simplify.rules","cos-sq->sin-sq","sicmutils.simplify.rules/cos-sq->sin-sq",-1137430421,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"cos-sq->sin-sq","cos-sq->sin-sq",990466072,null),"sicmutils/simplify/rules.cljc",20,1,1242,1242,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.cos_sq__GT_sin_sq)?sicmutils.simplify.rules.cos_sq__GT_sin_sq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant-elimination"),new cljs.core.Var(function(){return sicmutils.simplify.rules.constant_elimination;},new cljs.core.Symbol("sicmutils.simplify.rules","constant-elimination","sicmutils.simplify.rules/constant-elimination",-1725970481,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"constant-elimination","constant-elimination",444082136,null),"sicmutils/simplify/rules.cljc",27,1,258,258,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null)], null)),"Takes an operator symbol `op` and an identity element `constant` and returns a\n  rule that eliminates instances of `constant` inside any-arity forms like\n\n  ```clojure\n  (<op> ,,,args,,,)\n  ```",(cljs.core.truth_(sicmutils.simplify.rules.constant_elimination)?sicmutils.simplify.rules.constant_elimination.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex-trig"),new cljs.core.Var(function(){return sicmutils.simplify.rules.complex_trig;},new cljs.core.Symbol("sicmutils.simplify.rules","complex-trig","sicmutils.simplify.rules/complex-trig",-405987064,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"complex-trig","complex-trig",1797292313,null),"sicmutils/simplify/rules.cljc",18,1,1499,1499,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.complex_trig)?sicmutils.simplify.rules.complex_trig.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("odd?"),new cljs.core.Var(function(){return sicmutils.simplify.rules.odd_QMARK_;},new cljs.core.Symbol("sicmutils.simplify.rules","odd?","sicmutils.simplify.rules/odd?",905254350,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"odd?","odd?",-1458588199,null),"sicmutils/simplify/rules.cljc",11,1,220,220,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.odd_QMARK_)?sicmutils.simplify.rules.odd_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log-extra"),new cljs.core.Var(function(){return sicmutils.simplify.rules.log_extra;},new cljs.core.Symbol("sicmutils.simplify.rules","log-extra","sicmutils.simplify.rules/log-extra",80372171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"log-extra","log-extra",-1713077798,null),"sicmutils/simplify/rules.cljc",15,1,790,790,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.log_extra)?sicmutils.simplify.rules.log_extra.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*sqrt-factor-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_sqrt_factor_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*sqrt-factor-simplify?*","sicmutils.simplify.rules/*sqrt-factor-simplify?*",1058775498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*sqrt-factor-simplify?*","*sqrt-factor-simplify?*",-1142636069,null),"sicmutils/simplify/rules.cljc",26,1,true,78,88,cljs.core.List.EMPTY,"If `x` and `y` are real and non-negative, then\n\n```\n(* (sqrt x) (sqrt y)) = (sqrt (* x y))\n```\n\nThis is not true for negative factors. Setting [[*sqrt-factor-simplify?*]] to\ntrue enables this simplification, causing a problem if `x` or `y` are in fact\nnegative.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_sqrt_factor_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_sqrt_factor_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log-expand"),new cljs.core.Var(function(){return sicmutils.simplify.rules.log_expand;},new cljs.core.Symbol("sicmutils.simplify.rules","log-expand","sicmutils.simplify.rules/log-expand",-1853616017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"log-expand","log-expand",763293820,null),"sicmutils/simplify/rules.cljc",16,1,778,778,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.log_expand)?sicmutils.simplify.rules.log_expand.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("miscsimp"),new cljs.core.Var(function(){return sicmutils.simplify.rules.miscsimp;},new cljs.core.Symbol("sicmutils.simplify.rules","miscsimp","sicmutils.simplify.rules/miscsimp",-188641393,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"miscsimp","miscsimp",2008821660,null),"sicmutils/simplify/rules.cljc",15,1,458,458,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Simplifications for various exponent forms (assuming commutative multiplication).\n\n  NOTE that we have some similarities to [[exponent-contract]] above - that\n  function works for non-commutative multiplication - AND that this needs a new\n  name.",(cljs.core.truth_(sicmutils.simplify.rules.miscsimp)?sicmutils.simplify.rules.miscsimp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sincos-flush-ones"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sincos_flush_ones;},new cljs.core.Symbol("sicmutils.simplify.rules","sincos-flush-ones","sicmutils.simplify.rules/sincos-flush-ones",-2001554388,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sincos-flush-ones","sincos-flush-ones",227136733,null),"sicmutils/simplify/rules.cljc",24,1,1297,1297,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.sincos_flush_ones)?sicmutils.simplify.rules.sincos_flush_ones.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sin-sq->cos-sq"),new cljs.core.Var(function(){return sicmutils.simplify.rules.sin_sq__GT_cos_sq;},new cljs.core.Symbol("sicmutils.simplify.rules","sin-sq->cos-sq","sicmutils.simplify.rules/sin-sq->cos-sq",-473561810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"sin-sq->cos-sq","sin-sq->cos-sq",1625924925,null),"sicmutils/simplify/rules.cljc",20,1,1235,1235,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.sin_sq__GT_cos_sq)?sicmutils.simplify.rules.sin_sq__GT_cos_sq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*expt-half->sqrt?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_expt_half__GT_sqrt_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*expt-half->sqrt?*","sicmutils.simplify.rules/*expt-half->sqrt?*",1412022383,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*expt-half->sqrt?*","*expt-half->sqrt?*",-1454481314,null),"sicmutils/simplify/rules.cljc",21,1,true,61,67,cljs.core.List.EMPTY," Traditionally, `sqrt(x)` is the positive square root, but\n`x^(1/2)` is both positive and negative roots.\n\nSetting [[*expt-half->sqrt?*]] to `true` maps `x^(1/2)` to `sqrt(x)`,\npotentially losing a root.",(cljs.core.truth_(sicmutils.simplify.rules._STAR_expt_half__GT_sqrt_QMARK__STAR_)?sicmutils.simplify.rules._STAR_expt_half__GT_sqrt_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("angular-parity"),new cljs.core.Var(function(){return sicmutils.simplify.rules.angular_parity;},new cljs.core.Symbol("sicmutils.simplify.rules","angular-parity","sicmutils.simplify.rules/angular-parity",1758103087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"angular-parity","angular-parity",-340761058,null),"sicmutils/simplify/rules.cljc",17,1,1058,1060,cljs.core.List.EMPTY,"`sin` is odd, and `cos` is even. we canonicalize by moving the sign\nout of the first term of the argument.",(cljs.core.truth_(sicmutils.simplify.rules.angular_parity)?sicmutils.simplify.rules.angular_parity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("flush-obvious-ones"),new cljs.core.Var(function(){return sicmutils.simplify.rules.flush_obvious_ones;},new cljs.core.Symbol("sicmutils.simplify.rules","flush-obvious-ones","sicmutils.simplify.rules/flush-obvious-ones",-417895156,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"flush-obvious-ones","flush-obvious-ones",1647447327,null),"sicmutils/simplify/rules.cljc",25,1,1272,1272,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),null,(cljs.core.truth_(sicmutils.simplify.rules.flush_obvious_ones)?sicmutils.simplify.rules.flush_obvious_ones.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*exponent-product-simplify?*"),new cljs.core.Var(function(){return sicmutils.simplify.rules._STAR_exponent_product_simplify_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.simplify.rules","*exponent-product-simplify?*","sicmutils.simplify.rules/*exponent-product-simplify?*",-1311089076,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"*exponent-product-simplify?*","*exponent-product-simplify?*",893369951,null),"sicmutils/simplify/rules.cljc",31,1,true,49,58,cljs.core.List.EMPTY,"Allows `(x^a)^b => x^(a*b)`.\n\nThis is dangerous, because can lose or gain a root:\n\n```\nx = (x^(1/2))^2 != ((x^2)^1/2)=+-x\n```\n",(cljs.core.truth_(sicmutils.simplify.rules._STAR_exponent_product_simplify_QMARK__STAR_)?sicmutils.simplify.rules._STAR_exponent_product_simplify_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("canonicalize-partials"),new cljs.core.Var(function(){return sicmutils.simplify.rules.canonicalize_partials;},new cljs.core.Symbol("sicmutils.simplify.rules","canonicalize-partials","sicmutils.simplify.rules/canonicalize-partials",-2089359442,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify.rules","sicmutils.simplify.rules",1132908260,null),new cljs.core.Symbol(null,"canonicalize-partials","canonicalize-partials",1040991839,null),"sicmutils/simplify/rules.cljc",27,1,798,798,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify.rules.canonicalize_partials)?sicmutils.simplify.rules.canonicalize_partials.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factors->expression"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.factors__GT_expression;},new cljs.core.Symbol("sicmutils.polynomial.factor","factors->expression","sicmutils.polynomial.factor/factors->expression",451417532,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"factors->expression","factors->expression",-780893912,null),"sicmutils/polynomial/factor.cljc",35,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),"Given some sequence of polynomial factors ordered by increasing power,\n  symbolically evaluates each power and generates a symbolic expression\n  representing the product of all factors.\n\n  For example:\n\n  ```clojure\n  (factors->expression ['c 'x 'y 1 'z])\n  ;;=> (* c x (expt y 2) (expt z 4))\n  ```",(cljs.core.truth_(sicmutils.polynomial.factor.factors__GT_expression)?sicmutils.polynomial.factor.factors__GT_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("poly->factored-expression"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.poly__GT_factored_expression;},new cljs.core.Symbol("sicmutils.polynomial.factor","poly->factored-expression","sicmutils.polynomial.factor/poly->factored-expression",-1156037256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"poly->factored-expression","poly->factored-expression",-158535444,null),"sicmutils/polynomial/factor.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,100,100,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Given a polynomial `p`, and a sequence of variables `vars` (one for each\n  indeterminate in `p`), returns a symbolic expression representing the product\n  of all factors of `p`.\n\n  Optionally accepts a `simplify` function that will be called on each factor of\n  exponent 0, 1, 2 etc. Defaults to `identity`.",(cljs.core.truth_(sicmutils.polynomial.factor.poly__GT_factored_expression)?sicmutils.polynomial.factor.poly__GT_factored_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factor-expression"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.factor_expression;},new cljs.core.Symbol("sicmutils.polynomial.factor","factor-expression","sicmutils.polynomial.factor/factor-expression",-1031576210,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"factor-expression","factor-expression",-2061580046,null),"sicmutils/polynomial/factor.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,128,128,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null)], null)),"Given some symbolic expression containing only polynomial operations, returns a\n  factored version of the expression with basic simplifications applied.\n\n  Optionally accepts a `simplify` function that will be called on each factor of\n  exponent 0, 1, 2 etc. Defaults to `identity`.\n\n  NOTE prefer [[factor]], as [[factor]] can handle expressions with\n  non-polynomial operations. The trigonometric functions, for example.",(cljs.core.truth_(sicmutils.polynomial.factor.factor_expression)?sicmutils.polynomial.factor.factor_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$polynomial$factor100666"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.__GT_t_sicmutils$polynomial$factor100666;},new cljs.core.Symbol("sicmutils.polynomial.factor","->t_sicmutils$polynomial$factor100666","sicmutils.polynomial.factor/->t_sicmutils$polynomial$factor100666",1827518247,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"->t_sicmutils$polynomial$factor100666","->t_sicmutils$polynomial$factor100666",1396768947,null),"sicmutils/polynomial/factor.cljc",true,9,new cljs.core.Keyword(null,"positional","positional",-203580463),148,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symgen","symgen",-880919559,null),new cljs.core.Symbol(null,"meta100667","meta100667",-1100444855,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.polynomial.factor/t_sicmutils$polynomial$factor100666.",(cljs.core.truth_(sicmutils.polynomial.factor.__GT_t_sicmutils$polynomial$factor100666)?sicmutils.polynomial.factor.__GT_t_sicmutils$polynomial$factor100666.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("split-polynomial"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.split_polynomial;},new cljs.core.Symbol("sicmutils.polynomial.factor","split-polynomial","sicmutils.polynomial.factor/split-polynomial",-77585431,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"split-polynomial","split-polynomial",-1324656555,null),"sicmutils/polynomial/factor.cljc",23,1,20,20,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a [[Polynomial]] `p`, returns a sequence of factors of in order of\n  increasing power.\n\n  The first element is a constant factor, the next is a factor with power 1, and\n  so on.",(cljs.core.truth_(sicmutils.polynomial.factor.split_polynomial)?sicmutils.polynomial.factor.split_polynomial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("root-out-squares"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.root_out_squares;},new cljs.core.Symbol("sicmutils.polynomial.factor","root-out-squares","sicmutils.polynomial.factor/root-out-squares",-1580321020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"root-out-squares","root-out-squares",-278750312,null),"sicmutils/polynomial/factor.cljc",23,1,215,215,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Given an unwrapped symbolic expression, returns a new symbolic expression with\n  any perfect square (exponent with an even power) removed from underneath any\n  `sqrt` that appears in the expression.\n\n  To use [[root-out-squares]] with a wrapped symbolic expression,\n  use [[sicmutils.expression/fmap]].",(cljs.core.truth_(sicmutils.polynomial.factor.root_out_squares)?sicmutils.polynomial.factor.root_out_squares.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factor"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.factor;},new cljs.core.Symbol("sicmutils.polynomial.factor","factor","sicmutils.polynomial.factor/factor",-608169425,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"factor","factor",-462641221,null),"sicmutils/polynomial/factor.cljc",9,1,157,163,cljs.core.List.EMPTY,"Accepts a single symbolic expression and returns a factored version\n of that expression.\n\n Differs from [[factor-expression]] in that it can handle any expression, not\n just expressions limited to polynomial operations.",(cljs.core.truth_(sicmutils.polynomial.factor.factor)?sicmutils.polynomial.factor.factor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$polynomial$factor100666"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.t_sicmutils$polynomial$factor100666;},new cljs.core.Symbol("sicmutils.polynomial.factor","t_sicmutils$polynomial$factor100666","sicmutils.polynomial.factor/t_sicmutils$polynomial$factor100666",-1230502543,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/polynomial/factor.cljc",new cljs.core.Keyword(null,"line","line",212345235),148,new cljs.core.Keyword(null,"column","column",2078222095),9,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$polynomial$factor100666","t_sicmutils$polynomial$factor100666",-66784995,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.polynomial.factor.t_sicmutils$polynomial$factor100666)?sicmutils.polynomial.factor.t_sicmutils$polynomial$factor100666.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("analyzer"),new cljs.core.Var(function(){return sicmutils.polynomial.factor.analyzer;},new cljs.core.Symbol("sicmutils.polynomial.factor","analyzer","sicmutils.polynomial.factor/analyzer",121040106,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.factor","sicmutils.polynomial.factor",-1767994441,null),new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),"sicmutils/polynomial/factor.cljc",11,1,144,146,cljs.core.List.EMPTY,"Expression analyzer, identical to [[polynomial/analyzer]] except\n  the symbolic expressions returned are in factored form.",(cljs.core.truth_(sicmutils.polynomial.factor.analyzer)?sicmutils.polynomial.factor.analyzer.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("touchard"),new cljs.core.Var(function(){return sicmutils.polynomial.touchard;},new cljs.core.Symbol("sicmutils.polynomial","touchard","sicmutils.polynomial/touchard",401783731,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"touchard","touchard",1495467264,null),"sicmutils/polynomial.cljc",15,1,492,492,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the nth [Touchard\n  polynomial](https://en.wikipedia.org/wiki/Touchard_polynomials).\n\n  These are also called [Bell\n  polynomials](https://mathworld.wolfram.com/BellPolynomial.html) (in\n  Mathematica, implemented as `BellB`) or /exponential polynomials/.",(cljs.core.truth_(sicmutils.polynomial.touchard)?sicmutils.polynomial.touchard.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.polynomial.arity;},new cljs.core.Symbol("sicmutils.polynomial","arity","sicmutils.polynomial/arity",674063123,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/polynomial.cljc",12,1,513,513,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the declared arity of the supplied [[Polynomial]], or `0` for\n  non-polynomial arguments.",(cljs.core.truth_(sicmutils.polynomial.arity)?sicmutils.polynomial.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("linear"),new cljs.core.Var(function(){return sicmutils.polynomial.linear;},new cljs.core.Symbol("sicmutils.polynomial","linear","sicmutils.polynomial/linear",1721045073,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"linear","linear",-1782167072,null),"sicmutils/polynomial.cljc",13,1,458,458,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"root","root",1191874074,null)], null)),"Given some `arity`, an indeterminate index `i` and some constant `root`,\n  returns a polynomial of the form `x_i - root`. The returned polynomial\n  represents a linear equation in the `i`th indeterminate.\n\n  If `root` is 0, [[linear]] is equivalent to the two-argument version\n  of [[identity]].",(cljs.core.truth_(sicmutils.polynomial.linear)?sicmutils.polynomial.linear.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coefficients"),new cljs.core.Var(function(){return sicmutils.polynomial.coefficients;},new cljs.core.Symbol("sicmutils.polynomial","coefficients","sicmutils.polynomial/coefficients",-2133251406,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"coefficients","coefficients",1939272705,null),"sicmutils/polynomial.cljc",19,1,648,648,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns a sequence of the coefficients of the supplied polynomial `p`. A\n  coefficient is treated here as a monomial, and returns a sequence of itself.\n\n  If `p` is zero, returns an empty list.",(cljs.core.truth_(sicmutils.polynomial.coefficients)?sicmutils.polynomial.coefficients.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivatives"),new cljs.core.Var(function(){return sicmutils.polynomial.partial_derivatives;},new cljs.core.Symbol("sicmutils.polynomial","partial-derivatives","sicmutils.polynomial/partial-derivatives",1413529558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"partial-derivatives","partial-derivatives",1773356385,null),"sicmutils/polynomial.cljc",26,1,1553,1553,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the sequence of partial derivatives of [[Polynomial]] `p` with respect\n  to each indeterminate. The returned sequence has length equal to the [[arity]]\n  of `p`.\n\n  For non-[[Polynomial]] inputs, returns an empty sequence.",(cljs.core.truth_(sicmutils.polynomial.partial_derivatives)?sicmutils.polynomial.partial_derivatives.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operators-known"),new cljs.core.Var(function(){return sicmutils.polynomial.operators_known;},new cljs.core.Symbol("sicmutils.polynomial","operators-known","sicmutils.polynomial/operators-known",1382336880,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"operators-known","operators-known",-1489697919,null),"sicmutils/polynomial.cljc",18,1,1587,1590,cljs.core.List.EMPTY,"Set of all arithmetic functions allowed between [[Polynomial]] and\n       coefficient instances.",(cljs.core.truth_(sicmutils.polynomial.operators_known)?sicmutils.polynomial.operators_known.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-lower-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.with_lower_arity;},new cljs.core.Symbol("sicmutils.polynomial","with-lower-arity","sicmutils.polynomial/with-lower-arity",122113013,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"with-lower-arity","with-lower-arity",2056753154,null),"sicmutils/polynomial.cljc",23,1,1331,1331,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null)),"Given:\n\n  - multivariate [[Polynomial]]s `u` and `v`\n  - a `continue` function that accepts two univariate [[Polynomial]]s with\n    possibly-[[Polynomial]] coefficients,\n\n  Returns the result of calling [[lower-arity]] on `u` and `v`, passing the\n  results to `continue` and using [[raise-arity]] to raise the result back to\n  the original shared [[arity]] of `u` and `v`.\n\n  The exception is that if `continue` returns a\n  non-[[Polynomial]], [[with-lower-arity]] will not attempt to re-package it as\n  a [[Polynomial]].",(cljs.core.truth_(sicmutils.polynomial.with_lower_arity)?sicmutils.polynomial.with_lower_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add"),new cljs.core.Var(function(){return sicmutils.polynomial.add;},new cljs.core.Symbol("sicmutils.polynomial","add","sicmutils.polynomial/add",1545585397,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"add","add",1875819266,null),"sicmutils/polynomial.cljc",10,1,1056,1056,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the sum of polynomials `p` and `q`, with appropriate handling for\n  non-[[Polynomial]] coefficient inputs on either or both sides.",(cljs.core.truth_(sicmutils.polynomial.add)?sicmutils.polynomial.add.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("validate-arity!"),new cljs.core.Var(function(){return sicmutils.polynomial.validate_arity_BANG_;},new cljs.core.Symbol("sicmutils.polynomial","validate-arity!","sicmutils.polynomial/validate-arity!",-855894861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"validate-arity!","validate-arity!",-2121281758,null),"sicmutils/polynomial.cljc",31,1,560,560,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Given some input `p` and an indeterminate index `i`, returns `i` if `0 <= i\n  < (arity p)`, and throws an exception otherwise.\n\n  NOTE [[validate-arity]] is meant to validate indeterminate indices; thus it\n  will always throw for non-[[Polynomial]] inputs.",(cljs.core.truth_(sicmutils.polynomial.validate_arity_BANG_)?sicmutils.polynomial.validate_arity_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("univariate?"),new cljs.core.Var(function(){return sicmutils.polynomial.univariate_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","univariate?","sicmutils.polynomial/univariate?",-1968140269,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"univariate?","univariate?",1606506402,null),"sicmutils/polynomial.cljc",18,1,751,751,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if `p` is a [[Polynomial]] of arity 1, false otherwise.",(cljs.core.truth_(sicmutils.polynomial.univariate_QMARK_)?sicmutils.polynomial.univariate_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negate"),new cljs.core.Var(function(){return sicmutils.polynomial.negate;},new cljs.core.Symbol("sicmutils.polynomial","negate","sicmutils.polynomial/negate",594686161,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"negate","negate",337772450,null),"sicmutils/polynomial.cljc",13,1,1042,1042,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the negation of polynomial `p`, ie, a polynomial with all coefficients\n  negated.",(cljs.core.truth_(sicmutils.polynomial.negate)?sicmutils.polynomial.negate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.raise_arity;},new cljs.core.Symbol("sicmutils.polynomial","raise-arity","sicmutils.polynomial/raise-arity",-1707613232,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"raise-arity","raise-arity",1424406691,null),"sicmutils/polynomial.cljc",18,1,1310,1310,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Given either a non-[[Polynomial]] coefficient or a univariate [[Polynomial]]\n  with possibly-[[Polynomial]] coefficients, returns a new [[Polynomial]] of\n  arity `a` generated by attaching the polynomial coefficients back as variables\n  starting with `1`.\n\n  [[raise-arity]] undoes the transformation of [[lower-arity]].\n  See [[with-lower-arity]] for a function that packages these two\n  transformations.",(cljs.core.truth_(sicmutils.polynomial.raise_arity)?sicmutils.polynomial.raise_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$polynomial100380"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_t_sicmutils$polynomial100380;},new cljs.core.Symbol("sicmutils.polynomial","->t_sicmutils$polynomial100380","sicmutils.polynomial/->t_sicmutils$polynomial100380",843646896,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->t_sicmutils$polynomial100380","->t_sicmutils$polynomial100380",1729748227,null),"sicmutils/polynomial.cljc",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),1668,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"meta100381","meta100381",1396261295,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.polynomial/t_sicmutils$polynomial100380.",(cljs.core.truth_(sicmutils.polynomial.__GT_t_sicmutils$polynomial100380)?sicmutils.polynomial.__GT_t_sicmutils$polynomial100380.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$polynomial100380"),new cljs.core.Var(function(){return sicmutils.polynomial.t_sicmutils$polynomial100380;},new cljs.core.Symbol("sicmutils.polynomial","t_sicmutils$polynomial100380","sicmutils.polynomial/t_sicmutils$polynomial100380",1047037522,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/polynomial.cljc",new cljs.core.Keyword(null,"line","line",212345235),1668,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$polynomial100380","t_sicmutils$polynomial100380",1889025475,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.polynomial.t_sicmutils$polynomial100380)?sicmutils.polynomial.t_sicmutils$polynomial100380.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("c*xn"),new cljs.core.Var(function(){return sicmutils.polynomial.c_STAR_xn;},new cljs.core.Symbol("sicmutils.polynomial","c*xn","sicmutils.polynomial/c*xn",1790942322,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"c*xn","c*xn",-1209260317,null),"sicmutils/polynomial.cljc",11,1,471,471,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Given some `arity`, a coefficient `c` and an exponent `n`, returns a monomial\n  representing $c{x_0}^n$. The first indeterminate is always exponentiated.\n\n  Similar to [[make]], this function attempts to drop down to scalar-land if\n  possible:\n\n  - If `c` is [[sicmutils.value/zero?]], returns `c`\n  - if `n` is `zero?`, returns `(constant arity c)`\n\n  NOTE that negative exponents are not allowed.",(cljs.core.truth_(sicmutils.polynomial.c_STAR_xn)?sicmutils.polynomial.c_STAR_xn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evenly-divide"),new cljs.core.Var(function(){return sicmutils.polynomial.evenly_divide;},new cljs.core.Symbol("sicmutils.polynomial","evenly-divide","sicmutils.polynomial/evenly-divide",1301737301,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"evenly-divide","evenly-divide",-2140597052,null),"sicmutils/polynomial.cljc",20,1,1149,1149,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns the result of dividing the polynomial `u` by `v` (non-[[Polynomial]]\n  instances are allowed).\n\n  Throws an exception if the division leaves a remainder. Else, returns the\n  quotient.",(cljs.core.truth_(sicmutils.polynomial.evenly_divide)?sicmutils.polynomial.evenly_divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("normalize"),new cljs.core.Var(function(){return sicmutils.polynomial.normalize;},new cljs.core.Symbol("sicmutils.polynomial","normalize","sicmutils.polynomial/normalize",-2089381419,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"normalize","normalize",-263858524,null),"sicmutils/polynomial.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,930,930,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Given a polynomial `p`, returns a normalized polynomial generated by dividing\n  through either the [[leading-coefficient]] of `p` or an optional, explicitly\n  supplied scaling factor `c`.\n\n  For example:\n\n  ```clojure\n  (let [p (make [5 3 2 2 10])]\n    (univariate->dense (normalize p)))\n  ;;=> [1/2 3/10 1/5 1/5 1]\n  ```",(cljs.core.truth_(sicmutils.polynomial.normalize)?sicmutils.polynomial.normalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("check-same-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.check_same_arity;},new cljs.core.Symbol("sicmutils.polynomial","check-same-arity","sicmutils.polynomial/check-same-arity",-693364905,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"check-same-arity","check-same-arity",94199492,null),"sicmutils/polynomial.cljc",32,1,533,533,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Given two polynomials (or coefficients) `p` and `q`, checks that their arities\n  are equal and returns the value, or throws an exception if not.\n\n  If either `p` or `q` is a coefficient, [[check-same-arity]] successfully\n  returns the other argument's arity.",(cljs.core.truth_(sicmutils.polynomial.check_same_arity)?sicmutils.polynomial.check_same_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Polynomial"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_Polynomial;},new cljs.core.Symbol("sicmutils.polynomial","->Polynomial","sicmutils.polynomial/->Polynomial",-351717365,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->Polynomial","->Polynomial",511280004,null),"sicmutils/polynomial.cljc",20,1,new cljs.core.Keyword(null,"positional","positional",-203580463),117,117,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"terms","terms",83553549,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.polynomial/Polynomial.",(cljs.core.truth_(sicmutils.polynomial.__GT_Polynomial)?sicmutils.polynomial.__GT_Polynomial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("reciprocal"),new cljs.core.Var(function(){return sicmutils.polynomial.reciprocal;},new cljs.core.Symbol("sicmutils.polynomial","reciprocal","sicmutils.polynomial/reciprocal",-1960766506,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"reciprocal","reciprocal",-654944955,null),"sicmutils/polynomial.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,951,951,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Given a polynomial `p`, returns the [reciprocal\n  polynomial](https://en.wikipedia.org/wiki/Reciprocal_polynomial) with respect\n  to the `i`th indeterminate. `i` defaults to 0.\n\n  The reciprocal polynomial of `p` with respect to `i` is generated by\n\n  - treating the polynomial as univariate with respect to `i` and pushing all\n    other terms into the coefficients of the polynomial\n  - reversing the order of these coefficients\n  - flattening the polynomial out again\n\n  For example, note that the entries for the first indeterminate are reversed:\n\n  ```clojure\n  (= (make 3 {[3 0 0] 5 [2 0 1] 2 [0 2 1] 3})\n     (reciprocal\n       (make 3 {[0 0 0] 5 [1 0 1] 2 [3 2 1] 3})))\n  ```",(cljs.core.truth_(sicmutils.polynomial.reciprocal)?sicmutils.polynomial.reciprocal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coeff-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.coeff_arity;},new cljs.core.Symbol("sicmutils.polynomial","coeff-arity","sicmutils.polynomial/coeff-arity",-1207699338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"coeff-arity","coeff-arity",1836233445,null),"sicmutils/polynomial.cljc",26,1,510,510,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.polynomial.coeff_arity)?sicmutils.polynomial.coeff_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("terms->polynomial"),new cljs.core.Var(function(){return sicmutils.polynomial.terms__GT_polynomial;},new cljs.core.Symbol("sicmutils.polynomial","terms->polynomial","sicmutils.polynomial/terms->polynomial",2074490069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"terms->polynomial","terms->polynomial",-1529415098,null),"sicmutils/polynomial.cljc",33,1,331,331,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"terms","terms",83553549,null)], null)),"Accepts an explicit `arity` and a vector of terms and returns either:\n\n  - `0`, in the case of an empty list\n  - a bare coefficient, given a singleton term list with a constant term\n  - else, a [[Polynomial]] instance.\n\n  In the second case, if the coefficient is _itself_ a [[Polynomial]], wraps\n  that [[Polynomial]] instance up in an explicit [[Polynomial]]. In cases where\n  polynomials have polynomial coefficients, this flattening should never happen\n  automatically.\n\n  NOTE this method assumes that the terms are properly sorted, and contain no\n  zero coefficients.",(cljs.core.truth_(sicmutils.polynomial.terms__GT_polynomial)?sicmutils.polynomial.terms__GT_polynomial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("univariate->dense"),new cljs.core.Var(function(){return sicmutils.polynomial.univariate__GT_dense;},new cljs.core.Symbol("sicmutils.polynomial","univariate->dense","sicmutils.polynomial/univariate->dense",170770664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"univariate->dense","univariate->dense",1461492071,null),"sicmutils/polynomial.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"x-degree","x-degree",1170692253,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"x-degree","x-degree",1170692253,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,823,823,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"x-degree","x-degree",1170692253,null)], null)),"Given a univariate [[Polynomial]] (see [[univariate?]]) returns a dense vector\n  of the coefficients of each term in ascending order.\n\n  For example:\n\n  ```clojure\n  (univariate->dense (make [1 0 0 2 3 4]))\n  ;;=> [1 0 0 2 3 4]\n  ```\n\n  Supplying the second argument `x-degree` will pad the right side of the\n  returning coefficient vector to be the max of `x-degree` and `(degree x)`.\n\n  NOTE use [[lower-arity]] to generate a univariate polynomial in the first\n  indeterminate, given a multivariate polynomial.",(cljs.core.truth_(sicmutils.polynomial.univariate__GT_dense)?sicmutils.polynomial.univariate__GT_dense.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->terms"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_terms;},new cljs.core.Symbol("sicmutils.polynomial","->terms","sicmutils.polynomial/->terms",1220733206,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->terms","->terms",104047239,null),"sicmutils/polynomial.cljc",14,1,521,521,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given some [[Polynomial]], returns the `terms` entry of the type. Handles other types as well:\n\n  - Acts as identity on vectors, interpreting them as vectors of terms\n  - any zero-valued `p` returns `[]`\n  - any other coefficient returns a vector of a single constant term.",(cljs.core.truth_(sicmutils.polynomial.__GT_terms)?sicmutils.polynomial.__GT_terms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("leading-base-coefficient"),new cljs.core.Var(function(){return sicmutils.polynomial.leading_base_coefficient;},new cljs.core.Symbol("sicmutils.polynomial","leading-base-coefficient","sicmutils.polynomial/leading-base-coefficient",372055414,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"leading-base-coefficient","leading-base-coefficient",1172071111,null),"sicmutils/polynomial.cljc",31,1,689,689,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Similar to [[leading-coefficient]], but of the coefficient itself is\n  a [[Polynomial]], recurses down until it reaches a non-[[Polynomial]] lead\n  coefficient.\n\n  If `p` is a non-[[Polynomial]] coefficient, acts as identity.",(cljs.core.truth_(sicmutils.polynomial.leading_base_coefficient)?sicmutils.polynomial.leading_base_coefficient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divide"),new cljs.core.Var(function(){return sicmutils.polynomial.divide;},new cljs.core.Symbol("sicmutils.polynomial","divide","sicmutils.polynomial/divide",-1404259233,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"divide","divide",-545489112,null),"sicmutils/polynomial.cljc",13,1,1112,1112,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given two polynomials `u` and `v`, returns a pair of polynomials of the form\n  `[quotient, remainder]` using [polynomial long\n  division](https://en.wikipedia.org/wiki/Polynomial_long_division).\n\n  The contract satisfied by this returned pair is that\n\n  ```\n  u == (add (mul quotient v) remainder)\n  ```",(cljs.core.truth_(sicmutils.polynomial.divide)?sicmutils.polynomial.divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("leading-exponents"),new cljs.core.Var(function(){return sicmutils.polynomial.leading_exponents;},new cljs.core.Symbol("sicmutils.polynomial","leading-exponents","sicmutils.polynomial/leading-exponents",-1925079042,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"leading-exponents","leading-exponents",-1198630583,null),"sicmutils/polynomial.cljc",24,1,678,678,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the exponents of the leading (highest degree) term of\n  the [[Polynomial]] `p`.\n\n  If `p` is a non-[[Polynomial]] coefficient, returns [[exponent/empty]].",(cljs.core.truth_(sicmutils.polynomial.leading_exponents)?sicmutils.polynomial.leading_exponents.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt"),new cljs.core.Var(function(){return sicmutils.polynomial.expt;},new cljs.core.Symbol("sicmutils.polynomial","expt","sicmutils.polynomial/expt",1302834168,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"expt","expt",2123850345,null),"sicmutils/polynomial.cljc",11,1,1084,1084,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a polynomial generated by raising the input polynomial `p` to\n  the (integer) power `n`.\n\n  Negative exponents are not supported. For negative polynomial exponentation,\n  see [[rational-function/expt]].",(cljs.core.truth_(sicmutils.polynomial.expt)?sicmutils.polynomial.expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make"),new cljs.core.Var(function(){return sicmutils.polynomial.make;},new cljs.core.Symbol("sicmutils.polynomial","make","sicmutils.polynomial/make",1187828729,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"make","make",356488202,null),"sicmutils/polynomial.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dense-coefficients","dense-coefficients",-384887247,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"expts->coef","expts->coef",-214884486,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dense-coefficients","dense-coefficients",-384887247,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"expts->coef","expts->coef",-214884486,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,357,357,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dense-coefficients","dense-coefficients",-384887247,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"expts->coef","expts->coef",-214884486,null)], null)),"Generates a [[Polynomial]] instance (or a bare coefficient!) from either:\n\n  - a sequence of dense coefficients of a univariate polynomial (in ascending\n  order)\n  - an explicit `arity`, and a sparse mapping (or sequence of pairs) of exponent\n  => coefficient\n\n  In the first case, the sequence is interpreted as a dense sequence of\n  coefficients of an arity-1 (univariate) polynomial. The coefficients begin\n  with the constant term and proceed to each higher power of the indeterminate.\n  For example, x^2 - 1 can be constructed by (make [-1 0 1]).\n\n  In the 2-arity case,\n\n  - `arity` is the number of indeterminates\n  - `expts->coef` is a map of an exponent representation to a coefficient.\n\n  The `exponent` portion of the mapping can be any of:\n\n  - a proper exponent entry created by `sicmutils.polynomial.exponent`\n  - a map of the form `{variable-index, power}`\n  - a dense vector of variable powers, like `[3 0 1]` for $x^3z$. The length of\n    each vector should be equal to `arity`, in this case.\n\n  For example, any of the following would generate $4x^2y + 5xy^2$:\n\n  ```clojure\n  (make 2 [[[2 1] 4] [[1 2] 5]])\n  (make 2 {[2 1] 4, [1 2] 5})\n  (make 2 {{0 2, 1 1} 4, {0 1, 1 2} 5})\n  ```\n\n  NOTE: [[make]] will try and return a bare coefficient if possible. For\n  example, the following form will return a constant, since there are no\n  explicit indeterminates with powers > 0:\n\n  ```clojure\n  (make 10 {{} 1 {} 2})\n  ;;=> 3\n  ```\n\n  See [[constant]] if you need an explicit [[Polynomial]] instance wrapping a\n  constant.",(cljs.core.truth_(sicmutils.polynomial.make)?sicmutils.polynomial.make.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negative?"),new cljs.core.Var(function(){return sicmutils.polynomial.negative_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","negative?","sicmutils.polynomial/negative?",-987646053,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"negative?","negative?",374534410,null),"sicmutils/polynomial.cljc",16,1,763,763,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if the [[leading-base-coefficient]] of `p`\n  is [[generic/negative?]], false otherwise.",(cljs.core.truth_(sicmutils.polynomial.negative_QMARK_)?sicmutils.polynomial.negative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-scale"),new cljs.core.Var(function(){return sicmutils.polynomial.arg_scale;},new cljs.core.Symbol("sicmutils.polynomial","arg-scale","sicmutils.polynomial/arg-scale",27802169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"arg-scale","arg-scale",-828801718,null),"sicmutils/polynomial.cljc",16,1,1505,1505,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),"Given some [[Polynomial]] `p`, returns a new [[Polynomial]] generated by\n  substituting each indeterminate `x_i` for `f_i * x_i`, where `f_i` is a factor\n  supplied in the `factors` sequence.\n\n  When `p` is a multivariate [[Polynomial]], each factor must be either a\n  non-[[Polynomial]] or a [[Polynomial]] with the same [[arity]] as `p`.",(cljs.core.truth_(sicmutils.polynomial.arg_scale)?sicmutils.polynomial.arg_scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lowest-degree"),new cljs.core.Var(function(){return sicmutils.polynomial.lowest_degree;},new cljs.core.Symbol("sicmutils.polynomial","lowest-degree","sicmutils.polynomial/lowest-degree",-346776773,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"lowest-degree","lowest-degree",1042665898,null),"sicmutils/polynomial.cljc",20,1,711,711,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the lowest degree found across any term in the supplied [[Polynomial]].\n  If a non-[[Polynomial]] is supplied, returns either `0` or `-1` if the input\n  is itself a `0`.\n\n  See [[degree]] for a discussion of this `-1` case.",(cljs.core.truth_(sicmutils.polynomial.lowest_degree)?sicmutils.polynomial.lowest_degree.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multivariate?"),new cljs.core.Var(function(){return sicmutils.polynomial.multivariate_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","multivariate?","sicmutils.polynomial/multivariate?",-1967350983,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"multivariate?","multivariate?",-1200676278,null),"sicmutils/polynomial.cljc",20,1,757,757,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if `p` is a [[Polynomial]] of arity > 1, false otherwise.",(cljs.core.truth_(sicmutils.polynomial.multivariate_QMARK_)?sicmutils.polynomial.multivariate_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-power-series"),new cljs.core.Var(function(){return sicmutils.polynomial.from_power_series;},new cljs.core.Symbol("sicmutils.polynomial","from-power-series","sicmutils.polynomial/from-power-series",1555874843,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"from-power-series","from-power-series",1871650538,null),"sicmutils/polynomial.cljc",24,1,887,887,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"n-terms","n-terms",670229723,null)], null)),"Returns a univariate polynomial of all terms in the\n  supplied [[series/PowerSeries]] instance, up to (and including) order\n  `n-terms`.\n\n  ```clojure\n  (g/simplify\n    ((from-power-series series/exp-series 3) 'x))\n  ;; => (+ (* 1/6 (expt x 3)) (* 1/2 (expt x 2)) x 1)\n  ```",(cljs.core.truth_(sicmutils.polynomial.from_power_series)?sicmutils.polynomial.from_power_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity"),new cljs.core.Var(function(){return sicmutils.polynomial.identity;},new cljs.core.Symbol("sicmutils.polynomial","identity","sicmutils.polynomial/identity",380535545,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"identity","identity",-1007039734,null),"sicmutils/polynomial.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,418,418,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Generates a [[Polynomial]] instance representing a single indeterminate with\n  constant 1.\n\n  When called with no arguments, returns a monomial of arity 1 that acts as\n  identity in the first indeterminate.\n\n  The one-argument version takes an explicit `arity`, but still sets the\n  identity to the first indeterminate.\n\n  The two-argument version takes an explicit `i` and returns a monomial of arity\n  `arity` with an exponent of 1 in the `i`th indeterminate.",(cljs.core.truth_(sicmutils.polynomial.identity)?sicmutils.polynomial.identity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->power-series"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_power_series;},new cljs.core.Symbol("sicmutils.polynomial","->power-series","sicmutils.polynomial/->power-series",-1563382339,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->power-series","->power-series",1468094218,null),"sicmutils/polynomial.cljc",21,1,862,862,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a univariate polynomial `p`, returns a [[series/PowerSeries]]\n  representation of the supplied [[Polynomial]].\n\n  Given a [[series/PowerSeries]], acts as identity.\n\n  Non-[[Polynomial]] coefficients return [[series/PowerSeries]] instances\n  via [[series/constant]]; any multivariate [[Polynomial]] throws an exception.\n\n  NOTE use [[lower-arity]] to generate a univariate polynomial in the first\n  indeterminate, given a multivariate polynomial.",(cljs.core.truth_(sicmutils.polynomial.__GT_power_series)?sicmutils.polynomial.__GT_power_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coeff?"),new cljs.core.Var(function(){return sicmutils.polynomial.coeff_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","coeff?","sicmutils.polynomial/coeff?",-1217525539,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"coeff?","coeff?",-398863446,null),"sicmutils/polynomial.cljc",13,1,309,309,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if the input `x` is explicitly _not_ an instance\n  of [[Polynomial]], false otherwise.\n\n  Equivalent to `(not (polynomial? x))`.",(cljs.core.truth_(sicmutils.polynomial.coeff_QMARK_)?sicmutils.polynomial.coeff_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bare-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.bare_arity;},new cljs.core.Symbol("sicmutils.polynomial","bare-arity","sicmutils.polynomial/bare-arity",-225881829,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"bare-arity","bare-arity",611884010,null),"sicmutils/polynomial.cljc",26,1,317,317,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a [[Polynomial]] instance `p`, returns the `arity` field.",(cljs.core.truth_(sicmutils.polynomial.bare_arity)?sicmutils.polynomial.bare_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("monic?"),new cljs.core.Var(function(){return sicmutils.polynomial.monic_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","monic?","sicmutils.polynomial/monic?",1025107804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"monic?","monic?",-269964245,null),"sicmutils/polynomial.cljc",13,1,736,736,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if `p` is a [monic\n  polynomial](https://en.wikipedia.org/wiki/Monic_polynomial), false otherwise.\n\n  A monic polynomial is a univariate polynomial with a leading coefficient that\n  responds `true` to [[sicmutils.value/one?]]. This means that any coefficient\n  that responds `true` to [[sicmutils.value/one?]] also qualifies as a monic\n  polynomial.",(cljs.core.truth_(sicmutils.polynomial.monic_QMARK_)?sicmutils.polynomial.monic_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("polynomial?"),new cljs.core.Var(function(){return sicmutils.polynomial.polynomial_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","polynomial?","sicmutils.polynomial/polynomial?",-870694083,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"polynomial?","polynomial?",-1721156532,null),"sicmutils/polynomial.cljc",18,1,303,303,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if the supplied argument is an instance of [[Polynomial]], false\n  otherwise.",(cljs.core.truth_(sicmutils.polynomial.polynomial_QMARK_)?sicmutils.polynomial.polynomial_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("eq"),new cljs.core.Var(function(){return sicmutils.polynomial.eq;},new cljs.core.Symbol("sicmutils.polynomial","eq","sicmutils.polynomial/eq",-367270753,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"eq","eq",1021992460,null),"sicmutils/polynomial.cljc",9,1,611,611,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Polynomial","Polynomial",2054562416,null)], null)),new cljs.core.Symbol(null,"that","that",828965210,null)], null)),"Returns true if the [[Polynomial]] this is equal to `that`. If `that` is\n  a [[Polynomial]], `this` and `that` are equal if they have equal terms and\n  equal arity. Coefficients are compared using [[sicmutils.value/=]].\n\n  If `that` is non-[[Polynomial]], `eq` only returns true if `this` is a\n  monomial and its coefficient is equal to `that` (again\n  using [[sicmutils.value/=]]).",(cljs.core.truth_(sicmutils.polynomial.eq)?sicmutils.polynomial.eq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evaluate"),new cljs.core.Var(function(){return sicmutils.polynomial.evaluate;},new cljs.core.Symbol("sicmutils.polynomial","evaluate","sicmutils.polynomial/evaluate",-2082275907,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"evaluate","evaluate",-1129217332,null),"sicmutils/polynomial.cljc",15,1,1384,1384,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns the result of evaluating a multivariate [[Polynomial]] `p` at the\n  values in the sequence `xs` using [Horner's\n  rule](https://en.wikipedia.org/wiki/Horner%27s_method).\n\n  If `p` is a non-[[Polynomial]] coefficient, acts as identity.\n\n  Supplying too many arguments in `xs` (ie, a greater number than the [[arity]]\n  of `p`) will throw an exception. Too few arguments will result in a partial\n  evaluation of `p`, leaving the remaining indeterminates with their variable\n  indices shifted down.\n\n  For example:\n\n  ```clojure\n  (= (make [0 0 '(* 3 (expt x 2) y) 0 '(* 5 (expt x 2) (expt y 3))])\n     (simplify\n       (evaluate\n         (make 3 {[2 1 2] 3 [2 3 4] 5}) ['x 'y])))\n  ```",(cljs.core.truth_(sicmutils.polynomial.evaluate)?sicmutils.polynomial.evaluate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->str"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_str;},new cljs.core.Symbol("sicmutils.polynomial","->str","sicmutils.polynomial/->str",831510685,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->str","->str",-457137396,null),"sicmutils/polynomial.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,632,632,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a string representation of the supplied [[Polynomial]] instance `p`.\n\n  The optional argument `n` specifies how many terms to include in the returned\n  string before an ellipsis cuts them off.",(cljs.core.truth_(sicmutils.polynomial.__GT_str)?sicmutils.polynomial.__GT_str.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivative"),new cljs.core.Var(function(){return sicmutils.polynomial.partial_derivative;},new cljs.core.Symbol("sicmutils.polynomial","partial-derivative","sicmutils.polynomial/partial-derivative",-1151277636,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"partial-derivative","partial-derivative",-1901056819,null),"sicmutils/polynomial.cljc",25,1,1533,1533,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Given some [[Polynomial]] `p`, returns the partial derivative of `p` with\n  respect to the `i`th indeterminate. Throws if `i` is an invalid indeterminate\n  index for `p`.\n\n  For non-[[Polynomial]] inputs, returns `0`.",(cljs.core.truth_(sicmutils.polynomial.partial_derivative)?sicmutils.polynomial.partial_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("leading-coefficient"),new cljs.core.Var(function(){return sicmutils.polynomial.leading_coefficient;},new cljs.core.Symbol("sicmutils.polynomial","leading-coefficient","sicmutils.polynomial/leading-coefficient",1703175794,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"leading-coefficient","leading-coefficient",-1229509395,null),"sicmutils/polynomial.cljc",26,1,667,667,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the coefficient of the leading (highest degree) term of\n  the [[Polynomial]] `p`.\n\n  If `p` is a non-[[Polynomial]] coefficient, acts as identity.",(cljs.core.truth_(sicmutils.polynomial.leading_coefficient)?sicmutils.polynomial.leading_coefficient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-shift"),new cljs.core.Var(function(){return sicmutils.polynomial.arg_shift;},new cljs.core.Symbol("sicmutils.polynomial","arg-shift","sicmutils.polynomial/arg-shift",-1099004260,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"arg-shift","arg-shift",-382841075,null),"sicmutils/polynomial.cljc",16,1,1518,1518,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null)], null)),"Given some [[Polynomial]] `p`, returns a new [[Polynomial]] generated by\n  substituting each indeterminate `x_i` for `s_i + x_i`, where `s_i` is a shift\n  supplied in the `shifts` sequence.\n\n  When `p` is a multivariate [[Polynomial]], each shift must be either a\n  non-[[Polynomial]] or a [[Polynomial]] with the same [[arity]] as `p`.",(cljs.core.truth_(sicmutils.polynomial.arg_shift)?sicmutils.polynomial.arg_shift.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extend"),new cljs.core.Var(function(){return sicmutils.polynomial.extend;},new cljs.core.Symbol("sicmutils.polynomial","extend","sicmutils.polynomial/extend",843861374,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"extend","extend",-817951763,null),"sicmutils/polynomial.cljc",13,1,1261,1261,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Interpolates a new variable into the supplied [[Polynomial]] `p` at index `n`\n  by incrementing any existing variable index >= `n`.\n\n  Returns a new [[Polynomial]] of [[arity]] 1 greater than the [[arity]] of `p`,\n  or equal to `(inc n)` if `n` is greater than the [[arity]] of `p`.\n\n  For non-[[Polynomial]] inputs (or negative `n`), acts as identity.",(cljs.core.truth_(sicmutils.polynomial.extend)?sicmutils.polynomial.extend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sub"),new cljs.core.Var(function(){return sicmutils.polynomial.sub;},new cljs.core.Symbol("sicmutils.polynomial","sub","sicmutils.polynomial/sub",-743632225,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),"sicmutils/polynomial.cljc",10,1,1062,1062,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the difference of polynomials `p` and `q`, with appropriate handling\n  for non-[[Polynomial]] coefficient inputs on either or both sides.",(cljs.core.truth_(sicmutils.polynomial.sub)?sicmutils.polynomial.sub.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scale"),new cljs.core.Var(function(){return sicmutils.polynomial.scale;},new cljs.core.Symbol("sicmutils.polynomial","scale","sicmutils.polynomial/scale",1736228351,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"scale","scale",1410104174,null),"sicmutils/polynomial.cljc",12,1,902,902,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Given some polynomial `p` and a coefficient `c`, returns a new [[Polynomial]]\n  generated by multiplying each coefficient of `p` by `c` (on the right).\n\n  See [[scale-l]] if left multiplication is important.\n\n  NOTE that [[scale]] will return a non-[[Polynomial]] if the result of the\n  mapping has only a constant term.",(cljs.core.truth_(sicmutils.polynomial.scale)?sicmutils.polynomial.scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pseudo-remainder"),new cljs.core.Var(function(){return sicmutils.polynomial.pseudo_remainder;},new cljs.core.Symbol("sicmutils.polynomial","pseudo-remainder","sicmutils.polynomial/pseudo-remainder",-1764384322,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"pseudo-remainder","pseudo-remainder",-1008273201,null),"sicmutils/polynomial.cljc",23,1,1180,1180,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns the pseudo-remainder of univariate polynomials `u` and `v`.\n\n  NOTE: Fractions won't appear in the result; instead the divisor is multiplied\n  by the leading coefficient of the dividend before quotient terms are generated\n  so that division will not result in fractions.\n\n  Returns a pair of\n\n  - the remainder\n  - the integerizing factor needed to make this happen.\n\n  Similar in spirit to Knuth's algorithm 4.6.1R, except we don't multiply the\n  remainder through during gaps in the remainder. Since you don't know up front\n  how many times the integerizing multiplication will be done, we also return\n  the number d for which d * u = q * v + r.",(cljs.core.truth_(sicmutils.polynomial.pseudo_remainder)?sicmutils.polynomial.pseudo_remainder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("drop-leading-term"),new cljs.core.Var(function(){return sicmutils.polynomial.drop_leading_term;},new cljs.core.Symbol("sicmutils.polynomial","drop-leading-term","sicmutils.polynomial/drop-leading-term",621802654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"drop-leading-term","drop-leading-term",-203911633,null),"sicmutils/polynomial.cljc",24,1,984,984,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given some [[Polynomial]] `p`, returns `p` without its [[leading-term]].\n  non-[[Polynomial]] `p` inputs are treated at constant polynomials and return\n  `0`.\n\n  NOTE that [[drop-leading-term]] will return a non-[[Polynomial]] if the result\n  of the mapping has only a constant term.",(cljs.core.truth_(sicmutils.polynomial.drop_leading_term)?sicmutils.polynomial.drop_leading_term.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-degree"),new cljs.core.Var(function(){return sicmutils.polynomial.zero_degree;},new cljs.core.Symbol("sicmutils.polynomial","zero-degree","sicmutils.polynomial/zero-degree",662504656,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"zero-degree","zero-degree",2016202319,null),"sicmutils/polynomial.cljc",26,1,511,511,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.polynomial.zero_degree)?sicmutils.polynomial.zero_degree.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lower-arity"),new cljs.core.Var(function(){return sicmutils.polynomial.lower_arity;},new cljs.core.Symbol("sicmutils.polynomial","lower-arity","sicmutils.polynomial/lower-arity",820351619,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"lower-arity","lower-arity",37018640,null),"sicmutils/polynomial.cljc",18,1,1284,1284,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a multivariate [[Polynomial]] `p`, returns an equivalent\n  univariate [[Polynomial]] whose coefficients are polynomials of [[arity]]\n  equal to one less than the [[arity]] of `p`.\n\n  Use [[raise-arity]] to undo this transformation. See [[with-lower-arity]] for\n  a function that packages these two transformations.\n\n  NOTE that [[lower-arity]] will drop a coefficient down to a non-[[Polynomial]]\n  if the result of extracting the first variable leaves a constant term.",(cljs.core.truth_(sicmutils.polynomial.lower_arity)?sicmutils.polynomial.lower_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant"),new cljs.core.Var(function(){return sicmutils.polynomial.constant;},new cljs.core.Symbol("sicmutils.polynomial","constant","sicmutils.polynomial/constant",106527969,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null),"sicmutils/polynomial.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,408,408,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Given some coefficient `c`, returns a [[Polynomial]] instance with a single\n  constant term referencing `c`.\n\n  `arity` defaults to 1; supply it to set the arity of the\n  returned [[Polynomial]].",(cljs.core.truth_(sicmutils.polynomial.constant)?sicmutils.polynomial.constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Polynomial"),new cljs.core.Var(function(){return sicmutils.polynomial.Polynomial;},new cljs.core.Symbol("sicmutils.polynomial","Polynomial","sicmutils.polynomial/Polynomial",-1448780829,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/polynomial.cljc",new cljs.core.Keyword(null,"line","line",212345235),117,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Polynomial","Polynomial",2054562416,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.polynomial.Polynomial)?sicmutils.polynomial.Polynomial.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contract"),new cljs.core.Var(function(){return sicmutils.polynomial.contract;},new cljs.core.Symbol("sicmutils.polynomial","contract","sicmutils.polynomial/contract",-1570236959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"contract","contract",-1856283024,null),"sicmutils/polynomial.cljc",15,1,1235,1235,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"If `p` is [[contractible?]] at index `n`, returns a new [[Polynomial]] instance\n  of [[arity]] `1` less than `p` with all variable indices > `n` decremented.\n\n  For non-[[Polynomial]] inputs, acts as identity. Throws if `p` is not\n  explicitly [[contractible?]].\n\n  For example:\n\n  ```clojure\n  (= (make 2 {[1 2] 3 [3 4] 5})\n     (contract\n       (make 3 {[0 1 2] 3 [0 3 4] 5}) 0))\n  ```",(cljs.core.truth_(sicmutils.polynomial.contract)?sicmutils.polynomial.contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divisible?"),new cljs.core.Var(function(){return sicmutils.polynomial.divisible_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","divisible?","sicmutils.polynomial/divisible?",-164108095,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"divisible?","divisible?",721956434,null),"sicmutils/polynomial.cljc",17,1,1138,1138,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Returns true if the numerator `n` is evenly divisible by `d` (ie, leaves no\n  remainder), false otherwise.\n\n  NOTE that this performs a full division with [[divide]]. If you're planning on\n  doing this, you may as well call [[divide]] and check that the remainder\n  satisfies [[sicmutils.value/zero?]].",(cljs.core.truth_(sicmutils.polynomial.divisible_QMARK_)?sicmutils.polynomial.divisible_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scale-l"),new cljs.core.Var(function(){return sicmutils.polynomial.scale_l;},new cljs.core.Symbol("sicmutils.polynomial","scale-l","sicmutils.polynomial/scale-l",1588506242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"scale-l","scale-l",33154067,null),"sicmutils/polynomial.cljc",14,1,915,915,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given some polynomial `p` and a coefficient `c`, returns a new [[Polynomial]]\n  generated by multiplying each coefficient of `p` by `c` (on the left).\n\n  See [[scale]] if right multiplication is important.\n\n  NOTE that [[scale-l]] will return a non-[[Polynomial]] if the result of the\n  mapping has only a constant term.",(cljs.core.truth_(sicmutils.polynomial.scale_l)?sicmutils.polynomial.scale_l.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bare-terms"),new cljs.core.Var(function(){return sicmutils.polynomial.bare_terms;},new cljs.core.Symbol("sicmutils.polynomial","bare-terms","sicmutils.polynomial/bare-terms",211344898,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"bare-terms","bare-terms",2041059731,null),"sicmutils/polynomial.cljc",26,1,323,323,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a [[Polynomial]] instance `p`, returns the `terms` field.",(cljs.core.truth_(sicmutils.polynomial.bare_terms)?sicmutils.polynomial.bare_terms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->"),new cljs.core.Var(function(){return sicmutils.polynomial.expression__GT_;},new cljs.core.Symbol("sicmutils.polynomial","expression->","sicmutils.polynomial/expression->",71045698,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"expression->","expression->",-916231213,null),"sicmutils/polynomial.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1593,1593,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)),"Converts the supplied symbolic expression `expr` into Flat Polynomial canonical\n  form (ie, a [[Polynomial]] instance). `expr` should be a bare, unwrapped\n  expression built out of Clojure data structures.\n\n  Returns the result of calling continuation `cont` with the [[Polynomial]] and\n  the list of variables corresponding to each indeterminate in\n  the [[Polynomial]]. (`cont `defaults to `vector`).\n\n  The second optional argument `v-compare` allows you to provide a Comparator\n  between variables. Sorting indeterminates by `v-compare` will determine the\n  order of the indeterminates in the generated [[Polynomial]]. The list of\n  variables passed to `cont` will be sorted using `v-compare`.\n\n  Absorbing an expression with [[expression->]] and emitting it again\n  with [[->expression]] will generate the canonical form of an expression, with\n  respect to the operations in the [[operators-known]] set.\n\n  This kind of simplification proceeds purely symbolically over the known Flat\n  Polynomial operations; other operations outside the arithmetic available in\n  polynomials over commutative rings should be factored out by an expression\n  analyzer (see [[sicmutils.expression.analyze/make-analyzer]]) before\n  calling [[expression->]].\n\n  NOTE See [[analyzer]] for an instance usable\n  by [[sicmutils.expression.analyze/make-analyzer]].",(cljs.core.truth_(sicmutils.polynomial.expression__GT_)?sicmutils.polynomial.expression__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("monomial?"),new cljs.core.Var(function(){return sicmutils.polynomial.monomial_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","monomial?","sicmutils.polynomial/monomial?",-388186235,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"monomial?","monomial?",-1156841196,null),"sicmutils/polynomial.cljc",16,1,725,725,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if `p` is either:\n\n  - a [[Polynomial]] instance with a single term, or\n  - a non-[[Polynomial]] coefficient,\n\n  false otherwise.",(cljs.core.truth_(sicmutils.polynomial.monomial_QMARK_)?sicmutils.polynomial.monomial_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map-coefficients"),new cljs.core.Var(function(){return sicmutils.polynomial.map_coefficients;},new cljs.core.Symbol("sicmutils.polynomial","map-coefficients","sicmutils.polynomial/map-coefficients",-1770719289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"map-coefficients","map-coefficients",1799565654,null),"sicmutils/polynomial.cljc",23,1,772,772,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a [[Polynomial]], returns a new [[Polynomial]] instance generated by\n  applying `f` to the coefficient of each term in `p` and filtering out all\n  resulting zeros.\n\n  Given a non-[[Polynomial]] coefficient, returns `(f p)`.\n\n  NOTE that [[map-coefficients]] will return a non-[[Polynomial]] if the result\n  of the mapping has only a constant term.",(cljs.core.truth_(sicmutils.polynomial.map_coefficients)?sicmutils.polynomial.map_coefficients.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trailing-coefficient"),new cljs.core.Var(function(){return sicmutils.polynomial.trailing_coefficient;},new cljs.core.Symbol("sicmutils.polynomial","trailing-coefficient","sicmutils.polynomial/trailing-coefficient",1103099940,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"trailing-coefficient","trailing-coefficient",217002391,null),"sicmutils/polynomial.cljc",27,1,700,700,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the coefficient of the trailing (lowest degree) term of\n  the [[Polynomial]] `p`.\n\n  If `p` is a non-[[Polynomial]] coefficient, acts as identity.",(cljs.core.truth_(sicmutils.polynomial.trailing_coefficient)?sicmutils.polynomial.trailing_coefficient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mul"),new cljs.core.Var(function(){return sicmutils.polynomial.mul;},new cljs.core.Symbol("sicmutils.polynomial","mul","sicmutils.polynomial/mul",-1617566072,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),"sicmutils/polynomial.cljc",10,1,1068,1068,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the product of polynomials `p` and `q`, with appropriate handling for\n  non-[[Polynomial]] coefficient inputs on either or both sides.",(cljs.core.truth_(sicmutils.polynomial.mul)?sicmutils.polynomial.mul.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("defbinary"),new cljs.core.Var(function(){return sicmutils.polynomial.defbinary;},new cljs.core.Symbol("sicmutils.polynomial","defbinary","sicmutils.polynomial/defbinary",461475657,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"defbinary","defbinary",-823045926,null),"sicmutils/polynomial.cljc",25,1,1695,1695,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"generic-op","generic-op",2094584705,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Installs the supplied function `f` into `generic-op` such that it will act\n  between [[Polynomial]] instances, or allow non-[[Polynomial]] coefficients on\n  either side.",(cljs.core.truth_(sicmutils.polynomial.defbinary)?sicmutils.polynomial.defbinary.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("horner-with-error"),new cljs.core.Var(function(){return sicmutils.polynomial.horner_with_error;},new cljs.core.Symbol("sicmutils.polynomial","horner-with-error","sicmutils.polynomial/horner-with-error",88178637,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"horner-with-error","horner-with-error",-233784998,null),"sicmutils/polynomial.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1424,1424,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"z","z",851004344,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),"Takes a univariate polynomial `a`, an argument `z` and a continuation\n  `cont` (`vector` by default) and calls the continuation with (SEE BELOW).\n\n  This Horner's rule evaluator is restricted to numerical coefficients and\n  univariate polynomials. It returns by calling `cont` with 4 arguments:\n\n  - the computed value\n  - the values of the first two derivatives\n  - an estimate of the roundoff error incurred in computing the value\n\n  The recurrences used are from Kahan's 18 Nov 1986 paper ['Roundoff in\n  Polynomial\n  Evaluation'](https://people.eecs.berkeley.edu/~wkahan/Math128/Poly.pdf),\n  generalized for sparse representations and another derivative by GJS.\n\n  For $p = A(z)$, $q = A'(z)$, $r = A''(z)$, and $e$ = error in $A(x)$,\n\n  $$p_{j+n} = z^n p_j + a_{j+n}$$\n\n  $$e_{j+n} = |z|^n ( e_j + (n-1) p_j ) + |p_{j+n}|$$\n\n  $$q_{j+n} = z^n q_j + n z^{n-1} p_j$$\n\n  $$r_{j+n} = z^n r_j + n z^{n-1} q_j + 1/2 n (n-1) z^{n-2} p_j$$",(cljs.core.truth_(sicmutils.polynomial.horner_with_error)?sicmutils.polynomial.horner_with_error.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abs"),new cljs.core.Var(function(){return sicmutils.polynomial.abs;},new cljs.core.Symbol("sicmutils.polynomial","abs","sicmutils.polynomial/abs",-1636876341,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"abs","abs",1394505050,null),"sicmutils/polynomial.cljc",10,1,1048,1048,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"If the [[leading-coefficient]] of `p` is negative, returns `(negate p)`, else\n  acts as identity.",(cljs.core.truth_(sicmutils.polynomial.abs)?sicmutils.polynomial.abs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operator-table"),new cljs.core.Var(function(){return sicmutils.polynomial.operator_table;},new cljs.core.Symbol("sicmutils.polynomial","operator-table","sicmutils.polynomial/operator-table",-193949140,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"operator-table","operator-table",-1566451525,null),"sicmutils/polynomial.cljc",17,1,1573,1576,cljs.core.List.EMPTY,"These operations are those allowed between [[Polynomial]] and\n       coefficient instances.",(cljs.core.truth_(sicmutils.polynomial.operator_table)?sicmutils.polynomial.operator_table.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contractible?"),new cljs.core.Var(function(){return sicmutils.polynomial.contractible_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","contractible?","sicmutils.polynomial/contractible?",-308709432,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"contractible?","contractible?",-624316069,null),"sicmutils/polynomial.cljc",20,1,1226,1226,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns true if `n` is a valid variable index for the [[Polynomial]] `p`, and\n  the variable with that index has no powers greater than `0` in `p`, false\n  otherwise.",(cljs.core.truth_(sicmutils.polynomial.contractible_QMARK_)?sicmutils.polynomial.contractible_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("degree"),new cljs.core.Var(function(){return sicmutils.polynomial.degree;},new cljs.core.Symbol("sicmutils.polynomial","degree","sicmutils.polynomial/degree",-1699019768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"degree","degree",1877638555,null),"sicmutils/polynomial.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,574,574,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Returns the [degree](https://en.wikipedia.org/wiki/Degree_of_a_polynomial) of\n  the supplied polynomial.\n\n  the degree of a polynomial is the highest of the degrees of the polynomial's\n  individual terms with non-zero coefficients. The degree of an individual term\n  is the sum of all exponents in the term.\n\n  Optionally, [[degree]] takes an indeterminate index `i`; in this\n  case, [[degree]] returns the maximum power found for the `i`th indeterminate\n  across all terms.\n\n  NOTE when passed either a `0` or a zero-polynomial, [[degree]] returns -1. See\n  Wikipedia's ['degree of the zero\n  polynomial'](https://en.wikipedia.org/wiki/Degree_of_a_polynomial#Degree_of_the_zero_polynomial)\n  for color on why this is the case.\n  ",(cljs.core.truth_(sicmutils.polynomial.degree)?sicmutils.polynomial.degree.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("square"),new cljs.core.Var(function(){return sicmutils.polynomial.square;},new cljs.core.Symbol("sicmutils.polynomial","square","sicmutils.polynomial/square",1292235151,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"square","square",-1842001092,null),"sicmutils/polynomial.cljc",13,1,1074,1074,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the square of polynomial `p`. Equivalent to `(mul p p)`.",(cljs.core.truth_(sicmutils.polynomial.square)?sicmutils.polynomial.square.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("valid-arity?"),new cljs.core.Var(function(){return sicmutils.polynomial.valid_arity_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial","valid-arity?","sicmutils.polynomial/valid-arity?",1127989731,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"valid-arity?","valid-arity?",233342812,null),"sicmutils/polynomial.cljc",19,1,553,553,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Given some input `p` and an indeterminate index `i`, returns true if `0 <= i\n  < (arity p)`, false otherwise.",(cljs.core.truth_(sicmutils.polynomial.valid_arity_QMARK_)?sicmutils.polynomial.valid_arity_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("leading-term"),new cljs.core.Var(function(){return sicmutils.polynomial.leading_term;},new cljs.core.Symbol("sicmutils.polynomial","leading-term","sicmutils.polynomial/leading-term",-975731251,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"leading-term","leading-term",-1876467876,null),"sicmutils/polynomial.cljc",19,1,658,658,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the leading (highest degree) term of the [[Polynomial]] `p`.\n\n  If `p` is a non-[[Polynomial]] coefficient, returns a term with zero exponents\n  and `p` as its coefficient.",(cljs.core.truth_(sicmutils.polynomial.leading_term)?sicmutils.polynomial.leading_term.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("analyzer"),new cljs.core.Var(function(){return sicmutils.polynomial.analyzer;},new cljs.core.Symbol("sicmutils.polynomial","analyzer","sicmutils.polynomial/analyzer",257083361,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),"sicmutils/polynomial.cljc",11,1,1665,1667,cljs.core.List.EMPTY,"Singleton [[sicmutils.expression.analyze/ICanonicalize]]\n  instance.",(cljs.core.truth_(sicmutils.polynomial.analyzer)?sicmutils.polynomial.analyzer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-points"),new cljs.core.Var(function(){return sicmutils.polynomial.from_points;},new cljs.core.Symbol("sicmutils.polynomial","from-points","sicmutils.polynomial/from-points",-1716298609,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"from-points","from-points",-882765250,null),"sicmutils/polynomial.cljc",18,1,447,447,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given a sequence of points of the form `[x, f(x)]`, returns a univariate\n  polynomial that passes through each input point.\n\n  The degree of the returned polynomial is equal to `(dec (count xs))`.",(cljs.core.truth_(sicmutils.polynomial.from_points)?sicmutils.polynomial.from_points.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->expression"),new cljs.core.Var(function(){return sicmutils.polynomial.__GT_expression;},new cljs.core.Symbol("sicmutils.polynomial","->expression","sicmutils.polynomial/->expression",-2143580991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"->expression","->expression",-1295460418,null),"sicmutils/polynomial.cljc",21,3,1635,1635,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null)),"Accepts a [[Polynomial]] `p` and a sequence of symbols for each indeterminate,\n  and emits the canonical form of the symbolic expression that\n  represents [[Polynomial]] `p`.\n\n  A similar result could be achieved by calling `(apply p vars)`;\n  but [[Polynomial]] application uses [Horner's\n  rule](https://en.wikipedia.org/wiki/Horner%27s_method), and form of the\n  returned result will be different.\n\n  NOTE: this is the output stage of Flat Polynomial canonical form\n  simplification. The input stage is handled by [[expression->]].\n\n  NOTE See [[analyzer]] for an instance usable\n  by [[sicmutils.expression.analyze/make-analyzer]].",(cljs.core.truth_(sicmutils.polynomial.__GT_expression)?sicmutils.polynomial.__GT_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map-exponents"),new cljs.core.Var(function(){return sicmutils.polynomial.map_exponents;},new cljs.core.Symbol("sicmutils.polynomial","map-exponents","sicmutils.polynomial/map-exponents",-1994523872,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"map-exponents","map-exponents",-1135861601,null),"sicmutils/polynomial.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"new-arity","new-arity",-1624480576,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"new-arity","new-arity",-1624480576,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,788,788,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"new-arity","new-arity",-1624480576,null)], null)),"Given a [[Polynomial]], returns a new [[Polynomial]] instance generated by\n  applying `f` to the exponents of each term in `p` and filtering out all\n  resulting zeros. The resulting [[Polynomial]] will have either the\n  same [[arity]] as `p`, or the explicit, optional `new-arity` argument. (This\n  is because `f` might increase or decrease the total arity.)\n\n  Given a non-[[Polynomial]] coefficient, if `(f empty-exponents)` produces a\n  non-zero result, errors without an explicit `new-arity` argument..\n\n  NOTE that [[map-exponents]] will return a non-[[Polynomial]] if the result\n  of the mapping has only a constant term.",(cljs.core.truth_(sicmutils.polynomial.map_exponents)?sicmutils.polynomial.map_exponents.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cube"),new cljs.core.Var(function(){return sicmutils.polynomial.cube;},new cljs.core.Symbol("sicmutils.polynomial","cube","sicmutils.polynomial/cube",1561627564,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"cube","cube",138920159,null),"sicmutils/polynomial.cljc",11,1,1079,1079,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the cube of polynomial `p`. Equivalent to `(mul p (mul p p))`.",(cljs.core.truth_(sicmutils.polynomial.cube)?sicmutils.polynomial.cube.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("new-variables"),new cljs.core.Var(function(){return sicmutils.polynomial.new_variables;},new cljs.core.Symbol("sicmutils.polynomial","new-variables","sicmutils.polynomial/new-variables",254640096,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial","sicmutils.polynomial",-294113816,null),new cljs.core.Symbol(null,"new-variables","new-variables",-1065568929,null),"sicmutils/polynomial.cljc",20,1,439,439,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a sequence of `n` monomials of arity `n`, each with an exponent of `1`\n  for the `i`th indeterminate (where `i` matches the position in the returned\n  sequence).",(cljs.core.truth_(sicmutils.polynomial.new_variables)?sicmutils.polynomial.new_variables.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("polar->rectangular"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.polar__GT_rectangular;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","polar->rectangular","sicmutils.mechanics.lagrange/polar->rectangular",732860665,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"polar->rectangular","polar->rectangular",723200704,null),"sicmutils/mechanics/lagrange.cljc",25,1,534,534,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"phi","phi",113733223,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.polar__GT_rectangular)?sicmutils.mechanics.lagrange.polar__GT_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Qdot"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Qdot;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Qdot","sicmutils.mechanics.lagrange/Qdot",19836651,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Qdot","Qdot",48449280,null),"sicmutils/mechanics/lagrange.cljc",7,1,136,137,cljs.core.List.EMPTY,"Alias for [[velocity]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.Qdot)?sicmutils.mechanics.lagrange.Qdot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->q"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.state__GT_q;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","state->q","sicmutils.mechanics.lagrange/state->q",77809246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"state->q","state->q",68587681,null),"sicmutils/mechanics/lagrange.cljc",11,1,115,116,cljs.core.List.EMPTY,"Alias for [[coordinate]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.state__GT_q)?sicmutils.mechanics.lagrange.state__GT_q.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acceleration"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.acceleration;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","acceleration","sicmutils.mechanics.lagrange/acceleration",421766283,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"acceleration","acceleration",426643106,null),"sicmutils/mechanics/lagrange.cljc",19,1,94,94,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),"Returns the acceleration element of a local tuple (by convention, the fourth\n  element).\n\n  See [[coordinate]] for more detail.",(cljs.core.truth_(sicmutils.mechanics.lagrange.acceleration)?sicmutils.mechanics.lagrange.acceleration.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Lagrangian-state"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.literal_Lagrangian_state;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","literal-Lagrangian-state","sicmutils.mechanics.lagrange/literal-Lagrangian-state",866006267,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"literal-Lagrangian-state","literal-Lagrangian-state",206160578,null),"sicmutils/mechanics/lagrange.cljc",31,1,142,142,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n-dof","n-dof",148884184,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.literal_Lagrangian_state)?sicmutils.mechanics.lagrange.literal_Lagrangian_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gamma"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Gamma;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Gamma","sicmutils.mechanics.lagrange/Gamma",689816969,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Gamma","Gamma",681602978,null),"sicmutils/mechanics/lagrange.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Gamma takes a path function (from time to coordinates) to a state\n  function (from time to local tuple).",(cljs.core.truth_(sicmutils.mechanics.lagrange.Gamma)?sicmutils.mechanics.lagrange.Gamma.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->t"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.state__GT_t;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","state->t","sicmutils.mechanics.lagrange/state->t",413265071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"state->t","state->t",460567876,null),"sicmutils/mechanics/lagrange.cljc",11,1,112,113,cljs.core.List.EMPTY,"Alias for [[time]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.state__GT_t)?sicmutils.mechanics.lagrange.state__GT_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-coupled-harmonic"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_coupled_harmonic;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-coupled-harmonic","sicmutils.mechanics.lagrange/L-coupled-harmonic",-1586737203,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-coupled-harmonic","L-coupled-harmonic",-1590553116,null),"sicmutils/mechanics/lagrange.cljc",25,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_coupled_harmonic)?sicmutils.mechanics.lagrange.L_coupled_harmonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("velocity"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.velocity;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","velocity","sicmutils.mechanics.lagrange/velocity",1062039599,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"velocity","velocity",1059007172,null),"sicmutils/mechanics/lagrange.cljc",15,1,85,85,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),"Returns the velocity element of a local tuple (by convention, the third\n  element).\n\n  See [[coordinate]] for more detail.",(cljs.core.truth_(sicmutils.mechanics.lagrange.velocity)?sicmutils.mechanics.lagrange.velocity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("LE"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.LE;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","LE","sicmutils.mechanics.lagrange/LE",1316240398,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"LE","LE",1319258661,null),"sicmutils/mechanics/lagrange.cljc",5,1,483,484,cljs.core.List.EMPTY,"Alias for [[Euler-lagrange-operator]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.LE)?sicmutils.mechanics.lagrange.LE.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Dt"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Dt;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Dt","sicmutils.mechanics.lagrange/Dt",395309346,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Dt","Dt",389881669,null),"sicmutils/mechanics/lagrange.cljc",8,1,474,474,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Dt)?sicmutils.mechanics.lagrange.Dt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->C"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.F__GT_C;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","F->C","sicmutils.mechanics.lagrange/F->C",-981850082,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"F->C","F->C",-977930553,null),"sicmutils/mechanics/lagrange.cljc",11,1,507,507,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),"Accepts a coordinate transformation `F` from a local tuple to a new coordinate\n  structure, and returns a function from `local -> local` that applies the\n  transformation directly.\n\n  [[F->C]] handles local tuples of arbitrary length.",(cljs.core.truth_(sicmutils.mechanics.lagrange.F__GT_C)?sicmutils.mechanics.lagrange.F__GT_C.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-axisymmetric-top"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_axisymmetric_top;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-axisymmetric-top","sicmutils.mechanics.lagrange/L-axisymmetric-top",-944274146,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-axisymmetric-top","L-axisymmetric-top",-966661177,null),"sicmutils/mechanics/lagrange.cljc",25,1,238,238,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"gMR","gMR",1369866139,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_axisymmetric_top)?sicmutils.mechanics.lagrange.L_axisymmetric_top.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->state-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian__GT_state_derivative;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian->state-derivative","sicmutils.mechanics.lagrange/Lagrangian->state-derivative",1291547719,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian->state-derivative","Lagrangian->state-derivative",1286195816,null),"sicmutils/mechanics/lagrange.cljc",35,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,329,329,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),"Optionally takes a dissipation function.",(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian__GT_state_derivative)?sicmutils.mechanics.lagrange.Lagrangian__GT_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-free"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.two_free;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","two-free","sicmutils.mechanics.lagrange/two-free",2107178195,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"two-free","two-free",2110718600,null),"sicmutils/mechanics/lagrange.cljc",24,1,260,260,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m1","m1",1532436901,null),new cljs.core.Symbol(null,"m2","m2",1053528221,null),new cljs.core.Symbol(null,"g","g",-916345864,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.two_free)?sicmutils.mechanics.lagrange.two_free.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qv->local-path"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.qv__GT_local_path;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","qv->local-path","sicmutils.mechanics.lagrange/qv->local-path",315632017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"qv->local-path","qv->local-path",313422824,null),"sicmutils/mechanics/lagrange.cljc",21,1,325,325,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.qv__GT_local_path)?sicmutils.mechanics.lagrange.qv__GT_local_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generalized-LE"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.generalized_LE;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","generalized-LE","sicmutils.mechanics.lagrange/generalized-LE",-1060358810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"generalized-LE","generalized-LE",-1073642743,null),"sicmutils/mechanics/lagrange.cljc",21,1,491,491,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.generalized_LE)?sicmutils.mechanics.lagrange.generalized_LE.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-path"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.make_path;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","make-path","sicmutils.mechanics.lagrange/make-path",-67149472,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"make-path","make-path",-72172791,null),"sicmutils/mechanics/lagrange.cljc",16,1,411,411,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t0","t0",-534273234,null),new cljs.core.Symbol(null,"q0","q0",1970367567,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"qs","qs",-260156164,null)], null)),"SICM p. 23n",(cljs.core.truth_(sicmutils.mechanics.lagrange.make_path)?sicmutils.mechanics.lagrange.make_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acceleration-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.acceleration_tuple;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","acceleration-tuple","sicmutils.mechanics.lagrange/acceleration-tuple",1960650467,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"acceleration-tuple","acceleration-tuple",1955295370,null),"sicmutils/mechanics/lagrange.cljc",24,1,19,19,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.acceleration_tuple)?sicmutils.mechanics.lagrange.acceleration_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-sliding-pend"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_sliding_pend;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-sliding-pend","sicmutils.mechanics.lagrange/L-sliding-pend",-32833327,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-sliding-pend","L-sliding-pend",-21140854,null),"sicmutils/mechanics/lagrange.cljc",21,1,270,270,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m1","m1",1532436901,null),new cljs.core.Symbol(null,"m2","m2",1053528221,null),new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"g","g",-916345864,null)], null)),"Pendulum of mass m2 and length b, hanging from a support of mass m1 that is\n  free to move horizontally (from Groesberg, Advanced Mechanics, p. 72)",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_sliding_pend)?sicmutils.mechanics.lagrange.L_sliding_pend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("linear-interpolants"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.linear_interpolants;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","linear-interpolants","sicmutils.mechanics.lagrange/linear-interpolants",-79311195,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"linear-interpolants","linear-interpolants",-117737654,null),"sicmutils/mechanics/lagrange.cljc",26,1,394,394,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x0","x0",2051374914,null),new cljs.core.Symbol(null,"x1","x1",-223390720,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.linear_interpolants)?sicmutils.mechanics.lagrange.linear_interpolants.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rayleigh-dissipation"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Rayleigh_dissipation;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Rayleigh-dissipation","sicmutils.mechanics.lagrange/Rayleigh-dissipation",391085456,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Rayleigh-dissipation","Rayleigh-dissipation",387785803,null),"sicmutils/mechanics/lagrange.cljc",27,1,284,284,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Rayleigh_dissipation)?sicmutils.mechanics.lagrange.Rayleigh_dissipation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gamma-bar"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Gamma_bar;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Gamma-bar","sicmutils.mechanics.lagrange/Gamma-bar",967094000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Gamma-bar","Gamma-bar",941167787,null),"sicmutils/mechanics/lagrange.cljc",16,1,461,461,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Gamma_bar)?sicmutils.mechanics.lagrange.Gamma_bar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("path->state-path"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.path__GT_state_path;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","path->state-path","sicmutils.mechanics.lagrange/path->state-path",741043794,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"path->state-path","path->state-path",769505451,null),"sicmutils/mechanics/lagrange.cljc",22,1,169,169,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.path__GT_state_path)?sicmutils.mechanics.lagrange.path__GT_state_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian","sicmutils.mechanics.lagrange/Lagrangian",-1141228560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null),"sicmutils/mechanics/lagrange.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),1,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),1,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,36,36,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a function signature for a Lagrangian with n degrees of freedom (or an\n  unrestricted number if n is not given).\n\n  Useful for constructing Lagrangian literal functions.",(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian)?sicmutils.mechanics.lagrange.Lagrangian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->L-state"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.__GT_L_state;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","->L-state","sicmutils.mechanics.lagrange/->L-state",1026533456,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"->L-state","->L-state",1029512715,null),"sicmutils/mechanics/lagrange.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(3),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(3),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"qdot","qdot",-754984603,null),new cljs.core.Symbol(null,"derivs","derivs",1777840707,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"qdot","qdot",-754984603,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"derivs","derivs",1777840707,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"qdot","qdot",-754984603,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"derivs","derivs",1777840707,null)], null)),"Given a time `t`, coordinate tuple (or scalar) `q`, velocity tuple (or scalar)\n  `qdot` and any number of additional higher-order derivative tuples (or\n  scalars), returns a 'Local tuple', ie, the state expected by a Lagrangian.",(cljs.core.truth_(sicmutils.mechanics.lagrange.__GT_L_state)?sicmutils.mechanics.lagrange.__GT_L_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinates"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.coordinates;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","coordinates","sicmutils.mechanics.lagrange/coordinates",1735037156,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"coordinates","coordinates",415198859,null),"sicmutils/mechanics/lagrange.cljc",14,1,124,125,cljs.core.List.EMPTY,"Alias for [[coordinate]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.coordinates)?sicmutils.mechanics.lagrange.coordinates.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("accelerations"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.accelerations;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","accelerations","sicmutils.mechanics.lagrange/accelerations",-1683915470,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"accelerations","accelerations",-1678530805,null),"sicmutils/mechanics/lagrange.cljc",16,1,130,131,cljs.core.List.EMPTY,"Alias for [[acceleration]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.accelerations)?sicmutils.mechanics.lagrange.accelerations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-free-particle"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_free_particle;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-free-particle","sicmutils.mechanics.lagrange/L-free-particle",63104951,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-free-particle","L-free-particle",51383692,null),"sicmutils/mechanics/lagrange.cljc",22,1,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mass","mass",-498418519,null)], null)),"The lagrangian of a free particle of mass m. The Lagrangian\n  returned is a function of the local tuple. Since the particle\n  is free, there is no potential energy, so the Lagrangian is\n  just the kinetic energy.",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_free_particle)?sicmutils.mechanics.lagrange.L_free_particle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-Kepler-polar"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_Kepler_polar;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-Kepler-polar","sicmutils.mechanics.lagrange/L-Kepler-polar",-1380270171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-Kepler-polar","L-Kepler-polar",-1377249844,null),"sicmutils/mechanics/lagrange.cljc",21,1,231,231,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"GM","GM",1363569210,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_Kepler_polar)?sicmutils.mechanics.lagrange.L_Kepler_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->state"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.__GT_state;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","->state","sicmutils.mechanics.lagrange/->state",-1728966613,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"->state","->state",-1734302196,null),"sicmutils/mechanics/lagrange.cljc",10,1,56,57,cljs.core.List.EMPTY,"Alias for [[->L-state]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.__GT_state)?sicmutils.mechanics.lagrange.__GT_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->acceleration"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian__GT_acceleration;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian->acceleration","sicmutils.mechanics.lagrange/Lagrangian->acceleration",348412426,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian->acceleration","Lagrangian->acceleration",345497709,null),"sicmutils/mechanics/lagrange.cljc",31,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,308,308,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian__GT_acceleration)?sicmutils.mechanics.lagrange.Lagrangian__GT_acceleration.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-uniform-acceleration"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_uniform_acceleration;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-uniform-acceleration","sicmutils.mechanics.lagrange/L-uniform-acceleration",-368152630,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-uniform-acceleration","L-uniform-acceleration",-369576403,null),"sicmutils/mechanics/lagrange.cljc",29,1,209,209,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"g","g",-916345864,null)], null)),"The Lagrangian of an object experiencing uniform acceleration\n  in the negative y direction, i.e. the acceleration due to gravity",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_uniform_acceleration)?sicmutils.mechanics.lagrange.L_uniform_acceleration.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("velocity-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.velocity_tuple;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","velocity-tuple","sicmutils.mechanics.lagrange/velocity-tuple",1376141364,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"velocity-tuple","velocity-tuple",1387588589,null),"sicmutils/mechanics/lagrange.cljc",20,1,18,18,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.velocity_tuple)?sicmutils.mechanics.lagrange.velocity_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("local-state-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.local_state_derivative;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","local-state-derivative","sicmutils.mechanics.lagrange/local-state-derivative",-236682263,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"local-state-derivative","local-state-derivative",-161819186,null),"sicmutils/mechanics/lagrange.cljc",29,1,340,340,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),"The state derivative of a Lagrangian is a function carrying a state tuple to\n  its time derivative.\n\n  Alias for the non-dissipative, single-arity version\n  of [[Lagrangian->state-derivative]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.local_state_derivative)?sicmutils.mechanics.lagrange.local_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Q"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Q;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Q","sicmutils.mechanics.lagrange/Q",-1981606826,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Q","Q",-1991115249,null),"sicmutils/mechanics/lagrange.cljc",4,1,133,134,cljs.core.List.EMPTY,"Alias for [[coordinate]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.Q)?sicmutils.mechanics.lagrange.Q.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian-action"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian_action;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian-action","sicmutils.mechanics.lagrange/Lagrangian-action",1812123654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian-action","Lagrangian-action",1827700271,null),"sicmutils/mechanics/lagrange.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null),new cljs.core.Symbol(null,"integration-opts","integration-opts",185824687,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null),new cljs.core.Symbol(null,"integration-opts","integration-opts",185824687,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,387,387,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"t2","t2",891676305,null),new cljs.core.Symbol(null,"integration-opts","integration-opts",185824687,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian_action)?sicmutils.mechanics.lagrange.Lagrangian_action.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("osculating-path"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.osculating_path;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","osculating-path","sicmutils.mechanics.lagrange/osculating-path",733181711,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"osculating-path","osculating-path",677457360,null),"sicmutils/mechanics/lagrange.cljc",22,1,443,443,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state0","state0",1595451039,null)], null)),"Given a state tuple (of finite length), reconstitutes the initial segment of\n  the Taylor series corresponding to the state tuple data as a function of t.\n\n  Time is measured beginning at the point of time specified in the input state\n  tuple.",(cljs.core.truth_(sicmutils.mechanics.lagrange.osculating_path)?sicmutils.mechanics.lagrange.osculating_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T3-spherical"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.T3_spherical;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","T3-spherical","sicmutils.mechanics.lagrange/T3-spherical",704318491,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"T3-spherical","T3-spherical",692408880,null),"sicmutils/mechanics/lagrange.cljc",19,1,375,375,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.T3_spherical)?sicmutils.mechanics.lagrange.T3_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("time"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.time;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","time","sicmutils.mechanics.lagrange/time",-1261398856,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"time","time",-1268547887,null),"sicmutils/mechanics/lagrange.cljc",11,1,61,61,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),"Extract the time slot from a state tuple.\n\n  See [[coordinate]] for more detail.",(cljs.core.truth_(sicmutils.mechanics.lagrange.time)?sicmutils.mechanics.lagrange.time.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s->r"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.s__GT_r;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","s->r","sicmutils.mechanics.lagrange/s->r",-1765553416,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"s->r","s->r",-1726668015,null),"sicmutils/mechanics/lagrange.cljc",11,1,553,553,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),"SICM p. 83",(cljs.core.truth_(sicmutils.mechanics.lagrange.s__GT_r)?sicmutils.mechanics.lagrange.s__GT_r.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->qdot"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.state__GT_qdot;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","state->qdot","sicmutils.mechanics.lagrange/state->qdot",-1842343558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"state->qdot","state->qdot",-1840399599,null),"sicmutils/mechanics/lagrange.cljc",14,1,118,119,cljs.core.List.EMPTY,"Alias for [[velocity]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.state__GT_qdot)?sicmutils.mechanics.lagrange.state__GT_qdot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Lagrangian"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.make_Lagrangian;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","make-Lagrangian","sicmutils.mechanics.lagrange/make-Lagrangian",1196383560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"make-Lagrangian","make-Lagrangian",1190262545,null),"sicmutils/mechanics/lagrange.cljc",22,1,177,177,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kinetic-energy","kinetic-energy",1014555443,null),new cljs.core.Symbol(null,"potential-energy","potential-energy",-990216810,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.make_Lagrangian)?sicmutils.mechanics.lagrange.make_Lagrangian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->power-loss"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian__GT_power_loss;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian->power-loss","sicmutils.mechanics.lagrange/Lagrangian->power-loss",568542680,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian->power-loss","Lagrangian->power-loss",557159409,null),"sicmutils/mechanics/lagrange.cljc",29,1,369,369,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian__GT_power_loss)?sicmutils.mechanics.lagrange.Lagrangian__GT_power_loss.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("momentum-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.momentum_tuple;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","momentum-tuple","sicmutils.mechanics.lagrange/momentum-tuple",-23558759,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"momentum-tuple","momentum-tuple",-27972686,null),"sicmutils/mechanics/lagrange.cljc",20,1,20,20,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.momentum_tuple)?sicmutils.mechanics.lagrange.momentum_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Dt-procedure"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Dt_procedure;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Dt-procedure","sicmutils.mechanics.lagrange/Dt-procedure",-1268145608,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Dt-procedure","Dt-procedure",-1264845613,null),"sicmutils/mechanics/lagrange.cljc",19,1,467,467,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Dt_procedure)?sicmutils.mechanics.lagrange.Dt_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("velocities"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.velocities;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","velocities","sicmutils.mechanics.lagrange/velocities",1018081242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"velocities","velocities",1008302579,null),"sicmutils/mechanics/lagrange.cljc",13,1,127,128,cljs.core.List.EMPTY,"Alias for [[velocity]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.velocities)?sicmutils.mechanics.lagrange.velocities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations-1"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrange_equations_1;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrange-equations-1","sicmutils.mechanics.lagrange/Lagrange-equations-1",-1910885030,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrange-equations-1","Lagrange-equations-1",-1918067853,null),"sicmutils/mechanics/lagrange.cljc",23,1,356,357,cljs.core.List.EMPTY,"Alias for [[Lagrange-equations-first-order]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrange_equations_1)?sicmutils.mechanics.lagrange.Lagrange_equations_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-central-polar"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_central_polar;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-central-polar","sicmutils.mechanics.lagrange/L-central-polar",-457367240,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-central-polar","L-central-polar",-454329389,null),"sicmutils/mechanics/lagrange.cljc",22,1,221,221,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"U","U",-1292433725,null)], null)),"Consider planar motion in a central force field, with an arbitrary potential,\n  `U`, depending only on the radius. The generalized coordinates are polar.",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_central_polar)?sicmutils.mechanics.lagrange.L_central_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-central-rectangular"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_central_rectangular;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-central-rectangular","sicmutils.mechanics.lagrange/L-central-rectangular",606488173,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-central-rectangular","L-central-rectangular",613723220,null),"sicmutils/mechanics/lagrange.cljc",28,1,216,216,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"U","U",-1292433725,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_central_rectangular)?sicmutils.mechanics.lagrange.L_central_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.coordinate_tuple;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","coordinate-tuple","sicmutils.mechanics.lagrange/coordinate-tuple",-1253552482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"coordinate-tuple","coordinate-tuple",-1161946955,null),"sicmutils/mechanics/lagrange.cljc",22,1,17,17,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.lagrange.coordinate_tuple)?sicmutils.mechanics.lagrange.coordinate_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F-sliding-pend"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.F_sliding_pend;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","F-sliding-pend","sicmutils.mechanics.lagrange/F-sliding-pend",-74798436,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"F-sliding-pend","F-sliding-pend",-128397131,null),"sicmutils/mechanics/lagrange.cljc",30,1,254,254,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.F_sliding_pend)?sicmutils.mechanics.lagrange.F_sliding_pend.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-rectangular"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_rectangular;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-rectangular","sicmutils.mechanics.lagrange/L-rectangular",6059775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-rectangular","L-rectangular",32091286,null),"sicmutils/mechanics/lagrange.cljc",20,1,193,193,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"V","V",471247521,null)], null)),"Lagrangian for a point mass on with the potential energy V(x, y)",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_rectangular)?sicmutils.mechanics.lagrange.L_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->local"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.__GT_local;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","->local","sicmutils.mechanics.lagrange/->local",1169277727,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"->local","->local",1172465974,null),"sicmutils/mechanics/lagrange.cljc",10,1,53,54,cljs.core.List.EMPTY,"Alias for [[->L-state]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.__GT_local)?sicmutils.mechanics.lagrange.__GT_local.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrange_equations;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrange-equations","sicmutils.mechanics.lagrange/Lagrange-equations",-2044273601,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrange-equations","Lagrange-equations",-2039149866,null),"sicmutils/mechanics/lagrange.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,296,296,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"dissipation-fn","dissipation-fn",1979250288,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrange_equations)?sicmutils.mechanics.lagrange.Lagrange_equations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-two-particle"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_two_particle;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-two-particle","sicmutils.mechanics.lagrange/L-two-particle",-621110674,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-two-particle","L-two-particle",-625685417,null),"sicmutils/mechanics/lagrange.cljc",21,1,288,288,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m1","m1",1532436901,null),new cljs.core.Symbol(null,"m2","m2",1053528221,null),new cljs.core.Symbol(null,"V","V",471247521,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_two_particle)?sicmutils.mechanics.lagrange.L_two_particle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Qdotdot"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Qdotdot;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Qdotdot","sicmutils.mechanics.lagrange/Qdotdot",1379243246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Qdotdot","Qdotdot",1384643287,null),"sicmutils/mechanics/lagrange.cljc",10,1,139,140,cljs.core.List.EMPTY,"Alias for [[acceleration]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.Qdotdot)?sicmutils.mechanics.lagrange.Qdotdot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parametric-path-action"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.parametric_path_action;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","parametric-path-action","sicmutils.mechanics.lagrange/parametric-path-action",866471331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"parametric-path-action","parametric-path-action",863239064,null),"sicmutils/mechanics/lagrange.cljc",29,1,420,420,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null),new cljs.core.Symbol(null,"t0","t0",-534273234,null),new cljs.core.Symbol(null,"q0","q0",1970367567,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"q1","q1",1804441001,null)], null)),"SICM p. 23",(cljs.core.truth_(sicmutils.mechanics.lagrange.parametric_path_action)?sicmutils.mechanics.lagrange.parametric_path_action.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rectangular->polar"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.rectangular__GT_polar;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","rectangular->polar","sicmutils.mechanics.lagrange/rectangular->polar",923333346,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"rectangular->polar","rectangular->polar",937043161,null),"sicmutils/mechanics/lagrange.cljc",25,1,523,523,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.rectangular__GT_polar)?sicmutils.mechanics.lagrange.rectangular__GT_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations-first-order"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrange_equations_first_order;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrange-equations-first-order","sicmutils.mechanics.lagrange/Lagrange-equations-first-order",978618179,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrange-equations-first-order","Lagrange-equations-first-order",975370522,null),"sicmutils/mechanics/lagrange.cljc",37,1,349,349,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrange_equations_first_order)?sicmutils.mechanics.lagrange.Lagrange_equations_first_order.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("p->r"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.p__GT_r;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","p->r","sicmutils.mechanics.lagrange/p->r",1877495637,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"p->r","p->r",1864824186,null),"sicmutils/mechanics/lagrange.cljc",11,1,539,539,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tqv","tqv",-1233922921,null)], null)),"SICM p. 47. Polar to rectangular coordinates of state.",(cljs.core.truth_(sicmutils.mechanics.lagrange.p__GT_r)?sicmutils.mechanics.lagrange.p__GT_r.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-harmonic"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_harmonic;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-harmonic","sicmutils.mechanics.lagrange/L-harmonic",-1443350431,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-harmonic","L-harmonic",-1439317414,null),"sicmutils/mechanics/lagrange.cljc",17,1,200,200,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"The Lagrangian of a simple harmonic oscillator (mass-spring\n  system). m is the mass and k is the spring constant used in\n  Hooke's law. The resulting Lagrangian is a function of the\n  local tuple of the system.",(cljs.core.truth_(sicmutils.mechanics.lagrange.L_harmonic)?sicmutils.mechanics.lagrange.L_harmonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rectangular->spherical"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.rectangular__GT_spherical;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","rectangular->spherical","sicmutils.mechanics.lagrange/rectangular->spherical",1006797524,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"rectangular->spherical","rectangular->spherical",1020736763,null),"sicmutils/mechanics/lagrange.cljc",29,1,559,559,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.rectangular__GT_spherical)?sicmutils.mechanics.lagrange.rectangular__GT_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spherical->rectangular"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.spherical__GT_rectangular;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","spherical->rectangular","sicmutils.mechanics.lagrange/spherical->rectangular",1270235124,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"spherical->rectangular","spherical->rectangular",1409390107,null),"sicmutils/mechanics/lagrange.cljc",29,1,547,547,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"phi","phi",113733223,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.spherical__GT_rectangular)?sicmutils.mechanics.lagrange.spherical__GT_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->n-dof"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.state__GT_n_dof;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","state->n-dof","sicmutils.mechanics.lagrange/state->n-dof",771384229,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"state->n-dof","state->n-dof",766036380,null),"sicmutils/mechanics/lagrange.cljc",19,1,103,103,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.state__GT_n_dof)?sicmutils.mechanics.lagrange.state__GT_n_dof.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-Lagrange-operator"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Euler_Lagrange_operator;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Euler-Lagrange-operator","sicmutils.mechanics.lagrange/Euler-Lagrange-operator",-2078435259,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Euler-Lagrange-operator","Euler-Lagrange-operator",-2048146756,null),"sicmutils/mechanics/lagrange.cljc",30,1,479,479,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Euler_Lagrange_operator)?sicmutils.mechanics.lagrange.Euler_Lagrange_operator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->qddot"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.state__GT_qddot;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","state->qddot","sicmutils.mechanics.lagrange/state->qddot",-114197451,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"state->qddot","state->qddot",-108844324,null),"sicmutils/mechanics/lagrange.cljc",15,1,121,122,cljs.core.List.EMPTY,"Alias for [[acceleration]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.state__GT_qddot)?sicmutils.mechanics.lagrange.state__GT_qddot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("find-path"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.find_path;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","find-path","sicmutils.mechanics.lagrange/find-path",-59834918,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"find-path","find-path",-63940675,null),"sicmutils/mechanics/lagrange.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(6),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(6),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null),new cljs.core.Symbol(null,"t0","t0",-534273234,null),new cljs.core.Symbol(null,"q0","q0",1970367567,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null),new cljs.core.Symbol(null,"t0","t0",-534273234,null),new cljs.core.Symbol(null,"q0","q0",1970367567,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,429,429,cljs.core.list(new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null),new cljs.core.Symbol(null,"t0","t0",-534273234,null),new cljs.core.Symbol(null,"q0","q0",1970367567,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)], null)], null)),"SICM p. 23. The optional parameter values is a callback which will report\n  intermediate points of the minimization.",(cljs.core.truth_(sicmutils.mechanics.lagrange.find_path)?sicmutils.mechanics.lagrange.find_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.coordinate;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","coordinate","sicmutils.mechanics.lagrange/coordinate",1522102425,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"coordinate","coordinate",1527720318,null),"sicmutils/mechanics/lagrange.cljc",17,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),"A convenience function on local tuples. A local tuple describes\n  the state of a system at a particular time:\n\n  ```\n  [t, q, D q, D^2 q]\n  ```\n\n  representing time, position, velocity (and optionally acceleration etc.)\n\n  [[coordinate]] returns the `q` element, which is expected to be a mapping from\n  time to a structure of coordinates.",(cljs.core.truth_(sicmutils.mechanics.lagrange.coordinate)?sicmutils.mechanics.lagrange.coordinate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-pendulum"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L_pendulum;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L-pendulum","sicmutils.mechanics.lagrange/L-pendulum",490157029,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L-pendulum","L-pendulum",501843390,null),"sicmutils/mechanics/lagrange.cljc",17,1,279,279,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"g","g",-916345864,null),new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"l","l",-1258542346,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L_pendulum)?sicmutils.mechanics.lagrange.L_pendulum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L3-central"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.L3_central;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","L3-central","sicmutils.mechanics.lagrange/L3-central",-1549108135,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"L3-central","L3-central",-1545087426,null),"sicmutils/mechanics/lagrange.cljc",17,1,382,382,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"Vr","Vr",1917258557,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.L3_central)?sicmutils.mechanics.lagrange.L3_central.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-interpolation-function"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrange_interpolation_function;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrange-interpolation-function","sicmutils.mechanics.lagrange/Lagrange-interpolation-function",-1679665787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrange-interpolation-function","Lagrange-interpolation-function",-1682964898,null),"sicmutils/mechanics/lagrange.cljc",38,1,400,400,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ys","ys",1606115702,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given `ys` (a sequence of function values) and `xs` (an equal-length sequence\n  of function inputs), returns a [[sicmutils.polynomial/Polynomial]] instance\n  guaranteed to pass through all supplied `xs` and `ys`.\n\n  The contract for inputs is that `(map vector xs ys)` should return a sequence\n  of pairs of points.",(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrange_interpolation_function)?sicmutils.mechanics.lagrange.Lagrange_interpolation_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("r->s"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.r__GT_s;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","r->s","sicmutils.mechanics.lagrange/r->s",772402425,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"r->s","r->s",779371230,null),"sicmutils/mechanics/lagrange.cljc",11,1,567,567,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"local","local",142764803,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.r__GT_s)?sicmutils.mechanics.lagrange.r__GT_s.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->energy"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrangian__GT_energy;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrangian->energy","sicmutils.mechanics.lagrange/Lagrangian->energy",-70764185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrangian->energy","Lagrangian->energy",-73689250,null),"sicmutils/mechanics/lagrange.cljc",25,1,362,362,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrangian__GT_energy)?sicmutils.mechanics.lagrange.Lagrangian__GT_energy.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("r->p"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.r__GT_p;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","r->p","sicmutils.mechanics.lagrange/r->p",-68467912,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"r->p","r->p",-80303841,null),"sicmutils/mechanics/lagrange.cljc",11,1,530,530,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tqv","tqv",-1233922921,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.lagrange.r__GT_p)?sicmutils.mechanics.lagrange.r__GT_p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations-operator"),new cljs.core.Var(function(){return sicmutils.mechanics.lagrange.Lagrange_equations_operator;},new cljs.core.Symbol("sicmutils.mechanics.lagrange","Lagrange-equations-operator","sicmutils.mechanics.lagrange/Lagrange-equations-operator",-1562640860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.lagrange","sicmutils.mechanics.lagrange",-138012519,null),new cljs.core.Symbol(null,"Lagrange-equations-operator","Lagrange-equations-operator",-1568036865,null),"sicmutils/mechanics/lagrange.cljc",30,1,487,488,cljs.core.List.EMPTY,"Alias for [[Euler-lagrange-operator]].",(cljs.core.truth_(sicmutils.mechanics.lagrange.Lagrange_equations_operator)?sicmutils.mechanics.lagrange.Lagrange_equations_operator.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Function"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.Function;},new cljs.core.Symbol("sicmutils.abstract.function","Function","sicmutils.abstract.function/Function",1939775367,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/abstract/function.cljc",new cljs.core.Keyword(null,"line","line",212345235),62,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Function","Function",-749895448,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.abstract$.function$.Function)?sicmutils.abstract$.function$.Function.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-function?"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.literal_function_QMARK_;},new cljs.core.Symbol("sicmutils.abstract.function","literal-function?","sicmutils.abstract.function/literal-function?",1223714482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"literal-function?","literal-function?",-391290455,null),"sicmutils/abstract/function.cljc",24,1,147,147,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if the supplied object is an instance of [[Function]], false\n  otherwise.",(cljs.core.truth_(sicmutils.abstract$.function$.literal_function_QMARK_)?sicmutils.abstract$.function$.literal_function_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Function"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.__GT_Function;},new cljs.core.Symbol("sicmutils.abstract.function","->Function","sicmutils.abstract.function/->Function",1154191699,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"->Function","->Function",-1491692950,null),"sicmutils/abstract/function.cljc",18,1,new cljs.core.Keyword(null,"positional","positional",-203580463),62,62,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"domain","domain",-807220832,null),new cljs.core.Symbol(null,"range","range",-1014743483,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null"], null), null),"Positional factory function for sicmutils.abstract.function/Function.",(cljs.core.truth_(sicmutils.abstract$.function$.__GT_Function)?sicmutils.abstract$.function$.__GT_Function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sicm-signature->domain-range"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.sicm_signature__GT_domain_range;},new cljs.core.Symbol("sicmutils.abstract.function","sicm-signature->domain-range","sicmutils.abstract.function/sicm-signature->domain-range",215223180,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"sicm-signature->domain-range","sicm-signature->domain-range",-1400305517,null),"sicmutils/abstract/function.cljc",44,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arrow","arrow",-1583084344,null),new cljs.core.Symbol(null,"domain","domain",-807220832,null),new cljs.core.Symbol(null,"range","range",-1014743483,null)], null)], null)),"Convert a SICM-style literal function signature (e.g.,\n  '(-> Real (X Real Real)) ) to our 'exemplar' format.",(cljs.core.truth_(sicmutils.abstract$.function$.sicm_signature__GT_domain_range)?sicmutils.abstract$.function$.sicm_signature__GT_domain_range.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("binding-pairs"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.binding_pairs;},new cljs.core.Symbol("sicmutils.abstract.function","binding-pairs","sicmutils.abstract.function/binding-pairs",-58039617,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"binding-pairs","binding-pairs",478110612,null),"sicmutils/abstract/function.cljc",29,1,207,207,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"litfns","litfns",1494839179,null)], null)),null,(cljs.core.truth_(sicmutils.abstract$.function$.binding_pairs)?sicmutils.abstract$.function$.binding_pairs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-function"),new cljs.core.Var(function(){return sicmutils.abstract$.function$.literal_function;},new cljs.core.Symbol("sicmutils.abstract.function","literal-function","sicmutils.abstract.function/literal-function",-814351689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.abstract.function","sicmutils.abstract.function",-1303788335,null),new cljs.core.Symbol(null,"literal-function","literal-function",-1466238050,null),"sicmutils/abstract/function.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"signature","signature",-1190680975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"domain","domain",-807220832,null),new cljs.core.Symbol(null,"range","range",-1014743483,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"signature","signature",-1190680975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"domain","domain",-807220832,null),new cljs.core.Symbol(null,"range","range",-1014743483,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,182,182,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"signature","signature",-1190680975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"domain","domain",-807220832,null),new cljs.core.Symbol(null,"range","range",-1014743483,null)], null)),null,(cljs.core.truth_(sicmutils.abstract$.function$.literal_function)?sicmutils.abstract$.function$.literal_function.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-four-tuple"),new cljs.core.Var(function(){return sicmutils.sr.boost.make_four_tuple;},new cljs.core.Symbol("sicmutils.sr.boost","make-four-tuple","sicmutils.sr.boost/make-four-tuple",-1700243402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"make-four-tuple","make-four-tuple",-2053785145,null),"sicmutils/sr/boost.cljc",22,1,10,10,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ct","ct",-517996828,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.make_four_tuple)?sicmutils.sr.boost.make_four_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("four-tuple->ct"),new cljs.core.Var(function(){return sicmutils.sr.boost.four_tuple__GT_ct;},new cljs.core.Symbol("sicmutils.sr.boost","four-tuple->ct","sicmutils.sr.boost/four-tuple->ct",-383311888,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"four-tuple->ct","four-tuple->ct",-1670005201,null),"sicmutils/sr/boost.cljc",21,1,13,13,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ct","ct",-517996828,null)], null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.four_tuple__GT_ct)?sicmutils.sr.boost.four_tuple__GT_ct.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("four-tuple->space"),new cljs.core.Var(function(){return sicmutils.sr.boost.four_tuple__GT_space;},new cljs.core.Symbol("sicmutils.sr.boost","four-tuple->space","sicmutils.sr.boost/four-tuple->space",-891860375,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"four-tuple->space","four-tuple->space",-4527322,null),"sicmutils/sr/boost.cljc",24,1,15,15,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.four_tuple__GT_space)?sicmutils.sr.boost.four_tuple__GT_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("proper-time-interval"),new cljs.core.Var(function(){return sicmutils.sr.boost.proper_time_interval;},new cljs.core.Symbol("sicmutils.sr.boost","proper-time-interval","sicmutils.sr.boost/proper-time-interval",-771568632,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"proper-time-interval","proper-time-interval",-304271527,null),"sicmutils/sr/boost.cljc",27,1,18,18,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"four-tuple","four-tuple",1220782365,null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.proper_time_interval)?sicmutils.sr.boost.proper_time_interval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("proper-space-interval"),new cljs.core.Var(function(){return sicmutils.sr.boost.proper_space_interval;},new cljs.core.Symbol("sicmutils.sr.boost","proper-space-interval","sicmutils.sr.boost/proper-space-interval",-1740330751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"proper-space-interval","proper-space-interval",-2056140240,null),"sicmutils/sr/boost.cljc",28,1,23,23,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"four-tuple","four-tuple",1220782365,null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.proper_space_interval)?sicmutils.sr.boost.proper_space_interval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("general-boost"),new cljs.core.Var(function(){return sicmutils.sr.boost.general_boost;},new cljs.core.Symbol("sicmutils.sr.boost","general-boost","sicmutils.sr.boost/general-boost",-962907148,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"general-boost","general-boost",-313944893,null),"sicmutils/sr/boost.cljc",20,1,28,28,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"beta","beta",2096137419,null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.general_boost)?sicmutils.sr.boost.general_boost.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("general-boost2"),new cljs.core.Var(function(){return sicmutils.sr.boost.general_boost2;},new cljs.core.Symbol("sicmutils.sr.boost","general-boost2","sicmutils.sr.boost/general-boost2",134307912,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"general-boost2","general-boost2",317456793,null),"sicmutils/sr/boost.cljc",21,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"direction","direction",1007172132,null),new cljs.core.Symbol(null,"v:c","v:c",1270894894,null)], null)),"Takes a unit 3-vector `direction` (representing a direction) and a velocity\n  `v:c` normalized by `C`.",(cljs.core.truth_(sicmutils.sr.boost.general_boost2)?sicmutils.sr.boost.general_boost2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extended-rotation"),new cljs.core.Var(function(){return sicmutils.sr.boost.extended_rotation;},new cljs.core.Symbol("sicmutils.sr.boost","extended-rotation","sicmutils.sr.boost/extended-rotation",-1319598632,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.boost","sicmutils.sr.boost",-1952315028,null),new cljs.core.Symbol(null,"extended-rotation","extended-rotation",-1676844009,null),"sicmutils/sr/boost.cljc",24,1,71,71,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null)),null,(cljs.core.truth_(sicmutils.sr.boost.extended_rotation)?sicmutils.sr.boost.extended_rotation.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_x;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-x","sicmutils.mechanics.rotation/rotate-x",-435064838,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-x","rotate-x",-1991735296,null),"sicmutils/mechanics/rotation.cljc",14,1,129,129,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_x)?sicmutils.mechanics.rotation.rotate_x.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_z;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-z","sicmutils.mechanics.rotation/rotate-z",-382297894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-z","rotate-z",933472,null),"sicmutils/mechanics/rotation.cljc",14,1,131,131,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_z)?sicmutils.mechanics.rotation.rotate_z.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rx"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Rx;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Rx","sicmutils.mechanics.rotation/Rx",-2125016549,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Rx","Rx",410881441,null),"sicmutils/mechanics/rotation.cljc",9,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Returns a function which rotates a vector \u03B1 radians about the x axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.Rx)?sicmutils.mechanics.rotation.Rx.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_x_tuple;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-x-tuple","sicmutils.mechanics.rotation/rotate-x-tuple",791880300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-x-tuple","rotate-x-tuple",-1878274782,null),"sicmutils/mechanics/rotation.cljc",21,1,66,66,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_x_tuple)?sicmutils.mechanics.rotation.rotate_x_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Ry"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Ry;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Ry","sicmutils.mechanics.rotation/Ry",-1849054908,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Ry","Ry",249628162,null),"sicmutils/mechanics/rotation.cljc",9,1,107,107,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Returns a function which rotates a vector \u03B1 radians about the y axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.Ry)?sicmutils.mechanics.rotation.Ry.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_x_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-x-matrix","sicmutils.mechanics.rotation/rotate-x-matrix",2131482376,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-x-matrix","rotate-x-matrix",-1071484222,null),"sicmutils/mechanics/rotation.cljc",22,1,16,16,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Produce the matrix of a rotation of \u03B1 radians about the x axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_x_matrix)?sicmutils.mechanics.rotation.rotate_x_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_y;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-y","sicmutils.mechanics.rotation/rotate-y",-1093971021,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-y","rotate-y",1176649417,null),"sicmutils/mechanics/rotation.cljc",14,1,130,130,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_y)?sicmutils.mechanics.rotation.rotate_y.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z-tuple-2"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_z_tuple_2;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-z-tuple-2","sicmutils.mechanics.rotation/rotate-z-tuple-2",2054315988,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-z-tuple-2","rotate-z-tuple-2",-748946070,null),"sicmutils/mechanics/rotation.cljc",32,1,80,80,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_z_tuple_2)?sicmutils.mechanics.rotation.rotate_z_tuple_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_z_tuple;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-z-tuple","sicmutils.mechanics.rotation/rotate-z-tuple",715705782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-z-tuple","rotate-z-tuple",-1312708500,null),"sicmutils/mechanics/rotation.cljc",21,1,86,86,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_z_tuple)?sicmutils.mechanics.rotation.rotate_z_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_z_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-z-matrix","sicmutils.mechanics.rotation/rotate-z-matrix",-1673928118,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-z-matrix","rotate-z-matrix",1997537548,null),"sicmutils/mechanics/rotation.cljc",22,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Produce the matrix of a rotation of \u03B1 radians about the z axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_z_matrix)?sicmutils.mechanics.rotation.rotate_z_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rx-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Rx_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Rx-matrix","sicmutils.mechanics.rotation/Rx-matrix",-1216614808,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Rx-matrix","Rx-matrix",547573038,null),"sicmutils/mechanics/rotation.cljc",15,1,21,21,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.Rx_matrix)?sicmutils.mechanics.rotation.Rx_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rz"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Rz;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Rz","sicmutils.mechanics.rotation/Rz",-488581820,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Rz","Rz",-1950648434,null),"sicmutils/mechanics/rotation.cljc",9,1,117,117,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Returns a function which rotates a vector \u03B1 radians about the z axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.Rz)?sicmutils.mechanics.rotation.Rz.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_y_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-y-matrix","sicmutils.mechanics.rotation/rotate-y-matrix",11198857,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-y-matrix","rotate-y-matrix",1752319055,null),"sicmutils/mechanics/rotation.cljc",22,1,28,28,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),"Produce the matrix of a rotation of \u03B1 radians about the y axis.",(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_y_matrix)?sicmutils.mechanics.rotation.rotate_y_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("angle-axis->rotation-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.angle_axis__GT_rotation_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","angle-axis->rotation-matrix","sicmutils.mechanics.rotation/angle-axis->rotation-matrix",-1601867126,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"angle-axis->rotation-matrix","angle-axis->rotation-matrix",1240127312,null),"sicmutils/mechanics/rotation.cljc",34,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.angle_axis__GT_rotation_matrix)?sicmutils.mechanics.rotation.angle_axis__GT_rotation_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("wcross->w"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.wcross__GT_w;},new cljs.core.Symbol("sicmutils.mechanics.rotation","wcross->w","sicmutils.mechanics.rotation/wcross->w",1644795455,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"wcross->w","wcross->w",-80334599,null),"sicmutils/mechanics/rotation.cljc",16,1,133,133,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.wcross__GT_w)?sicmutils.mechanics.rotation.wcross__GT_w.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y-tuple"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_y_tuple;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-y-tuple","sicmutils.mechanics.rotation/rotate-y-tuple",-1919028013,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-y-tuple","rotate-y-tuple",620058393,null),"sicmutils/mechanics/rotation.cljc",21,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"\u03B1","\u03B1",-210042210,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_y_tuple)?sicmutils.mechanics.rotation.rotate_y_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y-tuple-2"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_y_tuple_2;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-y-tuple-2","sicmutils.mechanics.rotation/rotate-y-tuple-2",1819736421,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-y-tuple-2","rotate-y-tuple-2",-953198021,null),"sicmutils/mechanics/rotation.cljc",32,1,70,70,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_y_tuple_2)?sicmutils.mechanics.rotation.rotate_y_tuple_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x-tuple-2"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.rotate_x_tuple_2;},new cljs.core.Symbol("sicmutils.mechanics.rotation","rotate-x-tuple-2","sicmutils.mechanics.rotation/rotate-x-tuple-2",-733330298,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"rotate-x-tuple-2","rotate-x-tuple-2",2104680956,null),"sicmutils/mechanics/rotation.cljc",32,1,60,60,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rotation.rotate_x_tuple_2)?sicmutils.mechanics.rotation.rotate_x_tuple_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Ry-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Ry_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Ry-matrix","sicmutils.mechanics.rotation/Ry-matrix",1717274086,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Ry-matrix","Ry-matrix",-110991524,null),"sicmutils/mechanics/rotation.cljc",15,1,33,33,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.Ry_matrix)?sicmutils.mechanics.rotation.Ry_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler->M"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Euler__GT_M;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Euler->M","sicmutils.mechanics.rotation/Euler->M",-2106676185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Euler->M","Euler->M",464914845,null),"sicmutils/mechanics/rotation.cljc",15,1,140,140,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"psi","psi",80412671,null)], null)], null)),"Compute the rotation matrix from a 3-vector of Euler angles.\n\n  Our Euler Angle convention:\n\n  M(theta, phi, psi) = R_z(phi)*R_x(theta)*R_z(psi)",(cljs.core.truth_(sicmutils.mechanics.rotation.Euler__GT_M)?sicmutils.mechanics.rotation.Euler__GT_M.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rz-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.Rz_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rotation","Rz-matrix","sicmutils.mechanics.rotation/Rz-matrix",101365337,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"Rz-matrix","Rz-matrix",-1387146081,null),"sicmutils/mechanics/rotation.cljc",15,1,47,47,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.rotation.Rz_matrix)?sicmutils.mechanics.rotation.Rz_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("M->Euler"),new cljs.core.Var(function(){return sicmutils.mechanics.rotation.M__GT_Euler;},new cljs.core.Symbol("sicmutils.mechanics.rotation","M->Euler","sicmutils.mechanics.rotation/M->Euler",249597381,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rotation","sicmutils.mechanics.rotation",-1414014513,null),new cljs.core.Symbol(null,"M->Euler","M->Euler",-1777835457,null),"sicmutils/mechanics/rotation.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null),new cljs.core.Symbol(null,"tolerance-in-ulps","tolerance-in-ulps",-736814321,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null),new cljs.core.Symbol(null,"tolerance-in-ulps","tolerance-in-ulps",-736814321,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,153,153,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null),new cljs.core.Symbol(null,"tolerance-in-ulps","tolerance-in-ulps",-736814321,null)], null)),"Given a 3x3 rotation matrix, returns a [[sicmutils.structure/up]] of the\n  corresponding Euler angles.\n\n  Our Euler Angle convention:\n\n  M(theta, phi, psi) = R_z(phi)*R_x(theta)*R_z(psi)",(cljs.core.truth_(sicmutils.mechanics.rotation.M__GT_Euler)?sicmutils.mechanics.rotation.M__GT_Euler.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("wildcard?"),new cljs.core.Var(function(){return pattern.syntax.wildcard_QMARK_;},new cljs.core.Symbol("pattern.syntax","wildcard?","pattern.syntax/wildcard?",-1134879099,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"wildcard?","wildcard?",954487426,null),"pattern/syntax.cljc",16,1,43,43,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` matches the wildcard character `_`, false otherwise.",(cljs.core.truth_(pattern.syntax.wildcard_QMARK_)?pattern.syntax.wildcard_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-pattern"),new cljs.core.Var(function(){return pattern.syntax.compile_pattern;},new cljs.core.Symbol("pattern.syntax","compile-pattern","pattern.syntax/compile-pattern",-1630959292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"compile-pattern","compile-pattern",424625475,null),"pattern/syntax.cljc",22,1,191,191,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Given a pattern with unquoted binding forms and, potentially, `~` and `~@`\n  entries, returns a pattern appropriately quoted such that it can be evaluated\n  by the Clojure reader.\n\n  Changes:\n\n  - `(? x) => (list '? 'x)`\n  - any bare symbol is quoted\n  - Any form unquoted like `~x` is left UNquoted, even in the symbol spot of `(?\n    ~sym ...)`\n  - Any form marked `~@[1 2 3]` is spliced in directly, EVEN in the symbol spot\n    of `(? ~@sym ...)`\n\n  These rules proceed recursively down into map, vector and sequential data\n  structures. (Recursion only pushes down into values for map-shaped patterns.)",(cljs.core.truth_(pattern.syntax.compile_pattern)?pattern.syntax.compile_pattern.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("reverse-segment?"),new cljs.core.Var(function(){return pattern.syntax.reverse_segment_QMARK_;},new cljs.core.Symbol("pattern.syntax","reverse-segment?","pattern.syntax/reverse-segment?",2068884354,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"reverse-segment?","reverse-segment?",-1059328125,null),"pattern/syntax.cljc",23,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a reversed-segment variable reference, false\n  otherwise.\n\n  A reverse-segment binding variable is either:\n\n  - A symbol starting with `$$`\n  - A sequence of the form `(:$$ <binding>)`.",(cljs.core.truth_(pattern.syntax.reverse_segment_QMARK_)?pattern.syntax.reverse_segment_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("restriction"),new cljs.core.Var(function(){return pattern.syntax.restriction;},new cljs.core.Symbol("pattern.syntax","restriction","pattern.syntax/restriction",-2097640540,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"restriction","restriction",260296615,null),"pattern/syntax.cljc",18,1,109,109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"If `pattern` is a variable binding form in a pattern with restriction predicates,\n  returns a predicate that only returns true if all of the predicates pass for\n  its input, false otherwise.\n\n  If `pattern` has no restrictions or is some other input type, returns a\n  predicate that will always return `true`.",(cljs.core.truth_(pattern.syntax.restriction)?pattern.syntax.restriction.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unquote?"),new cljs.core.Var(function(){return pattern.syntax.unquote_QMARK_;},new cljs.core.Symbol("pattern.syntax","unquote?","pattern.syntax/unquote?",-950881265,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"unquote?","unquote?",1120794638,null),"pattern/syntax.cljc",15,1,132,132,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a form that should be included with no quoting\n  into the returned pattern, false otherwise.",(cljs.core.truth_(pattern.syntax.unquote_QMARK_)?pattern.syntax.unquote_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("segment?"),new cljs.core.Var(function(){return pattern.syntax.segment_QMARK_;},new cljs.core.Symbol("pattern.syntax","segment?","pattern.syntax/segment?",-971669235,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"segment?","segment?",1234224398,null),"pattern/syntax.cljc",15,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a segment variable reference, false otherwise.\n\n  A segment binding variable is either:\n\n  - A symbol starting with `??`\n  - A sequence of the form `(?? <binding>)`.",(cljs.core.truth_(pattern.syntax.segment_QMARK_)?pattern.syntax.segment_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("reverse-segment-name"),new cljs.core.Var(function(){return pattern.syntax.reverse_segment_name;},new cljs.core.Symbol("pattern.syntax","reverse-segment-name","pattern.syntax/reverse-segment-name",-1166886896,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"reverse-segment-name","reverse-segment-name",1073216529,null),"pattern/syntax.cljc",27,1,100,100,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Given a REVERSE-segment name, either extracts the symbol from a pattern\n  like `(:$$ x)`, or transforms symbols like `$$x` into `??x`.",(cljs.core.truth_(pattern.syntax.reverse_segment_name)?pattern.syntax.reverse_segment_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unquoted-form"),new cljs.core.Var(function(){return pattern.syntax.unquoted_form;},new cljs.core.Symbol("pattern.syntax","unquoted-form","pattern.syntax/unquoted-form",1295894198,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"unquoted-form","unquoted-form",-910654799,null),"pattern/syntax.cljc",20,1,148,148,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Given a `pattern` that responds `true` to [[unquote?]] or [[unquote-splice?]],\n  returns the form from that pattern.",(cljs.core.truth_(pattern.syntax.unquoted_form)?pattern.syntax.unquoted_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("splice-reduce"),new cljs.core.Var(function(){return pattern.syntax.splice_reduce;},new cljs.core.Symbol("pattern.syntax","splice-reduce","pattern.syntax/splice-reduce",140984630,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"splice-reduce","splice-reduce",-2065693385,null),"pattern/syntax.cljc",20,1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"splice?","splice?",1977106547,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Helper function for reducing over a sequence that might contain forms that need\n  to be spliced into the resulting sequence. This is a sort of helper for a\n  guarded `mapcat`.\n\n  Takes a sequence `xs` and mapping function `f` and returns a sequence of\n  sequences that, if concatenated together, would be identical to\n\n  ```clojure\n  (map f xs)\n  ```\n\n  Where any `x` such that `(splice? x)` returns true would have its sequential\n  value `(f x)` spliced into the result.\n\n  For example:\n\n  ```clojure\n  (let [f (fn [x] (if (odd? x)  [x x x] x))]\n    (splice-reduce odd? f (range 5)))\n\n  ;;=> [[0] [1 1 1] [2] [3 3 3] [4]]\n  ```",(cljs.core.truth_(pattern.syntax.splice_reduce)?pattern.syntax.splice_reduce.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("restricted?"),new cljs.core.Var(function(){return pattern.syntax.restricted_QMARK_;},new cljs.core.Symbol("pattern.syntax","restricted?","pattern.syntax/restricted?",-1409351148,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"restricted?","restricted?",645416471,null),"pattern/syntax.cljc",18,1,36,36,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a binding pattern with restriction predicates,\n  false otherwise.",(cljs.core.truth_(pattern.syntax.restricted_QMARK_)?pattern.syntax.restricted_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unquote-splice?"),new cljs.core.Var(function(){return pattern.syntax.unquote_splice_QMARK_;},new cljs.core.Symbol("pattern.syntax","unquote-splice?","pattern.syntax/unquote-splice?",-608271272,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"unquote-splice?","unquote-splice?",1580318811,null),"pattern/syntax.cljc",22,1,140,140,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a sequence form that should be spliced directly\n  into the returned pattern, false otherwise.",(cljs.core.truth_(pattern.syntax.unquote_splice_QMARK_)?pattern.syntax.unquote_splice_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("binding?"),new cljs.core.Var(function(){return pattern.syntax.binding_QMARK_;},new cljs.core.Symbol("pattern.syntax","binding?","pattern.syntax/binding?",-1436452676,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"binding?","binding?",568605883,null),"pattern/syntax.cljc",15,1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Returns true if `pattern` is a binding variable reference, false otherwise.\n\n  A binding variable is either:\n\n  - A symbol starting with a single `?` character\n  - A sequence of the form `(? <binding> ...)`.",(cljs.core.truth_(pattern.syntax.binding_QMARK_)?pattern.syntax.binding_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("variable-name"),new cljs.core.Var(function(){return pattern.syntax.variable_name;},new cljs.core.Symbol("pattern.syntax","variable-name","pattern.syntax/variable-name",230807160,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.syntax","pattern.syntax",-257096948,null),new cljs.core.Symbol(null,"variable-name","variable-name",-2125665669,null),"pattern/syntax.cljc",20,1,91,91,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Given a variable or segment binding form, returns the binding variable.\n\n  NOTE that [[variable-name]] will not guard against incorrect inputs.",(cljs.core.truth_(pattern.syntax.variable_name)?pattern.syntax.variable_name.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("argument-types"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.argument_types;},new cljs.core.Symbol("sicmutils.calculus.indexed","argument-types","sicmutils.calculus.indexed/argument-types",55070440,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"argument-types","argument-types",-1135318142,null),"sicmutils/calculus/indexed.cljc",21,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Given an operator or function `f`, returns its registered vector of argument\n  types, or `[]` if none exist.\n\n  argument types are, for example,\n\n  ```clojure\n  [::ff/oneform-field ::vf/vector-field ::vf/vector-field]\n  ```\n\n  for a `Christoffel-2`, which takes one oneform field and two vector fields.",(cljs.core.truth_(sicmutils.calculus.indexed.argument_types)?sicmutils.calculus.indexed.argument_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("has-index-types?"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.has_index_types_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.indexed","has-index-types?","sicmutils.calculus.indexed/has-index-types?",679283626,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"has-index-types?","has-index-types?",1299273540,null),"sicmutils/calculus/indexed.cljc",32,1,88,88,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if `f` has any index types registered, false otherwise.",(cljs.core.truth_(sicmutils.calculus.indexed.has_index_types_QMARK_)?sicmutils.calculus.indexed.has_index_types_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->typed"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.structure__GT_typed;},new cljs.core.Symbol("sicmutils.calculus.indexed","structure->typed","sicmutils.calculus.indexed/structure->typed",-897498942,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"structure->typed","structure->typed",-1854577176,null),"sicmutils/calculus/indexed.cljc",23,1,310,310,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coeff-functions","coeff-functions",825348842,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.structure__GT_typed)?sicmutils.calculus.indexed.structure__GT_typed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("index-types"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.index_types;},new cljs.core.Symbol("sicmutils.calculus.indexed","index-types","sicmutils.calculus.indexed/index-types",1759799103,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"index-types","index-types",-1276115991,null),"sicmutils/calculus/indexed.cljc",18,1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Given an operator or function `f`, returns its registered vector of index\n  types, or `[]` if none exist.\n\n  index types are, for example,\n\n  ```clojure\n  ['up 'down 'down]\n  ```\n\n  for a `Christoffel-2`, which takes one oneform field and two vector fields.",(cljs.core.truth_(sicmutils.calculus.indexed.index_types)?sicmutils.calculus.indexed.index_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typed->structure"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.typed__GT_structure;},new cljs.core.Symbol("sicmutils.calculus.indexed","typed->structure","sicmutils.calculus.indexed/typed->structure",-657567498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"typed->structure","typed->structure",1731883948,null),"sicmutils/calculus/indexed.cljc",23,1,290,290,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"T","T",1815772404,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.typed__GT_structure)?sicmutils.calculus.indexed.typed__GT_structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typed->indexed"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.typed__GT_indexed;},new cljs.core.Symbol("sicmutils.calculus.indexed","typed->indexed","sicmutils.calculus.indexed/typed->indexed",521650075,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"typed->indexed","typed->indexed",-1302095155,null),"sicmutils/calculus/indexed.cljc",21,1,134,134,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.typed__GT_indexed)?sicmutils.calculus.indexed.typed__GT_indexed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-argument-types"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.with_argument_types;},new cljs.core.Symbol("sicmutils.calculus.indexed","with-argument-types","sicmutils.calculus.indexed/with-argument-types",-819263196,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"with-argument-types","with-argument-types",1782525454,null),"sicmutils/calculus/indexed.cljc",26,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"types","types",-2064405130,null)], null)),"Given some operator or function `f`, returns a copy of `f` with the supplied\n  argument types `types` registered in its metadata (if a function) or\n  context (if an operator).\n\n  Retrieve these types with [[argument-types]].",(cljs.core.truth_(sicmutils.calculus.indexed.with_argument_types)?sicmutils.calculus.indexed.with_argument_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("indexed->typed"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.indexed__GT_typed;},new cljs.core.Symbol("sicmutils.calculus.indexed","indexed->typed","sicmutils.calculus.indexed/indexed->typed",1198404740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"indexed->typed","indexed->typed",-495593490,null),"sicmutils/calculus/indexed.cljc",21,1,206,206,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"indexed","indexed",2031290151,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.indexed__GT_typed)?sicmutils.calculus.indexed.indexed__GT_typed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contract"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.contract;},new cljs.core.Symbol("sicmutils.calculus.indexed","contract","sicmutils.calculus.indexed/contract",877953962,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"contract","contract",-1856283024,null),"sicmutils/calculus/indexed.cljc",17,3,266,266,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"T","T",1815772404,null),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"d","d",-682293345,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.contract)?sicmutils.calculus.indexed.contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("has-argument-types?"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.has_argument_types_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.indexed","has-argument-types?","sicmutils.calculus.indexed/has-argument-types?",1187555995,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"has-argument-types?","has-argument-types?",501012401,null),"sicmutils/calculus/indexed.cljc",35,1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if `f` has any argument types registered, false otherwise.",(cljs.core.truth_(sicmutils.calculus.indexed.has_argument_types_QMARK_)?sicmutils.calculus.indexed.has_argument_types_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("outer-product"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.outer_product;},new cljs.core.Symbol("sicmutils.calculus.indexed","outer-product","sicmutils.calculus.indexed/outer-product",-264237438,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"outer-product","outer-product",491531252,null),"sicmutils/calculus/indexed.cljc",20,1,236,236,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"T1","T1",-1863234891,null),new cljs.core.Symbol(null,"T2","T2",-986451912,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.indexed.outer_product)?sicmutils.calculus.indexed.outer_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-index-types"),new cljs.core.Var(function(){return sicmutils.calculus.indexed.with_index_types;},new cljs.core.Symbol("sicmutils.calculus.indexed","with-index-types","sicmutils.calculus.indexed/with-index-types",1841157816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.indexed","sicmutils.calculus.indexed",634755411,null),new cljs.core.Symbol(null,"with-index-types","with-index-types",-2000554538,null),"sicmutils/calculus/indexed.cljc",23,1,94,94,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"types","types",-2064405130,null)], null)),"Given some operator or function `f`, returns a copy of `f` with the supplied\n  index types `types` registered in its metadata (if a function) or\n  context (if an operator).\n\n  Retrieve these types with [[index-types]].",(cljs.core.truth_(sicmutils.calculus.indexed.with_index_types)?sicmutils.calculus.indexed.with_index_types.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("initializer"),new cljs.core.Var(function(){return sicmutils.expression.analyze.initializer;},new cljs.core.Symbol("sicmutils.expression.analyze","initializer","sicmutils.expression.analyze/initializer",-872479952,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"initializer","initializer",-427835229,null),"sicmutils/expression/analyze.cljc",18,1,313,313,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null)], null)),"Given an `analyzer` instance created with [[make-analyzer]], returns a function\n  of no arguments that, when called, will reset the analyzer's internal caches\n  of symbol => subexpression and subexpression => symbol.",(cljs.core.truth_(sicmutils.expression.analyze.initializer)?sicmutils.expression.analyze.initializer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ICanonicalize"),new cljs.core.Var(function(){return sicmutils.expression.analyze.ICanonicalize;},new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"ICanonicalize","ICanonicalize",-1572005940,null),"sicmutils/expression/analyze.cljc",27,1,104,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.with_meta(new cljs.core.Symbol(null,"expression->","expression->",-916231213,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Invokes `continue` with two arguments:\n\n  - A version of `x` converted to the canonical form represented by `analyzer`\n  - A (sorted by `compare-fn`) sequence of variables found in `x`.\n\n  `compare-fn` is used to sort variables. Defaults\n  to [[clojure.core/compare]]."], null)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.Symbol(null,"compare-fn","compare-fn",233034889,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"->expression","->expression",-1295460418,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a canonical form `b` back to S-expression form.\n\n    Each [[ICanonicalize]] instance uses `variables` in different ways. The\n    `variables` sequence is typically obtained from the continuation invoked\n    by [[expression->]], so these functions are complementary."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"variables","variables",-1090754955,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"known-operation?","known-operation?",-1185030050,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the symbolic operation `x` is considered fundamental by\n    `analyzer`, false otherwise."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null)], null)], null),104,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"expression->","expression->",1738204556),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"expression->","expression->",-916231213,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.Symbol(null,"compare-fn","compare-fn",233034889,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Invokes `continue` with two arguments:\n\n  - A version of `x` converted to the canonical form represented by `analyzer`\n  - A (sorted by `compare-fn`) sequence of variables found in `x`.\n\n  `compare-fn` is used to sort variables. Defaults\n  to [[clojure.core/compare]]."], null),new cljs.core.Keyword(null,"->expression","->expression",1358975351),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"->expression","->expression",-1295460418,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"variables","variables",-1090754955,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Convert a canonical form `b` back to S-expression form.\n\n    Each [[ICanonicalize]] instance uses `variables` in different ways. The\n    `variables` sequence is typically obtained from the continuation invoked\n    by [[expression->]], so these functions are complementary."], null),new cljs.core.Keyword(null,"known-operation?","known-operation?",1469405719),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"known-operation?","known-operation?",-1185030050,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the symbolic operation `x` is considered fundamental by\n    `analyzer`, false otherwise."], null)], null),cljs.core.List.EMPTY,"[[ICanonicalize]] captures the methods exposed by a SICMUtils analyzer backend.",cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.expression.analyze.ICanonicalize)?sicmutils.expression.analyze.ICanonicalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->"),new cljs.core.Var(function(){return sicmutils.expression.analyze.expression__GT_;},new cljs.core.Symbol("sicmutils.expression.analyze","expression->","sicmutils.expression.analyze/expression->",653006432,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"expression->","expression->",-916231213,null),"sicmutils/expression/analyze.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.Symbol(null,"compare-fn","compare-fn",233034889,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.Symbol(null,"compare-fn","compare-fn",233034889,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,104,106,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.Symbol(null,"compare-fn","compare-fn",233034889,null)], null)),"Invokes `continue` with two arguments:\n\n  - A version of `x` converted to the canonical form represented by `analyzer`\n  - A (sorted by `compare-fn`) sequence of variables found in `x`.\n\n  `compare-fn` is used to sort variables. Defaults\n  to [[clojure.core/compare]].",(cljs.core.truth_(sicmutils.expression.analyze.expression__GT_)?sicmutils.expression.analyze.expression__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression-analyzer"),new cljs.core.Var(function(){return sicmutils.expression.analyze.expression_analyzer;},new cljs.core.Symbol("sicmutils.expression.analyze","expression-analyzer","sicmutils.expression.analyze/expression-analyzer",838313656,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"expression-analyzer","expression-analyzer",1165025557,null),"sicmutils/expression/analyze.cljc",26,1,320,320,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null)], null)),"Given an `analyzer` instance created with [[make-analyzer]], returns a function\n  that will take a symbolic expression, and return a simplified expression with\n  any subexpression NOT supported by the analyzer backend replaced by a\n  generated symbol.\n\n  Any replaced subexpression will map to the SAME symbol over repeated\n  invocations, unless you call the resetting function generated by passing\n  `analyzer` to [[initializer]].\n\n  For example:\n\n  ```clojure\n  (let [a  (poly-analyzer)\n        ea (expression-analyzer a)]\n    (ea '(+ x x x (sin x) (sin x))))\n  ;;=> (+ (* 3 x) (* 2 -s-0000000000000000))\n  ```",(cljs.core.truth_(sicmutils.expression.analyze.expression_analyzer)?sicmutils.expression.analyze.expression_analyzer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-analyzer"),new cljs.core.Var(function(){return sicmutils.expression.analyze.make_analyzer;},new cljs.core.Symbol("sicmutils.expression.analyze","make-analyzer","sicmutils.expression.analyze/make-analyzer",1330342920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"make-analyzer","make-analyzer",1003266453,null),"sicmutils/expression/analyze.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null),new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null),new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,128,128,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"backend","backend",793042403,null),new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null)], null)),"Make-analyzer takes an analyzer `backend` (which implements [[ICanonicalize]])\n  and returns a dictionary with the apparatus necessary to prepare expressions\n  for analysis by replacing subexpressions formed from operations unknown to the\n  analyzer with generated symbols, and backsubstituting after analysis is\n  complete.\n\n  For example, in the case of polynomial canonical form, we would replace a\n  subexpression like `(sin x)` with a gensym, before entry, since the `sin`\n  operation is not available to the polynomial canonicalizer, and restore it\n  afterwards.",(cljs.core.truth_(sicmutils.expression.analyze.make_analyzer)?sicmutils.expression.analyze.make_analyzer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*inhibit-expt-simplify*"),new cljs.core.Var(function(){return sicmutils.expression.analyze._STAR_inhibit_expt_simplify_STAR_;},new cljs.core.Symbol("sicmutils.expression.analyze","*inhibit-expt-simplify*","sicmutils.expression.analyze/*inhibit-expt-simplify*",-267083732,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"*inhibit-expt-simplify*","*inhibit-expt-simplify*",-2053640743,null),"sicmutils/expression/analyze.cljc",26,1,true,52,57,cljs.core.List.EMPTY,"Exponential expressions with non-integer exponents must become\n       kernels, because they cannot become polynomial exponentials.\n\n       To disable this guard, bind this variable to `false`.",(cljs.core.truth_(sicmutils.expression.analyze._STAR_inhibit_expt_simplify_STAR_)?sicmutils.expression.analyze._STAR_inhibit_expt_simplify_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("default-simplifier"),new cljs.core.Var(function(){return sicmutils.expression.analyze.default_simplifier;},new cljs.core.Symbol("sicmutils.expression.analyze","default-simplifier","sicmutils.expression.analyze/default-simplifier",1666785001,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"default-simplifier","default-simplifier",2144884890,null),"sicmutils/expression/analyze.cljc",25,1,269,269,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null)], null)),"Given an `analyzer` instance created with [[make-analyzer]], returns a\n  simplifier (a function of S-expression => simplified S-expression) that will\n  reset its internal symbolic bindings at every invocation.\n\n  Equivalent to:\n\n  ```clojure\n  (let [new-analysis! (initializer analyzer)\n        simplify (expression-simplifier analyzer)]\n    (fn [expr]\n      (new-analysis!)\n      (simplify expr)))\n  ```\n\n  See [[expression-simplifier]] for a version that will assign the same symbol\n  to every expression it sees more than once.",(cljs.core.truth_(sicmutils.expression.analyze.default_simplifier)?sicmutils.expression.analyze.default_simplifier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("monotonic-symbol-generator"),new cljs.core.Var(function(){return sicmutils.expression.analyze.monotonic_symbol_generator;},new cljs.core.Symbol("sicmutils.expression.analyze","monotonic-symbol-generator","sicmutils.expression.analyze/monotonic-symbol-generator",703571505,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"monotonic-symbol-generator","monotonic-symbol-generator",1030677660,null),"sicmutils/expression/analyze.cljc",33,1,83,83,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Returns a function which generates a sequence of symbols with the given\n  `prefix` with the property that later symbols will sort after earlier symbols.\n\n  This is important for the stability of the simplifier. (If we just used\n  `clojure.core/gensym`, then a temporary symbol like `G__1000` will sort\n  earlier than `G__999`. This will trigger errors at unpredictable times,\n  whenever `clojure.core/gensym` returns two symbols that cross an\n  order-of-magnitude boundary.)",(cljs.core.truth_(sicmutils.expression.analyze.monotonic_symbol_generator)?sicmutils.expression.analyze.monotonic_symbol_generator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("known-operation?"),new cljs.core.Var(function(){return sicmutils.expression.analyze.known_operation_QMARK_;},new cljs.core.Symbol("sicmutils.expression.analyze","known-operation?","sicmutils.expression.analyze/known-operation?",-1512266253,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"known-operation?","known-operation?",-1185030050,null),"sicmutils/expression/analyze.cljc",20,1,104,124,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if the symbolic operation `x` is considered fundamental by\n    `analyzer`, false otherwise.",(cljs.core.truth_(sicmutils.expression.analyze.known_operation_QMARK_)?sicmutils.expression.analyze.known_operation_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression-simplifier"),new cljs.core.Var(function(){return sicmutils.expression.analyze.expression_simplifier;},new cljs.core.Symbol("sicmutils.expression.analyze","expression-simplifier","sicmutils.expression.analyze/expression-simplifier",-2112256211,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"expression-simplifier","expression-simplifier",-1365588802,null),"sicmutils/expression/analyze.cljc",28,1,289,289,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null)], null)),"Given an `analyzer` instance created with [[make-analyzer]], returns a\n  simplifier (a function of S-expression => simplified S-expression) that will\n  NOT reset its internal symbolic bindings across invocations.\n\n  This can be useful if the analyzer backend has any sort of memoization or\n  caching of expressions.\n\n  Pass `analyzer` to [[initializer]] to create a function that, when called,\n  will explicitly reset the internal cache:\n\n  ```clojure\n  (def reset-analyzer! (initializer analyzer))\n  (def simplify (expression-simplifier analyzer))\n\n  (reset-analyzer!)\n  (simplify <expr>)\n  ```\n\n  See [[default-simplifier]] for a version that will reset its internal variable\n  assignment cache at each invocation.",(cljs.core.truth_(sicmutils.expression.analyze.expression_simplifier)?sicmutils.expression.analyze.expression_simplifier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->expression"),new cljs.core.Var(function(){return sicmutils.expression.analyze.__GT_expression;},new cljs.core.Symbol("sicmutils.expression.analyze","->expression","sicmutils.expression.analyze/->expression",-1504999133,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"->expression","->expression",-1295460418,null),"sicmutils/expression/analyze.cljc",16,1,104,117,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"variables","variables",-1090754955,null)], null)),"Convert a canonical form `b` back to S-expression form.\n\n    Each [[ICanonicalize]] instance uses `variables` in different ways. The\n    `variables` sequence is typically obtained from the continuation invoked\n    by [[expression->]], so these functions are complementary.",(cljs.core.truth_(sicmutils.expression.analyze.__GT_expression)?sicmutils.expression.analyze.__GT_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("auxiliary-variable-fetcher"),new cljs.core.Var(function(){return sicmutils.expression.analyze.auxiliary_variable_fetcher;},new cljs.core.Symbol("sicmutils.expression.analyze","auxiliary-variable-fetcher","sicmutils.expression.analyze/auxiliary-variable-fetcher",1893000290,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.analyze","sicmutils.expression.analyze",-1505713037,null),new cljs.core.Symbol(null,"auxiliary-variable-fetcher","auxiliary-variable-fetcher",1143678719,null),"sicmutils/expression/analyze.cljc",33,1,341,341,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null)], null)),"Given an `analyzer` instance created with [[make-analyzer]], returns a function\n  of no arguments that, when called, will return the analyzer's current map of\n  generated symbol => subexpression.\n\n  Call the no-argument function returned by passing `analyzer`\n  to [[initializer]] to reset the table.\n\n  For example:\n\n  ```clojure\n  (def a (poly-analyzer))\n  (def ea (expression-analyzer a))\n\n  (def get-tables (auxiliary-variable-fetcher a))\n  (def reset-tables! (initializer a))\n\n  (ea '(+ x x x (sin x) (sin x)))\n  ;;=> (+ (* 3 x) (* 2 -s-0000000000000000))\n\n  (get-tables)\n  ;;=> {'-s-0000000000000000 '(sin x)}\n\n  (reset-tables!)\n  (get-tables)\n  ;;=> {}\n  ```",(cljs.core.truth_(sicmutils.expression.analyze.auxiliary_variable_fetcher)?sicmutils.expression.analyze.auxiliary_variable_fetcher.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq-print"),new cljs.core.Var(function(){return sicmutils.util.stream.seq_print;},new cljs.core.Symbol("sicmutils.util.stream","seq-print","sicmutils.util.stream/seq-print",1400833751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"seq-print","seq-print",-2118969658,null),"sicmutils/util/stream.cljc",16,1,10,10,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Realizes, simplifies and prints `n` elements from the supplied sequence `xs`.",(cljs.core.truth_(sicmutils.util.stream.seq_print)?sicmutils.util.stream.seq_print.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pprint"),new cljs.core.Var(function(){return sicmutils.util.stream.pprint;},new cljs.core.Symbol("sicmutils.util.stream","pprint","sicmutils.util.stream/pprint",2069845585,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"pprint","pprint",-1434237374,null),"sicmutils/util/stream.cljc",13,1,16,16,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Realizes, simplifies and pretty-prints `n` elements from the supplied sequence\n  `xs`.",(cljs.core.truth_(sicmutils.util.stream.pprint)?sicmutils.util.stream.pprint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("powers"),new cljs.core.Var(function(){return sicmutils.util.stream.powers;},new cljs.core.Symbol("sicmutils.util.stream","powers","sicmutils.util.stream/powers",-1555862194,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"powers","powers",311385535,null),"sicmutils/util/stream.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,24,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns an infinite sequence of `x * n^i`, starting with `i == 0`. `x` defaults\n  to 1.",(cljs.core.truth_(sicmutils.util.stream.powers)?sicmutils.util.stream.powers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zeno"),new cljs.core.Var(function(){return sicmutils.util.stream.zeno;},new cljs.core.Symbol("sicmutils.util.stream","zeno","sicmutils.util.stream/zeno",-1153976501,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"zeno","zeno",141272922,null),"sicmutils/util/stream.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns an infinite sequence of `x / n^i`, starting with `i == 0`. `x` defaults\n  to 1.",(cljs.core.truth_(sicmutils.util.stream.zeno)?sicmutils.util.stream.zeno.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector:generate"),new cljs.core.Var(function(){return sicmutils.util.stream.vector_COLON_generate;},new cljs.core.Symbol("sicmutils.util.stream","vector:generate","sicmutils.util.stream/vector:generate",-47081643,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"vector:generate","vector:generate",1316333380,null),"sicmutils/util/stream.cljc",22,1,36,36,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Generates a new vector of length `n` by applying the function `f` to integers\n  in the range $[0,n)$.",(cljs.core.truth_(sicmutils.util.stream.vector_COLON_generate)?sicmutils.util.stream.vector_COLON_generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("separatev"),new cljs.core.Var(function(){return sicmutils.util.stream.separatev;},new cljs.core.Symbol("sicmutils.util.stream","separatev","sicmutils.util.stream/separatev",-317269856,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"separatev","separatev",-1127561069,null),"sicmutils/util/stream.cljc",16,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"coll","coll",-1006698606,null)], null)),"Returns a pair of vectors:\n\n  - the first contains the items in coll for which (pred item) returns true\n  - the second contains the items for which (pred item) returns false\n\n  pred must be free of side-effects.",(cljs.core.truth_(sicmutils.util.stream.separatev)?sicmutils.util.stream.separatev.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("close-enuf?"),new cljs.core.Var(function(){return sicmutils.util.stream.close_enuf_QMARK_;},new cljs.core.Symbol("sicmutils.util.stream","close-enuf?","sicmutils.util.stream/close-enuf?",-2056900634,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"close-enuf?","close-enuf?",-677240843,null),"sicmutils/util/stream.cljc",27,1,67,67,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null)], null)),"relative closeness, transitioning to absolute closeness when we get\n  significantly smaller than 1.",(cljs.core.truth_(sicmutils.util.stream.close_enuf_QMARK_)?sicmutils.util.stream.close_enuf_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq-limit"),new cljs.core.Var(function(){return sicmutils.util.stream.seq_limit;},new cljs.core.Symbol("sicmutils.util.stream","seq-limit","sicmutils.util.stream/seq-limit",-1384760120,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.stream","sicmutils.util.stream",1986590812,null),new cljs.core.Symbol(null,"seq-limit","seq-limit",474615035,null),"sicmutils/util/stream.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),new cljs.core.Symbol(null,"maxterms","maxterms",-1702656166,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),(2),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol("v","sqrt-machine-epsilon","v/sqrt-machine-epsilon",-243376686,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null),cljs.core.list(new cljs.core.Symbol(null,"close-enuf?","close-enuf?",-677240843,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null))], null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),new cljs.core.Symbol(null,"maxterms","maxterms",-1702656166,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),(2),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol("v","sqrt-machine-epsilon","v/sqrt-machine-epsilon",-243376686,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null),cljs.core.list(new cljs.core.Symbol(null,"close-enuf?","close-enuf?",-677240843,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null))], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),new cljs.core.Symbol(null,"maxterms","maxterms",-1702656166,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"minterms","minterms",372879357,null),(2),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null),new cljs.core.Symbol("v","sqrt-machine-epsilon","v/sqrt-machine-epsilon",-243376686,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null),cljs.core.list(new cljs.core.Symbol(null,"close-enuf?","close-enuf?",-677240843,null),new cljs.core.Symbol(null,"tolerance","tolerance",2047343345,null))], null)], null)], null)),"Accepts a sequence, iterates through it and returns a dictionary of this form:\n\n  {:converged? <boolean>\n   :terms-checked <int>\n   :result <sequence element>}\n\n  `:converged?` is true if the sequence reached convergence by passing the tests\n  described below, false otherwise.\n\n  `:terms-checked` will be equal to the number of items examined in the\n  sequence.\n\n  `:result` holds the final item examined in the sequence.\n\n  ## Optional keyword args:\n\n  `:convergence-fn` user-supplied function of two successive elements in `xs`\n  that stops iteration and signals convergence if it returns true.\n\n  `:minterms` `seq-limit` won't return until at least this many terms from the\n  sequence have been processed.\n\n  `:maxterms` `seq-limit` will return (with `:converged? false`) after\n  processing this many elements without passing any other checks.\n\n  `:tolerance` A combination of relative and absolute tolerance. defaults to\n  `sqrt(machine epsilon)`.",(cljs.core.truth_(sicmutils.util.stream.seq_limit)?sicmutils.util.stream.seq_limit.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","gcd","sicmutils.polynomial.gcd/gcd",209126586,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null),"sicmutils/polynomial/gcd.cljc",6,1,481,491,cljs.core.List.EMPTY,"Returns the greatest common divisor of `u` and `v`, calculated by a\n  multivariate extension to the [Euclidean algorithm for multivariate\n  polynomials](https://en.wikipedia.org/wiki/Polynomial_greatest_common_divisor#Euclidean_algorithm).\n\n  `u` and `v` can be polynomials or non-polynomials coefficients.",(cljs.core.truth_(sicmutils.polynomial.gcd.gcd)?sicmutils.polynomial.gcd.gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-limited-time"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.with_limited_time;},new cljs.core.Symbol("sicmutils.polynomial.gcd","with-limited-time","sicmutils.polynomial.gcd/with-limited-time",-844629697,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"with-limited-time","with-limited-time",-417273310,null),"sicmutils/polynomial/gcd.cljc",24,1,112,112,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"timeout","timeout",1321906209,null),new cljs.core.Symbol(null,"thunk","thunk",74255732,null)], null)),"Given an explicit `timeout` and a no-argument function `thunk`, calls `thunk`\n  in a context where [[*poly-gcd-time-limit*]] is dynamically bound to\n  `timeout`. Calling [[time-expired?]] or [[maybe-bail-out!]] inside `thunk`\n  will signal failure appropriately if `thunk` has taken longer than `timeout`.",(cljs.core.truth_(sicmutils.polynomial.gcd.with_limited_time)?sicmutils.polynomial.gcd.with_limited_time.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*clock*"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd._STAR_clock_STAR_;},new cljs.core.Symbol("sicmutils.polynomial.gcd","*clock*","sicmutils.polynomial.gcd/*clock*",447176494,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"*clock*","*clock*",876103715,null),"sicmutils/polynomial/gcd.cljc",23,1,true,34,34,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.polynomial.gcd._STAR_clock_STAR_)?sicmutils.polynomial.gcd._STAR_clock_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("univariate-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.univariate_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","univariate-gcd","sicmutils.polynomial.gcd/univariate-gcd",-1182929915,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"univariate-gcd","univariate-gcd",-754810104,null),"sicmutils/polynomial/gcd.cljc",21,1,401,401,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given two univariate polynomials `u` and `v`, returns the greatest common\n  divisor of `u` and `v` calculated using Knuth's algorithm 4.6.1E.",(cljs.core.truth_(sicmutils.polynomial.gcd.univariate_gcd)?sicmutils.polynomial.gcd.univariate_gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd-stats"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.gcd_stats;},new cljs.core.Symbol("sicmutils.polynomial.gcd","gcd-stats","sicmutils.polynomial.gcd/gcd-stats",-1347097945,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"gcd-stats","gcd-stats",-1203765846,null),"sicmutils/polynomial/gcd.cljc",16,1,64,64,cljs.core.list(cljs.core.PersistentVector.EMPTY),"When called, logs statistics about the GCD memoization cache, and the number of\n  times the system has encountered monomial or other trivial GCDs. ",(cljs.core.truth_(sicmutils.polynomial.gcd.gcd_stats)?sicmutils.polynomial.gcd.gcd_stats.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("full-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.full_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","full-gcd","sicmutils.polynomial.gcd/full-gcd",-1905361951,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"full-gcd","full-gcd",-1142748438,null),"sicmutils/polynomial/gcd.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"level","level",-1363938217,null),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"level","level",-1363938217,null),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,417,417,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"level","level",-1363938217,null),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given two polynomials `u` and `v` (potentially multivariate) with\n  non-polynomial coefficients, returns the greatest common divisor of `u` and\n  `v` calculated using a multivariate extension of Knuth's algorithm 4.6.1E.\n\n  Optionally takes a debugging `level`. To see the debugging logs generated over\n  the course of the run, set [[*poly-gcd-debug*]] to true.\n\n  NOTE: [[full-gcd]] Internally checks that it hasn't run out a stopwatch set\n  with [[with-limited-time]]; you can wrap a call to [[full-gcd]] in this\n  function to limit its execution time.\n\n  For example, this form will throw a TimeoutException after 1 second:\n\n  ```clojure\n  (with-limited-time [1 :seconds]\n    (fn [] (full-gcd u v)))\n  ```",(cljs.core.truth_(sicmutils.polynomial.gcd.full_gcd)?sicmutils.polynomial.gcd.full_gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*poly-gcd-time-limit*"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd._STAR_poly_gcd_time_limit_STAR_;},new cljs.core.Symbol("sicmutils.polynomial.gcd","*poly-gcd-time-limit*","sicmutils.polynomial.gcd/*poly-gcd-time-limit*",-744422844,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"*poly-gcd-time-limit*","*poly-gcd-time-limit*",-131795633,null),"sicmutils/polynomial/gcd.cljc",24,1,true,26,31,cljs.core.List.EMPTY,"Pair of the form [number\n  Keyword], where keyword is one of the supported units from\n  [[sicmutils.util.stopwatch]]. If Euclidean GCD takes longer than this time\n  limit, the system will bail out by throwing an exception.",(cljs.core.truth_(sicmutils.polynomial.gcd._STAR_poly_gcd_time_limit_STAR_)?sicmutils.polynomial.gcd._STAR_poly_gcd_time_limit_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("classical-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.classical_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","classical-gcd","sicmutils.polynomial.gcd/classical-gcd",-2082184563,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"classical-gcd","classical-gcd",-1805676176,null),"sicmutils/polynomial/gcd.cljc",20,1,457,457,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Higher-level wrapper around [[full-gcd]] that:\n\n  - optimizes the case where `u` and `v` share no variables\n  - sorts the variables in `u` and `v` in order of increasing degree\n\n  before attempting [[full-gcd]]. See [[full-gcd]] for a full description.",(cljs.core.truth_(sicmutils.polynomial.gcd.classical_gcd)?sicmutils.polynomial.gcd.classical_gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd-Dp"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.gcd_Dp;},new cljs.core.Symbol("sicmutils.polynomial.gcd","gcd-Dp","sicmutils.polynomial.gcd/gcd-Dp",-1579033859,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"gcd-Dp","gcd-Dp",-1099248144,null),"sicmutils/polynomial/gcd.cljc",13,1,510,510,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the greatest common divisor of all partial derivatives of the\n  polynomial `p` using binary applications of the [[gcd]] algorithm between each\n  partial derivative.\n\n  This algorithm assumes that all coefficients are integral, and halts when it\n  encounters a result that responds true to [[sicmutils.value/one?]].\n\n  If a non-[[p/Polynomial]] is supplied, returns 1.",(cljs.core.truth_(sicmutils.polynomial.gcd.gcd_Dp)?sicmutils.polynomial.gcd.gcd_Dp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trivial-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.trivial_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","trivial-gcd","sicmutils.polynomial.gcd/trivial-gcd",-1036779863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"trivial-gcd","trivial-gcd",-1471361134,null),"sicmutils/polynomial/gcd.cljc",18,1,327,327,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given two polynomials `u` and `v`, attempts to return the greatest common\n  divisor of `u` and `v` by testing for trivial cases. If no trivial case\n  applies, returns `nil`.",(cljs.core.truth_(sicmutils.polynomial.gcd.trivial_gcd)?sicmutils.polynomial.gcd.trivial_gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->content+primitive"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.__GT_content_PLUS_primitive;},new cljs.core.Symbol("sicmutils.polynomial.gcd","->content+primitive","sicmutils.polynomial.gcd/->content+primitive",-1744284642,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"->content+primitive","->content+primitive",-2054346989,null),"sicmutils/polynomial/gcd.cljc",26,1,213,213,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null)], null)),"Given some polynomial `p`, and a multi-arity `gcd` function for its\n  coefficients, returns a pair of the polynomial's content and primitive.\n\n  The 'content' of a polynomial is the greatest common divisor of its\n  coefficients. The 'primitive part' of a polynomial is the quotient of the\n  polynomial by its content.\n\n  See Wikipedia's ['Primitive Part and\n  Content'](https://en.wikipedia.org/wiki/Primitive_part_and_content) page for\n  more details. ",(cljs.core.truth_(sicmutils.polynomial.gcd.__GT_content_PLUS_primitive)?sicmutils.polynomial.gcd.__GT_content_PLUS_primitive.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*poly-gcd-debug*"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd._STAR_poly_gcd_debug_STAR_;},new cljs.core.Symbol("sicmutils.polynomial.gcd","*poly-gcd-debug*","sicmutils.polynomial.gcd/*poly-gcd-debug*",-901899520,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"*poly-gcd-debug*","*poly-gcd-debug*",-407696875,null),"sicmutils/polynomial/gcd.cljc",19,1,true,43,47,cljs.core.List.EMPTY,"When true, multivariate GCD will log each `u` and `v` input and the\n  result of each step, along with the recursive level of the logged GCD\n  computation. False by default.",(cljs.core.truth_(sicmutils.polynomial.gcd._STAR_poly_gcd_debug_STAR_)?sicmutils.polynomial.gcd._STAR_poly_gcd_debug_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*poly-gcd-cache-enable*"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd._STAR_poly_gcd_cache_enable_STAR_;},new cljs.core.Symbol("sicmutils.polynomial.gcd","*poly-gcd-cache-enable*","sicmutils.polynomial.gcd/*poly-gcd-cache-enable*",-1593268541,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"*poly-gcd-cache-enable*","*poly-gcd-cache-enable*",-1934378538,null),"sicmutils/polynomial/gcd.cljc",26,1,true,36,40,cljs.core.List.EMPTY,"When true, multivariate GCD will cache each recursive step in the\n  Euclidean GCD algorithm, and attempt to shortcut out on a successful cache\n  hit. True by default.",(cljs.core.truth_(sicmutils.polynomial.gcd._STAR_poly_gcd_cache_enable_STAR_)?sicmutils.polynomial.gcd._STAR_poly_gcd_cache_enable_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("monomial-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.monomial_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","monomial-gcd","sicmutils.polynomial.gcd/monomial-gcd",-1146077739,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"monomial-gcd","monomial-gcd",1446972632,null),"sicmutils/polynomial/gcd.cljc",28,1,348,348,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the greatest common divisor of some monomial `m` and a polynomial `p`.\n  The GCD of these two inputs is a monomial (or bare coefficient) with:\n\n  - coefficient portion equal to the GCD of the coefficient of both sides\n  - power product equal to the GCD of the power products of all `p` terms with\n    the power product of `m`",(cljs.core.truth_(sicmutils.polynomial.gcd.monomial_gcd)?sicmutils.polynomial.gcd.monomial_gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("time-expired?"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.time_expired_QMARK_;},new cljs.core.Symbol("sicmutils.polynomial.gcd","time-expired?","sicmutils.polynomial.gcd/time-expired?",1180326894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"time-expired?","time-expired?",1826704121,null),"sicmutils/polynomial/gcd.cljc",20,1,93,93,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns true if the [[*clock*]] dynamic variable contains a Stopwatch with an\n  elapsed time that's passed the limit allowed by the\n  dynamic [[*poly-gcd-time-limit*]], false otherwise.",(cljs.core.truth_(sicmutils.polynomial.gcd.time_expired_QMARK_)?sicmutils.polynomial.gcd.time_expired_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lcm"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.lcm;},new cljs.core.Symbol("sicmutils.polynomial.gcd","lcm","sicmutils.polynomial.gcd/lcm",-2146795895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"lcm","lcm",-1699262564,null),"sicmutils/polynomial/gcd.cljc",10,1,494,494,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns the least common multiple of (possibly polynomial) arguments `u` and\n  `v`, using [[gcd]] to calculate the gcd portion of\n\n  ```\n  (/ (g/abs (* u v))\n     (gcd u v))\n  ```",(cljs.core.truth_(sicmutils.polynomial.gcd.lcm)?sicmutils.polynomial.gcd.lcm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("primitive-gcd"),new cljs.core.Var(function(){return sicmutils.polynomial.gcd.primitive_gcd;},new cljs.core.Symbol("sicmutils.polynomial.gcd","primitive-gcd","sicmutils.polynomial.gcd/primitive-gcd",36130635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.gcd","sicmutils.polynomial.gcd",503584012,null),new cljs.core.Symbol(null,"primitive-gcd","primitive-gcd",414949470,null),"sicmutils/polynomial/gcd.cljc",28,1,305,305,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.polynomial.gcd.primitive_gcd)?sicmutils.polynomial.gcd.primitive_gcd.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Cartan"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.make_Cartan;},new cljs.core.Symbol("sicmutils.calculus.covariant","make-Cartan","sicmutils.calculus.covariant/make-Cartan",-1839677226,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"make-Cartan","make-Cartan",-461348288,null),"sicmutils/calculus/covariant.cljc",18,1,126,126,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"forms","forms",-608443419,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.make_Cartan)?sicmutils.calculus.covariant.make_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->Cartan"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Christoffel__GT_Cartan;},new cljs.core.Symbol("sicmutils.calculus.covariant","Christoffel->Cartan","sicmutils.calculus.covariant/Christoffel->Cartan",-1957144271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Christoffel->Cartan","Christoffel->Cartan",-24052573,null),"sicmutils/calculus/covariant.cljc",26,1,166,166,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Christoffel","Christoffel",-408898581,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Christoffel__GT_Cartan)?sicmutils.calculus.covariant.Christoffel__GT_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan-transform"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan_transform;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan-transform","sicmutils.calculus.covariant/Cartan-transform",629947958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan-transform","Cartan-transform",397778116,null),"sicmutils/calculus/covariant.cljc",23,1,186,186,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cartan","cartan",1692318531,null),new cljs.core.Symbol(null,"basis-prime","basis-prime",1652370905,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan_transform)?sicmutils.calculus.covariant.Cartan_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->symbols"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Christoffel__GT_symbols;},new cljs.core.Symbol("sicmutils.calculus.covariant","Christoffel->symbols","sicmutils.calculus.covariant/Christoffel->symbols",-91941673,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Christoffel->symbols","Christoffel->symbols",-397563291,null),"sicmutils/calculus/covariant.cljc",27,1,152,152,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Christoffel__GT_symbols)?sicmutils.calculus.covariant.Christoffel__GT_symbols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symmetrize-Cartan"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.symmetrize_Cartan;},new cljs.core.Symbol("sicmutils.calculus.covariant","symmetrize-Cartan","sicmutils.calculus.covariant/symmetrize-Cartan",1422503092,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"symmetrize-Cartan","symmetrize-Cartan",1090588998,null),"sicmutils/calculus/covariant.cljc",24,1,181,181,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.symmetrize_Cartan)?sicmutils.calculus.covariant.symmetrize_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan?"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan?","sicmutils.calculus.covariant/Cartan?",326320120,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan?","Cartan?",1638685802,null),"sicmutils/calculus/covariant.cljc",14,1,132,132,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan_QMARK_)?sicmutils.calculus.covariant.Cartan_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("geodesic-equation"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.geodesic_equation;},new cljs.core.Symbol("sicmutils.calculus.covariant","geodesic-equation","sicmutils.calculus.covariant/geodesic-equation",-562529224,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"geodesic-equation","geodesic-equation",-872309078,null),"sicmutils/calculus/covariant.cljc",24,1,387,387,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"source-coordsys","source-coordsys",1671917495,null),new cljs.core.Symbol(null,"target-coordsys","target-coordsys",-1758011714,null),new cljs.core.Symbol(null,"Cartan-on-target","Cartan-on-target",1638424227,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.geodesic_equation)?sicmutils.calculus.covariant.geodesic_equation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parallel-transport-equation"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.parallel_transport_equation;},new cljs.core.Symbol("sicmutils.calculus.covariant","parallel-transport-equation","sicmutils.calculus.covariant/parallel-transport-equation",478252571,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"parallel-transport-equation","parallel-transport-equation",-355914355,null),"sicmutils/calculus/covariant.cljc",34,1,400,400,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"source-coordsys","source-coordsys",1671917495,null),new cljs.core.Symbol(null,"target-coordsys","target-coordsys",-1758011714,null),new cljs.core.Symbol(null,"Cartan-on-target","Cartan-on-target",1638424227,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.parallel_transport_equation)?sicmutils.calculus.covariant.parallel_transport_equation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->basis"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan__GT_basis;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan->basis","sicmutils.calculus.covariant/Cartan->basis",-1962694371,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan->basis","Cartan->basis",-113570833,null),"sicmutils/calculus/covariant.cljc",20,1,138,138,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan__GT_basis)?sicmutils.calculus.covariant.Cartan__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("covariant-differential"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.covariant_differential;},new cljs.core.Symbol("sicmutils.calculus.covariant","covariant-differential","sicmutils.calculus.covariant/covariant-differential",-1330616537,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"covariant-differential","covariant-differential",-1899447919,null),"sicmutils/calculus/covariant.cljc",29,1,382,382,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.covariant_differential)?sicmutils.calculus.covariant.covariant_differential.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-D"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Lie_D;},new cljs.core.Symbol("sicmutils.calculus.covariant","Lie-D","sicmutils.calculus.covariant/Lie-D",1174136741,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Lie-D","Lie-D",1269840403,null),"sicmutils/calculus/covariant.cljc",12,1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"R","R",703869004,null)], null)),"Takes a system derivative `R` and returns a operator that takes a function `F`\n  of coordinatized state and performs the operation described below, from\n  ODE.scm in scmutils:\n\n  Let `(sigma t)` be the state of a system at time `t`. Let the\n  (first-order) system of differential equations governing the evolution of\n  this state be:\n\n  ```clojure\n  ((D sigma) t) = (R (sigma t))\n  ```\n\n  ```clojure\n  (D sigma) = (compose R sigma)\n  ```\n\n  i.e. `R` is a system derivative.\n\n  Let `F` be any function of state, then a differential equation for the\n  evolution of `F`, as it is dragged along the integral curve sigma is:\n\n  ```clojure\n  (D (compose F sigma)) = (* (compose (D F) sigma) (D sigma))\n  = (compose (* (D F) R) sigma)\n  ```\n\n  Let's call this operation `Lie-D` (the Lie derivative for coordinates).",(cljs.core.truth_(sicmutils.calculus.covariant.Lie_D)?sicmutils.calculus.covariant.Lie_D.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Christoffel"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.make_Christoffel;},new cljs.core.Symbol("sicmutils.calculus.covariant","make-Christoffel","sicmutils.calculus.covariant/make-Christoffel",1707493861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"make-Christoffel","make-Christoffel",1480535635,null),"sicmutils/calculus/covariant.cljc",23,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symbols","symbols",1641743270,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"Returns a data structure representing [Christoffel symbols of the second\n  kind](https://en.wikipedia.org/wiki/Christoffel_symbols#Christoffel_symbols_of_the_second_kind_(symmetric_definition)).",(cljs.core.truth_(sicmutils.calculus.covariant.make_Christoffel)?sicmutils.calculus.covariant.make_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->basis"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Christoffel__GT_basis;},new cljs.core.Symbol("sicmutils.calculus.covariant","Christoffel->basis","sicmutils.calculus.covariant/Christoffel->basis",578841402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Christoffel->basis","Christoffel->basis",817417876,null),"sicmutils/calculus/covariant.cljc",25,1,155,155,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Christoffel__GT_basis)?sicmutils.calculus.covariant.Christoffel__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symmetrize-Christoffel"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.symmetrize_Christoffel;},new cljs.core.Symbol("sicmutils.calculus.covariant","symmetrize-Christoffel","sicmutils.calculus.covariant/symmetrize-Christoffel",-1081521081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"symmetrize-Christoffel","symmetrize-Christoffel",-1388254507,null),"sicmutils/calculus/covariant.cljc",29,1,174,174,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G","G",901987130,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.symmetrize_Christoffel)?sicmutils.calculus.covariant.symmetrize_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel?"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Christoffel_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.covariant","Christoffel?","sicmutils.calculus.covariant/Christoffel?",672192192,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Christoffel?","Christoffel?",977826934,null),"sicmutils/calculus/covariant.cljc",19,1,149,149,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Christoffel_QMARK_)?sicmutils.calculus.covariant.Christoffel_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("covariant-derivative"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.covariant_derivative;},new cljs.core.Symbol("sicmutils.calculus.covariant","covariant-derivative","sicmutils.calculus.covariant/covariant-derivative",872290052,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"covariant-derivative","covariant-derivative",95007126,null),"sicmutils/calculus/covariant.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null),new cljs.core.Symbol(null,"map","map",-1282745308,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null),new cljs.core.Symbol(null,"map","map",-1282745308,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,372,372,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null),new cljs.core.Symbol(null,"map","map",-1282745308,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.covariant_derivative)?sicmutils.calculus.covariant.covariant_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->Cartan-over-map"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan__GT_Cartan_over_map;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan->Cartan-over-map","sicmutils.calculus.covariant/Cartan->Cartan-over-map",-1993059072,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan->Cartan-over-map","Cartan->Cartan-over-map",-1216564554,null),"sicmutils/calculus/covariant.cljc",30,1,204,204,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null),new cljs.core.Symbol(null,"map","map",-1282745308,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan__GT_Cartan_over_map)?sicmutils.calculus.covariant.Cartan__GT_Cartan_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->Christoffel"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan__GT_Christoffel;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan->Christoffel","sicmutils.calculus.covariant/Cartan->Christoffel",-167535805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan->Christoffel","Cartan->Christoffel",-466028067,null),"sicmutils/calculus/covariant.cljc",26,1,158,158,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Cartan","Cartan",-1256546560,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan__GT_Christoffel)?sicmutils.calculus.covariant.Cartan__GT_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("interior-product"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.interior_product;},new cljs.core.Symbol("sicmutils.calculus.covariant","interior-product","sicmutils.calculus.covariant/interior-product",1994341903,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"interior-product","interior-product",1619499933,null),"sicmutils/calculus/covariant.cljc",23,1,109,109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"X","X",-948439456,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.interior_product)?sicmutils.calculus.covariant.interior_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->forms"),new cljs.core.Var(function(){return sicmutils.calculus.covariant.Cartan__GT_forms;},new cljs.core.Symbol("sicmutils.calculus.covariant","Cartan->forms","sicmutils.calculus.covariant/Cartan->forms",1600383085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.covariant","sicmutils.calculus.covariant",1970535898,null),new cljs.core.Symbol(null,"Cartan->forms","Cartan->forms",1353403135,null),"sicmutils/calculus/covariant.cljc",20,1,135,135,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.covariant.Cartan__GT_forms)?sicmutils.calculus.covariant.Cartan__GT_forms.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("forward-difference"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.forward_difference;},new cljs.core.Symbol("sicmutils.numerical.derivative","forward-difference","sicmutils.numerical.derivative/forward-difference",-771836116,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"forward-difference","forward-difference",2142904194,null),"sicmutils/numerical/derivative.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),"Returns a single-variable function of a step size `h` that calculates the\n  forward-difference estimate of the the first derivative of `f` at point `x`:\n\n  ```\n  f'(x) = [f(x + h) - f(x)] / h\n  ```\n\n  Optionally accepts a third argument `fx == (f x)`, in case you've already\n  calculated it elsewhere and would like to save a function evaluation.",(cljs.core.truth_(sicmutils.numerical.derivative.forward_difference)?sicmutils.numerical.derivative.forward_difference.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D-numeric"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.D_numeric;},new cljs.core.Symbol("sicmutils.numerical.derivative","D-numeric","sicmutils.numerical.derivative/D-numeric",-1129887993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"D-numeric","D-numeric",509796205,null),"sicmutils/numerical/derivative.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,498,498,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Takes a function `f: R => R` (function of a single real variable), and returns\n  a new function of `x` that approximates the derivative $Df(x)$ (or $D^2f(x)$\n  if you pass `:method :central-d2`).\n\n  Returns the estimated value of the derivative at `x`. If you pass `:info?\n  true`, the fn returns a dictionary of the results of `us/seq-limit`:\n\n  ```clojure\n  {:converged? <boolean>\n   :terms-checked <int>\n   :result <derivative estimate>}\n  ```\n\n  Make sure to visit [[sicmutils.calculus.derivative/D]] if you want symbolic or\n  automatic differentiation.\n\n  ### Roundoff Estimate\n\n  The returned function will attempt to estimate how many times it can halve the\n  step size used to estimate the derivative before roundoff error swamps the\n  calculation, and force the function to return (with `:converged? false`, if\n  you pass `:info?`)\n\n  ### Optional Arguments\n\n  `D-numeric` takes optional args as its second param. Any of these can be\n  overridden by passing a second argument to the function returned by\n  `D-numeric`; helpful for setting defaults and then overriding them later.\n\n  The returned function passes through these and any other options to\n  `us/seq-limit`, where they control the sequence of richardson\n  extrapolation-accelerated estimates.\n\n  Options:\n\n  - `:method`: one of `:central`, `:central-d2`, `:forward` or `:backward`.\n  `:central-d2` forces a second derivative estimate; the other methods configure\n  a first derivative estimator.\n\n  - `:info?` if false (default), returns the estimated value of `x`. If true,\n  returns a dictionary with more information (see `D-numeric`'s docstring for\n  more info.)\n\n  - `:initial-h`: the initial `h` to use for derivative estimates before $h \to\n  0$. Defaults to `0.1 * abs(x)`.\n\n  - `:tolerance`: see `us/stream-limit` for a discussion of how this value\n  handles relative vs absolute tolerance. $\\sqrt(\\epsilon)$ by default, where\n  $\\epsilon$ = machine tolerance.\n\n  - `:maxterms`: the maximum number of terms to consider when hunting for a\n  derivative estimate. This defaults to an estimate generated internally,\n  designed to prevent roundoff error from swamping the result. If you want to\n  disable this feature, set `:maxterms` to something moderately large, like\n  `:maxterms 100`. But do so carefully! See the surrounding namespace for a\n  larger discussion.",(cljs.core.truth_(sicmutils.numerical.derivative.D_numeric)?sicmutils.numerical.derivative.D_numeric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("central-difference-d2"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.central_difference_d2;},new cljs.core.Symbol("sicmutils.numerical.derivative","central-difference-d2","sicmutils.numerical.derivative/central-difference-d2",-20569702,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"central-difference-d2","central-difference-d2",403360240,null),"sicmutils/numerical/derivative.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,197,197,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),"Returns a single-variable function of a step size `h` that calculates the\n  central-difference estimate of the second derivative of `f` at point `x`:\n\n  f''(x) = [f(x + h) - 2f(x) + f(x - h)] / h^2\n\n  Optionally accepts a third argument `fx == (f x)`, in case you've already\n  calculated it elsewhere and would like to save a function evaluation.",(cljs.core.truth_(sicmutils.numerical.derivative.central_difference_d2)?sicmutils.numerical.derivative.central_difference_d2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("central-difference"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.central_difference;},new cljs.core.Symbol("sicmutils.numerical.derivative","central-difference","sicmutils.numerical.derivative/central-difference",-136655749,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"central-difference","central-difference",1344231377,null),"sicmutils/numerical/derivative.cljc",25,1,164,164,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a single-variable function of a step size `h` that calculates the\n  central-difference estimate of the first derivative of `f` at point `x`:\n\n  ```\n  f'(x) = [f(x + h) - f(x - h)] / 2h\n  ```",(cljs.core.truth_(sicmutils.numerical.derivative.central_difference)?sicmutils.numerical.derivative.central_difference.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("backward-difference"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.backward_difference;},new cljs.core.Symbol("sicmutils.numerical.derivative","backward-difference","sicmutils.numerical.derivative/backward-difference",1886854621,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"backward-difference","backward-difference",-700667341,null),"sicmutils/numerical/derivative.cljc",26,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,121,121,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)),"Returns a single-variable function of a step size `h` that calculates the\n  backward-difference estimate of the first derivative of `f` at point `x`:\n\n  ```\n  f'(x) = [f(x) - f(x - h)] / h\n  ```\n\n  Optionally accepts a third argument `fx == (f x)`, in case you've already\n  calculated it elsewhere and would like to save a function evaluation.",(cljs.core.truth_(sicmutils.numerical.derivative.backward_difference)?sicmutils.numerical.derivative.backward_difference.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("valid-methods"),new cljs.core.Var(function(){return sicmutils.numerical.derivative.valid_methods;},new cljs.core.Symbol("sicmutils.numerical.derivative","valid-methods","sicmutils.numerical.derivative/valid-methods",-658784839,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.derivative","sicmutils.numerical.derivative",1340297652,null),new cljs.core.Symbol(null,"valid-methods","valid-methods",2063472095,null),"sicmutils/numerical/derivative.cljc",19,1,429,429,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numerical.derivative.valid_methods)?sicmutils.numerical.derivative.valid_methods.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pass"),new cljs.core.Var(function(){return pattern.rule.pass;},new cljs.core.Symbol("pattern.rule","pass","pattern.rule/pass",-872010202,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"pass","pass",-1080275776,null),"pattern/rule.cljc",11,1,203,203,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),"Rule that always succeeds by returning its input data unchanged.",(cljs.core.truth_(pattern.rule.pass)?pattern.rule.pass.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("choice"),new cljs.core.Var(function(){return pattern.rule.choice;},new cljs.core.Symbol("pattern.rule","choice","pattern.rule/choice",291025978,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"choice","choice",265360800,null),"pattern/rule.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,251,251,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),"Accepts any number of `rules` and returns a new `rule` that attempts to apply\n  each rule in `rules` to its input data. Returns the first non-failing rule's\n  result, or `failure` if no rule succeeds.\n\n  NOTE: The zero-arity `(choice)` returns [[fail]], a rule that fails for any\n  input.\n\n  See [[choice*]] for an identical function that accepts an explicit sequence.",(cljs.core.truth_(pattern.rule.choice)?pattern.rule.choice.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("while"),new cljs.core.Var(function(){return pattern.rule.while$;},new cljs.core.Symbol("pattern.rule","while","pattern.rule/while",1790602119,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"while","while",-1691317983,null),"pattern/rule.cljc",12,1,353,353,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns a new rule which repeatedly applies `r` as long as `f` continues to\n  return `true` between the input and output of the rule `r` applied iteratively\n  to the input `data`.\n\n  See [[until]] for a similar function that treats its predicate differently.",(cljs.core.truth_(pattern.rule.while$)?pattern.rule.while$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ruleset*"),new cljs.core.Var(function(){return pattern.rule.ruleset_STAR_;},new cljs.core.Symbol("pattern.rule","ruleset*","pattern.rule/ruleset*",222178895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"ruleset*","ruleset*",2076462881,null),"pattern/rule.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"rules","rules",-1455523403,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,520,520,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Given some number of `rules`, returns a new rule that will act like [[choice]]\n  and attempt to apply each rule to the input data, returning the first match.\n\n  If all `rules` fail, the returned rule will return its input `data`.\n\n  See [[ruleset]] for a macro that allows inline rule definition.",(cljs.core.truth_(pattern.rule.ruleset_STAR_)?pattern.rule.ruleset_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rule*"),new cljs.core.Var(function(){return pattern.rule.rule_STAR_;},new cljs.core.Symbol("pattern.rule","rule*","pattern.rule/rule*",-985638908,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"rule*","rule*",-1143211614,null),"pattern/rule.cljc",12,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"match","match",-1434376219,null),new cljs.core.Symbol(null,"handler","handler",1444934915,null)], null)),"Functional version of [[rule]]. See [[rule]] for documentation.",(cljs.core.truth_(pattern.rule.rule_STAR_)?pattern.rule.rule_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("branch"),new cljs.core.Var(function(){return pattern.rule.branch;},new cljs.core.Symbol("pattern.rule","branch","pattern.rule/branch",1859375656,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"branch","branch",1565897602,null),"pattern/rule.cljc",13,1,225,225,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"succeed-r","succeed-r",2090866930,null),new cljs.core.Symbol(null,"fail-r","fail-r",-488260749,null)], null)),"Takes a rule `r` and returns a new rule that calls `r` with its input.\n\n  The returned rule returns:\n\n  - `(succeed-r (r data)) if `(r data)` is successful,\n  - `(fail-r data) otherwise.",(cljs.core.truth_(pattern.rule.branch)?pattern.rule.branch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("attempt"),new cljs.core.Var(function(){return pattern.rule.attempt;},new cljs.core.Symbol("pattern.rule","attempt","pattern.rule/attempt",-748900855,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"attempt","attempt",-1042674461,null),"pattern/rule.cljc",14,1,317,317,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Takes a rule `r` and returns a new rule that return either `(r data)` if `r` is\n  successful, or its original input on failure.\n\n  NOTE that the returned rule will never fail! This makes it inappropriate to\n  use with [[choice]], for example, if you expect any rule supplied after this\n  one to ever be matched. [[attempt]] rules are great choices for the final rule\n  passed to [[choice]], however.",(cljs.core.truth_(pattern.rule.attempt)?pattern.rule.attempt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("predicate"),new cljs.core.Var(function(){return pattern.rule.predicate;},new cljs.core.Symbol("pattern.rule","predicate","pattern.rule/predicate",-362549363,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"predicate","predicate",-101970333,null),"pattern/rule.cljc",16,1,211,211,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns a rule that will pass its input data on unchanged if `(f data)` returns\n  true and fail otherwise.",(cljs.core.truth_(pattern.rule.predicate)?pattern.rule.predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fixed-point"),new cljs.core.Var(function(){return pattern.rule.fixed_point;},new cljs.core.Symbol("pattern.rule","fixed-point","pattern.rule/fixed-point",-27258419,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"fixed-point","fixed-point",266974883,null),"pattern/rule.cljc",18,1,383,383,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Takes a rule `r` and returns a new rule that applies `r` to `data` iteratively\n  until (= input (r input)).",(cljs.core.truth_(pattern.rule.fixed_point)?pattern.rule.fixed_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("failed?"),new cljs.core.Var(function(){return pattern.rule.failed_QMARK_;},new cljs.core.Symbol("pattern.rule","failed?","pattern.rule/failed?",-1837477875,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"pattern/rule.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),51,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"failed?","failed?",-2114702621,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(pattern.rule.failed_QMARK_)?pattern.rule.failed_QMARK_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("guard"),new cljs.core.Var(function(){return pattern.rule.guard;},new cljs.core.Symbol("pattern.rule","guard","pattern.rule/guard",993736990,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"guard","guard",767383716,null),"pattern/rule.cljc",12,1,331,331,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Takes a predicate function `f` and a rule `r`, and returns a new rule that will\n  return `(r data)` if `(f data)` is true, fail otherwise.",(cljs.core.truth_(pattern.rule.guard)?pattern.rule.guard.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("term-rewriting"),new cljs.core.Var(function(){return pattern.rule.term_rewriting;},new cljs.core.Symbol("pattern.rule","term-rewriting","pattern.rule/term-rewriting",-1649548094,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"term-rewriting","term-rewriting",-1893529052,null),"pattern/rule.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"rules","rules",-1455523403,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,560,560,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Alias for [[rule-simplifier]].",(cljs.core.truth_(pattern.rule.term_rewriting)?pattern.rule.term_rewriting.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("!=>"),new cljs.core.Var(function(){return pattern.rule._BANG__EQ__GT_;},new cljs.core.Symbol("pattern.rule","!=>","pattern.rule/!=>",233317462,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"!=>","!=>",527534792,null),"pattern/rule.cljc",6,1,46,47,cljs.core.List.EMPTY,"Predicate that fails for all inputs.",(cljs.core.truth_(pattern.rule._BANG__EQ__GT_)?pattern.rule._BANG__EQ__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("as-attempt"),new cljs.core.Var(function(){return pattern.rule.as_attempt;},new cljs.core.Symbol("pattern.rule","as-attempt","pattern.rule/as-attempt",1115668311,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"as-attempt","as-attempt",-1258923575,null),"pattern/rule.cljc",17,1,312,312,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Marks the supplied rule as an 'attempt' rule that won't fail.",(cljs.core.truth_(pattern.rule.as_attempt)?pattern.rule.as_attempt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("n-times"),new cljs.core.Var(function(){return pattern.rule.n_times;},new cljs.core.Symbol("pattern.rule","n-times","pattern.rule/n-times",-1830586973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"n-times","n-times",-1654271223,null),"pattern/rule.cljc",14,1,291,291,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns a rule that applies the rule `r` iteratively `n` times to the input\n  data, failing if any application fails.\n\n  For example, these forms are equivalent, except that the [[n-times]] version\n  will fail immediately if any application fails vs passing on its failure:\n\n  ```clojure\n  (n-times 3 my-rule)\n  (fn [data]\n    (my-rule (my-rule (my-rule data))))\n  ```",(cljs.core.truth_(pattern.rule.n_times)?pattern.rule.n_times.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("choice*"),new cljs.core.Var(function(){return pattern.rule.choice_STAR_;},new cljs.core.Symbol("pattern.rule","choice*","pattern.rule/choice*",-351674527,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"choice*","choice*",-40649013,null),"pattern/rule.cljc",14,1,239,239,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Identical to the multi-arity [[choice]], but accepts an explicit sequence.",(cljs.core.truth_(pattern.rule.choice_STAR_)?pattern.rule.choice_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("attempt?"),new cljs.core.Var(function(){return pattern.rule.attempt_QMARK_;},new cljs.core.Symbol("pattern.rule","attempt?","pattern.rule/attempt?",-1983569020,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"attempt?","attempt?",-1773174546,null),"pattern/rule.cljc",15,1,306,306,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns `true` if `r` was marked as an 'attempt' rule, ie, a rule that will\n  never fail, but return its input on a failed match.",(cljs.core.truth_(pattern.rule.attempt_QMARK_)?pattern.rule.attempt_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("return"),new cljs.core.Var(function(){return pattern.rule.return$;},new cljs.core.Symbol("pattern.rule","return","pattern.rule/return",-410985336,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"return","return",-250970578,null),"pattern/rule.cljc",13,1,220,220,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a rule that matches any input and always returns `x`.",(cljs.core.truth_(pattern.rule.return$)?pattern.rule.return$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("failure"),new cljs.core.Var(function(){return pattern.rule.failure;},new cljs.core.Symbol("pattern.rule","failure","pattern.rule/failure",-46215128,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"pattern/rule.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),50,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"failure","failure",-1934019890,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(pattern.rule.failure)?pattern.rule.failure.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("top-down"),new cljs.core.Var(function(){return pattern.rule.top_down;},new cljs.core.Symbol("pattern.rule","top-down","pattern.rule/top-down",-1194478463,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"top-down","top-down",-1237101201,null),"pattern/rule.cljc",15,1,460,460,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"the-rule","the-rule",58807572,null)], null)),"Given some rule `the-rule`, returns a new rule that accepts potentially nested\n  `data` and applies `the-rule` to all subexpressions on the way down AND back\n  up a traversal. This is a sort of hybrid of breadth-first, depth-first.\n\n  The transformation is applied a single time to all subexpressions.\n  See [[iterated-top-down]] for a version that will iterate to convergence.",(cljs.core.truth_(pattern.rule.top_down)?pattern.rule.top_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace"),new cljs.core.Var(function(){return pattern.rule.trace;},new cljs.core.Symbol("pattern.rule","trace","pattern.rule/trace",843415262,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"trace","trace",557784112,null),"pattern/rule.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,389,389,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Takes a rule `r` and returns a new version of `r` tagged with a unique `id`.\n  The returned rule calls the side-effecting `f` with\n\n  ```clojure\n  {:id id, :in data}\n  ```\n\n  Before calling `r` with `data`, and calls `f` with\n\n  ```clojure\n  {:id id, :out (r data)}\n  ```\n\n  when the rule returns.",(cljs.core.truth_(pattern.rule.trace)?pattern.rule.trace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pipe"),new cljs.core.Var(function(){return pattern.rule.pipe;},new cljs.core.Symbol("pattern.rule","pipe","pattern.rule/pipe",2069799006,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"pipe","pipe",1977107376,null),"pattern/rule.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,277,277,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),"Accepts any number of `rules` and returns a new `rule` that attempts to pipe\n  its input `data` through each rule in `rules`. Only succeeds if every rule\n  succeeds on the previous rule's successful output.\n\n  NOTE: The zero-arity `(pipe)` returns [[pass]], a rule that succeeds for any\n  input by returning the input unchanged.\n\n  See [[pipe*]] for an identical function that accepts an explicit sequence.",(cljs.core.truth_(pattern.rule.pipe)?pattern.rule.pipe.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bottom-up"),new cljs.core.Var(function(){return pattern.rule.bottom_up;},new cljs.core.Symbol("pattern.rule","bottom-up","pattern.rule/bottom-up",1940089526,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"bottom-up","bottom-up",-2111255600,null),"pattern/rule.cljc",16,1,447,447,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"the-rule","the-rule",58807572,null)], null)),"Given some rule `the-rule`, returns a new rule that accepts potentially nested\n  `data` and applies `the-rule` to all subexpressions in depth-first order, from\n  the leaves on up.\n\n  The transformation is applied a single time to all subexpressions.\n  See [[iterated-bottom-up]] for a version that will iterate to convergence.",(cljs.core.truth_(pattern.rule.bottom_up)?pattern.rule.bottom_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("until"),new cljs.core.Var(function(){return pattern.rule.until;},new cljs.core.Symbol("pattern.rule","until","pattern.rule/until",208513271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"until","until",451365137,null),"pattern/rule.cljc",12,1,369,369,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns a new rule which repeatedly applies `r` until `f` returns `true`\n  between the input and output of the rule `r` applied iteratively to the input\n  `data`, signaling completion.\n\n  See [[while]] for a similar function that treats its predicate differently.",(cljs.core.truth_(pattern.rule.until)?pattern.rule.until.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated"),new cljs.core.Var(function(){return pattern.rule.iterated;},new cljs.core.Symbol("pattern.rule","iterated","pattern.rule/iterated",-1231550901,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"iterated","iterated",1073898993,null),"pattern/rule.cljc",15,1,337,337,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Similar to `clojure.core/iterate` for rule application.\n\n  Takes a rule `r` and returns a new rule that will return the last non-failing\n  result of the sequence `[data (r data) (r (r data)) ...]`\n\n  This might be `data` itself if `r` fails on first application. This means that\n  the returned rule will never fail.",(cljs.core.truth_(pattern.rule.iterated)?pattern.rule.iterated.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pattern*"),new cljs.core.Var(function(){return pattern.rule.pattern_STAR_;},new cljs.core.Symbol("pattern.rule","pattern*","pattern.rule/pattern*",-1644401963,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"pattern*","pattern*",-294286221,null),"pattern/rule.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,60,60,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"form","form",16469056,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Builds the pattern portion of a rule from the supplied pattern form or matcher\n  combinator and optional predicate `pred`.\n\n  See [[pattern.syntax]] for the allowed syntax pattern, or [[pattern.match]]\n  for details on matcher combinators.\n\n  See [[match/matcher]] for more detailed documentation.",(cljs.core.truth_(pattern.rule.pattern_STAR_)?pattern.rule.pattern_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rule-simplifier"),new cljs.core.Var(function(){return pattern.rule.rule_simplifier;},new cljs.core.Symbol("pattern.rule","rule-simplifier","pattern.rule/rule-simplifier",-1047673265,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"rule-simplifier","rule-simplifier",-1334565675,null),"pattern/rule.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"rules","rules",-1455523403,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,551,551,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Given some number of `rules`, returns a new rule that will attempt to apply\n  each rule to its input expression (and every subexpression of the input,\n  bottom up), iterating until no rule causes any change in any level of the\n  supplied expression.",(cljs.core.truth_(pattern.rule.rule_simplifier)?pattern.rule.rule_simplifier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated-bottom-up"),new cljs.core.Var(function(){return pattern.rule.iterated_bottom_up;},new cljs.core.Symbol("pattern.rule","iterated-bottom-up","pattern.rule/iterated-bottom-up",381414416,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"iterated-bottom-up","iterated-bottom-up",86068982,null),"pattern/rule.cljc",25,1,473,473,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"the-rule","the-rule",58807572,null)], null)),"Version of [[bottom-up]] that iterates on each subexpression to convergence\n  before each subexpression returns. Any change in a subexpression triggers a\n  new iterated-bottom-up replacement of that subexpression.\n\n  The returned rule keeps an internal memoization cache and will return\n  immediately for subexpressions it's seen before.",(cljs.core.truth_(pattern.rule.iterated_bottom_up)?pattern.rule.iterated_bottom_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("=>"),new cljs.core.Var(function(){return pattern.rule._EQ__GT_;},new cljs.core.Symbol("pattern.rule","=>","pattern.rule/=>",-1120133155,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"=>","=>",-813269641,null),"pattern/rule.cljc",5,1,43,44,cljs.core.List.EMPTY,"Convenient predicate that always passes.",(cljs.core.truth_(pattern.rule._EQ__GT_)?pattern.rule._EQ__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-rule"),new cljs.core.Var(function(){return pattern.rule.compile_rule;},new cljs.core.Symbol("pattern.rule","compile-rule","pattern.rule/compile-rule",-2102205155,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"compile-rule","compile-rule",-1875343689,null),"pattern/rule.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"consequent-fn","consequent-fn",381611694,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"skeleton","skeleton",-126504426,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"consequent-fn","consequent-fn",381611694,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"skeleton","skeleton",-126504426,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,155,155,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"consequent-fn","consequent-fn",381611694,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"skeleton","skeleton",-126504426,null)], null)),"Returns compiled, macro-ready input for [[rule*]] based on the contract\n  described by [[rule]].",(cljs.core.truth_(pattern.rule.compile_rule)?pattern.rule.compile_rule.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pipe*"),new cljs.core.Var(function(){return pattern.rule.pipe_STAR_;},new cljs.core.Symbol("pattern.rule","pipe*","pattern.rule/pipe*",-1761750682,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"pipe*","pipe*",-1519243240,null),"pattern/rule.cljc",12,1,265,265,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rules","rules",-1455523403,null)], null)),"Identical to the multi-arity [[pipe]], but accepts an explicit sequence.",(cljs.core.truth_(pattern.rule.pipe_STAR_)?pattern.rule.pipe_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fail"),new cljs.core.Var(function(){return pattern.rule.fail;},new cljs.core.Symbol("pattern.rule","fail","pattern.rule/fail",-151915533,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"fail","fail",-948220839,null),"pattern/rule.cljc",11,1,207,207,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Rule that always fails with an explicit `failure`, no matter the input.",(cljs.core.truth_(pattern.rule.fail)?pattern.rule.fail.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated-top-down"),new cljs.core.Var(function(){return pattern.rule.iterated_top_down;},new cljs.core.Symbol("pattern.rule","iterated-top-down","pattern.rule/iterated-top-down",-1029559366,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Symbol(null,"iterated-top-down","iterated-top-down",-601519396,null),"pattern/rule.cljc",24,1,492,492,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"the-rule","the-rule",58807572,null)], null)),"Version of [[top-down]] that iterates on each subexpression to convergence\n  before each subexpression returns. Any change in a subexpression triggers a\n  new iterated-top-down replacement of that subexpression.\n\n  The returned rule keeps an internal memoization cache and will return\n  immediately for subexpressions it's seen before.",(cljs.core.truth_(pattern.rule.iterated_top_down)?pattern.rule.iterated_top_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("succeed"),new cljs.core.Var(function(){return pattern.rule.succeed;},new cljs.core.Symbol("pattern.rule","succeed","pattern.rule/succeed",317085557,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"pattern/rule.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"pattern.rule","pattern.rule",-918844174,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),49,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"succeed","succeed",207632095,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(pattern.rule.succeed)?pattern.rule.succeed.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bare-v"),new cljs.core.Var(function(){return sicmutils.rational_function.bare_v;},new cljs.core.Symbol("sicmutils.rational-function","bare-v","sicmutils.rational-function/bare-v",-2147381938,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"bare-v","bare-v",-138929696,null),"sicmutils/rational_function.cljc",22,1,215,215,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"rf","rf",-651557526,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"RationalFunction","RationalFunction",1491561426,null)], null))], null)),"Given a [[RationalFunction]] instance `rf`, returns the `v` (denominator) field.",(cljs.core.truth_(sicmutils.rational_function.bare_v)?sicmutils.rational_function.bare_v.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.rational_function.arity;},new cljs.core.Symbol("sicmutils.rational-function","arity","sicmutils.rational-function/arity",1109022778,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/rational_function.cljc",12,1,220,220,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the declared arity of the supplied [[RationalFunction]]\n  or [[polynomial/Polynomial]], or `0` for arguments of other types.",(cljs.core.truth_(sicmutils.rational_function.arity)?sicmutils.rational_function.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivatives"),new cljs.core.Var(function(){return sicmutils.rational_function.partial_derivatives;},new cljs.core.Symbol("sicmutils.rational-function","partial-derivatives","sicmutils.rational-function/partial-derivatives",1047124175,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"partial-derivatives","partial-derivatives",1773356385,null),"sicmutils/rational_function.cljc",26,1,671,671,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the sequence of partial derivatives\n  of [[RationalFunction]] (or [[polynomial/Polynomial]]) `r` with respect to\n  each indeterminate. The returned sequence has length equal to the [[arity]] of\n  `r`.\n\n  For non-polynomial or rational function inputs, returns an empty sequence.",(cljs.core.truth_(sicmutils.rational_function.partial_derivatives)?sicmutils.rational_function.partial_derivatives.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd"),new cljs.core.Var(function(){return sicmutils.rational_function.gcd;},new cljs.core.Symbol("sicmutils.rational-function","gcd","sicmutils.rational-function/gcd",-644447989,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null),"sicmutils/rational_function.cljc",10,1,605,605,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the greatest common divisor of rational functions `r` and `s`, with\n  appropriate handling of [[RationalFunction]], [[polynomial/Polynomial]] or\n  coefficients of neither type on either side. ",(cljs.core.truth_(sicmutils.rational_function.gcd)?sicmutils.rational_function.gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operators-known"),new cljs.core.Var(function(){return sicmutils.rational_function.operators_known;},new cljs.core.Symbol("sicmutils.rational-function","operators-known","sicmutils.rational-function/operators-known",2018504299,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"operators-known","operators-known",-1489697919,null),"sicmutils/rational_function.cljc",18,1,701,705,cljs.core.List.EMPTY,"Set of all arithmetic functions allowed\n       between [[RationalFunction]], [[polynomial/Polynomial]] and coefficient\n       instances.",(cljs.core.truth_(sicmutils.rational_function.operators_known)?sicmutils.rational_function.operators_known.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add"),new cljs.core.Var(function(){return sicmutils.rational_function.add;},new cljs.core.Symbol("sicmutils.rational-function","add","sicmutils.rational-function/add",-1503645716,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"add","add",1875819266,null),"sicmutils/rational_function.cljc",10,1,507,507,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the sum of rational functions `r` and `s`, with appropriate handling\n  of [[RationalFunction]], [[polynomial/Polynomial]] or coefficients of neither\n  type on either side.",(cljs.core.truth_(sicmutils.rational_function.add)?sicmutils.rational_function.add.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negate"),new cljs.core.Var(function(){return sicmutils.rational_function.negate;},new cljs.core.Symbol("sicmutils.rational-function","negate","sicmutils.rational-function/negate",1553681400,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"negate","negate",337772450,null),"sicmutils/rational_function.cljc",13,1,486,486,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the negation of rational function `r`, ie, a [[RationalFunction]] with\n  its numerator negated.\n\n  Acts as [[generic/negate]] for non-[[RationalFunction]] inputs.",(cljs.core.truth_(sicmutils.rational_function.negate)?sicmutils.rational_function.negate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$rational_function100686"),new cljs.core.Var(function(){return sicmutils.rational_function.t_sicmutils$rational_function100686;},new cljs.core.Symbol("sicmutils.rational-function","t_sicmutils$rational_function100686","sicmutils.rational-function/t_sicmutils$rational_function100686",204660526,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/rational_function.cljc",new cljs.core.Keyword(null,"line","line",212345235),778,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$rational_function100686","t_sicmutils$rational_function100686",-1217705084,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.rational_function.t_sicmutils$rational_function100686)?sicmutils.rational_function.t_sicmutils$rational_function100686.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bare-u"),new cljs.core.Var(function(){return sicmutils.rational_function.bare_u;},new cljs.core.Symbol("sicmutils.rational-function","bare-u","sicmutils.rational-function/bare-u",-1072339269,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"bare-u","bare-u",-1175549339,null),"sicmutils/rational_function.cljc",22,1,210,210,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rf","rf",-651557526,null)], null)),"Given a [[RationalFunction]] instance `rf`, returns the `u` (numerator) field.",(cljs.core.truth_(sicmutils.rational_function.bare_u)?sicmutils.rational_function.bare_u.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.rational_function.invert;},new cljs.core.Symbol("sicmutils.rational-function","invert","sicmutils.rational-function/invert",-451368776,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/rational_function.cljc",13,1,575,575,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Given some rational function `r`, returns the inverse of `r`, ie, a rational\n  function with numerator and denominator reversed. The returned rational\n  function guarantees a positive denominator.\n\n  Acts as [[generic/invert]] for non-[[RationalFunction]] inputs.",(cljs.core.truth_(sicmutils.rational_function.invert)?sicmutils.rational_function.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->RationalFunction"),new cljs.core.Var(function(){return sicmutils.rational_function.__GT_RationalFunction;},new cljs.core.Symbol("sicmutils.rational-function","->RationalFunction","sicmutils.rational-function/->RationalFunction",1970333789,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("sicmutils.ratio","IRational","sicmutils.ratio/IRational",324435,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"->RationalFunction","->RationalFunction",-1916100697,null),"sicmutils/rational_function.cljc",26,1,new cljs.core.Keyword(null,"positional","positional",-203580463),37,37,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.rational-function/RationalFunction.",(cljs.core.truth_(sicmutils.rational_function.__GT_RationalFunction)?sicmutils.rational_function.__GT_RationalFunction.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$rational_function100686"),new cljs.core.Var(function(){return sicmutils.rational_function.__GT_t_sicmutils$rational_function100686;},new cljs.core.Symbol("sicmutils.rational-function","->t_sicmutils$rational_function100686","sicmutils.rational-function/->t_sicmutils$rational_function100686",-1876057394,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.expression.analyze","ICanonicalize","sicmutils.expression.analyze/ICanonicalize",-1094036895,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"->t_sicmutils$rational_function100686","->t_sicmutils$rational_function100686",-616296856,null),"sicmutils/rational_function.cljc",true,3,new cljs.core.Keyword(null,"positional","positional",-203580463),778,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"meta100687","meta100687",165991391,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.rational-function/t_sicmutils$rational_function100686.",(cljs.core.truth_(sicmutils.rational_function.__GT_t_sicmutils$rational_function100686)?sicmutils.rational_function.__GT_t_sicmutils$rational_function100686.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt"),new cljs.core.Var(function(){return sicmutils.rational_function.expt;},new cljs.core.Symbol("sicmutils.rational-function","expt","sicmutils.rational-function/expt",662490831,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"expt","expt",2123850345,null),"sicmutils/rational_function.cljc",11,1,558,558,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a rational function generated by raising the input rational function\n  `r` to the (integer) power `n`.",(cljs.core.truth_(sicmutils.rational_function.expt)?sicmutils.rational_function.expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make"),new cljs.core.Var(function(){return sicmutils.rational_function.make;},new cljs.core.Symbol("sicmutils.rational-function","make","sicmutils.rational-function/make",1553271008,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"make","make",356488202,null),"sicmutils/rational_function.cljc",11,1,352,352,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given a numerator `u` and denominator `v`, attempts to form\n  a [[RationalFunction]] instance by\n\n  - cancelling out any common factors between `u` and `v`\n  - normalizing `u` and `v` such that `v` is always positive\n  - multiplying `u` and `v` through by a commo factor, such that neither term\n    contains any rational coefficients\n\n  Returns a [[RationalFunction]] instance if either `u` or `v` remains\n  a [[polynomial/Polynomial]] after this process; else, returns `(g/div u' v')`,\n  where `u'` and `v'` are the reduced numerator and denominator.",(cljs.core.truth_(sicmutils.rational_function.make)?sicmutils.rational_function.make.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negative?"),new cljs.core.Var(function(){return sicmutils.rational_function.negative_QMARK_;},new cljs.core.Symbol("sicmutils.rational-function","negative?","sicmutils.rational-function/negative?",-553034388,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"negative?","negative?",374534410,null),"sicmutils/rational_function.cljc",16,1,242,242,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns true if the numerator of `r` is [[polynomial/negative?]], false\n  otherwise.",(cljs.core.truth_(sicmutils.rational_function.negative_QMARK_)?sicmutils.rational_function.negative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-scale"),new cljs.core.Var(function(){return sicmutils.rational_function.arg_scale;},new cljs.core.Symbol("sicmutils.rational-function","arg-scale","sicmutils.rational-function/arg-scale",935792928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"arg-scale","arg-scale",-828801718,null),"sicmutils/rational_function.cljc",16,1,630,630,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),"Given some [[RationalFunction]] `r`, returns a new [[RationalFunction]]\n  generated by substituting each indeterminate `x_i` for `f_i * x_i`, where\n  `f_i` is a factor supplied in the `factors` sequence.\n\n  Given a non-[[RationalFunction]], delegates to [[polynomial/arg-scale]].",(cljs.core.truth_(sicmutils.rational_function.arg_scale)?sicmutils.rational_function.arg_scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coeff?"),new cljs.core.Var(function(){return sicmutils.rational_function.coeff_QMARK_;},new cljs.core.Symbol("sicmutils.rational-function","coeff?","sicmutils.rational-function/coeff?",-1589153804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"coeff?","coeff?",-398863446,null),"sicmutils/rational_function.cljc",13,1,198,198,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is explicitly _not_ an instance of [[RationalFunction]]\n  or [[polynomial/Polynomial]], false if it is.",(cljs.core.truth_(sicmutils.rational_function.coeff_QMARK_)?sicmutils.rational_function.coeff_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bare-arity"),new cljs.core.Var(function(){return sicmutils.rational_function.bare_arity;},new cljs.core.Symbol("sicmutils.rational-function","bare-arity","sicmutils.rational-function/bare-arity",-593097680,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"bare-arity","bare-arity",611884010,null),"sicmutils/rational_function.cljc",26,1,205,205,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rf","rf",-651557526,null)], null)),"Given a [[RationalFunction]] instance `rf`, returns the `arity` field.",(cljs.core.truth_(sicmutils.rational_function.bare_arity)?sicmutils.rational_function.bare_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("eq"),new cljs.core.Var(function(){return sicmutils.rational_function.eq;},new cljs.core.Symbol("sicmutils.rational-function","eq","sicmutils.rational-function/eq",-198131098,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"eq","eq",1021992460,null),"sicmutils/rational_function.cljc",9,1,250,250,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"RationalFunction","RationalFunction",1491561426,null)], null)),new cljs.core.Symbol(null,"that","that",828965210,null)], null)),"Returns true if the [[RationalFunction]] this is equal to `that`. If `that` is\n  a [[RationalFunction]], `this` and `that` are equal if they have equal `u` and\n  `v` and equal arity. `u` and `v` entries are compared\n  using [[sicmutils.value/=]].\n\n  If `that` is non-[[RationalFunction]], `eq` only returns true if `u` and `v`\n  respectively match the [[ratio/numerator]] and [[ratio/denominator]] of\n  `that`.",(cljs.core.truth_(sicmutils.rational_function.eq)?sicmutils.rational_function.eq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evaluate"),new cljs.core.Var(function(){return sicmutils.rational_function.evaluate;},new cljs.core.Symbol("sicmutils.rational-function","evaluate","sicmutils.rational-function/evaluate",-170191198,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"evaluate","evaluate",-1129217332,null),"sicmutils/rational_function.cljc",15,1,617,617,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given some rational function `xs` and a sequence of arguments with length >= 0\n  and < the [[arity]] of `r`, returns the result of evaluating the numerator and\n  denominator using `xs` and re-forming a rational function with the results.\n\n  Supplying fewer arguments than the arity will result in a partial evaluation.\n  Supplying too many arguments will error.",(cljs.core.truth_(sicmutils.rational_function.evaluate)?sicmutils.rational_function.evaluate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivative"),new cljs.core.Var(function(){return sicmutils.rational_function.partial_derivative;},new cljs.core.Symbol("sicmutils.rational-function","partial-derivative","sicmutils.rational-function/partial-derivative",1091147939,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"partial-derivative","partial-derivative",-1901056819,null),"sicmutils/rational_function.cljc",25,1,656,656,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Given some [[RationalFunction]] or [[polynomial/Polynomial]] `r`, returns the\n  partial derivative of `r` with respect to the `i`th indeterminate. Throws if\n  `i` is an invalid indeterminate index for `r`.\n\n  For non-polynomial or rational function inputs, returns `0`.",(cljs.core.truth_(sicmutils.rational_function.partial_derivative)?sicmutils.rational_function.partial_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-shift"),new cljs.core.Var(function(){return sicmutils.rational_function.arg_shift;},new cljs.core.Symbol("sicmutils.rational-function","arg-shift","sicmutils.rational-function/arg-shift",-1584800777,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"arg-shift","arg-shift",-382841075,null),"sicmutils/rational_function.cljc",16,1,642,642,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null)], null)),"Given some [[RationalFunction]] `r`, returns a new [[RationalFunction]]\n  generated by substituting each indeterminate `x_i` for `s_i + x_i`, where\n  `s_i` is a shift supplied in the `shifts` sequence.\n\n  Given a non-[[RationalFunction]], delegates to [[polynomial/arg-shift]].",(cljs.core.truth_(sicmutils.rational_function.arg_shift)?sicmutils.rational_function.arg_shift.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->reduced"),new cljs.core.Var(function(){return sicmutils.rational_function.__GT_reduced;},new cljs.core.Symbol("sicmutils.rational-function","->reduced","sicmutils.rational-function/->reduced",195129251,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"->reduced","->reduced",-1001923635,null),"sicmutils/rational_function.cljc",25,1,314,314,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Given a numerator `u` and denominator `v`, returns the result of:\n\n  - multiplying `u` and `v` by the least common multiple of all denominators\n    found in either `u` or `v`, so that `u` and `v` contain\n    no [[RationalFunction]]e or ratio-like coefficients\n  - normalizing the denominator `v` to be positive by negating `u`, if\n    applicable\n  - Cancelling out any common divisors between `u` and `v`\n\n  The result can be either a [[RationalFunction]], [[polynomial/Polynomial]] or\n  a `(g/div u v)`. See [[make-reduced]] for the details.",(cljs.core.truth_(sicmutils.rational_function.__GT_reduced)?sicmutils.rational_function.__GT_reduced.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sub"),new cljs.core.Var(function(){return sicmutils.rational_function.sub;},new cljs.core.Symbol("sicmutils.rational-function","sub","sicmutils.rational-function/sub",-1136198272,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),"sicmutils/rational_function.cljc",10,1,518,518,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the difference of rational functions `r` and `s`, with appropriate\n  handling of [[RationalFunction]], [[polynomial/Polynomial]] or coefficients of\n  neither type on either side.",(cljs.core.truth_(sicmutils.rational_function.sub)?sicmutils.rational_function.sub.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("RationalFunction"),new cljs.core.Var(function(){return sicmutils.rational_function.RationalFunction;},new cljs.core.Symbol("sicmutils.rational-function","RationalFunction","sicmutils.rational-function/RationalFunction",-2118213828,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/rational_function.cljc",new cljs.core.Keyword(null,"line","line",212345235),37,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"RationalFunction","RationalFunction",1491561426,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.rational_function.RationalFunction)?sicmutils.rational_function.RationalFunction.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->"),new cljs.core.Var(function(){return sicmutils.rational_function.expression__GT_;},new cljs.core.Symbol("sicmutils.rational-function","expression->","sicmutils.rational-function/expression->",302317369,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"expression->","expression->",-916231213,null),"sicmutils/rational_function.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,708,708,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null),new cljs.core.Symbol(null,"v-compare","v-compare",-1787498040,null)], null)),"Converts the supplied symbolic expression `expr` into Rational Function\n  canonical form (ie, a [[RationalFunction]] instance). `expr` should be a bare,\n  unwrapped expression built out of Clojure data structures.\n\n  Returns the result of calling continuation `cont` with\n  the [[RationalFunction]] and the list of variables corresponding to each\n  indeterminate in the [[RationalFunction]]. (`cont `defaults to `vector`).\n\n  The second optional argument `v-compare` allows you to provide a Comparator\n  between variables. Sorting indeterminates by `v-compare` will determine the\n  order of the indeterminates in the generated [[RationalFunction]]. The list of\n  variables passed to `cont` will be sorted using `v-compare`.\n\n  Absorbing an expression with [[expression->]] and emitting it again\n  with [[->expression]] will generate the canonical form of an expression, with\n  respect to the operations in the [[operators-known]] set.\n\n  This kind of simplification proceeds purely symbolically over the known\n  Rational Function operations; other operations outside the arithmetic\n  available should be factored out by an expression\n  analyzer (see [[sicmutils.expression.analyze/make-analyzer]]) before\n  calling [[expression->]].\n\n  NOTE that `cont` might receive a scalar, fraction or [[polynomial/Polynomial]]\n  instance; both are valid 'rational functions'. The latter as a rational\n  function with a denominator equal to `1`, and the former 2 result from\n  non-polynomial numerator and denominator.\n\n  NOTE See [[analyzer]] for an instance usable\n  by [[sicmutils.expression.analyze/make-analyzer]].",(cljs.core.truth_(sicmutils.rational_function.expression__GT_)?sicmutils.rational_function.expression__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rational-function?"),new cljs.core.Var(function(){return sicmutils.rational_function.rational_function_QMARK_;},new cljs.core.Symbol("sicmutils.rational-function","rational-function?","sicmutils.rational-function/rational-function?",1754379504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"rational-function?","rational-function?",-545892330,null),"sicmutils/rational_function.cljc",25,1,192,192,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns true if the supplied argument is an instance of [[RationalFunction]],\n  false otherwise.",(cljs.core.truth_(sicmutils.rational_function.rational_function_QMARK_)?sicmutils.rational_function.rational_function_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("div"),new cljs.core.Var(function(){return sicmutils.rational_function.div;},new cljs.core.Symbol("sicmutils.rational-function","div","sicmutils.rational-function/div",2037224125,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"div","div",-1597244137,null),"sicmutils/rational_function.cljc",10,1,598,598,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the quotient of rational functions `r` and `s`, with appropriate\n  handling of [[RationalFunction]], [[polynomial/Polynomial]] or coefficients of\n  neither type on either side.",(cljs.core.truth_(sicmutils.rational_function.div)?sicmutils.rational_function.div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mul"),new cljs.core.Var(function(){return sicmutils.rational_function.mul;},new cljs.core.Symbol("sicmutils.rational-function","mul","sicmutils.rational-function/mul",-2058435681,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),"sicmutils/rational_function.cljc",10,1,527,527,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the product of rational functions `r` and `s`, with appropriate\n  handling of [[RationalFunction]], [[polynomial/Polynomial]] or coefficients of\n  neither type on either side.",(cljs.core.truth_(sicmutils.rational_function.mul)?sicmutils.rational_function.mul.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("defbinary"),new cljs.core.Var(function(){return sicmutils.rational_function.defbinary;},new cljs.core.Symbol("sicmutils.rational-function","defbinary","sicmutils.rational-function/defbinary",27829296,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"defbinary","defbinary",-823045926,null),"sicmutils/rational_function.cljc",25,1,821,821,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"generic-op","generic-op",2094584705,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Installs the supplied function `f` into `generic-op` such that it will act\n  between [[RationalFunction]] instances, or allow [[polynomial/Polynomial]]\n  instances or non-[[polynomial/Polynomial]] coefficients on either side.",(cljs.core.truth_(sicmutils.rational_function.defbinary)?sicmutils.rational_function.defbinary.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abs"),new cljs.core.Var(function(){return sicmutils.rational_function.abs;},new cljs.core.Symbol("sicmutils.rational-function","abs","sicmutils.rational-function/abs",-340524832,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"abs","abs",1394505050,null),"sicmutils/rational_function.cljc",10,1,499,499,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"If the numerator of `r` is negative, returns `(negate r)`, else acts as\n  identity.",(cljs.core.truth_(sicmutils.rational_function.abs)?sicmutils.rational_function.abs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operator-table"),new cljs.core.Var(function(){return sicmutils.rational_function.operator_table;},new cljs.core.Symbol("sicmutils.rational-function","operator-table","sicmutils.rational-function/operator-table",-637029051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"operator-table","operator-table",-1566451525,null),"sicmutils/rational_function.cljc",17,1,692,696,cljs.core.List.EMPTY,"These operations are those allowed\n       between [[RationalFunction]], [[polynomial/Polynomial]] and coefficient\n       instances.",(cljs.core.truth_(sicmutils.rational_function.operator_table)?sicmutils.rational_function.operator_table.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("square"),new cljs.core.Var(function(){return sicmutils.rational_function.square;},new cljs.core.Symbol("sicmutils.rational-function","square","sicmutils.rational-function/square",1523768982,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"square","square",-1842001092,null),"sicmutils/rational_function.cljc",13,1,538,538,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the square of rational function `r`. Equivalent to `(mul r r)`.",(cljs.core.truth_(sicmutils.rational_function.square)?sicmutils.rational_function.square.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("analyzer"),new cljs.core.Var(function(){return sicmutils.rational_function.analyzer;},new cljs.core.Symbol("sicmutils.rational-function","analyzer","sicmutils.rational-function/analyzer",359263480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"analyzer","analyzer",-578676386,null),"sicmutils/rational_function.cljc",11,1,776,777,cljs.core.List.EMPTY,"Singleton [[a/ICanonicalize]] instance.",(cljs.core.truth_(sicmutils.rational_function.analyzer)?sicmutils.rational_function.analyzer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-points"),new cljs.core.Var(function(){return sicmutils.rational_function.from_points;},new cljs.core.Symbol("sicmutils.rational-function","from-points","sicmutils.rational-function/from-points",1942513252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"from-points","from-points",-882765250,null),"sicmutils/rational_function.cljc",18,1,752,752,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given a sequence of points of the form `[x, f(x)]`, returns a rational function\n  that passes through each input point.",(cljs.core.truth_(sicmutils.rational_function.from_points)?sicmutils.rational_function.from_points.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->expression"),new cljs.core.Var(function(){return sicmutils.rational_function.__GT_expression;},new cljs.core.Symbol("sicmutils.rational-function","->expression","sicmutils.rational-function/->expression",-362634280,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"->expression","->expression",-1295460418,null),"sicmutils/rational_function.cljc",19,1,759,759,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"vars","vars",-406425690,null)], null)),"Accepts a [[RationalFunction]] `r` and a sequence of symbols for each indeterminate,\n  and emits the canonical form of the symbolic expression that\n  represents [[RationalFunction]] `r`.\n\n  NOTE: this is the output stage of Rational Function canonical form\n  simplification. The input stage is handled by [[expression->]].\n\n  NOTE See [[analyzer]] for an instance usable\n  by [[sicmutils.expression.analyze/make-analyzer]].",(cljs.core.truth_(sicmutils.rational_function.__GT_expression)?sicmutils.rational_function.__GT_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cube"),new cljs.core.Var(function(){return sicmutils.rational_function.cube;},new cljs.core.Symbol("sicmutils.rational-function","cube","sicmutils.rational-function/cube",1127066805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function","sicmutils.rational-function",-1593232507,null),new cljs.core.Symbol(null,"cube","cube",138920159,null),"sicmutils/rational_function.cljc",11,1,548,548,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the cube of rational function `r`. Equivalent to `(mul r (mul r r))`.",(cljs.core.truth_(sicmutils.rational_function.cube)?sicmutils.rational_function.cube.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gaussian-integer?"),new cljs.core.Var(function(){return sicmutils.complex.gaussian_integer_QMARK_;},new cljs.core.Symbol("sicmutils.complex","gaussian-integer?","sicmutils.complex/gaussian-integer?",-1012617997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"gaussian-integer?","gaussian-integer?",986930112,null),"sicmutils/complex.cljc",24,1,175,175,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Returns true if `z` is a [Gaussian\n  integer](https://en.wikipedia.org/wiki/Gaussian_integer), ie, a complex entry\n  with integral real and imaginary components.\n\n  [[gaussian-integer?]] will return true if the real and imaginary components\n  are within `epsilon` of integral values. See [[value/almost-integral?]] for\n  details.",(cljs.core.truth_(sicmutils.complex.gaussian_integer_QMARK_)?sicmutils.complex.gaussian_integer_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ZERO"),new cljs.core.Var(function(){return sicmutils.complex.ZERO;},new cljs.core.Symbol("sicmutils.complex","ZERO","sicmutils.complex/ZERO",1190467390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"ZERO","ZERO",-1889270687,null),"sicmutils/complex.cljc",7,1,18,19,cljs.core.List.EMPTY,"A [[Complex]] value equal to 0 (south pole on the Riemann Sphere).",(cljs.core.truth_(sicmutils.complex.ZERO)?sicmutils.complex.ZERO.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd"),new cljs.core.Var(function(){return sicmutils.complex.gcd;},new cljs.core.Symbol("sicmutils.complex","gcd","sicmutils.complex/gcd",727788114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null),"sicmutils/complex.cljc",19,1,206,206,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the complex gcd of two complex numbers using the euclidean algorithm.\n\n  For more details on the algorithm, see [this post on Ask Dr\n  Math](https://web.archive.org/web/20190720160400/http://mathforum.org/library/drmath/view/67068.html).\n\n  NOTE that the GCD of two complex numbers is determined up to a factor of \u00B11\n  and \u00B1i.",(cljs.core.truth_(sicmutils.complex.gcd)?sicmutils.complex.gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parse-complex"),new cljs.core.Var(function(){return sicmutils.complex.parse_complex;},new cljs.core.Symbol("sicmutils.complex","parse-complex","sicmutils.complex/parse-complex",41995895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"parse-complex","parse-complex",941088514,null),"sicmutils/complex.cljc",29,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Parser that converts a string, vector or numeric representation of a complex\n   number, like\n\n  - `1 + 3i`\n  - [1 3]\n  - 1\n\n  into a [[Complex]] number object in clj or cljs.",(cljs.core.truth_(sicmutils.complex.parse_complex)?sicmutils.complex.parse_complex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complextype"),new cljs.core.Var(function(){return sicmutils.complex.complextype;},new cljs.core.Symbol("sicmutils.complex","complextype","sicmutils.complex/complextype",511067288,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"complextype","complextype",-672704571,null),"sicmutils/complex.cljc",26,1,41,41,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.complex.complextype)?sicmutils.complex.complextype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-I"),new cljs.core.Var(function(){return sicmutils.complex._I;},new cljs.core.Symbol("sicmutils.complex","-I","sicmutils.complex/-I",-1966498433,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"-I","-I",-749163958,null),"sicmutils/complex.cljc",5,1,36,37,cljs.core.List.EMPTY,"A [[Complex]] value equal to `-i`.",(cljs.core.truth_(sicmutils.complex._I)?sicmutils.complex._I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I"),new cljs.core.Var(function(){return sicmutils.complex.I;},new cljs.core.Symbol("sicmutils.complex","I","sicmutils.complex/I",-2024838049,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"I","I",-827294806,null),"sicmutils/complex.cljc",4,1,27,28,cljs.core.List.EMPTY,"A [[Complex]] value equal to `i`.",(cljs.core.truth_(sicmutils.complex.I)?sicmutils.complex.I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex"),new cljs.core.Var(function(){return sicmutils.complex.complex;},new cljs.core.Symbol("sicmutils.complex","complex","sicmutils.complex/complex",-860350651,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"complex","complex",-1238824944,null),"sicmutils/complex.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"im","im",506870084,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"im","im",506870084,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"im","im",506870084,null)], null)),"Returns a [[Complex]] number with the supplied real part `re` and imaginary\n  part `im`. `im` defaults to 0.",(cljs.core.truth_(sicmutils.complex.complex)?sicmutils.complex.complex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real"),new cljs.core.Var(function(){return sicmutils.complex.real;},new cljs.core.Symbol("sicmutils.complex","real","sicmutils.complex/real",1316913167,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"real","real",2028828464,null),"sicmutils/complex.cljc",20,1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Complex","Complex",1443317787,null)], null))], null)),null,(cljs.core.truth_(sicmutils.complex.real)?sicmutils.complex.real.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("imaginary"),new cljs.core.Var(function(){return sicmutils.complex.imaginary;},new cljs.core.Symbol("sicmutils.complex","imaginary","sicmutils.complex/imaginary",1806845733,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"imaginary","imaginary",623081456,null),"sicmutils/complex.cljc",25,1,72,72,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Complex","Complex",1443317787,null)], null))], null)),null,(cljs.core.truth_(sicmutils.complex.imaginary)?sicmutils.complex.imaginary.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex?"),new cljs.core.Var(function(){return sicmutils.complex.complex_QMARK_;},new cljs.core.Symbol("sicmutils.complex","complex?","sicmutils.complex/complex?",-1949175064,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"complex?","complex?",-1119689323,null),"sicmutils/complex.cljc",15,1,63,63,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Returns true if `a` is an instance of [[Complex]], false otherwise.",(cljs.core.truth_(sicmutils.complex.complex_QMARK_)?sicmutils.complex.complex_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("round"),new cljs.core.Var(function(){return sicmutils.complex.round;},new cljs.core.Symbol("sicmutils.complex","round","sicmutils.complex/round",-1573029664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"round","round",-645002441,null),"sicmutils/complex.cljc",12,1,163,163,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Generates a [Gaussian integer](https://en.wikipedia.org/wiki/Gaussian_integer)\n  from the complex number `z` by rounding the real and imaginary components of\n  `z` to their nearest integral values.",(cljs.core.truth_(sicmutils.complex.round)?sicmutils.complex.round.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abs-real"),new cljs.core.Var(function(){return sicmutils.complex.abs_real;},new cljs.core.Symbol("sicmutils.complex","abs-real","sicmutils.complex/abs-real",-291580822,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"abs-real","abs-real",605004985,null),"sicmutils/complex.cljc",24,1,192,192,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Returns a complex or real number with a positive real component. (ie, either z\n  or (* -1 z)), whichever number has a positive real component.",(cljs.core.truth_(sicmutils.complex.abs_real)?sicmutils.complex.abs_real.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ONE"),new cljs.core.Var(function(){return sicmutils.complex.ONE;},new cljs.core.Symbol("sicmutils.complex","ONE","sicmutils.complex/ONE",1131321866,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.complex","sicmutils.complex",1278948973,null),new cljs.core.Symbol(null,"ONE","ONE",-1107326119,null),"sicmutils/complex.cljc",6,1,23,24,cljs.core.List.EMPTY,"A [[Complex]] value equal to 1.",(cljs.core.truth_(sicmutils.complex.ONE)?sicmutils.complex.ONE.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 24, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("M-of-q->omega-body-of-t"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.M_of_q__GT_omega_body_of_t;},new cljs.core.Symbol("sicmutils.mechanics.rigid","M-of-q->omega-body-of-t","sicmutils.mechanics.rigid/M-of-q->omega-body-of-t",1051892882,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"M-of-q->omega-body-of-t","M-of-q->omega-body-of-t",1800029441,null),"sicmutils/mechanics/rigid.cljc",30,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M-of-q","M-of-q",868515731,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.M_of_q__GT_omega_body_of_t)?sicmutils.mechanics.rigid.M_of_q__GT_omega_body_of_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T-quaternion-state"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.T_quaternion_state;},new cljs.core.Symbol("sicmutils.mechanics.rigid","T-quaternion-state","sicmutils.mechanics.rigid/T-quaternion-state",-684990928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"T-quaternion-state","T-quaternion-state",-2080111039,null),"sicmutils/mechanics/rigid.cljc",25,1,188,188,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.T_quaternion_state)?sicmutils.mechanics.rigid.T_quaternion_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("M-of-q->omega-of-t"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.M_of_q__GT_omega_of_t;},new cljs.core.Symbol("sicmutils.mechanics.rigid","M-of-q->omega-of-t","sicmutils.mechanics.rigid/M-of-q->omega-of-t",1463082449,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"M-of-q->omega-of-t","M-of-q->omega-of-t",-467896766,null),"sicmutils/mechanics/rigid.cljc",25,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M-of-q","M-of-q",868515731,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.M_of_q__GT_omega_of_t)?sicmutils.mechanics.rigid.M_of_q__GT_omega_of_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("M->omega"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.M__GT_omega;},new cljs.core.Symbol("sicmutils.mechanics.rigid","M->omega","sicmutils.mechanics.rigid/M->omega",1835320915,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"M->omega","M->omega",-1205879070,null),"sicmutils/mechanics/rigid.cljc",15,1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M-of-q","M-of-q",868515731,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.M__GT_omega)?sicmutils.mechanics.rigid.M__GT_omega.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("antisymmetric->column-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.antisymmetric__GT_column_matrix;},new cljs.core.Symbol("sicmutils.mechanics.rigid","antisymmetric->column-matrix","sicmutils.mechanics.rigid/antisymmetric->column-matrix",764456885,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"antisymmetric->column-matrix","antisymmetric->column-matrix",-1061685310,null),"sicmutils/mechanics/rigid.cljc",35,1,22,22,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)),"Given an antisymmetric matrix `a` of dimension 3, returns a column vector of\n  its positive components.",(cljs.core.truth_(sicmutils.mechanics.rigid.antisymmetric__GT_column_matrix)?sicmutils.mechanics.rigid.antisymmetric__GT_column_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T-body-Euler"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.T_body_Euler;},new cljs.core.Symbol("sicmutils.mechanics.rigid","T-body-Euler","sicmutils.mechanics.rigid/T-body-Euler",-1325586408,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"T-body-Euler","T-body-Euler",92639401,null),"sicmutils/mechanics/rigid.cljc",19,1,111,111,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.T_body_Euler)?sicmutils.mechanics.rigid.T_body_Euler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rigid-sysder"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.rigid_sysder;},new cljs.core.Symbol("sicmutils.mechanics.rigid","rigid-sysder","sicmutils.mechanics.rigid/rigid-sysder",-104827686,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"rigid-sysder","rigid-sysder",1244192073,null),"sicmutils/mechanics/rigid.cljc",19,1,136,136,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.rigid_sysder)?sicmutils.mechanics.rigid.rigid_sysder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-state->L-space"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.Euler_state__GT_L_space;},new cljs.core.Symbol("sicmutils.mechanics.rigid","Euler-state->L-space","sicmutils.mechanics.rigid/Euler-state->L-space",73291480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"Euler-state->L-space","Euler-state->L-space",-378458455,null),"sicmutils/mechanics/rigid.cljc",23,1,133,134,cljs.core.List.EMPTY,"Alias for [[L-space-Euler]].",(cljs.core.truth_(sicmutils.mechanics.rigid.Euler_state__GT_L_space)?sicmutils.mechanics.rigid.Euler_state__GT_L_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-state->omega-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.Euler_state__GT_omega_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","Euler-state->omega-body","sicmutils.mechanics.rigid/Euler-state->omega-body",1836554396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"Euler-state->omega-body","Euler-state->omega-body",949502059,null),"sicmutils/mechanics/rigid.cljc",30,1,99,99,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"psi","psi",80412671,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"thetadot","thetadot",1584260463,null),new cljs.core.Symbol(null,"phidot","phidot",-1040914891,null),new cljs.core.Symbol(null,"psidot","psidot",-265477541,null)], null)], null)], null)),"Although this implementation appears to summarize `(M->omega-body r/Euler->M)`,\n  it is actually essential to prevent intermediate expression explosion.",(cljs.core.truth_(sicmutils.mechanics.rigid.Euler_state__GT_omega_body)?sicmutils.mechanics.rigid.Euler_state__GT_omega_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("M->omega-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.M__GT_omega_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","M->omega-body","sicmutils.mechanics.rigid/M->omega-body",-2017244801,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"M->omega-body","M->omega-body",983228556,null),"sicmutils/mechanics/rigid.cljc",20,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M-of-q","M-of-q",868515731,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.M__GT_omega_body)?sicmutils.mechanics.rigid.M__GT_omega_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quaternion-state->omega-space"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.quaternion_state__GT_omega_space;},new cljs.core.Symbol("sicmutils.mechanics.rigid","quaternion-state->omega-space","sicmutils.mechanics.rigid/quaternion-state->omega-space",-684832868,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"quaternion-state->omega-space","quaternion-state->omega-space",97984525,null),"sicmutils/mechanics/rigid.cljc",38,3,168,168,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"qdot","qdot",-754984603,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.quaternion_state__GT_omega_space)?sicmutils.mechanics.rigid.quaternion_state__GT_omega_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-state->L-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.Euler_state__GT_L_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","Euler-state->L-body","sicmutils.mechanics.rigid/Euler-state->L-body",1694093822,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"Euler-state->L-body","Euler-state->L-body",-1827575539,null),"sicmutils/mechanics/rigid.cljc",22,1,124,125,cljs.core.List.EMPTY,"Alias for [[L-body-Euler]].",(cljs.core.truth_(sicmutils.mechanics.rigid.Euler_state__GT_L_body)?sicmutils.mechanics.rigid.Euler_state__GT_L_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler->omega-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.Euler__GT_omega_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","Euler->omega-body","sicmutils.mechanics.rigid/Euler->omega-body",-1439733764,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"Euler->omega-body","Euler->omega-body",84295533,null),"sicmutils/mechanics/rigid.cljc",24,1,90,90,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angles-path","angles-path",1169157124,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.Euler__GT_omega_body)?sicmutils.mechanics.rigid.Euler__GT_omega_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-space"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.L_space;},new cljs.core.Symbol("sicmutils.mechanics.rigid","L-space","sicmutils.mechanics.rigid/L-space",1089517789,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"L-space","L-space",-174468754,null),"sicmutils/mechanics/rigid.cljc",14,1,72,72,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.L_space)?sicmutils.mechanics.rigid.L_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-body-Euler"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.L_body_Euler;},new cljs.core.Symbol("sicmutils.mechanics.rigid","L-body-Euler","sicmutils.mechanics.rigid/L-body-Euler",859909089,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"L-body-Euler","L-body-Euler",-2040106128,null),"sicmutils/mechanics/rigid.cljc",19,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.L_body_Euler)?sicmutils.mechanics.rigid.L_body_Euler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("three-vector-components->antisymmetric"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.three_vector_components__GT_antisymmetric;},new cljs.core.Symbol("sicmutils.mechanics.rigid","three-vector-components->antisymmetric","sicmutils.mechanics.rigid/three-vector-components->antisymmetric",-562576797,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"three-vector-components->antisymmetric","three-vector-components->antisymmetric",690977266,null),"sicmutils/mechanics/rigid.cljc",45,1,16,16,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.three_vector_components__GT_antisymmetric)?sicmutils.mechanics.rigid.three_vector_components__GT_antisymmetric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qw-state->L-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.qw_state__GT_L_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","qw-state->L-body","sicmutils.mechanics.rigid/qw-state->L-body",1557077955,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"qw-state->L-body","qw-state->L-body",31958610,null),"sicmutils/mechanics/rigid.cljc",23,1,177,177,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.qw_state__GT_L_body)?sicmutils.mechanics.rigid.qw_state__GT_L_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qw-state->L-space"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.qw_state__GT_L_space;},new cljs.core.Symbol("sicmutils.mechanics.rigid","qw-state->L-space","sicmutils.mechanics.rigid/qw-state->L-space",-376325980,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"qw-state->L-space","qw-state->L-space",347488469,null),"sicmutils/mechanics/rigid.cljc",24,1,181,181,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.qw_state__GT_L_space)?sicmutils.mechanics.rigid.qw_state__GT_L_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-space-Euler"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.L_space_Euler;},new cljs.core.Symbol("sicmutils.mechanics.rigid","L-space-Euler","sicmutils.mechanics.rigid/L-space-Euler",351799978,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"L-space-Euler","L-space-Euler",-1490948843,null),"sicmutils/mechanics/rigid.cljc",20,1,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.L_space_Euler)?sicmutils.mechanics.rigid.L_space_Euler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quaternion-state->omega-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.quaternion_state__GT_omega_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","quaternion-state->omega-body","sicmutils.mechanics.rigid/quaternion-state->omega-body",-243920246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"quaternion-state->omega-body","quaternion-state->omega-body",1179732597,null),"sicmutils/mechanics/rigid.cljc",35,1,142,142,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"qdot","qdot",-754984603,null)], null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.quaternion_state__GT_omega_body)?sicmutils.mechanics.rigid.quaternion_state__GT_omega_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T-rigid-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.T_rigid_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","T-rigid-body","sicmutils.mechanics.rigid/T-rigid-body",-551251196,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"T-rigid-body","T-rigid-body",1643981749,null),"sicmutils/mechanics/rigid.cljc",15,1,116,117,cljs.core.List.EMPTY,"Alias for [[T-body-Euler]].",(cljs.core.truth_(sicmutils.mechanics.rigid.T_rigid_body)?sicmutils.mechanics.rigid.T_rigid_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.T_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","T-body","sicmutils.mechanics.rigid/T-body",-2133582737,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"T-body","T-body",1409086972,null),"sicmutils/mechanics/rigid.cljc",13,1,59,59,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.T_body)?sicmutils.mechanics.rigid.T_body.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler->omega"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.Euler__GT_omega;},new cljs.core.Symbol("sicmutils.mechanics.rigid","Euler->omega","sicmutils.mechanics.rigid/Euler->omega",367775439,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"Euler->omega","Euler->omega",1655711102,null),"sicmutils/mechanics/rigid.cljc",19,1,80,80,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angles-path","angles-path",1169157124,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.Euler__GT_omega)?sicmutils.mechanics.rigid.Euler__GT_omega.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-body"),new cljs.core.Var(function(){return sicmutils.mechanics.rigid.L_body;},new cljs.core.Symbol("sicmutils.mechanics.rigid","L-body","sicmutils.mechanics.rigid/L-body",-507495250,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.rigid","sicmutils.mechanics.rigid",1964963249,null),new cljs.core.Symbol(null,"L-body","L-body",346543391,null),"sicmutils/mechanics/rigid.cljc",13,1,66,66,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null),new cljs.core.Symbol(null,"B","B",218028147,null),new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.rigid.L_body)?sicmutils.mechanics.rigid.L_body.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Riemann-curvature"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.Riemann_curvature;},new cljs.core.Symbol("sicmutils.calculus.curvature","Riemann-curvature","sicmutils.calculus.curvature/Riemann-curvature",1348954000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"Riemann-curvature","Riemann-curvature",-1648319560,null),"sicmutils/calculus/curvature.cljc",24,1,17,17,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.Riemann_curvature)?sicmutils.calculus.curvature.Riemann_curvature.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Riemann"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.Riemann;},new cljs.core.Symbol("sicmutils.calculus.curvature","Riemann","sicmutils.calculus.curvature/Riemann",1151592037,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"Riemann","Riemann",809872061,null),"sicmutils/calculus/curvature.cljc",14,1,24,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.Riemann)?sicmutils.calculus.curvature.Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Ricci"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.Ricci;},new cljs.core.Symbol("sicmutils.calculus.curvature","Ricci","sicmutils.calculus.curvature/Ricci",1671980190,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"Ricci","Ricci",1070475462,null),"sicmutils/calculus/curvature.cljc",12,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.Ricci)?sicmutils.calculus.curvature.Ricci.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("torsion-vector"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.torsion_vector;},new cljs.core.Symbol("sicmutils.calculus.curvature","torsion-vector","sicmutils.calculus.curvature/torsion-vector",1065725262,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"torsion-vector","torsion-vector",-479497882,null),"sicmutils/calculus/curvature.cljc",21,1,47,47,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.torsion_vector)?sicmutils.calculus.curvature.torsion_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("torsion"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.torsion;},new cljs.core.Symbol("sicmutils.calculus.curvature","torsion","sicmutils.calculus.curvature/torsion",-909754943,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"torsion","torsion",492861929,null),"sicmutils/calculus/curvature.cljc",14,1,55,55,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.torsion)?sicmutils.calculus.curvature.torsion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("curvature-components"),new cljs.core.Var(function(){return sicmutils.calculus.curvature.curvature_components;},new cljs.core.Symbol("sicmutils.calculus.curvature","curvature-components","sicmutils.calculus.curvature/curvature-components",-283293993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.curvature","sicmutils.calculus.curvature",-251471169,null),new cljs.core.Symbol(null,"curvature-components","curvature-components",-1275395345,null),"sicmutils/calculus/curvature.cljc",27,1,66,66,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"nabla","nabla",1447510358,null),new cljs.core.Symbol(null,"coord-sys","coord-sys",-674266314,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.curvature.curvature_components)?sicmutils.calculus.curvature.curvature_components.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-form"),new cljs.core.Var(function(){return sicmutils.calculus.map.pullback_form;},new cljs.core.Symbol("sicmutils.calculus.map","pullback-form","sicmutils.calculus.map/pullback-form",90693949,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pullback-form","pullback-form",1098147136,null),"sicmutils/calculus/map.cljc",20,1,138,138,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null)),"Returns a function which will pull a form back across a map (without needing\n  its inverse)",(cljs.core.truth_(sicmutils.calculus.map.pullback_form)?sicmutils.calculus.map.pullback_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->basis-over-map"),new cljs.core.Var(function(){return sicmutils.calculus.map.basis__GT_basis_over_map;},new cljs.core.Symbol("sicmutils.calculus.map","basis->basis-over-map","sicmutils.calculus.map/basis->basis-over-map",318003948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"basis->basis-over-map","basis->basis-over-map",-689512767,null),"sicmutils/calculus/map.cljc",28,1,128,128,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"basis-on-M","basis-on-M",1714569456,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.basis__GT_basis_over_map)?sicmutils.calculus.map.basis__GT_basis_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential"),new cljs.core.Var(function(){return sicmutils.calculus.map.differential;},new cljs.core.Symbol("sicmutils.calculus.map","differential","sicmutils.calculus.map/differential",-1781134625,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"differential","differential",1372034786,null),"sicmutils/calculus/map.cljc",15,1,53,54,cljs.core.List.EMPTY,"Alias for [[differential-of-map]].",(cljs.core.truth_(sicmutils.calculus.map.differential)?sicmutils.calculus.map.differential.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-manifold-map"),new cljs.core.Var(function(){return sicmutils.calculus.map.literal_manifold_map;},new cljs.core.Symbol("sicmutils.calculus.map","literal-manifold-map","sicmutils.calculus.map/literal-manifold-map",-224556467,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"literal-manifold-map","literal-manifold-map",915017254,null),"sicmutils/calculus/map.cljc",27,1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"source","source",1206599988,null),new cljs.core.Symbol(null,"target","target",1893533248,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.literal_manifold_map)?sicmutils.calculus.map.literal_manifold_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pushforward-vector"),new cljs.core.Var(function(){return sicmutils.calculus.map.pushforward_vector;},new cljs.core.Symbol("sicmutils.calculus.map","pushforward-vector","sicmutils.calculus.map/pushforward-vector",-1012073306,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pushforward-vector","pushforward-vector",-2017628021,null),"sicmutils/calculus/map.cljc",25,1,63,63,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.pushforward_vector)?sicmutils.calculus.map.pushforward_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->vector-field-over-map"),new cljs.core.Var(function(){return sicmutils.calculus.map.vector_field__GT_vector_field_over_map;},new cljs.core.Symbol("sicmutils.calculus.map","vector-field->vector-field-over-map","sicmutils.calculus.map/vector-field->vector-field-over-map",2111369050,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"vector-field->vector-field-over-map","vector-field->vector-field-over-map",969823025,null),"sicmutils/calculus/map.cljc",42,1,88,88,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null)),"Defined on FDG p.72.",(cljs.core.truth_(sicmutils.calculus.map.vector_field__GT_vector_field_over_map)?sicmutils.calculus.map.vector_field__GT_vector_field_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pushforward-function"),new cljs.core.Var(function(){return sicmutils.calculus.map.pushforward_function;},new cljs.core.Symbol("sicmutils.calculus.map","pushforward-function","sicmutils.calculus.map/pushforward-function",2103296641,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pushforward-function","pushforward-function",-2125705580,null),"sicmutils/calculus/map.cljc",27,1,28,28,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.pushforward_function)?sicmutils.calculus.map.pushforward_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential-of-map"),new cljs.core.Var(function(){return sicmutils.calculus.map.differential_of_map;},new cljs.core.Symbol("sicmutils.calculus.map","differential-of-map","sicmutils.calculus.map/differential-of-map",913337888,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"differential-of-map","differential-of-map",1243517525,null),"sicmutils/calculus/map.cljc",26,1,41,41,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null)),"Defined on FDG p.72.",(cljs.core.truth_(sicmutils.calculus.map.differential_of_map)?sicmutils.calculus.map.differential_of_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.map.pullback_vector_field;},new cljs.core.Symbol("sicmutils.calculus.map","pullback-vector-field","sicmutils.calculus.map/pullback-vector-field",-1328521496,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pullback-vector-field","pullback-vector-field",2082593527,null),"sicmutils/calculus/map.cljc",28,1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.pullback_vector_field)?sicmutils.calculus.map.pullback_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-function"),new cljs.core.Var(function(){return sicmutils.calculus.map.pullback_function;},new cljs.core.Symbol("sicmutils.calculus.map","pullback-function","sicmutils.calculus.map/pullback-function",1953932231,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pullback-function","pullback-function",811870172,null),"sicmutils/calculus/map.cljc",24,1,20,20,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.pullback_function)?sicmutils.calculus.map.pullback_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("form-field->form-field-over-map"),new cljs.core.Var(function(){return sicmutils.calculus.map.form_field__GT_form_field_over_map;},new cljs.core.Symbol("sicmutils.calculus.map","form-field->form-field-over-map","sicmutils.calculus.map/form-field->form-field-over-map",-1454346683,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"form-field->form-field-over-map","form-field->form-field-over-map",1700913758,null),"sicmutils/calculus/map.cljc",38,1,104,104,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.form_field__GT_form_field_over_map)?sicmutils.calculus.map.form_field__GT_form_field_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback"),new cljs.core.Var(function(){return sicmutils.calculus.map.pullback;},new cljs.core.Symbol("sicmutils.calculus.map","pullback","sicmutils.calculus.map/pullback",1891460689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.map","sicmutils.calculus.map",-1444721754,null),new cljs.core.Symbol(null,"pullback","pullback",-1132207426,null),"sicmutils/calculus/map.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,158,158,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"mu-inverse:M->N","mu-inverse:M->N",1931872757,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.map.pullback)?sicmutils.calculus.map.pullback.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("k-and-deriv"),new cljs.core.Var(function(){return sicmutils.special.elliptic.k_and_deriv;},new cljs.core.Symbol("sicmutils.special.elliptic","k-and-deriv","sicmutils.special.elliptic/k-and-deriv",-282981484,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"k-and-deriv","k-and-deriv",948345568,null),"sicmutils/special/elliptic.cljc",18,1,352,352,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns a pair of:\n\n  - the elliptic integral of the first kind, `K`\n  - the derivative `dK/dk`\n\n  evaluated at `k`.",(cljs.core.truth_(sicmutils.special.elliptic.k_and_deriv)?sicmutils.special.elliptic.k_and_deriv.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-f"),new cljs.core.Var(function(){return sicmutils.special.elliptic.elliptic_f;},new cljs.core.Symbol("sicmutils.special.elliptic","elliptic-f","sicmutils.special.elliptic/elliptic-f",-2123440052,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"elliptic-f","elliptic-f",2039182144,null),"sicmutils/special/elliptic.cljc",17,1,289,289,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Legendre elliptic integral of the first kind F(\u03C6, k).\n   See W.H. Press, Numerical Recipes in C++, 2ed. eq. 6.11.19\n\n  See [page 260](http://phys.uri.edu/nigh/NumRec/bookfpdf/f6-11.pdf).",(cljs.core.truth_(sicmutils.special.elliptic.elliptic_f)?sicmutils.special.elliptic.elliptic_f.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-k"),new cljs.core.Var(function(){return sicmutils.special.elliptic.elliptic_k;},new cljs.core.Symbol("sicmutils.special.elliptic","elliptic-k","sicmutils.special.elliptic/elliptic-k",1580144126,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"elliptic-k","elliptic-k",625190114,null),"sicmutils/special/elliptic.cljc",17,1,302,302,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Complete elliptic integral of the first kind - see Press, 6.11.18.",(cljs.core.truth_(sicmutils.special.elliptic.elliptic_k)?sicmutils.special.elliptic.elliptic_k.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("carlson-rc"),new cljs.core.Var(function(){return sicmutils.special.elliptic.carlson_rc;},new cljs.core.Symbol("sicmutils.special.elliptic","carlson-rc","sicmutils.special.elliptic/carlson-rc",70792751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"carlson-rc","carlson-rc",-572153565,null),"sicmutils/special/elliptic.cljc",17,1,137,137,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Computes Carlson\u2019s degenerate elliptic integral, $R_C(x, y)$. `x` must be\n  nonnegative and `y` must be nonzero. If `y < 0`, the Cauchy principal value is\n  returned.\n\n  Internal details:\n\n  - `tiny` must be at least 5 times the machine underflow limit\n  - `big` at most one fifth the machine maximum overflow limit.",(cljs.core.truth_(sicmutils.special.elliptic.carlson_rc)?sicmutils.special.elliptic.carlson_rc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("carlson-rf"),new cljs.core.Var(function(){return sicmutils.special.elliptic.carlson_rf;},new cljs.core.Symbol("sicmutils.special.elliptic","carlson-rf","sicmutils.special.elliptic/carlson-rf",860077169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"carlson-rf","carlson-rf",1245654373,null),"sicmutils/special/elliptic.cljc",17,1,14,14,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"From W.H. Press, Numerical Recipes in C++, 2ed. NR::rf from section 6.11\n\n  Here's the reference for what's going on here:\n  http://phys.uri.edu/nigh/NumRec/bookfpdf/f6-11.pdf\n\n  Comment from Press, page 257:\n\n  'Computes Carlson\u2019s elliptic integral of the first kind, RF (x, y, z). x, y,\n  and z must be nonnegative, and at most one can be zero. TINY must be at least\n  5 times the machine underflow limit, BIG at most one fifth the machine\n  overflow limit.'\n\n  A value of 0.08 for the error tolerance parameter is adequate for single\n  precision (7 significant digits). Since the error scales as 6 n, we see that\n  0.0025 will yield double precision (16 significant digits) and require at most\n  two or three more iterations.'\n\n  This is called `Carlson-elliptic-1` in scmutils.",(cljs.core.truth_(sicmutils.special.elliptic.carlson_rf)?sicmutils.special.elliptic.carlson_rf.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-pi"),new cljs.core.Var(function(){return sicmutils.special.elliptic.elliptic_pi;},new cljs.core.Symbol("sicmutils.special.elliptic","elliptic-pi","sicmutils.special.elliptic/elliptic-pi",334428185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"elliptic-pi","elliptic-pi",-78943475,null),"sicmutils/special/elliptic.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,368,368,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"The two-arity call returns the complete elliptic integral of the third kind -\n  see\n  https://en.wikipedia.org/wiki/Carlson_symmetric_form#Complete_elliptic_integrals\n  for reference.\n\n  The three-arity call returns the Legendre elliptic integral of the third kind\n  \u03A0(\u03C6, k). See W.H. Press, Numerical Recipes in C++, 2ed. eq. 6.11.21; Note that\n  our sign convention for `n` is opposite theirs.\n\n  See [page 260](http://phys.uri.edu/nigh/NumRec/bookfpdf/f6-11.pdf).",(cljs.core.truth_(sicmutils.special.elliptic.elliptic_pi)?sicmutils.special.elliptic.elliptic_pi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-integrals"),new cljs.core.Var(function(){return sicmutils.special.elliptic.elliptic_integrals;},new cljs.core.Symbol("sicmutils.special.elliptic","elliptic-integrals","sicmutils.special.elliptic/elliptic-integrals",495982936,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"elliptic-integrals","elliptic-integrals",892634708,null),"sicmutils/special/elliptic.cljc",25,1,330,330,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null)),"Computes the first and second complete elliptic integrals at once, and passes\n  them to the supplied continuation as args `K` and `E`.",(cljs.core.truth_(sicmutils.special.elliptic.elliptic_integrals)?sicmutils.special.elliptic.elliptic_integrals.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("carlson-rd"),new cljs.core.Var(function(){return sicmutils.special.elliptic.carlson_rd;},new cljs.core.Symbol("sicmutils.special.elliptic","carlson-rd","sicmutils.special.elliptic/carlson-rd",1613489273,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"carlson-rd","carlson-rd",-1185982603,null),"sicmutils/special/elliptic.cljc",17,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)),"Comment from Press, section 6.11, page 257:\n\n  'Computes Carlson\u2019s elliptic integral of the second kind, RD(x, y, z). x and y must be\n  nonnegative, and at most one can be zero. z must be positive. TINY must be at least twice\n  the negative 2/3 power of the machine overflow limit. BIG must be at most 0.1 \u00D7 ERRTOL\n  times the negative 2/3 power of the machine underflow limit.'\n\n  This is called `Carlson-elliptic-2` in scmutils.",(cljs.core.truth_(sicmutils.special.elliptic.carlson_rd)?sicmutils.special.elliptic.carlson_rd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("jacobi-elliptic-functions"),new cljs.core.Var(function(){return sicmutils.special.elliptic.jacobi_elliptic_functions;},new cljs.core.Symbol("sicmutils.special.elliptic","jacobi-elliptic-functions","sicmutils.special.elliptic/jacobi-elliptic-functions",-1295786937,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"jacobi-elliptic-functions","jacobi-elliptic-functions",-617861797,null),"sicmutils/special/elliptic.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,405,405,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"u","u",483896742,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),"Direct Clojure translation (via the Scheme translation in scmutils) of W.H.\n  Press, Numerical Recipes, subroutine `sncndn`.\n\n  Calls the supplied continuation `cont` with `sn`, `cn` and `dn` as defined\n  below.\n\n  If no `cont` is supplied, returns a three-vector of `sn`, `cn` and `dn`.\n\n  Comments from Press, page 261:\n\n  The Jacobian elliptic function sn is defined as follows: instead of\n  considering the elliptic integral\n\n  $$u(y, k) \\equiv u=F(\\phi, k)$$\n\n  Consider the _inverse_ function:\n\n  ```\n  $$y = \\sin \\phi = \\mathrm{sn}(u, k)$$\n  ```\n\n  Equivalently,\n\n  ```\n  $$u=\\int_{0}^{\\mathrm{sn}} \\frac{d y}{\\sqrt{\\left(1-y^{2}\\right)\\left(1-k^{2} y^{2}\\right)}}$$\n  ```\n\n  When $k = 0$, $sn$ is just $\\sin$. The functions $cn$ and $dn$ are defined by\n  the relations\n\n  ```\n  $$\\mathrm{sn}^{2}+\\mathrm{cn}^{2}=1, \\quad k^{2} \\mathrm{sn}^{2}+\\mathrm{dn}^{2}=1$$\n  ```\n\n  The function calls the continuation with all three functions $sn$, $cn$, and\n  $dn$ since computing all three is no harder than computing any one of them.",(cljs.core.truth_(sicmutils.special.elliptic.jacobi_elliptic_functions)?sicmutils.special.elliptic.jacobi_elliptic_functions.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-e"),new cljs.core.Var(function(){return sicmutils.special.elliptic.elliptic_e;},new cljs.core.Symbol("sicmutils.special.elliptic","elliptic-e","sicmutils.special.elliptic/elliptic-e",-1896655599,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"elliptic-e","elliptic-e",1469512221,null),"sicmutils/special/elliptic.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,307,307,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"phi","phi",113733223,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Passing `k` returns the complete elliptic integral of the second kind - see\n  Press, 6.11.20.\n\n  The two-arity version returns the Legendre elliptic integral of the second\n  kind E(\u03C6, k). See W.H. Press, Numerical Recipes in C++, 2ed. eq. 6.11.20.\n\n  See [page 260](http://phys.uri.edu/nigh/NumRec/bookfpdf/f6-11.pdf).",(cljs.core.truth_(sicmutils.special.elliptic.elliptic_e)?sicmutils.special.elliptic.elliptic_e.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("carlson-rj"),new cljs.core.Var(function(){return sicmutils.special.elliptic.carlson_rj;},new cljs.core.Symbol("sicmutils.special.elliptic","carlson-rj","sicmutils.special.elliptic/carlson-rj",-1700195343,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.elliptic","sicmutils.special.elliptic",426705570,null),new cljs.core.Symbol(null,"carlson-rj","carlson-rj",-1303485699,null),"sicmutils/special/elliptic.cljc",17,1,189,189,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Computes\n  [Carlson\u2019s elliptic\n  integral](https://en.wikipedia.org/wiki/Carlson_symmetric_form) of the third\n  kind, `RJ(x, y, z, p)`.\n\n  `x`, `y`, and `z` must be nonnegative, and at most one can be zero. `p` must\n  be nonzero.\n\n  If `p < 0`, the Cauchy principal value is returned. `tiny` internally must be\n  at least twice the cube root of the machine underflow limit, `big` at most one\n  fifth the cube root of the machine overflow limit.",(cljs.core.truth_(sicmutils.special.elliptic.carlson_rj)?sicmutils.special.elliptic.carlson_rj.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inv-phi2"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.inv_phi2;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","inv-phi2","sicmutils.numerical.unimin.golden/inv-phi2",-558348121,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"inv-phi2","inv-phi2",-1861820731,null),"sicmutils/numerical/unimin/golden.cljc",11,1,45,46,cljs.core.List.EMPTY,"$1 \\over \\phi^2$. Scales down twice, compared to [[inv-phi]].",(cljs.core.truth_(sicmutils.numerical.unimin.golden.inv_phi2)?sicmutils.numerical.unimin.golden.inv_phi2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("phi"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.phi;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","phi","sicmutils.numerical.unimin.golden/phi",-950404027,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"phi","phi",113733223,null),"sicmutils/numerical/unimin/golden.cljc",6,1,34,35,cljs.core.List.EMPTY,"$\\phi$, the golden ratio.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.phi)?sicmutils.numerical.unimin.golden.phi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("best-of"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.best_of;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","best-of","sicmutils.numerical.unimin.golden/best-of",-1171715345,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"best-of","best-of",2077533321,null),"sicmutils/numerical/unimin/golden.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"pairs","pairs",-2039825990,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"pairs","pairs",-2039825990,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,94,94,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"pairs","pairs",-2039825990,null)], null)),"Default selection function for the best possible point. This function chooses\n  the point out of (a, l, r, b) with the minimum function value.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.best_of)?sicmutils.numerical.unimin.golden.best_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("golden-section-max"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.golden_section_max;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","golden-section-max","sicmutils.numerical.unimin.golden/golden-section-max",-963618857,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"golden-section-max","golden-section-max",-2130564727,null),"sicmutils/numerical/unimin/golden.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,220,220,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"For convenience, we also provide the sister-procedure for finding\n  the maximum of a unimodal function using the golden section method.\n\n  Negate the function, minimize, negate the result.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.golden_section_max)?sicmutils.numerical.unimin.golden.golden_section_max.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("golden-cut"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.golden_cut;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","golden-cut","sicmutils.numerical.unimin.golden/golden-cut",2022595976,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"golden-cut","golden-cut",1058787306,null),"sicmutils/numerical/unimin/golden.cljc",17,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"from","from",-839142725,null),new cljs.core.Symbol(null,"to","to",1832630534,null)], null)),"Returns the point between `from` and `to` that cuts the region between the two\n  into two sections in golden-ratioed proportion to each other.\n\n  For example, depending on the ordering of `from` and `to`, `x` would be\n  either:\n\n  ```\n  from------x1---to\n  to---x2------from\n  ```\n\n  Such that `from->x1 / from->to == to->x2 / from->x1`.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.golden_cut)?sicmutils.numerical.unimin.golden.golden_cut.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("golden-section-min"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.golden_section_min;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","golden-section-min","sicmutils.numerical.unimin.golden/golden-section-min",-334073169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"golden-section-min","golden-section-min",-1566310259,null),"sicmutils/numerical/unimin/golden.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"best-of","best-of",2077533321,null),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"best-of","best-of",2077533321,null),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,153,153,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"choose","choose",-974232464,null),new cljs.core.Symbol(null,"best-of","best-of",2077533321,null),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Golden Section search attempts to locate the minimum of the supplied function\n  `f` by evaluating points located at golden-ratioed intervals between the two\n  starting endpoints `a` and `b`. This method is slow, steady and reliable.\n\n  Supports the following optional keyword arguments:\n\n  `:converged?` is an optional predicate accepting five arguments:\n\n  - `[a fa]`\n  - `[l fl]`\n  - `[r fr]`\n  - `[b fb]`\n  - `current-iteration`\n\n  If the supplied `fn` returns true, it will signal convergence and the\n  optimizer will return. Returning false will continue.\n\n  `:choose` is called at the final step of optimization with all 4 points and\n  their fn values (see the first four arguments to `:converged?`), and returns\n  the final choice.\n\n  `:callback` receives all 5 arguments on every iteration.\n\n  `:maxiter` Maximum number of iterations allowed for the minimizer. Defaults to\n  1000.\n\n  `:maxfun` Maximum number of times the function can be evaluated before exiting.\n  Defaults to 1000.\n\n  `:fn-tolerance` check that the minimal value of any of the checked points is\n  within the maximum of f(a) or f(b).\n\n  `:arg-tolerance` check that `a` and `b` are within this supplied absolute\n  distance.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.golden_section_min)?sicmutils.numerical.unimin.golden.golden_section_min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inv-phi"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.inv_phi;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","inv-phi","sicmutils.numerical.unimin.golden/inv-phi",622096192,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"inv-phi","inv-phi",-425271954,null),"sicmutils/numerical/unimin/golden.cljc",10,1,39,41,cljs.core.List.EMPTY,"$1 \\over \\phi$. Multiply by this to scale some distance down to the\nlarger-sized golden ratio piece.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.inv_phi)?sicmutils.numerical.unimin.golden.inv_phi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("stop-fn"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.stop_fn;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","stop-fn","sicmutils.numerical.unimin.golden/stop-fn",-1950950221,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"stop-fn","stop-fn",1292059281,null),"sicmutils/numerical/unimin/golden.cljc",14,1,139,139,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),new cljs.core.Symbol(null,"fn-counter","fn-counter",245142765,null)], null)], null)], null)),"Returns a fn that returns true if any of the following are true::\n\n  - the supplied `fn-counter` atom contains a value > `maxfun`\n  - the loop has exceeded `maxiter` iterations\n\n  false otherwise.\n  ",(cljs.core.truth_(sicmutils.numerical.unimin.golden.stop_fn)?sicmutils.numerical.unimin.golden.stop_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("convergence-fn"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.convergence_fn;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","convergence-fn","sicmutils.numerical.unimin.golden/convergence-fn",-1695225132,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"convergence-fn","convergence-fn",1483169014,null),"sicmutils/numerical/unimin/golden.cljc",21,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"converged?","converged?",-875375793,null),new cljs.core.Symbol(null,"fn-tolerance","fn-tolerance",194925363,null),new cljs.core.Symbol(null,"arg-tolerance","arg-tolerance",-973251989,null)], null)], null)], null)),"Returns a fn that returns true if any of the following are true:\n\n  - the max interior value is within `fn-tolerance` of the smallest bound,\n  - `convergence?` (if supplied) returns true\n  - the bounds are within `arg-tolerance` absolute distance,\n\n  false otherwise.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.convergence_fn)?sicmutils.numerical.unimin.golden.convergence_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extend-pt"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.golden.extend_pt;},new cljs.core.Symbol("sicmutils.numerical.unimin.golden","extend-pt","sicmutils.numerical.unimin.golden/extend-pt",-178034658,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.golden","sicmutils.numerical.unimin.golden",1950383853,null),new cljs.core.Symbol(null,"extend-pt","extend-pt",936827516,null),"sicmutils/numerical/unimin/golden.cljc",16,1,66,66,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"away-from","away-from",243379524,null)], null)),"generate a new point by extending x away from `away-from`. The invariant is\n  that `x` sits between the new point and `away-from` at the golden ratio\n  point.",(cljs.core.truth_(sicmutils.numerical.unimin.golden.extend_pt)?sicmutils.numerical.unimin.golden.extend_pt.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 25, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("uuid"),new cljs.core.Var(function(){return sicmutils.util.uuid;},new cljs.core.Symbol("sicmutils.util","uuid","sicmutils.util/uuid",-1620180415,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),"sicmutils/util.cljc",11,1,91,91,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns a string containing a randomly generated unique identifier.",(cljs.core.truth_(sicmutils.util.uuid)?sicmutils.util.uuid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("longtype"),new cljs.core.Var(function(){return sicmutils.util.longtype;},new cljs.core.Symbol("sicmutils.util","longtype","sicmutils.util/longtype",1047336515,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"longtype","longtype",1290789410,null),"sicmutils/util.cljc",14,1,32,32,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.longtype)?sicmutils.util.longtype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("timeout-ex"),new cljs.core.Var(function(){return sicmutils.util.timeout_ex;},new cljs.core.Symbol("sicmutils.util","timeout-ex","sicmutils.util/timeout-ex",-1906186748,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"timeout-ex","timeout-ex",1608520355,null),"sicmutils/util.cljc",17,1,113,113,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.timeout_ex)?sicmutils.util.timeout_ex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bigint?"),new cljs.core.Var(function(){return sicmutils.util.bigint_QMARK_;},new cljs.core.Symbol("sicmutils.util","bigint?","sicmutils.util/bigint?",-414529465,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"bigint?","bigint?",-1865894876,null),"sicmutils/util.cljc",14,1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if the supplied `x` is a `BigInt`, false otherwise.",(cljs.core.truth_(sicmutils.util.bigint_QMARK_)?sicmutils.util.bigint_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("counted"),new cljs.core.Var(function(){return sicmutils.util.counted;},new cljs.core.Symbol("sicmutils.util","counted","sicmutils.util/counted",-1183903931,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"counted","counted",1189969060,null),"sicmutils/util.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"initial-count","initial-count",530024616,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"initial-count","initial-count",530024616,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,15,15,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"initial-count","initial-count",530024616,null)], null)),"Takes a function and returns a pair of:\n\n  - an atom that keeps track of fn invocation counts,\n  - the instrumented fn",(cljs.core.truth_(sicmutils.util.counted)?sicmutils.util.counted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arithmetic-ex"),new cljs.core.Var(function(){return sicmutils.util.arithmetic_ex;},new cljs.core.Symbol("sicmutils.util","arithmetic-ex","sicmutils.util/arithmetic-ex",149516998,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"arithmetic-ex","arithmetic-ex",2003781159,null),"sicmutils/util.cljc",20,1,108,108,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.arithmetic_ex)?sicmutils.util.arithmetic_ex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("illegal"),new cljs.core.Var(function(){return sicmutils.util.illegal;},new cljs.core.Symbol("sicmutils.util","illegal","sicmutils.util/illegal",326197897,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"illegal","illegal",1626781480,null),"sicmutils/util.cljc",14,1,98,98,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.illegal)?sicmutils.util.illegal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("biginteger"),new cljs.core.Var(function(){return sicmutils.util.biginteger;},new cljs.core.Symbol("sicmutils.util","biginteger","sicmutils.util/biginteger",38059432,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"biginteger","biginteger",1355108809,null),"sicmutils/util.cljc",17,1,65,65,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.biginteger)?sicmutils.util.biginteger.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("long"),new cljs.core.Var(function(){return sicmutils.util.long$;},new cljs.core.Symbol("sicmutils.util","long","sicmutils.util/long",1679698733,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"long","long",1469079434,null),"sicmutils/util.cljc",11,1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.long$)?sicmutils.util.long$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("double"),new cljs.core.Var(function(){return sicmutils.util.double$;},new cljs.core.Symbol("sicmutils.util","double","sicmutils.util/double",1728088013,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"double","double",-1769548886,null),"sicmutils/util.cljc",13,1,77,77,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.double$)?sicmutils.util.double$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("re-matches?"),new cljs.core.Var(function(){return sicmutils.util.re_matches_QMARK_;},new cljs.core.Symbol("sicmutils.util","re-matches?","sicmutils.util/re-matches?",579332755,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"re-matches?","re-matches?",-217725652,null),"sicmutils/util.cljc",18,1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"re","re",1869207729,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if s matches the regex pattern re, false otherwise.",(cljs.core.truth_(sicmutils.util.re_matches_QMARK_)?sicmutils.util.re_matches_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("int"),new cljs.core.Var(function(){return sicmutils.util.int$;},new cljs.core.Symbol("sicmutils.util","int","sicmutils.util/int",-1350647342,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"int","int",-100885395,null),"sicmutils/util.cljc",10,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.int$)?sicmutils.util.int$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compute-sqrt"),new cljs.core.Var(function(){return sicmutils.util.compute_sqrt;},new cljs.core.Symbol("sicmutils.util","compute-sqrt","sicmutils.util/compute-sqrt",1381565646,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"compute-sqrt","compute-sqrt",-2067318931,null),"sicmutils/util.cljc",18,1,27,27,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.compute_sqrt)?sicmutils.util.compute_sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inttype"),new cljs.core.Var(function(){return sicmutils.util.inttype;},new cljs.core.Symbol("sicmutils.util","inttype","sicmutils.util/inttype",1117335919,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"inttype","inttype",-1877271282,null),"sicmutils/util.cljc",13,1,31,31,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.inttype)?sicmutils.util.inttype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bigint"),new cljs.core.Var(function(){return sicmutils.util.bigint;},new cljs.core.Symbol("sicmutils.util","bigint","sicmutils.util/bigint",-1438431697,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"bigint","bigint",-70405490,null),"sicmutils/util.cljc",13,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.bigint)?sicmutils.util.bigint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compute-abs"),new cljs.core.Var(function(){return sicmutils.util.compute_abs;},new cljs.core.Symbol("sicmutils.util","compute-abs","sicmutils.util/compute-abs",1592020238,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"compute-abs","compute-abs",224551279,null),"sicmutils/util.cljc",17,1,29,29,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.compute_abs)?sicmutils.util.compute_abs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compute-expt"),new cljs.core.Var(function(){return sicmutils.util.compute_expt;},new cljs.core.Symbol("sicmutils.util","compute-expt","sicmutils.util/compute-expt",-423172687,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"compute-expt","compute-expt",927241808,null),"sicmutils/util.cljc",18,1,28,28,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.compute_expt)?sicmutils.util.compute_expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("biginttype"),new cljs.core.Var(function(){return sicmutils.util.biginttype;},new cljs.core.Symbol("sicmutils.util","biginttype","sicmutils.util/biginttype",428109662,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"biginttype","biginttype",671497401,null),"sicmutils/util.cljc",16,1,30,30,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.util.biginttype)?sicmutils.util.biginttype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("illegal-state"),new cljs.core.Var(function(){return sicmutils.util.illegal_state;},new cljs.core.Symbol("sicmutils.util","illegal-state","sicmutils.util/illegal-state",1370536952,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"illegal-state","illegal-state",120680345,null),"sicmutils/util.cljc",20,1,103,103,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.illegal_state)?sicmutils.util.illegal_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("failure-to-converge"),new cljs.core.Var(function(){return sicmutils.util.failure_to_converge;},new cljs.core.Symbol("sicmutils.util","failure-to-converge","sicmutils.util/failure-to-converge",-1238852451,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"failure-to-converge","failure-to-converge",1638576378,null),"sicmutils/util.cljc",26,1,118,118,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.failure_to_converge)?sicmutils.util.failure_to_converge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map-vals"),new cljs.core.Var(function(){return sicmutils.util.map_vals;},new cljs.core.Symbol("sicmutils.util","map-vals","sicmutils.util/map-vals",-1649281285,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"map-vals","map-vals",-818445670,null),"sicmutils/util.cljc",15,1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns a map of identical type and key set to `m`, with each value `v`\n  transformed by the supplied function`f` into `(f v)`.",(cljs.core.truth_(sicmutils.util.map_vals)?sicmutils.util.map_vals.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("keyset"),new cljs.core.Var(function(){return sicmutils.util.keyset;},new cljs.core.Symbol("sicmutils.util","keyset","sicmutils.util/keyset",818356282,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"keyset","keyset",2135291099,null),"sicmutils/util.cljc",13,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(sicmutils.util.keyset)?sicmutils.util.keyset.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parse-bigint"),new cljs.core.Var(function(){return sicmutils.util.parse_bigint;},new cljs.core.Symbol("sicmutils.util","parse-bigint","sicmutils.util/parse-bigint",-1351213728,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"parse-bigint","parse-bigint",2129948991,null),"sicmutils/util.cljc",19,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.util.parse_bigint)?sicmutils.util.parse_bigint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exception"),new cljs.core.Var(function(){return sicmutils.util.exception;},new cljs.core.Symbol("sicmutils.util","exception","sicmutils.util/exception",-1673345380,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"exception","exception",1305254463,null),"sicmutils/util.cljc",16,1,86,86,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.exception)?sicmutils.util.exception.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unsupported"),new cljs.core.Var(function(){return sicmutils.util.unsupported;},new cljs.core.Symbol("sicmutils.util","unsupported","sicmutils.util/unsupported",-218650754,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util","sicmutils.util",-1785817153,null),new cljs.core.Symbol(null,"unsupported","unsupported",594924511,null),"sicmutils/util.cljc",18,1,81,81,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.util.unsupported)?sicmutils.util.unsupported.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x"),new cljs.core.Var(function(){return sicmutils.env.rotate_x;},new cljs.core.Symbol("sicmutils.env","rotate-x","sicmutils.env/rotate-x",-1540401872,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-x","rotate-x",-1991735296,null),"sicmutils/env.cljc",20,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_x)?sicmutils.env.rotate_x.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-form"),new cljs.core.Var(function(){return sicmutils.env.pullback_form;},new cljs.core.Symbol("sicmutils.env","pullback-form","sicmutils.env/pullback-form",442050640,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pullback-form","pullback-form",1098147136,null),"sicmutils/env.cljc",16,1,233,416,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pullback_form)?sicmutils.env.pullback_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->infix"),new cljs.core.Var(function(){return sicmutils.env.__GT_infix;},new cljs.core.Symbol("sicmutils.env","->infix","sicmutils.env/->infix",969864784,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->infix","->infix",347316576,null),"sicmutils/env.cljc",10,1,233,291,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_infix)?sicmutils.env.__GT_infix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3"),new cljs.core.Var(function(){return sicmutils.env.S3;},new cljs.core.Symbol("sicmutils.env","S3","sicmutils.env/S3",127326800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S3","S3",1919527328,null),"sicmutils/env.cljc",5,1,233,393,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S3)?sicmutils.env.S3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4"),new cljs.core.Var(function(){return sicmutils.env.R4;},new cljs.core.Symbol("sicmutils.env","R4","sicmutils.env/R4",649529392,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R4","R4",-879475264,null),"sicmutils/env.cljc",5,1,233,387,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R4)?sicmutils.env.R4.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.env.arity;},new cljs.core.Symbol("sicmutils.env","arity","sicmutils.env/arity",-829222768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/env.cljc",27,1,233,236,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.arity)?sicmutils.env.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Cartan"),new cljs.core.Var(function(){return sicmutils.env.make_Cartan;},new cljs.core.Symbol("sicmutils.env","make-Cartan","sicmutils.env/make-Cartan",-1889200464,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-Cartan","make-Cartan",-461348288,null),"sicmutils/env.cljc",14,1,233,322,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_Cartan)?sicmutils.env.make_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z"),new cljs.core.Var(function(){return sicmutils.env.rotate_z;},new cljs.core.Symbol("sicmutils.env","rotate-z","sicmutils.env/rotate-z",791498000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-z","rotate-z",933472,null),"sicmutils/env.cljc",38,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_z)?sicmutils.env.rotate_z.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame?"),new cljs.core.Var(function(){return sicmutils.env.frame_QMARK_;},new cljs.core.Symbol("sicmutils.env","frame?","sicmutils.env/frame?",-646962128,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"frame?","frame?",-229419232,null),"sicmutils/env.cljc",9,1,233,355,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.frame_QMARK_)?sicmutils.env.frame_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-pi"),new cljs.core.Var(function(){return sicmutils.env._pi;},new cljs.core.Symbol("sicmutils.env","-pi","sicmutils.env/-pi",-1337201040,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"-pi","-pi",-613600448,null),"sicmutils/env.cljc",6,1,164,166,cljs.core.List.EMPTY,"The negation of the mathematical\nconstant [Pi](https://en.wikipedia.org/wiki/Pi).",(cljs.core.truth_(sicmutils.env._pi)?sicmutils.env._pi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elliptic-f"),new cljs.core.Var(function(){return sicmutils.env.elliptic_f;},new cljs.core.Symbol("sicmutils.env","elliptic-f","sicmutils.env/elliptic-f",-2102523984,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"elliptic-f","elliptic-f",2039182144,null),"sicmutils/env.cljc",40,1,233,522,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.elliptic_f)?sicmutils.env.elliptic_f.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-stereographic"),new cljs.core.Var(function(){return sicmutils.env.S3_stereographic;},new cljs.core.Symbol("sicmutils.env","S3-stereographic","sicmutils.env/S3-stereographic",-25004912,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S3-stereographic","S3-stereographic",731850624,null),"sicmutils/env.cljc",45,1,233,393,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S3_stereographic)?sicmutils.env.S3_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("curl"),new cljs.core.Var(function(){return sicmutils.env.curl;},new cljs.core.Symbol("sicmutils.env","curl","sicmutils.env/curl",1503181873,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"curl","curl",213545217,null),"sicmutils/env.cljc",18,1,233,421,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.curl)?sicmutils.env.curl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian"),new cljs.core.Var(function(){return sicmutils.env.Hamiltonian;},new cljs.core.Symbol("sicmutils.env","Hamiltonian","sicmutils.env/Hamiltonian",-11654031,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Hamiltonian","Hamiltonian",-802031359,null),"sicmutils/env.cljc",14,1,233,486,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Hamiltonian)?sicmutils.env.Hamiltonian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->oneform-field"),new cljs.core.Var(function(){return sicmutils.env.vector_field__GT_oneform_field;},new cljs.core.Symbol("sicmutils.env","vector-field->oneform-field","sicmutils.env/vector-field->oneform-field",662381169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-field->oneform-field","vector-field->oneform-field",207224065,null),"sicmutils/env.cljc",36,1,233,403,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_field__GT_oneform_field)?sicmutils.env.vector_field__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integrate-state-derivative"),new cljs.core.Var(function(){return sicmutils.env.integrate_state_derivative;},new cljs.core.Symbol("sicmutils.env","integrate-state-derivative","sicmutils.env/integrate-state-derivative",1043124817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"integrate-state-derivative","integrate-state-derivative",1154163041,null),"sicmutils/env.cljc",29,1,233,510,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.integrate_state_derivative)?sicmutils.env.integrate_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq:print"),new cljs.core.Var(function(){return sicmutils.env.seq_COLON_print;},new cljs.core.Symbol("sicmutils.env","seq:print","sicmutils.env/seq:print",1361069201,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"seq:print","seq:print",-1136490111,null),"sicmutils/env.cljc",35,1,204,204,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.seq_COLON_print)?sicmutils.env.seq_COLON_print.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rx"),new cljs.core.Var(function(){return sicmutils.env.Rx;},new cljs.core.Symbol("sicmutils.env","Rx","sicmutils.env/Rx",1129887825,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Rx","Rx",410881441,null),"sicmutils/env.cljc",5,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Rx)?sicmutils.env.Rx.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gcd"),new cljs.core.Var(function(){return sicmutils.env.gcd;},new cljs.core.Symbol("sicmutils.env","gcd","sicmutils.env/gcd",1307560081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"gcd","gcd",1659909537,null),"sicmutils/env.cljc",6,1,233,257,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.gcd)?sicmutils.env.gcd.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("principal-value"),new cljs.core.Var(function(){return sicmutils.env.principal_value;},new cljs.core.Symbol("sicmutils.env","principal-value","sicmutils.env/principal-value",-1638276559,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"principal-value","principal-value",-344542783,null),"sicmutils/env.cljc",46,1,196,196,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.principal_value)?sicmutils.env.principal_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure?"),new cljs.core.Var(function(){return sicmutils.env.structure_QMARK_;},new cljs.core.Symbol("sicmutils.env","structure?","sicmutils.env/structure?",1886123729,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"structure?","structure?",-1962489375,null),"sicmutils/env.cljc",13,1,233,282,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.structure_QMARK_)?sicmutils.env.structure_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("numerical?"),new cljs.core.Var(function(){return sicmutils.env.numerical_QMARK_;},new cljs.core.Symbol("sicmutils.env","numerical?","sicmutils.env/numerical?",1014939377,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"numerical?","numerical?",286810593,null),"sicmutils/env.cljc",13,1,233,526,cljs.core.List.EMPTY,null,((sicmutils.env.numerical_QMARK_)?sicmutils.env.numerical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("boost-direction"),new cljs.core.Var(function(){return sicmutils.env.boost_direction;},new cljs.core.Symbol("sicmutils.env","boost-direction","sicmutils.env/boost-direction",-954337871,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"boost-direction","boost-direction",-335370591,null),"sicmutils/env.cljc",28,1,233,446,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.boost_direction)?sicmutils.env.boost_direction.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->basis-over-map"),new cljs.core.Var(function(){return sicmutils.env.basis__GT_basis_over_map;},new cljs.core.Symbol("sicmutils.env","basis->basis-over-map","sicmutils.env/basis->basis-over-map",-103050447,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis->basis-over-map","basis->basis-over-map",-689512767,null),"sicmutils/env.cljc",24,1,233,415,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis__GT_basis_over_map)?sicmutils.env.basis__GT_basis_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system-at"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system_at;},new cljs.core.Symbol("sicmutils.env","coordinate-system-at","sicmutils.env/coordinate-system-at",-1220398159,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system-at","coordinate-system-at",-933140671,null),"sicmutils/env.cljc",37,1,233,370,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system_at)?sicmutils.env.coordinate_system_at.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-like"),new cljs.core.Var(function(){return sicmutils.env.zero_like;},new cljs.core.Symbol("sicmutils.env","zero-like","sicmutils.env/zero-like",662713009,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"zero-like","zero-like",-895025247,null),"sicmutils/env.cljc",12,1,233,525,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.zero_like)?sicmutils.env.zero_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-cyl"),new cljs.core.Var(function(){return sicmutils.env.R3_cyl;},new cljs.core.Symbol("sicmutils.env","R3-cyl","sicmutils.env/R3-cyl",1716546769,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R3-cyl","R3-cyl",-1317838879,null),"sicmutils/env.cljc",20,1,233,386,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R3_cyl)?sicmutils.env.R3_cyl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1"),new cljs.core.Var(function(){return sicmutils.env.S1;},new cljs.core.Symbol("sicmutils.env","S1","sicmutils.env/S1",323249554,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S1","S1",1013002370,null),"sicmutils/env.cljc",5,1,233,390,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S1)?sicmutils.env.S1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x-tuple"),new cljs.core.Var(function(){return sicmutils.env.rotate_x_tuple;},new cljs.core.Symbol("sicmutils.env","rotate-x-tuple","sicmutils.env/rotate-x-tuple",-316073966,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-x-tuple","rotate-x-tuple",-1878274782,null),"sicmutils/env.cljc",17,1,233,505,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_x_tuple)?sicmutils.env.rotate_x_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coth"),new cljs.core.Var(function(){return sicmutils.env.coth;},new cljs.core.Symbol("sicmutils.env","coth","sicmutils.env/coth",-1401126478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coth","coth",1130257730,null),"sicmutils/env.cljc",22,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coth)?sicmutils.env.coth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis-oneform-field"),new cljs.core.Var(function(){return sicmutils.env.coordinate_basis_oneform_field;},new cljs.core.Symbol("sicmutils.env","coordinate-basis-oneform-field","sicmutils.env/coordinate-basis-oneform-field",752045650,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-basis-oneform-field","coordinate-basis-oneform-field",-68149918,null),"sicmutils/env.cljc",33,1,233,345,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_basis_oneform_field)?sicmutils.env.coordinate_basis_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis-components->oneform-field"),new cljs.core.Var(function(){return sicmutils.env.basis_components__GT_oneform_field;},new cljs.core.Symbol("sicmutils.env","basis-components->oneform-field","sicmutils.env/basis-components->oneform-field",-705027950,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis-components->oneform-field","basis-components->oneform-field",785978786,null),"sicmutils/env.cljc",34,1,233,347,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis_components__GT_oneform_field)?sicmutils.env.basis_components__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Ry"),new cljs.core.Var(function(){return sicmutils.env.Ry;},new cljs.core.Symbol("sicmutils.env","Ry","sicmutils.env/Ry",1409045266,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Ry","Ry",249628162,null),"sicmutils/env.cljc",8,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Ry)?sicmutils.env.Ry.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SO3-type"),new cljs.core.Var(function(){return sicmutils.env.SO3_type;},new cljs.core.Symbol("sicmutils.env","SO3-type","sicmutils.env/SO3-type",-2052386446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"SO3-type","SO3-type",-259399070,null),"sicmutils/env.cljc",11,1,233,394,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.SO3_type)?sicmutils.env.SO3_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acceleration"),new cljs.core.Var(function(){return sicmutils.env.acceleration;},new cljs.core.Symbol("sicmutils.env","acceleration","sicmutils.env/acceleration",1282620242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acceleration","acceleration",426643106,null),"sicmutils/env.cljc",44,1,233,469,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acceleration)?sicmutils.env.acceleration.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Lagrangian-state"),new cljs.core.Var(function(){return sicmutils.env.literal_Lagrangian_state;},new cljs.core.Symbol("sicmutils.env","literal-Lagrangian-state","sicmutils.env/literal-Lagrangian-state",1722715954,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-Lagrangian-state","literal-Lagrangian-state",206160578,null),"sicmutils/env.cljc",27,1,233,453,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_Lagrangian_state)?sicmutils.env.literal_Lagrangian_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-x-matrix"),new cljs.core.Var(function(){return sicmutils.env.rotate_x_matrix;},new cljs.core.Symbol("sicmutils.env","rotate-x-matrix","sicmutils.env/rotate-x-matrix",-1123966670,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-x-matrix","rotate-x-matrix",-1071484222,null),"sicmutils/env.cljc",18,1,233,503,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_x_matrix)?sicmutils.env.rotate_x_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential"),new cljs.core.Var(function(){return sicmutils.env.differential;},new cljs.core.Symbol("sicmutils.env","differential","sicmutils.env/differential",2049229298,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"differential","differential",1372034786,null),"sicmutils/env.cljc",35,1,233,410,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.differential)?sicmutils.env.differential.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("argument-types"),new cljs.core.Var(function(){return sicmutils.env.argument_types;},new cljs.core.Symbol("sicmutils.env","argument-types","sicmutils.env/argument-types",-742710094,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"argument-types","argument-types",-1135318142,null),"sicmutils/env.cljc",17,1,233,364,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.argument_types)?sicmutils.env.argument_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gamma"),new cljs.core.Var(function(){return sicmutils.env.Gamma;},new cljs.core.Symbol("sicmutils.env","Gamma","sicmutils.env/Gamma",-229811022,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Gamma","Gamma",681602978,null),"sicmutils/env.cljc",8,1,233,457,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Gamma)?sicmutils.env.Gamma.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negate"),new cljs.core.Var(function(){return sicmutils.env.negate;},new cljs.core.Symbol("sicmutils.env","negate","sicmutils.env/negate",-1056175022,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"negate","negate",337772450,null),"sicmutils/env.cljc",9,1,233,246,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.negate)?sicmutils.env.negate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2-rect"),new cljs.core.Var(function(){return sicmutils.env.R2_rect;},new cljs.core.Symbol("sicmutils.env","R2-rect","sicmutils.env/R2-rect",1523405554,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R2-rect","R2-rect",1642598370,null),"sicmutils/env.cljc",13,1,233,385,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R2_rect)?sicmutils.env.R2_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinhc"),new cljs.core.Var(function(){return sicmutils.env.sinhc;},new cljs.core.Symbol("sicmutils.env","sinhc","sicmutils.env/sinhc",-990750062,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sinhc","sinhc",-1445515294,null),"sicmutils/env.cljc",18,1,233,266,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sinhc)?sicmutils.env.sinhc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-rectangular"),new cljs.core.Var(function(){return sicmutils.env.make_rectangular;},new cljs.core.Symbol("sicmutils.env","make-rectangular","sicmutils.env/make-rectangular",-1694232942,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-rectangular","make-rectangular",-1494662174,null),"sicmutils/env.cljc",19,1,233,267,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_rectangular)?sicmutils.env.make_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real-part"),new cljs.core.Var(function(){return sicmutils.env.real_part;},new cljs.core.Symbol("sicmutils.env","real-part","sicmutils.env/real-part",-1547122893,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"real-part","real-part",-2001752061,null),"sicmutils/env.cljc",12,1,233,268,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.real_part)?sicmutils.env.real_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->Cartan"),new cljs.core.Var(function(){return sicmutils.env.Christoffel__GT_Cartan;},new cljs.core.Symbol("sicmutils.env","Christoffel->Cartan","sicmutils.env/Christoffel->Cartan",-1515048109,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Christoffel->Cartan","Christoffel->Cartan",-24052573,null),"sicmutils/env.cljc",22,1,233,325,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Christoffel__GT_Cartan)?sicmutils.env.Christoffel__GT_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("general-boost"),new cljs.core.Var(function(){return sicmutils.env.general_boost;},new cljs.core.Symbol("sicmutils.env","general-boost","sicmutils.env/general-boost",-1205024973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"general-boost","general-boost",-313944893,null),"sicmutils/env.cljc",16,1,233,441,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.general_boost)?sicmutils.env.general_boost.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-vector-field"),new cljs.core.Var(function(){return sicmutils.env.literal_vector_field;},new cljs.core.Symbol("sicmutils.env","literal-vector-field","sicmutils.env/literal-vector-field",1322989523,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-vector-field","literal-vector-field",1681711331,null),"sicmutils/env.cljc",23,1,233,428,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_vector_field)?sicmutils.env.literal_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("="),new cljs.core.Var(function(){return sicmutils.env._EQ_;},new cljs.core.Symbol("sicmutils.env","=","sicmutils.env/=",2087073363,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"=","=",-1501502141,null),"sicmutils/env.cljc",20,1,233,524,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env._EQ_)?sicmutils.env._EQ_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-slope"),new cljs.core.Var(function(){return sicmutils.env.S1_slope;},new cljs.core.Symbol("sicmutils.env","S1-slope","sicmutils.env/S1-slope",-1879236557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S1-slope","S1-slope",-1191127613,null),"sicmutils/env.cljc",36,1,233,390,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S1_slope)?sicmutils.env.S1_slope.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asinh"),new cljs.core.Var(function(){return sicmutils.env.asinh;},new cljs.core.Symbol("sicmutils.env","asinh","sicmutils.env/asinh",-74848205,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"asinh","asinh",-1398350397,null),"sicmutils/env.cljc",14,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.asinh)?sicmutils.env.asinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log"),new cljs.core.Var(function(){return sicmutils.env.log;},new cljs.core.Symbol("sicmutils.env","log","sicmutils.env/log",-645713197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"log","log",45015523,null),"sicmutils/env.cljc",6,1,233,256,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.log)?sicmutils.env.log.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-rect"),new cljs.core.Var(function(){return sicmutils.env.R3_rect;},new cljs.core.Symbol("sicmutils.env","R3-rect","sicmutils.env/R3-rect",197088627,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R3-rect","R3-rect",-421879293,null),"sicmutils/env.cljc",13,1,233,386,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R3_rect)?sicmutils.env.R3_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp10"),new cljs.core.Var(function(){return sicmutils.env.exp10;},new cljs.core.Symbol("sicmutils.env","exp10","sicmutils.env/exp10",792350483,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exp10","exp10",-1005012445,null),"sicmutils/env.cljc",17,1,233,255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.exp10)?sicmutils.env.exp10.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up?"),new cljs.core.Var(function(){return sicmutils.env.up_QMARK_;},new cljs.core.Symbol("sicmutils.env","up?","sicmutils.env/up?",863177651,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"up?","up?",1718386499,null),"sicmutils/env.cljc",6,1,233,284,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.up_QMARK_)?sicmutils.env.up_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acos"),new cljs.core.Var(function(){return sicmutils.env.acos;},new cljs.core.Symbol("sicmutils.env","acos","sicmutils.env/acos",1040750803,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acos","acos",353741763,null),"sicmutils/env.cljc",7,1,233,263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acos)?sicmutils.env.acos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bigint?"),new cljs.core.Var(function(){return sicmutils.env.bigint_QMARK_;},new cljs.core.Symbol("sicmutils.env","bigint?","sicmutils.env/bigint?",-31037228,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"bigint?","bigint?",-1865894876,null),"sicmutils/env.cljc",25,1,233,242,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.bigint_QMARK_)?sicmutils.env.bigint_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->vector-basis"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_vector_basis;},new cljs.core.Symbol("sicmutils.env","coordinate-system->vector-basis","sicmutils.env/coordinate-system->vector-basis",-1516662348,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->vector-basis","coordinate-system->vector-basis",-1896061788,null),"sicmutils/env.cljc",34,1,233,430,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_vector_basis)?sicmutils.env.coordinate_system__GT_vector_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan-transform"),new cljs.core.Var(function(){return sicmutils.env.Cartan_transform;},new cljs.core.Symbol("sicmutils.env","Cartan-transform","sicmutils.env/Cartan-transform",950717396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan-transform","Cartan-transform",397778116,null),"sicmutils/env.cljc",19,1,233,328,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan_transform)?sicmutils.env.Cartan_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("floor"),new cljs.core.Var(function(){return sicmutils.env.floor;},new cljs.core.Symbol("sicmutils.env","floor","sicmutils.env/floor",722797620,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"floor","floor",-772394748,null),"sicmutils/env.cljc",8,1,233,252,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.floor)?sicmutils.env.floor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector->down"),new cljs.core.Var(function(){return sicmutils.env.vector__GT_down;},new cljs.core.Symbol("sicmutils.env","vector->down","sicmutils.env/vector->down",375301652,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector->down","vector->down",595456260,null),"sicmutils/env.cljc",15,1,233,285,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector__GT_down)?sicmutils.env.vector__GT_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->t"),new cljs.core.Var(function(){return sicmutils.env.state__GT_t;},new cljs.core.Symbol("sicmutils.env","state->t","sicmutils.env/state->t",-174168460,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"state->t","state->t",460567876,null),"sicmutils/env.cljc",11,1,233,469,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.state__GT_t)?sicmutils.env.state__GT_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime-rect"),new cljs.core.Var(function(){return sicmutils.env.spacetime_rect;},new cljs.core.Symbol("sicmutils.env","spacetime-rect","sicmutils.env/spacetime-rect",1050823348,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"spacetime-rect","spacetime-rect",-779647580,null),"sicmutils/env.cljc",27,1,233,388,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.spacetime_rect)?sicmutils.env.spacetime_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("brent-max"),new cljs.core.Var(function(){return sicmutils.env.brent_max;},new cljs.core.Symbol("sicmutils.env","brent-max","sicmutils.env/brent-max",-331951372,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"brent-max","brent-max",-942668348,null),"sicmutils/env.cljc",22,1,233,515,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.brent_max)?sicmutils.env.brent_max.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-gnomonic"),new cljs.core.Var(function(){return sicmutils.env.S2_gnomonic;},new cljs.core.Symbol("sicmutils.env","S2-gnomonic","sicmutils.env/S2-gnomonic",22913780,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-gnomonic","S2-gnomonic",876138980,null),"sicmutils/env.cljc",76,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_gnomonic)?sicmutils.env.S2_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-origin"),new cljs.core.Var(function(){return sicmutils.env.coordinate_origin;},new cljs.core.Symbol("sicmutils.env","coordinate-origin","sicmutils.env/coordinate-origin",-1627248652,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-origin","coordinate-origin",-1339747644,null),"sicmutils/env.cljc",50,1,233,446,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_origin)?sicmutils.env.coordinate_origin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("velocity"),new cljs.core.Var(function(){return sicmutils.env.velocity;},new cljs.core.Symbol("sicmutils.env","velocity","sicmutils.env/velocity",306053108,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"velocity","velocity",1059007172,null),"sicmutils/env.cljc",31,1,233,469,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.velocity)?sicmutils.env.velocity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("form-field?"),new cljs.core.Var(function(){return sicmutils.env.form_field_QMARK_;},new cljs.core.Symbol("sicmutils.env","form-field?","sicmutils.env/form-field?",-1618273740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"form-field?","form-field?",1252796196,null),"sicmutils/env.cljc",14,1,233,340,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.form_field_QMARK_)?sicmutils.env.form_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-up"),new cljs.core.Var(function(){return sicmutils.env.literal_up;},new cljs.core.Symbol("sicmutils.env","literal-up","sicmutils.env/literal-up",731259860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-up","literal-up",2121652004,null),"sicmutils/env.cljc",26,1,233,286,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_up)?sicmutils.env.literal_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold?"),new cljs.core.Var(function(){return sicmutils.env.manifold_QMARK_;},new cljs.core.Symbol("sicmutils.env","manifold?","sicmutils.env/manifold?",300463060,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"manifold?","manifold?",-57809116,null),"sicmutils/env.cljc",12,1,233,373,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.manifold_QMARK_)?sicmutils.env.manifold_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector:generate"),new cljs.core.Var(function(){return sicmutils.env.vector_COLON_generate;},new cljs.core.Symbol("sicmutils.env","vector:generate","sicmutils.env/vector:generate",-1687619500,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector:generate","vector:generate",1316333380,null),"sicmutils/env.cljc",40,1,233,521,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_COLON_generate)?sicmutils.env.vector_COLON_generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Laplacian"),new cljs.core.Var(function(){return sicmutils.env.Laplacian;},new cljs.core.Symbol("sicmutils.env","Laplacian","sicmutils.env/Laplacian",-287705516,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Laplacian","Laplacian",-1308705980,null),"sicmutils/env.cljc",37,1,233,421,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Laplacian)?sicmutils.env.Laplacian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vf:zero"),new cljs.core.Var(function(){return sicmutils.env.vf_COLON_zero;},new cljs.core.Symbol("sicmutils.env","vf:zero","sicmutils.env/vf:zero",-1453493548,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vf:zero","vf:zero",-742903868,null),"sicmutils/env.cljc",10,1,233,427,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vf_COLON_zero)?sicmutils.env.vf_COLON_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Christoffel-1"),new cljs.core.Var(function(){return sicmutils.env.make_Christoffel_1;},new cljs.core.Symbol("sicmutils.env","make-Christoffel-1","sicmutils.env/make-Christoffel-1",1367438484,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-Christoffel-1","make-Christoffel-1",77741028,null),"sicmutils/env.cljc",21,1,233,310,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_Christoffel_1)?sicmutils.env.make_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("event?"),new cljs.core.Var(function(){return sicmutils.env.event_QMARK_;},new cljs.core.Symbol("sicmutils.env","event?","sicmutils.env/event?",2074076437,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"event?","event?",-2038386683,null),"sicmutils/env.cljc",27,1,233,355,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.event_QMARK_)?sicmutils.env.event_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-manifold-function"),new cljs.core.Var(function(){return sicmutils.env.literal_manifold_function;},new cljs.core.Symbol("sicmutils.env","literal-manifold-function","sicmutils.env/literal-manifold-function",-7961835,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-manifold-function","literal-manifold-function",-894930843,null),"sicmutils/env.cljc",28,1,233,379,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_manifold_function)?sicmutils.env.literal_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity?"),new cljs.core.Var(function(){return sicmutils.env.identity_QMARK_;},new cljs.core.Symbol("sicmutils.env","identity?","sicmutils.env/identity?",-1637280331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"identity?","identity?",-1064576891,null),"sicmutils/env.cljc",56,1,233,524,cljs.core.List.EMPTY,null,((sicmutils.env.identity_QMARK_)?sicmutils.env.identity_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Jacobian"),new cljs.core.Var(function(){return sicmutils.env.Jacobian;},new cljs.core.Symbol("sicmutils.env","Jacobian","sicmutils.env/Jacobian",1961130325,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Jacobian","Jacobian",-1342622555,null),"sicmutils/env.cljc",11,1,233,307,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Jacobian)?sicmutils.env.Jacobian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->basis-components"),new cljs.core.Var(function(){return sicmutils.env.oneform_field__GT_basis_components;},new cljs.core.Symbol("sicmutils.env","oneform-field->basis-components","sicmutils.env/oneform-field->basis-components",632023509,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"oneform-field->basis-components","oneform-field->basis-components",524891333,null),"sicmutils/env.cljc",34,1,233,348,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.oneform_field__GT_basis_components)?sicmutils.env.oneform_field__GT_basis_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinc"),new cljs.core.Var(function(){return sicmutils.env.sinc;},new cljs.core.Symbol("sicmutils.env","sinc","sicmutils.env/sinc",1970618357,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sinc","sinc",60189925,null),"sicmutils/env.cljc",7,1,233,266,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sinc)?sicmutils.env.sinc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Sn"),new cljs.core.Var(function(){return sicmutils.env.Sn;},new cljs.core.Symbol("sicmutils.env","Sn","sicmutils.env/Sn",-604105163,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Sn","Sn",-153298683,null),"sicmutils/env.cljc",5,1,233,389,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Sn)?sicmutils.env.Sn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-type"),new cljs.core.Var(function(){return sicmutils.env.manifold_type;},new cljs.core.Symbol("sicmutils.env","manifold-type","sicmutils.env/manifold-type",-328039755,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"manifold-type","manifold-type",-2024681051,null),"sicmutils/env.cljc",16,1,233,371,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.manifold_type)?sicmutils.env.manifold_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanh"),new cljs.core.Var(function(){return sicmutils.env.tanh;},new cljs.core.Symbol("sicmutils.env","tanh","sicmutils.env/tanh",1262502165,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tanh","tanh",480481797,null),"sicmutils/env.cljc",17,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.tanh)?sicmutils.env.tanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->symbols"),new cljs.core.Var(function(){return sicmutils.env.Christoffel__GT_symbols;},new cljs.core.Symbol("sicmutils.env","Christoffel->symbols","sicmutils.env/Christoffel->symbols",-1653671563,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Christoffel->symbols","Christoffel->symbols",-397563291,null),"sicmutils/env.cljc",53,1,233,323,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Christoffel__GT_symbols)?sicmutils.env.Christoffel__GT_symbols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-event"),new cljs.core.Var(function(){return sicmutils.env.make_event;},new cljs.core.Symbol("sicmutils.env","make-event","sicmutils.env/make-event",-471627403,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-event","make-event",-855573915,null),"sicmutils/env.cljc",20,1,233,355,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_event)?sicmutils.env.make_event.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sech"),new cljs.core.Var(function(){return sicmutils.env.sech;},new cljs.core.Symbol("sicmutils.env","sech","sicmutils.env/sech",-1765931627,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sech","sech",-1403979131,null),"sicmutils/env.cljc",27,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sech)?sicmutils.env.sech.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tex$$"),new cljs.core.Var(function(){return sicmutils.env.tex$$;},new cljs.core.Symbol("sicmutils.env","tex$$","sicmutils.env/tex$$",2065255829,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tex$$","tex$$",275226341,null),"sicmutils/env.cljc",12,1,218,218,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Returns a string containing a LaTeX representation of `expr`, wrapped in double\n  `$$` to mark the string as a block LaTeX form.",(cljs.core.truth_(sicmutils.env.tex$$)?sicmutils.env.tex$$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sum"),new cljs.core.Var(function(){return sicmutils.env.sum;},new cljs.core.Symbol("sicmutils.env","sum","sicmutils.env/sum",-1294199787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sum","sum",1777518341,null),"sicmutils/env.cljc",31,1,233,520,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sum)?sicmutils.env.sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise2"),new cljs.core.Var(function(){return sicmutils.env.raise2;},new cljs.core.Symbol("sicmutils.env","raise2","sicmutils.env/raise2",-888193515,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"raise2","raise2",-1138595067,null),"sicmutils/env.cljc",15,1,233,405,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.raise2)?sicmutils.env.raise2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->oneform-basis"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_oneform_basis;},new cljs.core.Symbol("sicmutils.env","coordinate-system->oneform-basis","sicmutils.env/coordinate-system->oneform-basis",2120829973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->oneform-basis","coordinate-system->oneform-basis",1426882309,null),"sicmutils/env.cljc",35,1,233,346,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_oneform_basis)?sicmutils.env.coordinate_system__GT_oneform_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Dt"),new cljs.core.Var(function(){return sicmutils.env.Dt;},new cljs.core.Symbol("sicmutils.env","Dt","sicmutils.env/Dt",1750616149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Dt","Dt",389881669,null),"sicmutils/env.cljc",5,1,233,454,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Dt)?sicmutils.env.Dt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typical-point"),new cljs.core.Var(function(){return sicmutils.env.typical_point;},new cljs.core.Symbol("sicmutils.env","typical-point","sicmutils.env/typical-point",-733348779,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"typical-point","typical-point",-1087714491,null),"sicmutils/env.cljc",31,1,233,377,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.typical_point)?sicmutils.env.typical_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down->row-matrix"),new cljs.core.Var(function(){return sicmutils.env.down__GT_row_matrix;},new cljs.core.Symbol("sicmutils.env","down->row-matrix","sicmutils.env/down->row-matrix",-1708928202,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"down->row-matrix","down->row-matrix",1694498822,null),"sicmutils/env.cljc",19,1,233,479,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.down__GT_row_matrix)?sicmutils.env.down__GT_row_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->components"),new cljs.core.Var(function(){return sicmutils.env.oneform_field__GT_components;},new cljs.core.Symbol("sicmutils.env","oneform-field->components","sicmutils.env/oneform-field->components",1378157782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"oneform-field->components","oneform-field->components",154814502,null),"sicmutils/env.cljc",28,1,233,343,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.oneform_field__GT_components)?sicmutils.env.oneform_field__GT_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.env.invert;},new cljs.core.Symbol("sicmutils.env","invert","sicmutils.env/invert",1753313558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/env.cljc",9,1,233,248,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.invert)?sicmutils.env.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Ricci"),new cljs.core.Var(function(){return sicmutils.env.Ricci;},new cljs.core.Symbol("sicmutils.env","Ricci","sicmutils.env/Ricci",-1071055370,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Ricci","Ricci",1070475462,null),"sicmutils/env.cljc",34,1,233,333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Ricci)?sicmutils.env.Ricci.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("alt-wedge"),new cljs.core.Var(function(){return sicmutils.env.alt_wedge;},new cljs.core.Symbol("sicmutils.env","alt-wedge","sicmutils.env/alt-wedge",892184086,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"alt-wedge","alt-wedge",-1039108858,null),"sicmutils/env.cljc",16,1,233,351,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.alt_wedge)?sicmutils.env.alt_wedge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exterior-derivative"),new cljs.core.Var(function(){return sicmutils.env.exterior_derivative;},new cljs.core.Symbol("sicmutils.env","exterior-derivative","sicmutils.env/exterior-derivative",910392790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exterior-derivative","exterior-derivative",465479974,null),"sicmutils/env.cljc",22,1,233,352,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.exterior_derivative)?sicmutils.env.exterior_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symmetrize-Cartan"),new cljs.core.Var(function(){return sicmutils.env.symmetrize_Cartan;},new cljs.core.Symbol("sicmutils.env","symmetrize-Cartan","sicmutils.env/symmetrize-Cartan",1810122326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"symmetrize-Cartan","symmetrize-Cartan",1090588998,null),"sicmutils/env.cljc",20,1,233,327,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.symmetrize_Cartan)?sicmutils.env.symmetrize_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("torsion-vector"),new cljs.core.Var(function(){return sicmutils.env.torsion_vector;},new cljs.core.Symbol("sicmutils.env","torsion-vector","sicmutils.env/torsion-vector",-670817674,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"torsion-vector","torsion-vector",-479497882,null),"sicmutils/env.cljc",49,1,233,333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.torsion_vector)?sicmutils.env.torsion_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("claim"),new cljs.core.Var(function(){return sicmutils.env.claim;},new cljs.core.Symbol("sicmutils.env","claim","sicmutils.env/claim",310824118,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"claim","claim",665172358,null),"sicmutils/env.cljc",33,1,233,355,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.claim)?sicmutils.env.claim.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divergence"),new cljs.core.Var(function(){return sicmutils.env.divergence;},new cljs.core.Symbol("sicmutils.env","divergence","sicmutils.env/divergence",1901495958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"divergence","divergence",175362438,null),"sicmutils/env.cljc",13,1,233,421,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.divergence)?sicmutils.env.divergence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-manifold-map"),new cljs.core.Var(function(){return sicmutils.env.literal_manifold_map;},new cljs.core.Symbol("sicmutils.env","literal-manifold-map","sicmutils.env/literal-manifold-map",-605233866,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-manifold-map","literal-manifold-map",915017254,null),"sicmutils/env.cljc",23,1,233,412,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_manifold_map)?sicmutils.env.literal_manifold_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add-velocities"),new cljs.core.Var(function(){return sicmutils.env.add_velocities;},new cljs.core.Symbol("sicmutils.env","add-velocities","sicmutils.env/add-velocities",2014483798,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"add-velocities","add-velocities",1395500614,null),"sicmutils/env.cljc",26,1,233,447,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.add_velocities)?sicmutils.env.add_velocities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("four-tuple->space"),new cljs.core.Var(function(){return sicmutils.env.four_tuple__GT_space;},new cljs.core.Symbol("sicmutils.env","four-tuple->space","sicmutils.env/four-tuple->space",-728127946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"four-tuple->space","four-tuple->space",-4527322,null),"sicmutils/env.cljc",35,1,233,439,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.four_tuple__GT_space)?sicmutils.env.four_tuple__GT_space.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compose"),new cljs.core.Var(function(){return sicmutils.env.compose;},new cljs.core.Symbol("sicmutils.env","compose","sicmutils.env/compose",794701623,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"compose","compose",1144740903,null),"sicmutils/env.cljc",35,1,233,236,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.compose)?sicmutils.env.compose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinatize"),new cljs.core.Var(function(){return sicmutils.env.coordinatize;},new cljs.core.Symbol("sicmutils.env","coordinatize","sicmutils.env/coordinatize",-1082594409,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinatize","coordinatize",-1986275097,null),"sicmutils/env.cljc",15,1,233,433,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinatize)?sicmutils.env.coordinatize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-tilted"),new cljs.core.Var(function(){return sicmutils.env.S3_tilted;},new cljs.core.Symbol("sicmutils.env","S3-tilted","sicmutils.env/S3-tilted",1222691415,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S3-tilted","S3-tilted",-1815929529,null),"sicmutils/env.cljc",28,1,233,393,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S3_tilted)?sicmutils.env.S3_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-Riemann"),new cljs.core.Var(function(){return sicmutils.env.S2_Riemann;},new cljs.core.Symbol("sicmutils.env","S2-Riemann","sicmutils.env/S2-Riemann",-949597481,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-Riemann","S2-Riemann",940087751,null),"sicmutils/env.cljc",64,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_Riemann)?sicmutils.env.S2_Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-four-tuple"),new cljs.core.Var(function(){return sicmutils.env.make_four_tuple;},new cljs.core.Symbol("sicmutils.env","make-four-tuple","sicmutils.env/make-four-tuple",-1326002953,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-four-tuple","make-four-tuple",-2053785145,null),"sicmutils/env.cljc",18,1,233,438,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_four_tuple)?sicmutils.env.make_four_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("phi"),new cljs.core.Var(function(){return sicmutils.env.phi;},new cljs.core.Symbol("sicmutils.env","phi","sicmutils.env/phi",807549815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"phi","phi",113733223,null),"sicmutils/env.cljc",6,1,180,183,cljs.core.List.EMPTY,"The mathematical\n  constant [\uD835\uDF11](https://en.wikipedia.org/wiki/Golden_ratio), also known as the\n  Golden Ratio.",(cljs.core.truth_(sicmutils.env.phi)?sicmutils.env.phi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->C"),new cljs.core.Var(function(){return sicmutils.env.F__GT_C;},new cljs.core.Symbol("sicmutils.env","F->C","sicmutils.env/F->C",-357915689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"F->C","F->C",-977930553,null),"sicmutils/env.cljc",7,1,233,456,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.F__GT_C)?sicmutils.env.F__GT_C.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("conjugate"),new cljs.core.Var(function(){return sicmutils.env.conjugate;},new cljs.core.Symbol("sicmutils.env","conjugate","sicmutils.env/conjugate",-1784850409,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"conjugate","conjugate",-1063123193,null),"sicmutils/env.cljc",28,1,233,269,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.conjugate)?sicmutils.env.conjugate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-spherical"),new cljs.core.Var(function(){return sicmutils.env.R3_spherical;},new cljs.core.Symbol("sicmutils.env","R3-spherical","sicmutils.env/R3-spherical",173089879,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R3-spherical","R3-spherical",934549319,null),"sicmutils/env.cljc",33,1,233,386,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R3_spherical)?sicmutils.env.R3_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Div"),new cljs.core.Var(function(){return sicmutils.env.Div;},new cljs.core.Symbol("sicmutils.env","Div","sicmutils.env/Div",1097460343,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Div","Div",2085306215,null),"sicmutils/env.cljc",6,1,233,420,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Div)?sicmutils.env.Div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-derivative"),new cljs.core.Var(function(){return sicmutils.env.Lie_derivative;},new cljs.core.Symbol("sicmutils.env","Lie-derivative","sicmutils.env/Lie-derivative",-1360210185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lie-derivative","Lie-derivative",-641072185,null),"sicmutils/env.cljc",36,1,233,272,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lie_derivative)?sicmutils.env.Lie_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pi"),new cljs.core.Var(function(){return sicmutils.env.pi;},new cljs.core.Symbol("sicmutils.env","pi","sicmutils.env/pi",569272536,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pi","pi",176774184,null),"sicmutils/env.cljc",5,1,162,163,cljs.core.List.EMPTY,"The mathematical constant [Pi](https://en.wikipedia.org/wiki/Pi).",(cljs.core.truth_(sicmutils.env.pi)?sicmutils.env.pi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear"),new cljs.core.Var(function(){return sicmutils.env.solve_linear;},new cljs.core.Symbol("sicmutils.env","solve-linear","sicmutils.env/solve-linear",-1051322184,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"solve-linear","solve-linear",481545288,null),"sicmutils/env.cljc",15,1,233,273,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.solve_linear)?sicmutils.env.solve_linear.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->oneform-field"),new cljs.core.Var(function(){return sicmutils.env.components__GT_oneform_field;},new cljs.core.Symbol("sicmutils.env","components->oneform-field","sicmutils.env/components->oneform-field",-732812552,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"components->oneform-field","components->oneform-field",997325256,null),"sicmutils/env.cljc",28,1,233,342,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.components__GT_oneform_field)?sicmutils.env.components__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis?"),new cljs.core.Var(function(){return sicmutils.env.basis_QMARK_;},new cljs.core.Symbol("sicmutils.env","basis?","sicmutils.env/basis?",587331736,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis?","basis?",1311714792,null),"sicmutils/env.cljc",9,1,233,298,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis_QMARK_)?sicmutils.env.basis_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->typed"),new cljs.core.Var(function(){return sicmutils.env.structure__GT_typed;},new cljs.core.Symbol("sicmutils.env","structure->typed","sicmutils.env/structure->typed",-1164825960,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"structure->typed","structure->typed",-1854577176,null),"sicmutils/env.cljc",36,1,233,367,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.structure__GT_typed)?sicmutils.env.structure__GT_typed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->state-derivative"),new cljs.core.Var(function(){return sicmutils.env.Lagrangian__GT_state_derivative;},new cljs.core.Symbol("sicmutils.env","Lagrangian->state-derivative","sicmutils.env/Lagrangian->state-derivative",2039152408,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrangian->state-derivative","Lagrangian->state-derivative",1286195816,null),"sicmutils/env.cljc",31,1,233,463,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrangian__GT_state_derivative)?sicmutils.env.Lagrangian__GT_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("polar-canonical"),new cljs.core.Var(function(){return sicmutils.env.polar_canonical;},new cljs.core.Symbol("sicmutils.env","polar-canonical","sicmutils.env/polar-canonical",-2001177672,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"polar-canonical","polar-canonical",-1550139768,null),"sicmutils/env.cljc",18,1,233,496,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.polar_canonical)?sicmutils.env.polar_canonical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-spherical"),new cljs.core.Var(function(){return sicmutils.env.S2_spherical;},new cljs.core.Symbol("sicmutils.env","S2-spherical","sicmutils.env/S2-spherical",657682936,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-spherical","S2-spherical",173450952,null),"sicmutils/env.cljc",26,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_spherical)?sicmutils.env.S2_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("chinese-remainder"),new cljs.core.Var(function(){return sicmutils.env.chinese_remainder;},new cljs.core.Symbol("sicmutils.env","chinese-remainder","sicmutils.env/chinese-remainder",664595960,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"chinese-remainder","chinese-remainder",-54537496,null),"sicmutils/env.cljc",37,1,233,237,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.chinese_remainder)?sicmutils.env.chinese_remainder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one-manifold-function"),new cljs.core.Var(function(){return sicmutils.env.one_manifold_function;},new cljs.core.Symbol("sicmutils.env","one-manifold-function","sicmutils.env/one-manifold-function",1746957368,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"one-manifold-function","one-manifold-function",117769992,null),"sicmutils/env.cljc",47,1,233,380,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.one_manifold_function)?sicmutils.env.one_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("divide"),new cljs.core.Var(function(){return sicmutils.env.divide;},new cljs.core.Symbol("sicmutils.env","divide","sicmutils.env/divide",43944920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"divide","divide",-545489112,null),"sicmutils/env.cljc",17,1,233,245,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.divide)?sicmutils.env.divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s->m"),new cljs.core.Var(function(){return sicmutils.env.s__GT_m;},new cljs.core.Symbol("sicmutils.env","s->m","sicmutils.env/s->m",-548827048,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"s->m","s->m",137060200,null),"sicmutils/env.cljc",7,1,233,472,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.s__GT_m)?sicmutils.env.s__GT_m.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis-components->vector-field"),new cljs.core.Var(function(){return sicmutils.env.basis_components__GT_vector_field;},new cljs.core.Symbol("sicmutils.env","basis-components->vector-field","sicmutils.env/basis-components->vector-field",-794478504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis-components->vector-field","basis-components->vector-field",-2054657112,null),"sicmutils/env.cljc",33,1,233,431,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis_components__GT_vector_field)?sicmutils.env.basis_components__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("commutator"),new cljs.core.Var(function(){return sicmutils.env.commutator;},new cljs.core.Symbol("sicmutils.env","commutator","sicmutils.env/commutator",1356857561,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"commutator","commutator",1038087209,null),"sicmutils/env.cljc",32,1,233,238,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.commutator)?sicmutils.env.commutator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->Hamiltonian"),new cljs.core.Var(function(){return sicmutils.env.Lagrangian__GT_Hamiltonian;},new cljs.core.Symbol("sicmutils.env","Lagrangian->Hamiltonian","sicmutils.env/Lagrangian->Hamiltonian",345668793,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrangian->Hamiltonian","Lagrangian->Hamiltonian",570239049,null),"sicmutils/env.cljc",26,1,233,489,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrangian__GT_Hamiltonian)?sicmutils.env.Lagrangian__GT_Hamiltonian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated-map"),new cljs.core.Var(function(){return sicmutils.env.iterated_map;},new cljs.core.Symbol("sicmutils.env","iterated-map","sicmutils.env/iterated-map",2127614905,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"iterated-map","iterated-map",-1443897207,null),"sicmutils/env.cljc",15,1,233,494,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.iterated_map)?sicmutils.env.iterated_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->tex-equation"),new cljs.core.Var(function(){return sicmutils.env.__GT_tex_equation;},new cljs.core.Symbol("sicmutils.env","->tex-equation","sicmutils.env/->tex-equation",-706283527,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->tex-equation","->tex-equation",-121272119,null),"sicmutils/env.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"label","label",-936024965,null)], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"label","label",-936024965,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,224,224,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"label","label",-936024965,null)], null)], null)], null)),"Returns a string containing a LaTeX representation of `expr`, wrapped in an\n  `equation` environment.\n\n  Optionally supply a `:label` keyword argument to set a custom label.",(cljs.core.truth_(sicmutils.env.__GT_tex_equation)?sicmutils.env.__GT_tex_equation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compositional-canonical?"),new cljs.core.Var(function(){return sicmutils.env.compositional_canonical_QMARK_;},new cljs.core.Symbol("sicmutils.env","compositional-canonical?","sicmutils.env/compositional-canonical?",719363513,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"compositional-canonical?","compositional-canonical?",-235019959,null),"sicmutils/env.cljc",27,1,233,493,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.compositional_canonical_QMARK_)?sicmutils.env.compositional_canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("event->coords"),new cljs.core.Var(function(){return sicmutils.env.event__GT_coords;},new cljs.core.Symbol("sicmutils.env","event->coords","sicmutils.env/event->coords",272759449,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"event->coords","event->coords",-81360503,null),"sicmutils/env.cljc",30,1,233,356,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.event__GT_coords)?sicmutils.env.event__GT_coords.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("golden-section-max"),new cljs.core.Var(function(){return sicmutils.env.golden_section_max;},new cljs.core.Symbol("sicmutils.env","golden-section-max","sicmutils.env/golden-section-max",-1343808871,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"golden-section-max","golden-section-max",-2130564727,null),"sicmutils/env.cljc",40,1,233,518,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.golden_section_max)?sicmutils.env.golden_section_max.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("torsion"),new cljs.core.Var(function(){return sicmutils.env.torsion;},new cljs.core.Symbol("sicmutils.env","torsion","sicmutils.env/torsion",1749529817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"torsion","torsion",492861929,null),"sicmutils/env.cljc",57,1,233,333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.torsion)?sicmutils.env.torsion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*"),new cljs.core.Var(function(){return sicmutils.env._STAR_;},new cljs.core.Symbol("sicmutils.env","*","sicmutils.env/*",2142447321,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"*","*",345799209,null),"sicmutils/env.cljc",4,1,233,245,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env._STAR_)?sicmutils.env._STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt"),new cljs.core.Var(function(){return sicmutils.env.expt;},new cljs.core.Symbol("sicmutils.env","expt","sicmutils.env/expt",-1409968263,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"expt","expt",2123850345,null),"sicmutils/env.cljc",7,1,233,254,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.expt)?sicmutils.env.expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atan"),new cljs.core.Var(function(){return sicmutils.env.atan;},new cljs.core.Symbol("sicmutils.env","atan","sicmutils.env/atan",-134389319,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"atan","atan",-1026550135,null),"sicmutils/env.cljc",7,1,233,262,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.atan)?sicmutils.env.atan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nform-field?"),new cljs.core.Var(function(){return sicmutils.env.nform_field_QMARK_;},new cljs.core.Symbol("sicmutils.env","nform-field?","sicmutils.env/nform-field?",-1143301191,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"nform-field?","nform-field?",-822258039,null),"sicmutils/env.cljc",27,1,233,340,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.nform_field_QMARK_)?sicmutils.env.nform_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y"),new cljs.core.Var(function(){return sicmutils.env.rotate_y;},new cljs.core.Symbol("sicmutils.env","rotate-y","sicmutils.env/rotate-y",1891700217,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-y","rotate-y",1176649417,null),"sicmutils/env.cljc",29,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_y)?sicmutils.env.rotate_y.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down"),new cljs.core.Var(function(){return sicmutils.env.down;},new cljs.core.Symbol("sicmutils.env","down","sicmutils.env/down",-365360679,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"down","down",-1089190199,null),"sicmutils/env.cljc",7,1,233,278,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.down)?sicmutils.env.down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generalized-LE"),new cljs.core.Var(function(){return sicmutils.env.generalized_LE;},new cljs.core.Symbol("sicmutils.env","generalized-LE","sicmutils.env/generalized-LE",356273209,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"generalized-LE","generalized-LE",-1073642743,null),"sicmutils/env.cljc",17,1,233,458,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.generalized_LE)?sicmutils.env.generalized_LE.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integer-part"),new cljs.core.Var(function(){return sicmutils.env.integer_part;},new cljs.core.Symbol("sicmutils.env","integer-part","sicmutils.env/integer-part",-1534140295,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"integer-part","integer-part",-1884537015,null),"sicmutils/env.cljc",15,1,233,253,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.integer_part)?sicmutils.env.integer_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("index-types"),new cljs.core.Var(function(){return sicmutils.env.index_types;},new cljs.core.Symbol("sicmutils.env","index-types","sicmutils.env/index-types",1490541817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"index-types","index-types",-1276115991,null),"sicmutils/env.cljc",14,1,233,365,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.index_types)?sicmutils.env.index_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field?"),new cljs.core.Var(function(){return sicmutils.env.oneform_field_QMARK_;},new cljs.core.Symbol("sicmutils.env","oneform-field?","sicmutils.env/oneform-field?",1540799737,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"oneform-field?","oneform-field?",-1326324759,null),"sicmutils/env.cljc",42,1,233,340,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.oneform_field_QMARK_)?sicmutils.env.oneform_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("brent-min"),new cljs.core.Var(function(){return sicmutils.env.brent_min;},new cljs.core.Symbol("sicmutils.env","brent-min","sicmutils.env/brent-min",928143130,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"brent-min","brent-min",477201418,null),"sicmutils/env.cljc",12,1,233,515,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.brent_min)?sicmutils.env.brent_min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row-matrix->down"),new cljs.core.Var(function(){return sicmutils.env.row_matrix__GT_down;},new cljs.core.Symbol("sicmutils.env","row-matrix->down","sicmutils.env/row-matrix->down",1702275418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"row-matrix->down","row-matrix->down",273914986,null),"sicmutils/env.cljc",19,1,233,480,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.row_matrix__GT_down)?sicmutils.env.row_matrix__GT_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan?"),new cljs.core.Var(function(){return sicmutils.env.Cartan_QMARK_;},new cljs.core.Symbol("sicmutils.env","Cartan?","sicmutils.env/Cartan?",877226330,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan?","Cartan?",1638685802,null),"sicmutils/env.cljc",22,1,233,322,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan_QMARK_)?sicmutils.env.Cartan_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acceleration-tuple"),new cljs.core.Var(function(){return sicmutils.env.acceleration_tuple;},new cljs.core.Symbol("sicmutils.env","acceleration-tuple","sicmutils.env/acceleration-tuple",-1716666950,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acceleration-tuple","acceleration-tuple",1955295370,null),"sicmutils/env.cljc",53,1,233,470,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acceleration_tuple)?sicmutils.env.acceleration_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear-left"),new cljs.core.Var(function(){return sicmutils.env.solve_linear_left;},new cljs.core.Symbol("sicmutils.env","solve-linear-left","sicmutils.env/solve-linear-left",-1085679782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"solve-linear-left","solve-linear-left",1437395114,null),"sicmutils/env.cljc",33,1,233,273,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.solve_linear_left)?sicmutils.env.solve_linear_left.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negative?"),new cljs.core.Var(function(){return sicmutils.env.negative_QMARK_;},new cljs.core.Symbol("sicmutils.env","negative?","sicmutils.env/negative?",1803527194,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"negative?","negative?",374534410,null),"sicmutils/env.cljc",12,1,233,247,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.negative_QMARK_)?sicmutils.env.negative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p"),new cljs.core.Var(function(){return sicmutils.env.S2p;},new cljs.core.Symbol("sicmutils.env","S2p","sicmutils.env/S2p",-657756550,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p","S2p",220470602,null),"sicmutils/env.cljc",6,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p)?sicmutils.env.S2p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-scale"),new cljs.core.Var(function(){return sicmutils.env.arg_scale;},new cljs.core.Symbol("sicmutils.env","arg-scale","sicmutils.env/arg-scale",-1535235654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"arg-scale","arg-scale",-828801718,null),"sicmutils/env.cljc",55,1,233,236,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.arg_scale)?sicmutils.env.arg_scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("geodesic-equation"),new cljs.core.Var(function(){return sicmutils.env.geodesic_equation;},new cljs.core.Symbol("sicmutils.env","geodesic-equation","sicmutils.env/geodesic-equation",-110974566,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"geodesic-equation","geodesic-equation",-872309078,null),"sicmutils/env.cljc",20,1,233,330,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.geodesic_equation)?sicmutils.env.geodesic_equation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("linear-interpolants"),new cljs.core.Var(function(){return sicmutils.env.linear_interpolants;},new cljs.core.Symbol("sicmutils.env","linear-interpolants","sicmutils.env/linear-interpolants",-971620230,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"linear-interpolants","linear-interpolants",-117737654,null),"sicmutils/env.cljc",22,1,233,466,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.linear_interpolants)?sicmutils.env.linear_interpolants.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I"),new cljs.core.Var(function(){return sicmutils.env.I;},new cljs.core.Symbol("sicmutils.env","I","sicmutils.env/I",970804890,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"I","I",-827294806,null),"sicmutils/env.cljc",57,1,233,236,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.I)?sicmutils.env.I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pe"),new cljs.core.Var(function(){return sicmutils.env.pe;},new cljs.core.Symbol("sicmutils.env","pe","sicmutils.env/pe",880896315,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pe","pe",-876735477,null),"sicmutils/env.cljc",60,1,233,289,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pe)?sicmutils.env.pe.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pushforward-vector"),new cljs.core.Var(function(){return sicmutils.env.pushforward_vector;},new cljs.core.Symbol("sicmutils.env","pushforward-vector","sicmutils.env/pushforward-vector",-1436932709,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pushforward-vector","pushforward-vector",-2017628021,null),"sicmutils/env.cljc",21,1,233,411,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pushforward_vector)?sicmutils.env.pushforward_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gamma-bar"),new cljs.core.Var(function(){return sicmutils.env.Gamma_bar;},new cljs.core.Symbol("sicmutils.env","Gamma-bar","sicmutils.env/Gamma-bar",225716155,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Gamma-bar","Gamma-bar",941167787,null),"sicmutils/env.cljc",18,1,233,457,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Gamma_bar)?sicmutils.env.Gamma_bar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ancestor-frame"),new cljs.core.Var(function(){return sicmutils.env.ancestor_frame;},new cljs.core.Symbol("sicmutils.env","ancestor-frame","sicmutils.env/ancestor-frame",-351401477,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),"sicmutils/env.cljc",45,1,233,356,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.ancestor_frame)?sicmutils.env.ancestor_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-transform?"),new cljs.core.Var(function(){return sicmutils.env.symplectic_transform_QMARK_;},new cljs.core.Symbol("sicmutils.env","symplectic-transform?","sicmutils.env/symplectic-transform?",-1317670853,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"symplectic-transform?","symplectic-transform?",-597154357,null),"sicmutils/env.cljc",24,1,233,499,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.symplectic_transform_QMARK_)?sicmutils.env.symplectic_transform_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->L-state"),new cljs.core.Var(function(){return sicmutils.env.__GT_L_state;},new cljs.core.Symbol("sicmutils.env","->L-state","sicmutils.env/->L-state",-360832229,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->L-state","->L-state",1029512715,null),"sicmutils/env.cljc",12,1,233,452,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_L_state)?sicmutils.env.__GT_L_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve-linear-right"),new cljs.core.Var(function(){return sicmutils.env.solve_linear_right;},new cljs.core.Symbol("sicmutils.env","solve-linear-right","sicmutils.env/solve-linear-right",1353051835,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"solve-linear-right","solve-linear-right",-1518292405,null),"sicmutils/env.cljc",52,1,233,273,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.solve_linear_right)?sicmutils.env.solve_linear_right.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asec"),new cljs.core.Var(function(){return sicmutils.env.asec;},new cljs.core.Symbol("sicmutils.env","asec","sicmutils.env/asec",-1002764357,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"asec","asec",-81933685,null),"sicmutils/env.cljc",22,1,233,263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.asec)?sicmutils.env.asec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cos"),new cljs.core.Var(function(){return sicmutils.env.cos;},new cljs.core.Symbol("sicmutils.env","cos","sicmutils.env/cos",-32719973,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"cos","cos",-1452677493,null),"sicmutils/env.cljc",6,1,233,260,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.cos)?sicmutils.env.cos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("euler"),new cljs.core.Var(function(){return sicmutils.env.euler;},new cljs.core.Symbol("sicmutils.env","euler","sicmutils.env/euler",1207536571,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"euler","euler",1830471499,null),"sicmutils/env.cljc",8,1,168,171,cljs.core.List.EMPTY,"The mathematical\n  constant [e](https://en.wikipedia.org/wiki/E_(mathematical_constant)),\n  sometimes known as Euler's Number.",(cljs.core.truth_(sicmutils.env.euler)?sicmutils.env.euler.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column-matrix->vector"),new cljs.core.Var(function(){return sicmutils.env.column_matrix__GT_vector;},new cljs.core.Symbol("sicmutils.env","column-matrix->vector","sicmutils.env/column-matrix->vector",114353275,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"column-matrix->vector","column-matrix->vector",2109025131,null),"sicmutils/env.cljc",24,1,233,478,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.column_matrix__GT_vector)?sicmutils.env.column_matrix__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SR-name"),new cljs.core.Var(function(){return sicmutils.env.SR_name;},new cljs.core.Symbol("sicmutils.env","SR-name","sicmutils.env/SR-name",455840891,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"SR-name","SR-name",1611225963,null),"sicmutils/env.cljc",46,1,233,444,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.SR_name)?sicmutils.env.SR_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log10"),new cljs.core.Var(function(){return sicmutils.env.log10;},new cljs.core.Symbol("sicmutils.env","log10","sicmutils.env/log10",238900475,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"log10","log10",891257803,null),"sicmutils/env.cljc",17,1,233,256,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.log10)?sicmutils.env.log10.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acoth"),new cljs.core.Var(function(){return sicmutils.env.acoth;},new cljs.core.Symbol("sicmutils.env","acoth","sicmutils.env/acoth",987150587,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acoth","acoth",1639672811,null),"sicmutils/env.cljc",26,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acoth)?sicmutils.env.acoth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field?"),new cljs.core.Var(function(){return sicmutils.env.vector_field_QMARK_;},new cljs.core.Symbol("sicmutils.env","vector-field?","sicmutils.env/vector-field?",1099587868,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-field?","vector-field?",921525260,null),"sicmutils/env.cljc",16,1,233,424,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_field_QMARK_)?sicmutils.env.vector_field_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z-tuple"),new cljs.core.Var(function(){return sicmutils.env.rotate_z_tuple;},new cljs.core.Symbol("sicmutils.env","rotate-z-tuple","sicmutils.env/rotate-z-tuple",1690237820,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-z-tuple","rotate-z-tuple",-1312708500,null),"sicmutils/env.cljc",47,1,233,505,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_z_tuple)?sicmutils.env.rotate_z_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("freeze"),new cljs.core.Var(function(){return sicmutils.env.freeze;},new cljs.core.Symbol("sicmutils.env","freeze","sicmutils.env/freeze",112891292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"freeze","freeze",-610969460,null),"sicmutils/env.cljc",20,1,233,526,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.freeze)?sicmutils.env.freeze.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dot-product"),new cljs.core.Var(function(){return sicmutils.env.dot_product;},new cljs.core.Symbol("sicmutils.env","dot-product","sicmutils.env/dot-product",-993604612,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"dot-product","dot-product",-203055892,null),"sicmutils/env.cljc",14,1,233,271,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.dot_product)?sicmutils.env.dot_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tan"),new cljs.core.Var(function(){return sicmutils.env.tan;},new cljs.core.Symbol("sicmutils.env","tan","sicmutils.env/tan",-660661764,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tan","tan",-1380825876,null),"sicmutils/env.cljc",14,1,233,260,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.tan)?sicmutils.env.tan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-z-matrix"),new cljs.core.Var(function(){return sicmutils.env.rotate_z_matrix;},new cljs.core.Symbol("sicmutils.env","rotate-z-matrix","sicmutils.env/rotate-z-matrix",1110952988,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-z-matrix","rotate-z-matrix",1997537548,null),"sicmutils/env.cljc",50,1,233,503,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_z_matrix)?sicmutils.env.rotate_z_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("csc"),new cljs.core.Var(function(){return sicmutils.env.csc;},new cljs.core.Symbol("sicmutils.env","csc","sicmutils.env/csc",454931900,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"csc","csc",-427853492,null),"sicmutils/env.cljc",14,1,233,261,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.csc)?sicmutils.env.csc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise1"),new cljs.core.Var(function(){return sicmutils.env.raise1;},new cljs.core.Symbol("sicmutils.env","raise1","sicmutils.env/raise1",-652351876,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"raise1","raise1",-2109852308,null),"sicmutils/env.cljc",43,1,233,404,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.raise1)?sicmutils.env.raise1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asech"),new cljs.core.Var(function(){return sicmutils.env.asech;},new cljs.core.Symbol("sicmutils.env","asech","sicmutils.env/asech",-1341969220,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"asech","asech",-316284500,null),"sicmutils/env.cljc",32,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.asech)?sicmutils.env.asech.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-stereographic"),new cljs.core.Var(function(){return sicmutils.env.S2_stereographic;},new cljs.core.Symbol("sicmutils.env","S2-stereographic","sicmutils.env/S2-stereographic",-757443364,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-stereographic","S2-stereographic",-100853268,null),"sicmutils/env.cljc",53,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_stereographic)?sicmutils.env.S2_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-zero"),new cljs.core.Var(function(){return sicmutils.env.compatible_zero;},new cljs.core.Symbol("sicmutils.env","compatible-zero","sicmutils.env/compatible-zero",835730300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"compatible-zero","compatible-zero",-453704180,null),"sicmutils/env.cljc",18,1,233,277,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.compatible_zero)?sicmutils.env.compatible_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->state"),new cljs.core.Var(function(){return sicmutils.env.__GT_state;},new cljs.core.Symbol("sicmutils.env","->state","sicmutils.env/->state",-813458660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->state","->state",-1734302196,null),"sicmutils/env.cljc",28,1,233,452,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_state)?sicmutils.env.__GT_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cot"),new cljs.core.Var(function(){return sicmutils.env.cot;},new cljs.core.Symbol("sicmutils.env","cot","sicmutils.env/cot",1939777820,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"cot","cot",-1635649012,null),"sicmutils/env.cljc",6,1,233,261,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.cot)?sicmutils.env.cot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-number"),new cljs.core.Var(function(){return sicmutils.env.literal_number;},new cljs.core.Symbol("sicmutils.env","literal-number","sicmutils.env/literal-number",323820860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-number","literal-number",1180750380,null),"sicmutils/env.cljc",43,1,233,234,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_number)?sicmutils.env.literal_number.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Christoffel-2"),new cljs.core.Var(function(){return sicmutils.env.literal_Christoffel_2;},new cljs.core.Symbol("sicmutils.env","literal-Christoffel-2","sicmutils.env/literal-Christoffel-2",2018385212,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-Christoffel-2","literal-Christoffel-2",632148524,null),"sicmutils/env.cljc",46,1,233,312,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_Christoffel_2)?sicmutils.env.literal_Christoffel_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rn"),new cljs.core.Var(function(){return sicmutils.env.Rn;},new cljs.core.Symbol("sicmutils.env","Rn","sicmutils.env/Rn",-1885023204,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Rn","Rn",1925679884,null),"sicmutils/env.cljc",5,1,233,383,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Rn)?sicmutils.env.Rn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise"),new cljs.core.Var(function(){return sicmutils.env.raise;},new cljs.core.Symbol("sicmutils.env","raise","sicmutils.env/raise",-1188595620,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"raise","raise",1824672588,null),"sicmutils/env.cljc",8,1,233,404,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.raise)?sicmutils.env.raise.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typed->structure"),new cljs.core.Var(function(){return sicmutils.env.typed__GT_structure;},new cljs.core.Symbol("sicmutils.env","typed->structure","sicmutils.env/typed->structure",-1999073604,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"typed->structure","typed->structure",1731883948,null),"sicmutils/env.cljc",19,1,233,367,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.typed__GT_structure)?sicmutils.env.typed__GT_structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis-vector-field"),new cljs.core.Var(function(){return sicmutils.env.coordinate_basis_vector_field;},new cljs.core.Symbol("sicmutils.env","coordinate-basis-vector-field","sicmutils.env/coordinate-basis-vector-field",-328138500,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-basis-vector-field","coordinate-basis-vector-field",928502764,null),"sicmutils/env.cljc",32,1,233,429,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_basis_vector_field)?sicmutils.env.coordinate_basis_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("time-independent-canonical?"),new cljs.core.Var(function(){return sicmutils.env.time_independent_canonical_QMARK_;},new cljs.core.Symbol("sicmutils.env","time-independent-canonical?","sicmutils.env/time-independent-canonical?",-318311619,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"time-independent-canonical?","time-independent-canonical?",-605708243,null),"sicmutils/env.cljc",30,1,233,501,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.time_independent_canonical_QMARK_)?sicmutils.env.time_independent_canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("series"),new cljs.core.Var(function(){return sicmutils.env.series;},new cljs.core.Symbol("sicmutils.env","series","sicmutils.env/series",-1433835171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"series","series",-2053725075,null),"sicmutils/env.cljc",33,1,198,198,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.series)?sicmutils.env.series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("golden-section-min"),new cljs.core.Var(function(){return sicmutils.env.golden_section_min;},new cljs.core.Symbol("sicmutils.env","golden-section-min","sicmutils.env/golden-section-min",-175949923,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"golden-section-min","golden-section-min",-1566310259,null),"sicmutils/env.cljc",21,1,233,518,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.golden_section_min)?sicmutils.env.golden_section_min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matrix-by-cols"),new cljs.core.Var(function(){return sicmutils.env.matrix_by_cols;},new cljs.core.Symbol("sicmutils.env","matrix-by-cols","sicmutils.env/matrix-by-cols",-639148739,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"matrix-by-cols","matrix-by-cols",-1933276979,null),"sicmutils/env.cljc",42,1,192,192,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.matrix_by_cols)?sicmutils.env.matrix_by_cols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivative"),new cljs.core.Var(function(){return sicmutils.env.partial_derivative;},new cljs.core.Symbol("sicmutils.env","partial-derivative","sicmutils.env/partial-derivative",-711012035,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"partial-derivative","partial-derivative",-1901056819,null),"sicmutils/env.cljc",21,1,233,272,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.partial_derivative)?sicmutils.env.partial_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure-constant"),new cljs.core.Var(function(){return sicmutils.env.structure_constant;},new cljs.core.Symbol("sicmutils.env","structure-constant","sicmutils.env/structure-constant",-686490147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"structure-constant","structure-constant",-1401802547,null),"sicmutils/env.cljc",21,1,233,315,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.structure_constant)?sicmutils.env.structure_constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state-advancer"),new cljs.core.Var(function(){return sicmutils.env.state_advancer;},new cljs.core.Symbol("sicmutils.env","state-advancer","sicmutils.env/state-advancer",578424861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"state-advancer","state-advancer",1461667085,null),"sicmutils/env.cljc",17,1,233,511,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.state_advancer)?sicmutils.env.state_advancer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("submatrix"),new cljs.core.Var(function(){return sicmutils.env.submatrix;},new cljs.core.Symbol("sicmutils.env","submatrix","sicmutils.env/submatrix",-746667427,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"submatrix","submatrix",73135469,null),"sicmutils/env.cljc",12,1,233,475,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.submatrix)?sicmutils.env.submatrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parallel-transport-equation"),new cljs.core.Var(function(){return sicmutils.env.parallel_transport_equation;},new cljs.core.Symbol("sicmutils.env","parallel-transport-equation","sicmutils.env/parallel-transport-equation",1072419069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"parallel-transport-equation","parallel-transport-equation",-355914355,null),"sicmutils/env.cljc",48,1,233,330,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.parallel_transport_equation)?sicmutils.env.parallel_transport_equation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("m:generate"),new cljs.core.Var(function(){return sicmutils.env.m_COLON_generate;},new cljs.core.Symbol("sicmutils.env","m:generate","sicmutils.env/m:generate",-2002002211,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"m:generate","m:generate",-746017331,null),"sicmutils/env.cljc",39,1,188,188,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.m_COLON_generate)?sicmutils.env.m_COLON_generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-gnomonic"),new cljs.core.Var(function(){return sicmutils.env.S2p_gnomonic;},new cljs.core.Symbol("sicmutils.env","S2p-gnomonic","sicmutils.env/S2p-gnomonic",-2131379491,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p-gnomonic","S2p-gnomonic",-68458035,null),"sicmutils/env.cljc",74,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p_gnomonic)?sicmutils.env.S2p_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->string"),new cljs.core.Var(function(){return sicmutils.env.expression__GT_string;},new cljs.core.Symbol("sicmutils.env","expression->string","sicmutils.env/expression->string",740456381,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"expression->string","expression->string",-956224851,null),"sicmutils/env.cljc",40,1,233,289,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.expression__GT_string)?sicmutils.env.expression__GT_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typed->indexed"),new cljs.core.Var(function(){return sicmutils.env.typed__GT_indexed;},new cljs.core.Symbol("sicmutils.env","typed->indexed","sicmutils.env/typed->indexed",1862362589,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"typed->indexed","typed->indexed",-1302095155,null),"sicmutils/env.cljc",17,1,233,366,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.typed__GT_indexed)?sicmutils.env.typed__GT_indexed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-shift"),new cljs.core.Var(function(){return sicmutils.env.arg_shift;},new cljs.core.Symbol("sicmutils.env","arg-shift","sicmutils.env/arg-shift",-603942371,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"arg-shift","arg-shift",-382841075,null),"sicmutils/env.cljc",45,1,233,236,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.arg_shift)?sicmutils.env.arg_shift.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D-numeric"),new cljs.core.Var(function(){return sicmutils.env.D_numeric;},new cljs.core.Symbol("sicmutils.env","D-numeric","sicmutils.env/D-numeric",889293437,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"D-numeric","D-numeric",509796205,null),"sicmutils/env.cljc",43,1,233,512,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.D_numeric)?sicmutils.env.D_numeric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("phase-space-derivative"),new cljs.core.Var(function(){return sicmutils.env.phase_space_derivative;},new cljs.core.Symbol("sicmutils.env","phase-space-derivative","sicmutils.env/phase-space-derivative",647529117,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"phase-space-derivative","phase-space-derivative",-105121875,null),"sicmutils/env.cljc",25,1,233,488,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.phase_space_derivative)?sicmutils.env.phase_space_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("definite-integral"),new cljs.core.Var(function(){return sicmutils.env.definite_integral;},new cljs.core.Symbol("sicmutils.env","definite-integral","sicmutils.env/definite-integral",330525917,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"definite-integral","definite-integral",760619981,null),"sicmutils/env.cljc",51,1,233,513,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.definite_integral)?sicmutils.env.definite_integral.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("velocity-tuple"),new cljs.core.Var(function(){return sicmutils.env.velocity_tuple;},new cljs.core.Symbol("sicmutils.env","velocity-tuple","sicmutils.env/velocity-tuple",1037451005,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"velocity-tuple","velocity-tuple",1387588589,null),"sicmutils/env.cljc",34,1,233,470,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.velocity_tuple)?sicmutils.env.velocity_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("imag-part"),new cljs.core.Var(function(){return sicmutils.env.imag_part;},new cljs.core.Symbol("sicmutils.env","imag-part","sicmutils.env/imag-part",-1782298786,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"imag-part","imag-part",2028041294,null),"sicmutils/env.cljc",22,1,233,268,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.imag_part)?sicmutils.env.imag_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column-matrix"),new cljs.core.Var(function(){return sicmutils.env.column_matrix;},new cljs.core.Symbol("sicmutils.env","column-matrix","sicmutils.env/column-matrix",360209278,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"column-matrix","column-matrix",977710190,null),"sicmutils/env.cljc",40,1,194,194,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.column_matrix)?sicmutils.env.column_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("simplify"),new cljs.core.Var(function(){return sicmutils.env.simplify;},new cljs.core.Symbol("sicmutils.env","simplify","sicmutils.env/simplify",1697912222,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"simplify","simplify",1041318062,null),"sicmutils/env.cljc",11,1,233,274,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.simplify)?sicmutils.env.simplify.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("v:make-basis-unit"),new cljs.core.Var(function(){return sicmutils.env.v_COLON_make_basis_unit;},new cljs.core.Symbol("sicmutils.env","v:make-basis-unit","sicmutils.env/v:make-basis-unit",564079550,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"v:make-basis-unit","v:make-basis-unit",381319342,null),"sicmutils/env.cljc",51,1,189,189,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.v_COLON_make_basis_unit)?sicmutils.env.v_COLON_make_basis_unit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tex$"),new cljs.core.Var(function(){return sicmutils.env.tex$;},new cljs.core.Symbol("sicmutils.env","tex$","sicmutils.env/tex$",1665996766,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tex$","tex$",-1271871282,null),"sicmutils/env.cljc",11,1,212,212,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Returns a string containing a LaTeX representation of `expr`, wrapped in single\n  `$` to mark the string as an inline LaTeX form.",(cljs.core.truth_(sicmutils.env.tex$)?sicmutils.env.tex$.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->basis-components"),new cljs.core.Var(function(){return sicmutils.env.vector_field__GT_basis_components;},new cljs.core.Symbol("sicmutils.env","vector-field->basis-components","sicmutils.env/vector-field->basis-components",-1411642402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-field->basis-components","vector-field->basis-components",-247472946,null),"sicmutils/env.cljc",33,1,233,432,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_field__GT_basis_components)?sicmutils.env.vector_field__GT_basis_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("v:c"),new cljs.core.Var(function(){return sicmutils.env.v_COLON_c;},new cljs.core.Symbol("sicmutils.env","v:c","sicmutils.env/v:c",1894098462,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"v:c","v:c",1270894894,null),"sicmutils/env.cljc",32,1,233,446,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.v_COLON_c)?sicmutils.env.v_COLON_c.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->inverse-metric"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_inverse_metric;},new cljs.core.Symbol("sicmutils.env","coordinate-system->inverse-metric","sicmutils.env/coordinate-system->inverse-metric",-2097354658,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->inverse-metric","coordinate-system->inverse-metric",1607613774,null),"sicmutils/env.cljc",36,1,233,399,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_inverse_metric)?sicmutils.env.coordinate_system__GT_inverse_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt"),new cljs.core.Var(function(){return sicmutils.env.sqrt;},new cljs.core.Symbol("sicmutils.env","sqrt","sicmutils.env/sqrt",-1019723010,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sqrt","sqrt",370479598,null),"sicmutils/env.cljc",7,1,233,250,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sqrt)?sicmutils.env.sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->CT"),new cljs.core.Var(function(){return sicmutils.env.F__GT_CT;},new cljs.core.Symbol("sicmutils.env","F->CT","sicmutils.env/F->CT",-128429186,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"F->CT","F->CT",-1012552178,null),"sicmutils/env.cljc",8,1,233,484,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.F__GT_CT)?sicmutils.env.F__GT_CT.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-argument-types"),new cljs.core.Var(function(){return sicmutils.env.with_argument_types;},new cljs.core.Symbol("sicmutils.env","with-argument-types","sicmutils.env/with-argument-types",-1625656546,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"with-argument-types","with-argument-types",1782525454,null),"sicmutils/env.cljc",37,1,233,364,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.with_argument_types)?sicmutils.env.with_argument_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acsch"),new cljs.core.Var(function(){return sicmutils.env.acsch;},new cljs.core.Symbol("sicmutils.env","acsch","sicmutils.env/acsch",-9052482,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acsch","acsch",-1449651634,null),"sicmutils/env.cljc",38,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acsch)?sicmutils.env.acsch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ref"),new cljs.core.Var(function(){return sicmutils.env.ref;},new cljs.core.Symbol("sicmutils.env","ref","sicmutils.env/ref",-976906562,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"ref","ref",-1364538802,null),"sicmutils/env.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,123,123,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null)),"A shim so that ref can act like nth in SICM contexts, as clojure core ref\n  elsewhere.",(cljs.core.truth_(sicmutils.env.ref)?sicmutils.env.ref.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bigint"),new cljs.core.Var(function(){return sicmutils.env.bigint;},new cljs.core.Symbol("sicmutils.env","bigint","sicmutils.env/bigint",-722542178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"bigint","bigint",-70405490,null),"sicmutils/env.cljc",43,1,233,242,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.bigint)?sicmutils.env.bigint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2-polar"),new cljs.core.Var(function(){return sicmutils.env.R2_polar;},new cljs.core.Symbol("sicmutils.env","R2-polar","sicmutils.env/R2-polar",1967852158,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R2-polar","R2-polar",-1569929362,null),"sicmutils/env.cljc",22,1,233,385,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R2_polar)?sicmutils.env.R2_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rz"),new cljs.core.Var(function(){return sicmutils.env.Rz;},new cljs.core.Symbol("sicmutils.env","Rz","sicmutils.env/Rz",-1596579682,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Rz","Rz",-1950648434,null),"sicmutils/env.cljc",11,1,233,506,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Rz)?sicmutils.env.Rz.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kind-predicate"),new cljs.core.Var(function(){return sicmutils.env.kind_predicate;},new cljs.core.Symbol("sicmutils.env","kind-predicate","sicmutils.env/kind-predicate",787479710,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"kind-predicate","kind-predicate",336774062,null),"sicmutils/env.cljc",40,1,233,526,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.kind_predicate)?sicmutils.env.kind_predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inner-product"),new cljs.core.Var(function(){return sicmutils.env.inner_product;},new cljs.core.Symbol("sicmutils.env","inner-product","sicmutils.env/inner-product",-238839042,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"inner-product","inner-product",-1963110418,null),"sicmutils/env.cljc",28,1,233,271,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.inner_product)?sicmutils.env.inner_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("indexed->typed"),new cljs.core.Var(function(){return sicmutils.env.indexed__GT_typed;},new cljs.core.Symbol("sicmutils.env","indexed->typed","sicmutils.env/indexed->typed",928047870,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"indexed->typed","indexed->typed",-495593490,null),"sicmutils/env.cljc",32,1,233,366,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.indexed__GT_typed)?sicmutils.env.indexed__GT_typed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y-matrix"),new cljs.core.Var(function(){return sicmutils.env.rotate_y_matrix;},new cljs.core.Symbol("sicmutils.env","rotate-y-matrix","sicmutils.env/rotate-y-matrix",1162909535,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-y-matrix","rotate-y-matrix",1752319055,null),"sicmutils/env.cljc",34,1,233,503,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_y_matrix)?sicmutils.env.rotate_y_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dual-zero"),new cljs.core.Var(function(){return sicmutils.env.dual_zero;},new cljs.core.Symbol("sicmutils.env","dual-zero","sicmutils.env/dual-zero",387616255,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"dual-zero","dual-zero",973357295,null),"sicmutils/env.cljc",28,1,233,277,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.dual_zero)?sicmutils.env.dual_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2"),new cljs.core.Var(function(){return sicmutils.env.S2;},new cljs.core.Symbol("sicmutils.env","S2","sicmutils.env/S2",-1096543201,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2","S2",1434700047,null),"sicmutils/env.cljc",13,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2)?sicmutils.env.S2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factorial"),new cljs.core.Var(function(){return sicmutils.env.factorial;},new cljs.core.Symbol("sicmutils.env","factorial","sicmutils.env/factorial",851372095,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"factorial","factorial",127776047,null),"sicmutils/env.cljc",40,1,233,523,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.factorial)?sicmutils.env.factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose"),new cljs.core.Var(function(){return sicmutils.env.transpose;},new cljs.core.Symbol("sicmutils.env","transpose","sicmutils.env/transpose",-1437484993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),"sicmutils/env.cljc",12,1,233,270,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.transpose)?sicmutils.env.transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("csch"),new cljs.core.Var(function(){return sicmutils.env.csch;},new cljs.core.Symbol("sicmutils.env","csch","sicmutils.env/csch",-425360801,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"csch","csch",-1950330545,null),"sicmutils/env.cljc",32,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.csch)?sicmutils.env.csch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ff:zero"),new cljs.core.Var(function(){return sicmutils.env.ff_COLON_zero;},new cljs.core.Symbol("sicmutils.env","ff:zero","sicmutils.env/ff:zero",1213816575,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"ff:zero","ff:zero",628755951,null),"sicmutils/env.cljc",10,1,233,341,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.ff_COLON_zero)?sicmutils.env.ff_COLON_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("four-tuple->ct"),new cljs.core.Var(function(){return sicmutils.env.four_tuple__GT_ct;},new cljs.core.Symbol("sicmutils.env","four-tuple->ct","sicmutils.env/four-tuple->ct",-1016403137,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"four-tuple->ct","four-tuple->ct",-1670005201,null),"sicmutils/env.cljc",17,1,233,439,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.four_tuple__GT_ct)?sicmutils.env.four_tuple__GT_ct.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian-action"),new cljs.core.Var(function(){return sicmutils.env.Lagrangian_action;},new cljs.core.Symbol("sicmutils.env","Lagrangian-action","sicmutils.env/Lagrangian-action",1104325439,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrangian-action","Lagrangian-action",1827700271,null),"sicmutils/env.cljc",20,1,233,464,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrangian_action)?sicmutils.env.Lagrangian_action.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-spherical"),new cljs.core.Var(function(){return sicmutils.env.S3_spherical;},new cljs.core.Symbol("sicmutils.env","S3-spherical","sicmutils.env/S3-spherical",-828419745,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S3-spherical","S3-spherical",-73265585,null),"sicmutils/env.cljc",18,1,233,393,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S3_spherical)?sicmutils.env.S3_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column-matrix->up"),new cljs.core.Var(function(){return sicmutils.env.column_matrix__GT_up;},new cljs.core.Symbol("sicmutils.env","column-matrix->up","sicmutils.env/column-matrix->up",669441919,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"column-matrix->up","column-matrix->up",-84333969,null),"sicmutils/env.cljc",20,1,233,477,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.column_matrix__GT_up)?sicmutils.env.column_matrix__GT_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace2up"),new cljs.core.Var(function(){return sicmutils.env.trace2up;},new cljs.core.Symbol("sicmutils.env","trace2up","sicmutils.env/trace2up",-909737569,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"trace2up","trace2up",522966671,null),"sicmutils/env.cljc",35,1,233,405,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.trace2up)?sicmutils.env.trace2up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->Christoffel-1"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_Christoffel_1;},new cljs.core.Symbol("sicmutils.env","metric->Christoffel-1","sicmutils.env/metric->Christoffel-1",-1919735393,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->Christoffel-1","metric->Christoffel-1",1888246415,null),"sicmutils/env.cljc",24,1,233,311,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_Christoffel_1)?sicmutils.env.metric__GT_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("curvature-components"),new cljs.core.Var(function(){return sicmutils.env.curvature_components;},new cljs.core.Symbol("sicmutils.env","curvature-components","sicmutils.env/curvature-components",-1902313473,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"curvature-components","curvature-components",-1275395345,null),"sicmutils/env.cljc",23,1,233,334,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.curvature_components)?sicmutils.env.curvature_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamilton-equations"),new cljs.core.Var(function(){return sicmutils.env.Hamilton_equations;},new cljs.core.Symbol("sicmutils.env","Hamilton-equations","sicmutils.env/Hamilton-equations",205439519,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Hamilton-equations","Hamilton-equations",655898383,null),"sicmutils/env.cljc",21,1,233,485,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Hamilton_equations)?sicmutils.env.Hamilton_equations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("euler-gamma"),new cljs.core.Var(function(){return sicmutils.env.euler_gamma;},new cljs.core.Symbol("sicmutils.env","euler-gamma","sicmutils.env/euler-gamma",488260127,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"euler-gamma","euler-gamma",1811527439,null),"sicmutils/env.cljc",14,1,174,177,cljs.core.List.EMPTY,"The mathematical constant known as the [Euler\u2013Mascheroni\n  constant](https://en.wikipedia.org/wiki/Euler%E2%80%93Mascheroni_constant) and\n  sometimes as Euler's constant.",(cljs.core.truth_(sicmutils.env.euler_gamma)?sicmutils.env.euler_gamma.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:generate"),new cljs.core.Var(function(){return sicmutils.env.s_COLON_generate;},new cljs.core.Symbol("sicmutils.env","s:generate","sicmutils.env/s:generate",1578873503,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"s:generate","s:generate",1698463663,null),"sicmutils/env.cljc",42,1,187,187,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.s_COLON_generate)?sicmutils.env.s_COLON_generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->basis"),new cljs.core.Var(function(){return sicmutils.env.Cartan__GT_basis;},new cljs.core.Symbol("sicmutils.env","Cartan->basis","sicmutils.env/Cartan->basis",-1407296257,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan->basis","Cartan->basis",-113570833,null),"sicmutils/env.cljc",50,1,233,322,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan__GT_basis)?sicmutils.env.Cartan__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime-sphere"),new cljs.core.Var(function(){return sicmutils.env.spacetime_sphere;},new cljs.core.Symbol("sicmutils.env","spacetime-sphere","sicmutils.env/spacetime-sphere",433383647,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"spacetime-sphere","spacetime-sphere",-189162513,null),"sicmutils/env.cljc",44,1,233,388,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.spacetime_sphere)?sicmutils.env.spacetime_sphere.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-SR-frame"),new cljs.core.Var(function(){return sicmutils.env.make_SR_frame;},new cljs.core.Symbol("sicmutils.env","make-SR-frame","sicmutils.env/make-SR-frame",310505695,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-SR-frame","make-SR-frame",-949574673,null),"sicmutils/env.cljc",60,1,233,444,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_SR_frame)?sicmutils.env.make_SR_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex"),new cljs.core.Var(function(){return sicmutils.env.complex;},new cljs.core.Symbol("sicmutils.env","complex","sicmutils.env/complex",1833841920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"complex","complex",-1238824944,null),"sicmutils/env.cljc",28,1,233,235,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.complex)?sicmutils.env.complex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D-as-matrix"),new cljs.core.Var(function(){return sicmutils.env.D_as_matrix;},new cljs.core.Symbol("sicmutils.env","D-as-matrix","sicmutils.env/D-as-matrix",2023431936,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"D-as-matrix","D-as-matrix",1433947152,null),"sicmutils/env.cljc",27,1,233,337,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.D_as_matrix)?sicmutils.env.D_as_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-spherical"),new cljs.core.Var(function(){return sicmutils.env.S2p_spherical;},new cljs.core.Symbol("sicmutils.env","S2p-spherical","sicmutils.env/S2p-spherical",127059712,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p-spherical","S2p-spherical",-596118512,null),"sicmutils/env.cljc",20,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p_spherical)?sicmutils.env.S2p_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace"),new cljs.core.Var(function(){return sicmutils.env.trace;},new cljs.core.Symbol("sicmutils.env","trace","sicmutils.env/trace",2077896480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"trace","trace",557784112,null),"sicmutils/env.cljc",18,1,233,270,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.trace)?sicmutils.env.trace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-"),new cljs.core.Var(function(){return sicmutils.env._;},new cljs.core.Symbol("sicmutils.env","-","sicmutils.env/-",-1205997536,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"-","-",-471816912,null),"sicmutils/env.cljc",8,1,233,245,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env._)?sicmutils.env._.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("i:contract"),new cljs.core.Var(function(){return sicmutils.env.i_COLON_contract;},new cljs.core.Symbol("sicmutils.env","i:contract","sicmutils.env/i:contract",-209556960,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"i:contract","i:contract",-1495221968,null),"sicmutils/env.cljc",35,1,208,208,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.i_COLON_contract)?sicmutils.env.i_COLON_contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R1-rect"),new cljs.core.Var(function(){return sicmutils.env.R1_rect;},new cljs.core.Symbol("sicmutils.env","R1-rect","sicmutils.env/R1-rect",-1891488160,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R1-rect","R1-rect",-127853232,null),"sicmutils/env.cljc",13,1,233,384,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R1_rect)?sicmutils.env.R1_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression-of"),new cljs.core.Var(function(){return sicmutils.env.expression_of;},new cljs.core.Symbol("sicmutils.env","expression-of","sicmutils.env/expression-of",93536864,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"expression-of","expression-of",1790811504,null),"sicmutils/env.cljc",16,1,233,288,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.expression_of)?sicmutils.env.expression_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("the-real-line"),new cljs.core.Var(function(){return sicmutils.env.the_real_line;},new cljs.core.Symbol("sicmutils.env","the-real-line","sicmutils.env/the-real-line",772976128,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"the-real-line","the-real-line",319574384,null),"sicmutils/env.cljc",27,1,233,384,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.the_real_line)?sicmutils.env.the_real_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4-rect"),new cljs.core.Var(function(){return sicmutils.env.R4_rect;},new cljs.core.Symbol("sicmutils.env","R4-rect","sicmutils.env/R4-rect",-2027349920,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R4-rect","R4-rect",1343116656,null),"sicmutils/env.cljc",13,1,233,387,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R4_rect)?sicmutils.env.R4_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("osculating-path"),new cljs.core.Var(function(){return sicmutils.env.osculating_path;},new cljs.core.Symbol("sicmutils.env","osculating-path","sicmutils.env/osculating-path",524484288,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"osculating-path","osculating-path",677457360,null),"sicmutils/env.cljc",18,1,233,467,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.osculating_path)?sicmutils.env.osculating_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("proper-space-interval"),new cljs.core.Var(function(){return sicmutils.env.proper_space_interval;},new cljs.core.Symbol("sicmutils.env","proper-space-interval","sicmutils.env/proper-space-interval",-225296704,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"proper-space-interval","proper-space-interval",-2056140240,null),"sicmutils/env.cljc",45,1,233,440,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.proper_space_interval)?sicmutils.env.proper_space_interval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contract"),new cljs.core.Var(function(){return sicmutils.env.contract;},new cljs.core.Symbol("sicmutils.env","contract","sicmutils.env/contract",-995743392,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"contract","contract",-1856283024,null),"sicmutils/env.cljc",11,1,233,304,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.contract)?sicmutils.env.contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-name"),new cljs.core.Var(function(){return sicmutils.env.frame_name;},new cljs.core.Symbol("sicmutils.env","frame-name","sicmutils.env/frame-name",1898360800,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"frame-name","frame-name",738489072,null),"sicmutils/env.cljc",56,1,233,356,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.frame_name)?sicmutils.env.frame_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("angle-axis->rotation-matrix"),new cljs.core.Var(function(){return sicmutils.env.angle_axis__GT_rotation_matrix;},new cljs.core.Symbol("sicmutils.env","angle-axis->rotation-matrix","sicmutils.env/angle-axis->rotation-matrix",1653540928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"angle-axis->rotation-matrix","angle-axis->rotation-matrix",1240127312,null),"sicmutils/env.cljc",30,1,233,504,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.angle_axis__GT_rotation_matrix)?sicmutils.env.angle_axis__GT_rotation_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("derivative"),new cljs.core.Var(function(){return sicmutils.env.derivative;},new cljs.core.Symbol("sicmutils.env","derivative","sicmutils.env/derivative",-374390592,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"derivative","derivative",-1233120304,null),"sicmutils/env.cljc",13,1,233,337,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.derivative)?sicmutils.env.derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matrix-by-rows"),new cljs.core.Var(function(){return sicmutils.env.matrix_by_rows;},new cljs.core.Symbol("sicmutils.env","matrix-by-rows","sicmutils.env/matrix-by-rows",2040690433,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"matrix-by-rows","matrix-by-rows",-1400856559,null),"sicmutils/env.cljc",42,1,191,191,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.matrix_by_rows)?sicmutils.env.matrix_by_rows.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp"),new cljs.core.Var(function(){return sicmutils.env.exp;},new cljs.core.Symbol("sicmutils.env","exp","sicmutils.env/exp",80494881,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exp","exp",1378825265,null),"sicmutils/env.cljc",6,1,233,255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.exp)?sicmutils.env.exp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("alternate-angles"),new cljs.core.Var(function(){return sicmutils.env.alternate_angles;},new cljs.core.Symbol("sicmutils.env","alternate-angles","sicmutils.env/alternate-angles",-1092786367,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"alternate-angles","alternate-angles",-469789615,null),"sicmutils/env.cljc",45,1,233,394,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.alternate_angles)?sicmutils.env.alternate_angles.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->TeX"),new cljs.core.Var(function(){return sicmutils.env.__GT_TeX;},new cljs.core.Symbol("sicmutils.env","->TeX","sicmutils.env/->TeX",-1976731327,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->TeX","->TeX",-682969935,null),"sicmutils/env.cljc",8,1,233,292,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_TeX)?sicmutils.env.__GT_TeX.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-transform"),new cljs.core.Var(function(){return sicmutils.env.Lie_transform;},new cljs.core.Symbol("sicmutils.env","Lie-transform","sicmutils.env/Lie-transform",219839617,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lie-transform","Lie-transform",1913072017,null),"sicmutils/env.cljc",16,1,233,491,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lie_transform)?sicmutils.env.Lie_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("covariant-differential"),new cljs.core.Var(function(){return sicmutils.env.covariant_differential;},new cljs.core.Symbol("sicmutils.env","covariant-differential","sicmutils.env/covariant-differential",1406504065,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"covariant-differential","covariant-differential",-1899447919,null),"sicmutils/env.cljc",25,1,233,319,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.covariant_differential)?sicmutils.env.covariant_differential.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acosh"),new cljs.core.Var(function(){return sicmutils.env.acosh;},new cljs.core.Symbol("sicmutils.env","acosh","sicmutils.env/acosh",-1483643231,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acosh","acosh",-2005748303,null),"sicmutils/env.cljc",8,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acosh)?sicmutils.env.acosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->vector-field"),new cljs.core.Var(function(){return sicmutils.env.components__GT_vector_field;},new cljs.core.Symbol("sicmutils.env","components->vector-field","sicmutils.env/components->vector-field",-1041219807,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"components->vector-field","components->vector-field",-1160967663,null),"sicmutils/env.cljc",27,1,233,425,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.components__GT_vector_field)?sicmutils.env.components__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanc"),new cljs.core.Var(function(){return sicmutils.env.tanc;},new cljs.core.Symbol("sicmutils.env","tanc","sicmutils.env/tanc",-181925567,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tanc","tanc",-1009303983,null),"sicmutils/env.cljc",12,1,233,266,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.tanc)?sicmutils.env.tanc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s->r"),new cljs.core.Var(function(){return sicmutils.env.s__GT_r;},new cljs.core.Symbol("sicmutils.env","s->r","sicmutils.env/s->r",1139830785,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"s->r","s->r",-1726668015,null),"sicmutils/env.cljc",12,1,233,468,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.s__GT_r)?sicmutils.env.s__GT_r.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-metric"),new cljs.core.Var(function(){return sicmutils.env.S2_metric;},new cljs.core.Symbol("sicmutils.env","S2-metric","sicmutils.env/S2-metric",1833712129,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-metric","S2-metric",1081044753,null),"sicmutils/env.cljc",12,1,233,406,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_metric)?sicmutils.env.S2_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->vector-field-over-map"),new cljs.core.Var(function(){return sicmutils.env.vector_field__GT_vector_field_over_map;},new cljs.core.Symbol("sicmutils.env","vector-field->vector-field-over-map","sicmutils.env/vector-field->vector-field-over-map",1663770657,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-field->vector-field-over-map","vector-field->vector-field-over-map",969823025,null),"sicmutils/env.cljc",38,1,233,413,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_field__GT_vector_field_over_map)?sicmutils.env.vector_field__GT_vector_field_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ceiling"),new cljs.core.Var(function(){return sicmutils.env.ceiling;},new cljs.core.Symbol("sicmutils.env","ceiling","sicmutils.env/ceiling",-1775883231,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"ceiling","ceiling",-1593475279,null),"sicmutils/env.cljc",16,1,233,252,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.ceiling)?sicmutils.env.ceiling.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-type"),new cljs.core.Var(function(){return sicmutils.env.S2_type;},new cljs.core.Symbol("sicmutils.env","S2-type","sicmutils.env/S2-type",-432818687,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-type","S2-type",-1290736783,null),"sicmutils/env.cljc",10,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_type)?sicmutils.env.S2_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("series:sum"),new cljs.core.Var(function(){return sicmutils.env.series_COLON_sum;},new cljs.core.Symbol("sicmutils.env","series:sum","sicmutils.env/series:sum",-458102623,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"series:sum","series:sum",-1714640975,null),"sicmutils/env.cljc",34,1,201,201,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.series_COLON_sum)?sicmutils.env.series_COLON_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero?"),new cljs.core.Var(function(){return sicmutils.env.zero_QMARK_;},new cljs.core.Symbol("sicmutils.env","zero?","sicmutils.env/zero?",1145404481,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null),"sicmutils/env.cljc",41,1,233,524,cljs.core.List.EMPTY,null,((sicmutils.env.zero_QMARK_)?sicmutils.env.zero_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->power-loss"),new cljs.core.Var(function(){return sicmutils.env.Lagrangian__GT_power_loss;},new cljs.core.Symbol("sicmutils.env","Lagrangian->power-loss","sicmutils.env/Lagrangian->power-loss",2060635873,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrangian->power-loss","Lagrangian->power-loss",557159409,null),"sicmutils/env.cljc",44,1,233,462,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrangian__GT_power_loss)?sicmutils.env.Lagrangian__GT_power_loss.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Christoffel-1"),new cljs.core.Var(function(){return sicmutils.env.literal_Christoffel_1;},new cljs.core.Symbol("sicmutils.env","literal-Christoffel-1","sicmutils.env/literal-Christoffel-1",-1853356638,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-Christoffel-1","literal-Christoffel-1",2054549682,null),"sicmutils/env.cljc",24,1,233,312,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_Christoffel_1)?sicmutils.env.literal_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-tilted"),new cljs.core.Var(function(){return sicmutils.env.S2_tilted;},new cljs.core.Symbol("sicmutils.env","S2-tilted","sicmutils.env/S2-tilted",-887518782,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2-tilted","S2-tilted",875853010,null),"sicmutils/env.cljc",36,1,233,391,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2_tilted)?sicmutils.env.S2_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("drop2"),new cljs.core.Var(function(){return sicmutils.env.drop2;},new cljs.core.Symbol("sicmutils.env","drop2","sicmutils.env/drop2",1032729090,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"drop2","drop2",1353441554,null),"sicmutils/env.cljc",8,1,233,405,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.drop2)?sicmutils.env.drop2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("wedge"),new cljs.core.Var(function(){return sicmutils.env.wedge;},new cljs.core.Symbol("sicmutils.env","wedge","sicmutils.env/wedge",421538306,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"wedge","wedge",868448626,null),"sicmutils/env.cljc",8,1,233,350,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.wedge)?sicmutils.env.wedge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("base-frame-maker"),new cljs.core.Var(function(){return sicmutils.env.base_frame_maker;},new cljs.core.Symbol("sicmutils.env","base-frame-maker","sicmutils.env/base-frame-maker",1356091618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"base-frame-maker","base-frame-maker",-1120850446,null),"sicmutils/env.cljc",19,1,233,445,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.base_frame_maker)?sicmutils.env.base_frame_maker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("determinant"),new cljs.core.Var(function(){return sicmutils.env.determinant;},new cljs.core.Symbol("sicmutils.env","determinant","sicmutils.env/determinant",-498241278,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"determinant","determinant",-580156910,null),"sicmutils/env.cljc",30,1,233,270,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.determinant)?sicmutils.env.determinant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-maker"),new cljs.core.Var(function(){return sicmutils.env.frame_maker;},new cljs.core.Symbol("sicmutils.env","frame-maker","sicmutils.env/frame-maker",2135546626,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"frame-maker","frame-maker",1417055762,null),"sicmutils/env.cljc",26,1,233,357,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.frame_maker)?sicmutils.env.frame_maker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orientation"),new cljs.core.Var(function(){return sicmutils.env.orientation;},new cljs.core.Symbol("sicmutils.env","orientation","sicmutils.env/orientation",1905275138,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),"sicmutils/env.cljc",14,1,233,280,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.orientation)?sicmutils.env.orientation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D"),new cljs.core.Var(function(){return sicmutils.env.D;},new cljs.core.Symbol("sicmutils.env","D","sicmutils.env/D",-1703877342,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"D","D",1632515634,null),"sicmutils/env.cljc",15,1,233,337,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.D)?sicmutils.env.D.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("taylor-series"),new cljs.core.Var(function(){return sicmutils.env.taylor_series;},new cljs.core.Symbol("sicmutils.env","taylor-series","sicmutils.env/taylor-series",196138850,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"taylor-series","taylor-series",1018004082,null),"sicmutils/env.cljc",41,1,233,337,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.taylor_series)?sicmutils.env.taylor_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cosh"),new cljs.core.Var(function(){return sicmutils.env.cosh;},new cljs.core.Symbol("sicmutils.env","cosh","sicmutils.env/cosh",-1238904894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"cosh","cosh",-1962788142,null),"sicmutils/env.cljc",7,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.cosh)?sicmutils.env.cosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->dimension"),new cljs.core.Var(function(){return sicmutils.env.basis__GT_dimension;},new cljs.core.Symbol("sicmutils.env","basis->dimension","sicmutils.env/basis->dimension",322089506,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis->dimension","basis->dimension",1009774354,null),"sicmutils/env.cljc",19,1,233,303,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis__GT_dimension)?sicmutils.env.basis__GT_dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Poisson-bracket"),new cljs.core.Var(function(){return sicmutils.env.Poisson_bracket;},new cljs.core.Symbol("sicmutils.env","Poisson-bracket","sicmutils.env/Poisson-bracket",-1872812382,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Poisson-bracket","Poisson-bracket",-79662190,null),"sicmutils/env.cljc",18,1,233,492,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Poisson_bracket)?sicmutils.env.Poisson_bracket.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("momentum-tuple"),new cljs.core.Var(function(){return sicmutils.env.momentum_tuple;},new cljs.core.Symbol("sicmutils.env","momentum-tuple","sicmutils.env/momentum-tuple",-716693950,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"momentum-tuple","momentum-tuple",-27972686,null),"sicmutils/env.cljc",68,1,233,470,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.momentum_tuple)?sicmutils.env.momentum_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("function->oneform-field"),new cljs.core.Var(function(){return sicmutils.env.function__GT_oneform_field;},new cljs.core.Symbol("sicmutils.env","function->oneform-field","sicmutils.env/function->oneform-field",379274434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"function->oneform-field","function->oneform-field",596015058,null),"sicmutils/env.cljc",26,1,233,349,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.function__GT_oneform_field)?sicmutils.env.function__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-basis"),new cljs.core.Var(function(){return sicmutils.env.make_basis;},new cljs.core.Symbol("sicmutils.env","make-basis","sicmutils.env/make-basis",383949026,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-basis","make-basis",-507384846,null),"sicmutils/env.cljc",38,1,233,298,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_basis)?sicmutils.env.make_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->metric"),new cljs.core.Var(function(){return sicmutils.env.components__GT_metric;},new cljs.core.Symbol("sicmutils.env","components->metric","sicmutils.env/components->metric",-54768669,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"components->metric","components->metric",-1449192205,null),"sicmutils/env.cljc",21,1,233,401,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.components__GT_metric)?sicmutils.env.components__GT_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-tilted"),new cljs.core.Var(function(){return sicmutils.env.S1_tilted;},new cljs.core.Symbol("sicmutils.env","S1-tilted","sicmutils.env/S1-tilted",1161397763,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S1-tilted","S1-tilted",1914352915,null),"sicmutils/env.cljc",27,1,233,390,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S1_tilted)?sicmutils.env.S1_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-Riemann"),new cljs.core.Var(function(){return sicmutils.env.S2p_Riemann;},new cljs.core.Symbol("sicmutils.env","S2p-Riemann","sicmutils.env/S2p-Riemann",-1703280093,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p-Riemann","S2p-Riemann",1897909555,null),"sicmutils/env.cljc",61,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p_Riemann)?sicmutils.env.S2p_Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-down"),new cljs.core.Var(function(){return sicmutils.env.literal_down;},new cljs.core.Symbol("sicmutils.env","literal-down","sicmutils.env/literal-down",-545996573,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-down","literal-down",-1340662285,null),"sicmutils/env.cljc",15,1,233,286,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_down)?sicmutils.env.literal_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-D"),new cljs.core.Var(function(){return sicmutils.env.Lie_D;},new cljs.core.Symbol("sicmutils.env","Lie-D","sicmutils.env/Lie-D",-1495986941,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lie-D","Lie-D",1269840403,null),"sicmutils/env.cljc",8,1,233,320,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lie_D)?sicmutils.env.Lie_D.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Christoffel"),new cljs.core.Var(function(){return sicmutils.env.make_Christoffel;},new cljs.core.Symbol("sicmutils.env","make-Christoffel","sicmutils.env/make-Christoffel",47997763,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-Christoffel","make-Christoffel",1480535635,null),"sicmutils/env.cljc",19,1,233,323,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_Christoffel)?sicmutils.env.make_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("the-ether"),new cljs.core.Var(function(){return sicmutils.env.the_ether;},new cljs.core.Symbol("sicmutils.env","the-ether","sicmutils.env/the-ether",501355331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"the-ether","the-ether",-259961165,null),"sicmutils/env.cljc",12,1,233,446,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.the_ether)?sicmutils.env.the_ether.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SO3"),new cljs.core.Var(function(){return sicmutils.env.SO3;},new cljs.core.Symbol("sicmutils.env","SO3","sicmutils.env/SO3",-893379965,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"SO3","SO3",-1478144109,null),"sicmutils/env.cljc",15,1,233,394,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.SO3)?sicmutils.env.SO3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evolve"),new cljs.core.Var(function(){return sicmutils.env.evolve;},new cljs.core.Symbol("sicmutils.env","evolve","sicmutils.env/evolve",-1799764253,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"evolve","evolve",2074557427,null),"sicmutils/env.cljc",9,1,233,509,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.evolve)?sicmutils.env.evolve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("patch-names"),new cljs.core.Var(function(){return sicmutils.env.patch_names;},new cljs.core.Symbol("sicmutils.env","patch-names","sicmutils.env/patch-names",-1901697821,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"patch-names","patch-names",-1547977741,null),"sicmutils/env.cljc",14,1,233,372,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.patch_names)?sicmutils.env.patch_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("binomial-series"),new cljs.core.Var(function(){return sicmutils.env.binomial_series;},new cljs.core.Symbol("sicmutils.env","binomial-series","sicmutils.env/binomial-series",-538948060,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"binomial-series","binomial-series",-1526523436,null),"sicmutils/env.cljc",35,1,233,241,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.binomial_series)?sicmutils.env.binomial_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-circular"),new cljs.core.Var(function(){return sicmutils.env.S1_circular;},new cljs.core.Symbol("sicmutils.env","S1-circular","sicmutils.env/S1-circular",-772554556,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S1-circular","S1-circular",-435145260,null),"sicmutils/env.cljc",17,1,233,390,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S1_circular)?sicmutils.env.S1_circular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("i:outer-product"),new cljs.core.Var(function(){return sicmutils.env.i_COLON_outer_product;},new cljs.core.Symbol("sicmutils.env","i:outer-product","sicmutils.env/i:outer-product",1308588804,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"i:outer-product","i:outer-product",-1864743308,null),"sicmutils/env.cljc",45,1,207,207,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.i_COLON_outer_product)?sicmutils.env.i_COLON_outer_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel->basis"),new cljs.core.Var(function(){return sicmutils.env.Christoffel__GT_basis;},new cljs.core.Symbol("sicmutils.env","Christoffel->basis","sicmutils.env/Christoffel->basis",127540708,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Christoffel->basis","Christoffel->basis",817417876,null),"sicmutils/env.cljc",72,1,233,323,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Christoffel__GT_basis)?sicmutils.env.Christoffel__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pushforward-function"),new cljs.core.Var(function(){return sicmutils.env.pushforward_function;},new cljs.core.Symbol("sicmutils.env","pushforward-function","sicmutils.env/pushforward-function",1416854948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pushforward-function","pushforward-function",-2125705580,null),"sicmutils/env.cljc",41,1,233,409,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pushforward_function)?sicmutils.env.pushforward_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evolution"),new cljs.core.Var(function(){return sicmutils.env.evolution;},new cljs.core.Symbol("sicmutils.env","evolution","sicmutils.env/evolution",-1317266780,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"evolution","evolution",-1709615212,null),"sicmutils/env.cljc",25,1,233,433,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.evolution)?sicmutils.env.evolution.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("outer-product"),new cljs.core.Var(function(){return sicmutils.env.outer_product;},new cljs.core.Symbol("sicmutils.env","outer-product","sicmutils.env/outer-product",-1066437436,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"outer-product","outer-product",491531252,null),"sicmutils/env.cljc",42,1,233,271,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.outer_product)?sicmutils.env.outer_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SR-coordinates?"),new cljs.core.Var(function(){return sicmutils.env.SR_coordinates_QMARK_;},new cljs.core.Symbol("sicmutils.env","SR-coordinates?","sicmutils.env/SR-coordinates?",564013796,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"SR-coordinates?","SR-coordinates?",-159254540,null),"sicmutils/env.cljc",38,1,233,444,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.SR_coordinates_QMARK_)?sicmutils.env.SR_coordinates_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-stereographic"),new cljs.core.Var(function(){return sicmutils.env.S2p_stereographic;},new cljs.core.Symbol("sicmutils.env","S2p-stereographic","sicmutils.env/S2p-stereographic",1011384101,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p-stereographic","S2p-stereographic",1252985877,null),"sicmutils/env.cljc",49,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p_stereographic)?sicmutils.env.S2p_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hodge-star"),new cljs.core.Var(function(){return sicmutils.env.Hodge_star;},new cljs.core.Symbol("sicmutils.env","Hodge-star","sicmutils.env/Hodge-star",1718648069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Hodge-star","Hodge-star",219488309,null),"sicmutils/env.cljc",13,1,233,361,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Hodge_star)?sicmutils.env.Hodge_star.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("component"),new cljs.core.Var(function(){return sicmutils.env.component;},new cljs.core.Symbol("sicmutils.env","component","sicmutils.env/component",-1784975515,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"component","component",-1098498987,null),"sicmutils/env.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"selectors","selectors",959789759,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),"Given a sequence of `selectors`, return a function that accepts some object `x`\n  and returns:\n\n  ```clojure\n  (apply ref x selectors)\n  ```\n  ",(cljs.core.truth_(sicmutils.env.component)?sicmutils.env.component.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cross-product"),new cljs.core.Var(function(){return sicmutils.env.cross_product;},new cljs.core.Symbol("sicmutils.env","cross-product","sicmutils.env/cross-product",-67847355,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"cross-product","cross-product",-823528331,null),"sicmutils/env.cljc",56,1,233,271,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.cross_product)?sicmutils.env.cross_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-tuple"),new cljs.core.Var(function(){return sicmutils.env.coordinate_tuple;},new cljs.core.Symbol("sicmutils.env","coordinate-tuple","sicmutils.env/coordinate-tuple",-1046947931,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-tuple","coordinate-tuple",-1161946955,null),"sicmutils/env.cljc",19,1,233,470,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_tuple)?sicmutils.env.coordinate_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row-matrix->vector"),new cljs.core.Var(function(){return sicmutils.env.row_matrix__GT_vector;},new cljs.core.Symbol("sicmutils.env","row-matrix->vector","sicmutils.env/row-matrix->vector",1289293125,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"row-matrix->vector","row-matrix->vector",1672763573,null),"sicmutils/env.cljc",21,1,233,481,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.row_matrix__GT_vector)?sicmutils.env.row_matrix__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex?"),new cljs.core.Var(function(){return sicmutils.env.complex_QMARK_;},new cljs.core.Symbol("sicmutils.env","complex?","sicmutils.env/complex?",1784664229,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"complex?","complex?",-1119689323,null),"sicmutils/env.cljc",37,1,233,235,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.complex_QMARK_)?sicmutils.env.complex_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nelder-mead"),new cljs.core.Var(function(){return sicmutils.env.nelder_mead;},new cljs.core.Symbol("sicmutils.env","nelder-mead","sicmutils.env/nelder-mead",-8538075,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"nelder-mead","nelder-mead",-737112619,null),"sicmutils/env.cljc",55,1,233,516,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.nelder_mead)?sicmutils.env.nelder_mead.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential-of-map"),new cljs.core.Var(function(){return sicmutils.env.differential_of_map;},new cljs.core.Symbol("sicmutils.env","differential-of-map","sicmutils.env/differential-of-map",522299205,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"differential-of-map","differential-of-map",1243517525,null),"sicmutils/env.cljc",22,1,233,410,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.differential_of_map)?sicmutils.env.differential_of_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("magnitude"),new cljs.core.Var(function(){return sicmutils.env.magnitude;},new cljs.core.Symbol("sicmutils.env","magnitude","sicmutils.env/magnitude",798256453,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null),"sicmutils/env.cljc",12,1,233,269,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.magnitude)?sicmutils.env.magnitude.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("print-expression"),new cljs.core.Var(function(){return sicmutils.env.print_expression;},new cljs.core.Symbol("sicmutils.env","print-expression","sicmutils.env/print-expression",-1308689147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"print-expression","print-expression",1826868853,null),"sicmutils/env.cljc",57,1,233,289,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.print_expression)?sicmutils.env.print_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-oneform-field"),new cljs.core.Var(function(){return sicmutils.env.literal_oneform_field;},new cljs.core.Symbol("sicmutils.env","literal-oneform-field","sicmutils.env/literal-oneform-field",-921424955,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-oneform-field","literal-oneform-field",-502718763,null),"sicmutils/env.cljc",24,1,233,344,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_oneform_field)?sicmutils.env.literal_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symmetrize-Christoffel"),new cljs.core.Var(function(){return sicmutils.env.symmetrize_Christoffel;},new cljs.core.Symbol("sicmutils.env","symmetrize-Christoffel","sicmutils.env/symmetrize-Christoffel",-660129307,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"symmetrize-Christoffel","symmetrize-Christoffel",-1388254507,null),"sicmutils/env.cljc",25,1,233,326,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.symmetrize_Christoffel)?sicmutils.env.symmetrize_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("/"),new cljs.core.Var(function(){return sicmutils.env._SLASH_;},new cljs.core.Symbol("sicmutils.env","/","sicmutils.env//",-2062252763,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/env.cljc",new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"line","line",212345235),233,new cljs.core.Keyword(null,"column","column",2078222095),1,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"/","/",-1371932971,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.env._SLASH_)?sicmutils.env._SLASH_.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log2"),new cljs.core.Var(function(){return sicmutils.env.log2;},new cljs.core.Symbol("sicmutils.env","log2","sicmutils.env/log2",1251230821,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"log2","log2",-1850656939,null),"sicmutils/env.cljc",11,1,233,256,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.log2)?sicmutils.env.log2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("angle"),new cljs.core.Var(function(){return sicmutils.env.angle;},new cljs.core.Symbol("sicmutils.env","angle","sicmutils.env/angle",-1752111899,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null),"sicmutils/env.cljc",18,1,233,269,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.angle)?sicmutils.env.angle.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-gnomonic"),new cljs.core.Var(function(){return sicmutils.env.S3_gnomonic;},new cljs.core.Symbol("sicmutils.env","S3-gnomonic","sicmutils.env/S3-gnomonic",-1283302554,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S3-gnomonic","S3-gnomonic",-1897888682,null),"sicmutils/env.cljc",57,1,233,393,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S3_gnomonic)?sicmutils.env.S3_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Christoffel?"),new cljs.core.Var(function(){return sicmutils.env.Christoffel_QMARK_;},new cljs.core.Symbol("sicmutils.env","Christoffel?","sicmutils.env/Christoffel?",1164903270,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Christoffel?","Christoffel?",977826934,null),"sicmutils/env.cljc",32,1,233,323,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Christoffel_QMARK_)?sicmutils.env.Christoffel_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row-matrix"),new cljs.core.Var(function(){return sicmutils.env.row_matrix;},new cljs.core.Symbol("sicmutils.env","row-matrix","sicmutils.env/row-matrix",-753442330,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"row-matrix","row-matrix",-2005619498,null),"sicmutils/env.cljc",34,1,193,193,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.row_matrix)?sicmutils.env.row_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric-over-map"),new cljs.core.Var(function(){return sicmutils.env.metric_over_map;},new cljs.core.Symbol("sicmutils.env","metric-over-map","sicmutils.env/metric-over-map",1349721478,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric-over-map","metric-over-map",-1970394890,null),"sicmutils/env.cljc",45,1,233,402,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric_over_map)?sicmutils.env.metric_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->local"),new cljs.core.Var(function(){return sicmutils.env.__GT_local;},new cljs.core.Symbol("sicmutils.env","->local","sicmutils.env/->local",415323590,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->local","->local",1172465974,null),"sicmutils/env.cljc",20,1,233,452,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_local)?sicmutils.env.__GT_local.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("covariant-derivative"),new cljs.core.Var(function(){return sicmutils.env.covariant_derivative;},new cljs.core.Symbol("sicmutils.env","covariant-derivative","sicmutils.env/covariant-derivative",1350886054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"covariant-derivative","covariant-derivative",95007126,null),"sicmutils/env.cljc",23,1,233,318,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.covariant_derivative)?sicmutils.env.covariant_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-point?"),new cljs.core.Var(function(){return sicmutils.env.manifold_point_QMARK_;},new cljs.core.Symbol("sicmutils.env","manifold-point?","sicmutils.env/manifold-point?",-1099385178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"manifold-point?","manifold-point?",-1801722474,null),"sicmutils/env.cljc",18,1,233,375,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.manifold_point_QMARK_)?sicmutils.env.manifold_point_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-index-types"),new cljs.core.Var(function(){return sicmutils.env.with_index_types;},new cljs.core.Symbol("sicmutils.env","with-index-types","sicmutils.env/with-index-types",1571731654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"with-index-types","with-index-types",-2000554538,null),"sicmutils/env.cljc",31,1,233,365,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.with_index_types)?sicmutils.env.with_index_types.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gram-Schmidt"),new cljs.core.Var(function(){return sicmutils.env.Gram_Schmidt;},new cljs.core.Symbol("sicmutils.env","Gram-Schmidt","sicmutils.env/Gram-Schmidt",-1799242618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Gram-Schmidt","Gram-Schmidt",-1549606410,null),"sicmutils/env.cljc",15,1,233,360,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Gram_Schmidt)?sicmutils.env.Gram_Schmidt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("drop1"),new cljs.core.Var(function(){return sicmutils.env.drop1;},new cljs.core.Symbol("sicmutils.env","drop1","sicmutils.env/drop1",-742022938,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"drop1","drop1",648703478,null),"sicmutils/env.cljc",42,1,233,403,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.drop1)?sicmutils.env.drop1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-basis->dual"),new cljs.core.Var(function(){return sicmutils.env.vector_basis__GT_dual;},new cljs.core.Symbol("sicmutils.env","vector-basis->dual","sicmutils.env/vector-basis->dual",-1417160378,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-basis->dual","vector-basis->dual",-54882730,null),"sicmutils/env.cljc",21,1,233,305,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_basis__GT_dual)?sicmutils.env.vector_basis__GT_dual.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->oneform-basis"),new cljs.core.Var(function(){return sicmutils.env.basis__GT_oneform_basis;},new cljs.core.Symbol("sicmutils.env","basis->oneform-basis","sicmutils.env/basis->oneform-basis",1402095366,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis->oneform-basis","basis->oneform-basis",150278774,null),"sicmutils/env.cljc",23,1,233,301,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis__GT_oneform_basis)?sicmutils.env.basis__GT_oneform_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->JavaScript"),new cljs.core.Var(function(){return sicmutils.env.__GT_JavaScript;},new cljs.core.Symbol("sicmutils.env","->JavaScript","sicmutils.env/->JavaScript",-1975679578,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->JavaScript","->JavaScript",-417418602,null),"sicmutils/env.cljc",15,1,233,293,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_JavaScript)?sicmutils.env.__GT_JavaScript.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->Cartan-over-map"),new cljs.core.Var(function(){return sicmutils.env.Cartan__GT_Cartan_over_map;},new cljs.core.Symbol("sicmutils.env","Cartan->Cartan-over-map","sicmutils.env/Cartan->Cartan-over-map",-334331994,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan->Cartan-over-map","Cartan->Cartan-over-map",-1216564554,null),"sicmutils/env.cljc",26,1,233,329,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan__GT_Cartan_over_map)?sicmutils.env.Cartan__GT_Cartan_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations"),new cljs.core.Var(function(){return sicmutils.env.Lagrange_equations;},new cljs.core.Symbol("sicmutils.env","Lagrange-equations","sicmutils.env/Lagrange-equations",1360414182,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrange-equations","Lagrange-equations",-2039149866,null),"sicmutils/env.cljc",21,1,233,459,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrange_equations)?sicmutils.env.Lagrange_equations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up"),new cljs.core.Var(function(){return sicmutils.env.up;},new cljs.core.Symbol("sicmutils.env","up","sicmutils.env/up",-2070520250,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"up","up",1370819414,null),"sicmutils/env.cljc",5,1,233,283,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.up)?sicmutils.env.up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->vector-basis"),new cljs.core.Var(function(){return sicmutils.env.basis__GT_vector_basis;},new cljs.core.Symbol("sicmutils.env","basis->vector-basis","sicmutils.env/basis->vector-basis",436849254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis->vector-basis","basis->vector-basis",-168519818,null),"sicmutils/env.cljc",22,1,233,302,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis__GT_vector_basis)?sicmutils.env.basis__GT_vector_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system-names"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system_names;},new cljs.core.Symbol("sicmutils.env","coordinate-system-names","sicmutils.env/coordinate-system-names",1381232774,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system-names","coordinate-system-names",793552790,null),"sicmutils/env.cljc",38,1,233,372,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system_names)?sicmutils.env.coordinate_system_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Cartan"),new cljs.core.Var(function(){return sicmutils.env.literal_Cartan;},new cljs.core.Symbol("sicmutils.env","literal-Cartan","sicmutils.env/literal-Cartan",1883230918,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-Cartan","literal-Cartan",757080022,null),"sicmutils/env.cljc",17,1,233,314,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_Cartan)?sicmutils.env.literal_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asin"),new cljs.core.Var(function(){return sicmutils.env.asin;},new cljs.core.Symbol("sicmutils.env","asin","sicmutils.env/asin",-13010810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"asin","asin",-904130570,null),"sicmutils/env.cljc",12,1,233,263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.asin)?sicmutils.env.asin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extended-rotation"),new cljs.core.Var(function(){return sicmutils.env.extended_rotation;},new cljs.core.Symbol("sicmutils.env","extended-rotation","sicmutils.env/extended-rotation",1194201447,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"extended-rotation","extended-rotation",-1676844009,null),"sicmutils/env.cljc",49,1,233,441,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.extended_rotation)?sicmutils.env.extended_rotation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sharpen"),new cljs.core.Var(function(){return sicmutils.env.sharpen;},new cljs.core.Symbol("sicmutils.env","sharpen","sicmutils.env/sharpen",-1144113817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sharpen","sharpen",1323878487,null),"sicmutils/env.cljc",43,1,233,405,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sharpen)?sicmutils.env.sharpen.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("infinite?"),new cljs.core.Var(function(){return sicmutils.env.infinite_QMARK_;},new cljs.core.Symbol("sicmutils.env","infinite?","sicmutils.env/infinite?",-1264264377,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"infinite?","infinite?",-377355081,null),"sicmutils/env.cljc",22,1,233,247,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.infinite_QMARK_)?sicmutils.env.infinite_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("numerator"),new cljs.core.Var(function(){return sicmutils.env.numerator;},new cljs.core.Symbol("sicmutils.env","numerator","sicmutils.env/numerator",2002572327,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"numerator","numerator",1479770423,null),"sicmutils/env.cljc",28,1,233,240,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.numerator)?sicmutils.env.numerator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orthonormalize"),new cljs.core.Var(function(){return sicmutils.env.orthonormalize;},new cljs.core.Symbol("sicmutils.env","orthonormalize","sicmutils.env/orthonormalize",-175042521,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"orthonormalize","orthonormalize",-931386057,null),"sicmutils/env.cljc",30,1,233,360,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.orthonormalize)?sicmutils.env.orthonormalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->metric-components"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_metric_components;},new cljs.core.Symbol("sicmutils.env","coordinate-system->metric-components","sicmutils.env/coordinate-system->metric-components",30345959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->metric-components","coordinate-system->metric-components",1424635351,null),"sicmutils/env.cljc",39,1,233,397,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_metric_components)?sicmutils.env.coordinate_system__GT_metric_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-gnomonic"),new cljs.core.Var(function(){return sicmutils.env.S1_gnomonic;},new cljs.core.Symbol("sicmutils.env","S1-gnomonic","sicmutils.env/S1-gnomonic",652102791,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S1-gnomonic","S1-gnomonic",1277278711,null),"sicmutils/env.cljc",48,1,233,390,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S1_gnomonic)?sicmutils.env.S1_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-shape"),new cljs.core.Var(function(){return sicmutils.env.compatible_shape;},new cljs.core.Symbol("sicmutils.env","compatible-shape","sicmutils.env/compatible-shape",1380978407,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"compatible-shape","compatible-shape",2037767671,null),"sicmutils/env.cljc",19,1,233,276,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.compatible_shape)?sicmutils.env.compatible_shape.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4-cyl"),new cljs.core.Var(function(){return sicmutils.env.R4_cyl;},new cljs.core.Symbol("sicmutils.env","R4-cyl","sicmutils.env/R4-cyl",1750818631,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R4-cyl","R4-cyl",-1631843753,null),"sicmutils/env.cljc",20,1,233,387,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R4_cyl)?sicmutils.env.R4_cyl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric:invert"),new cljs.core.Var(function(){return sicmutils.env.metric_COLON_invert;},new cljs.core.Symbol("sicmutils.env","metric:invert","sicmutils.env/metric:invert",-526947929,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric:invert","metric:invert",-709738857,null),"sicmutils/env.cljc",36,1,202,202,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric_COLON_invert)?sicmutils.env.metric_COLON_invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one?"),new cljs.core.Var(function(){return sicmutils.env.one_QMARK_;},new cljs.core.Symbol("sicmutils.env","one?","sicmutils.env/one?",1197494695,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"one?","one?",1787102903,null),"sicmutils/env.cljc",46,1,233,524,cljs.core.List.EMPTY,null,((sicmutils.env.one_QMARK_)?sicmutils.env.one_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-matrix"),new cljs.core.Var(function(){return sicmutils.env.literal_matrix;},new cljs.core.Symbol("sicmutils.env","literal-matrix","sicmutils.env/literal-matrix",684876071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-matrix","literal-matrix",-1009819945,null),"sicmutils/env.cljc",17,1,233,474,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_matrix)?sicmutils.env.literal_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-vector-field"),new cljs.core.Var(function(){return sicmutils.env.pullback_vector_field;},new cljs.core.Symbol("sicmutils.env","pullback-vector-field","sicmutils.env/pullback-vector-field",-1459447929,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pullback-vector-field","pullback-vector-field",2082593527,null),"sicmutils/env.cljc",38,1,233,416,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pullback_vector_field)?sicmutils.env.pullback_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->vector"),new cljs.core.Var(function(){return sicmutils.env.structure__GT_vector;},new cljs.core.Symbol("sicmutils.env","structure->vector","sicmutils.env/structure->vector",-1216870393,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"structure->vector","structure->vector",-530711689,null),"sicmutils/env.cljc",20,1,233,281,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.structure__GT_vector)?sicmutils.env.structure__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ratio?"),new cljs.core.Var(function(){return sicmutils.env.ratio_QMARK_;},new cljs.core.Symbol("sicmutils.env","ratio?","sicmutils.env/ratio?",-916185881,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"ratio?","ratio?",-498643049,null),"sicmutils/env.cljc",58,1,233,240,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.ratio_QMARK_)?sicmutils.env.ratio_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->components"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_components;},new cljs.core.Symbol("sicmutils.env","metric->components","sicmutils.env/metric->components",7193384,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->components","metric->components",-280457160,null),"sicmutils/env.cljc",40,1,233,401,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_components)?sicmutils.env.metric__GT_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-family?"),new cljs.core.Var(function(){return sicmutils.env.manifold_family_QMARK_;},new cljs.core.Symbol("sicmutils.env","manifold-family?","sicmutils.env/manifold-family?",-558545112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"manifold-family?","manifold-family?",-175083464,null),"sicmutils/env.cljc",19,1,233,374,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.manifold_family_QMARK_)?sicmutils.env.manifold_family_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R1"),new cljs.core.Var(function(){return sicmutils.env.R1;},new cljs.core.Symbol("sicmutils.env","R1","sicmutils.env/R1",-1241640504,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R1","R1",1595616472,null),"sicmutils/env.cljc",5,1,233,384,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R1)?sicmutils.env.R1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acsc"),new cljs.core.Var(function(){return sicmutils.env.acsc;},new cljs.core.Symbol("sicmutils.env","acsc","sicmutils.env/acsc",-698655704,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acsc","acsc",-1149851176,null),"sicmutils/env.cljc",27,1,233,263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acsc)?sicmutils.env.acsc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("chart"),new cljs.core.Var(function(){return sicmutils.env.chart;},new cljs.core.Symbol("sicmutils.env","chart","sicmutils.env/chart",-896279704,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"chart","chart",-1481210344,null),"sicmutils/env.cljc",8,1,233,376,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.chart)?sicmutils.env.chart.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial"),new cljs.core.Var(function(){return sicmutils.env.partial;},new cljs.core.Symbol("sicmutils.env","partial","sicmutils.env/partial",88824104,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"partial","partial",1881673272,null),"sicmutils/env.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"selectors","selectors",959789759,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,152,152,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),"A shim. Dispatches to [[d/partial]] when all the arguments are integers; falls\n  back to [[clojure.core/partial]] (partial function application) otherwise.",(cljs.core.truth_(sicmutils.env.partial)?sicmutils.env.partial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system?"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system_QMARK_;},new cljs.core.Symbol("sicmutils.env","coordinate-system?","sicmutils.env/coordinate-system?",-1148116600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system?","coordinate-system?",-697018728,null),"sicmutils/env.cljc",21,1,233,382,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system_QMARK_)?sicmutils.env.coordinate_system_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Curl"),new cljs.core.Var(function(){return sicmutils.env.Curl;},new cljs.core.Symbol("sicmutils.env","Curl","sicmutils.env/Curl",40365512,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Curl","Curl",797096696,null),"sicmutils/env.cljc",16,1,233,420,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Curl)?sicmutils.env.Curl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Grad"),new cljs.core.Var(function(){return sicmutils.env.Grad;},new cljs.core.Symbol("sicmutils.env","Grad","sicmutils.env/Grad",-541671320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Grad","Grad",-1533675656,null),"sicmutils/env.cljc",11,1,233,420,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Grad)?sicmutils.env.Grad.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Riemann-curvature"),new cljs.core.Var(function(){return sicmutils.env.Riemann_curvature;},new cljs.core.Symbol("sicmutils.env","Riemann-curvature","sicmutils.env/Riemann-curvature",-1293427032,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Riemann-curvature","Riemann-curvature",-1648319560,null),"sicmutils/env.cljc",20,1,233,333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Riemann_curvature)?sicmutils.env.Riemann_curvature.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rationalize"),new cljs.core.Var(function(){return sicmutils.env.rationalize;},new cljs.core.Symbol("sicmutils.env","rationalize","sicmutils.env/rationalize",1203115913,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rationalize","rationalize",290767001,null),"sicmutils/env.cljc",70,1,233,240,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rationalize)?sicmutils.env.rationalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("wcross->w"),new cljs.core.Var(function(){return sicmutils.env.wcross__GT_w;},new cljs.core.Symbol("sicmutils.env","wcross->w","sicmutils.env/wcross->w",538168777,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"wcross->w","wcross->w",-80334599,null),"sicmutils/env.cljc",21,1,233,507,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.wcross__GT_w)?sicmutils.env.wcross__GT_w.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exact?"),new cljs.core.Var(function(){return sicmutils.env.exact_QMARK_;},new cljs.core.Symbol("sicmutils.env","exact?","sicmutils.env/exact?",-634290071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exact?","exact?",-2028776167,null),"sicmutils/env.cljc",35,1,233,524,cljs.core.List.EMPTY,null,((sicmutils.env.exact_QMARK_)?sicmutils.env.exact_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Alt"),new cljs.core.Var(function(){return sicmutils.env.Alt;},new cljs.core.Symbol("sicmutils.env","Alt","sicmutils.env/Alt",-2075071383,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Alt","Alt",-1183702663,null),"sicmutils/env.cljc",6,1,233,351,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Alt)?sicmutils.env.Alt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("general-boost2"),new cljs.core.Var(function(){return sicmutils.env.general_boost2;},new cljs.core.Symbol("sicmutils.env","general-boost2","sicmutils.env/general-boost2",634123401,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"general-boost2","general-boost2",317456793,null),"sicmutils/env.cljc",31,1,233,441,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.general_boost2)?sicmutils.env.general_boost2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acot"),new cljs.core.Var(function(){return sicmutils.env.acot;},new cljs.core.Symbol("sicmutils.env","acot","sicmutils.env/acot",-1638038167,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"acot","acot",1103016569,null),"sicmutils/env.cljc",17,1,233,263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.acot)?sicmutils.env.acot.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2"),new cljs.core.Var(function(){return sicmutils.env.R2;},new cljs.core.Symbol("sicmutils.env","R2","sicmutils.env/R2",779130249,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R2","R2",51758745,null),"sicmutils/env.cljc",5,1,233,385,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R2)?sicmutils.env.R2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rotate-y-tuple"),new cljs.core.Var(function(){return sicmutils.env.rotate_y_tuple;},new cljs.core.Symbol("sicmutils.env","rotate-y-tuple","sicmutils.env/rotate-y-tuple",1267737097,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"rotate-y-tuple","rotate-y-tuple",620058393,null),"sicmutils/env.cljc",32,1,233,505,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.rotate_y_tuple)?sicmutils.env.rotate_y_tuple.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-metric"),new cljs.core.Var(function(){return sicmutils.env.literal_metric;},new cljs.core.Symbol("sicmutils.env","literal-metric","sicmutils.env/literal-metric",-1080454071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"literal-metric","literal-metric",-1799706791,null),"sicmutils/env.cljc",17,1,233,400,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.literal_metric)?sicmutils.env.literal_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("proper-time-interval"),new cljs.core.Var(function(){return sicmutils.env.proper_time_interval;},new cljs.core.Symbol("sicmutils.env","proper-time-interval","sicmutils.env/proper-time-interval",955807817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"proper-time-interval","proper-time-interval",-304271527,null),"sicmutils/env.cljc",23,1,233,440,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.proper_time_interval)?sicmutils.env.proper_time_interval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->stream"),new cljs.core.Var(function(){return sicmutils.env.expression__GT_stream;},new cljs.core.Symbol("sicmutils.env","expression->stream","sicmutils.env/expression->stream",-1212942167,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"expression->stream","expression->stream",1834298297,null),"sicmutils/env.cljc",21,1,233,289,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.expression__GT_stream)?sicmutils.env.expression__GT_stream.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3"),new cljs.core.Var(function(){return sicmutils.env.R3;},new cljs.core.Symbol("sicmutils.env","R3","sicmutils.env/R3",-716244598,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"R3","R3",-72629094,null),"sicmutils/env.cljc",5,1,233,386,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.R3)?sicmutils.env.R3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->vector-field"),new cljs.core.Var(function(){return sicmutils.env.oneform_field__GT_vector_field;},new cljs.core.Symbol("sicmutils.env","oneform-field->vector-field","sicmutils.env/oneform-field->vector-field",-542464598,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"oneform-field->vector-field","oneform-field->vector-field",-1253191494,null),"sicmutils/env.cljc",36,1,233,404,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.oneform_field__GT_vector_field)?sicmutils.env.oneform_field__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("+"),new cljs.core.Var(function(){return sicmutils.env._PLUS_;},new cljs.core.Symbol("sicmutils.env","+","sicmutils.env/+",-2034906326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"+","+",-740910886,null),"sicmutils/env.cljc",6,1,233,245,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env._PLUS_)?sicmutils.env._PLUS_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanhc"),new cljs.core.Var(function(){return sicmutils.env.tanhc;},new cljs.core.Symbol("sicmutils.env","tanhc","sicmutils.env/tanhc",-286196790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"tanhc","tanhc",991235322,null),"sicmutils/env.cljc",24,1,233,266,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.tanhc)?sicmutils.env.tanhc.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-equations-first-order"),new cljs.core.Var(function(){return sicmutils.env.Lagrange_equations_first_order;},new cljs.core.Symbol("sicmutils.env","Lagrange-equations-first-order","sicmutils.env/Lagrange-equations-first-order",84151818,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrange-equations-first-order","Lagrange-equations-first-order",975370522,null),"sicmutils/env.cljc",33,1,233,460,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrange_equations_first_order)?sicmutils.env.Lagrange_equations_first_order.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-unit"),new cljs.core.Var(function(){return sicmutils.env.symplectic_unit;},new cljs.core.Symbol("sicmutils.env","symplectic-unit","sicmutils.env/symplectic-unit",1415946762,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"symplectic-unit","symplectic-unit",54553914,null),"sicmutils/env.cljc",18,1,233,500,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.symplectic_unit)?sicmutils.env.symplectic_unit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("power-series"),new cljs.core.Var(function(){return sicmutils.env.power_series;},new cljs.core.Symbol("sicmutils.env","power-series","sicmutils.env/power-series",-2135333814,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"power-series","power-series",-572905126,null),"sicmutils/env.cljc",45,1,199,199,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.power_series)?sicmutils.env.power_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abs"),new cljs.core.Var(function(){return sicmutils.env.abs;},new cljs.core.Symbol("sicmutils.env","abs","sicmutils.env/abs",2017282122,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"abs","abs",1394505050,null),"sicmutils/env.cljc",6,1,233,249,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.abs)?sicmutils.env.abs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant-series"),new cljs.core.Var(function(){return sicmutils.env.constant_series;},new cljs.core.Symbol("sicmutils.env","constant-series","sicmutils.env/constant-series",-569998742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"constant-series","constant-series",-1961271942,null),"sicmutils/env.cljc",44,1,200,200,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.constant_series)?sicmutils.env.constant_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("p->r"),new cljs.core.Var(function(){return sicmutils.env.p__GT_r;},new cljs.core.Symbol("sicmutils.env","p->r","sicmutils.env/p->r",-1741045654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"p->r","p->r",1864824186,null),"sicmutils/env.cljc",17,1,233,468,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.p__GT_r)?sicmutils.env.p__GT_r.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace2down"),new cljs.core.Var(function(){return sicmutils.env.trace2down;},new cljs.core.Symbol("sicmutils.env","trace2down","sicmutils.env/trace2down",-2044803894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"trace2down","trace2down",1832753626,null),"sicmutils/env.cljc",26,1,233,405,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.trace2down)?sicmutils.env.trace2down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq:pprint"),new cljs.core.Var(function(){return sicmutils.env.seq_COLON_pprint;},new cljs.core.Symbol("sicmutils.env","seq:pprint","sicmutils.env/seq:pprint",-1592612054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"seq:pprint","seq:pprint",-160078278,null),"sicmutils/env.cljc",33,1,205,205,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.seq_COLON_pprint)?sicmutils.env.seq_COLON_pprint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typical-coords"),new cljs.core.Var(function(){return sicmutils.env.typical_coords;},new cljs.core.Symbol("sicmutils.env","typical-coords","sicmutils.env/typical-coords",-1016926294,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"typical-coords","typical-coords",-29279558,null),"sicmutils/env.cljc",17,1,233,377,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.typical_coords)?sicmutils.env.typical_coords.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinh"),new cljs.core.Var(function(){return sicmutils.env.sinh;},new cljs.core.Symbol("sicmutils.env","sinh","sicmutils.env/sinh",-372087350,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sinh","sinh",-990423302,null),"sicmutils/env.cljc",12,1,233,264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sinh)?sicmutils.env.sinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fractional-part"),new cljs.core.Var(function(){return sicmutils.env.fractional_part;},new cljs.core.Symbol("sicmutils.env","fractional-part","sicmutils.env/fractional-part",-1129255958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"fractional-part","fractional-part",-505422086,null),"sicmutils/env.cljc",31,1,233,253,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.fractional_part)?sicmutils.env.fractional_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->connection-1"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_connection_1;},new cljs.core.Symbol("sicmutils.env","metric->connection-1","sicmutils.env/metric->connection-1",1960634922,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->connection-1","metric->connection-1",1270458170,null),"sicmutils/env.cljc",23,1,233,313,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_connection_1)?sicmutils.env.metric__GT_connection_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-sums"),new cljs.core.Var(function(){return sicmutils.env.partial_sums;},new cljs.core.Symbol("sicmutils.env","partial-sums","sicmutils.env/partial-sums",-1447563702,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"partial-sums","partial-sums",-1831543974,null),"sicmutils/env.cljc",48,1,233,241,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.partial_sums)?sicmutils.env.partial_sums.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp2"),new cljs.core.Var(function(){return sicmutils.env.exp2;},new cljs.core.Symbol("sicmutils.env","exp2","sicmutils.env/exp2",337477738,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exp2","exp2",603509626,null),"sicmutils/env.cljc",11,1,233,255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.exp2)?sicmutils.env.exp2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add-v:cs"),new cljs.core.Var(function(){return sicmutils.env.add_v_COLON_cs;},new cljs.core.Symbol("sicmutils.env","add-v:cs","sicmutils.env/add-v:cs",219775562,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"add-v:cs","add-v:cs",939327354,null),"sicmutils/env.cljc",11,1,233,447,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.add_v_COLON_cs)?sicmutils.env.add_v_COLON_cs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-manifold-function"),new cljs.core.Var(function(){return sicmutils.env.zero_manifold_function;},new cljs.core.Symbol("sicmutils.env","zero-manifold-function","sicmutils.env/zero-manifold-function",-1320868853,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"zero-manifold-function","zero-manifold-function",-429657829,null),"sicmutils/env.cljc",25,1,233,380,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.zero_manifold_function)?sicmutils.env.zero_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coords->event"),new cljs.core.Var(function(){return sicmutils.env.coords__GT_event;},new cljs.core.Symbol("sicmutils.env","coords->event","sicmutils.env/coords->event",-752848149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coords->event","coords->event",637740539,null),"sicmutils/env.cljc",16,1,233,356,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coords__GT_event)?sicmutils.env.coords__GT_event.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->coordinate-system"),new cljs.core.Var(function(){return sicmutils.env.basis__GT_coordinate_system;},new cljs.core.Symbol("sicmutils.env","basis->coordinate-system","sicmutils.env/basis->coordinate-system",-1124593877,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"basis->coordinate-system","basis->coordinate-system",-1847737797,null),"sicmutils/env.cljc",27,1,233,300,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.basis__GT_coordinate_system)?sicmutils.env.basis__GT_coordinate_system.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector->up"),new cljs.core.Var(function(){return sicmutils.env.vector__GT_up;},new cljs.core.Symbol("sicmutils.env","vector->up","sicmutils.env/vector->up",1387899339,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector->up","vector->up",1833229019,null),"sicmutils/env.cljc",26,1,233,285,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector__GT_up)?sicmutils.env.vector__GT_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factor"),new cljs.core.Var(function(){return sicmutils.env.factor;},new cljs.core.Symbol("sicmutils.env","factor","sicmutils.env/factor",1049750187,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"factor","factor",-462641221,null),"sicmutils/env.cljc",37,1,233,239,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.factor)?sicmutils.env.factor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->components"),new cljs.core.Var(function(){return sicmutils.env.vector_field__GT_components;},new cljs.core.Symbol("sicmutils.env","vector-field->components","sicmutils.env/vector-field->components",-1077231860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"vector-field->components","vector-field->components",-1993765828,null),"sicmutils/env.cljc",27,1,233,426,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.vector_field__GT_components)?sicmutils.env.vector_field__GT_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("gradient"),new cljs.core.Var(function(){return sicmutils.env.gradient;},new cljs.core.Symbol("sicmutils.env","gradient","sicmutils.env/gradient",-996718036,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"gradient","gradient",-343377444,null),"sicmutils/env.cljc",27,1,233,421,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.gradient)?sicmutils.env.gradient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->connection-2"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_connection_2;},new cljs.core.Symbol("sicmutils.env","metric->connection-2","sicmutils.env/metric->connection-2",-980461876,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->connection-2","metric->connection-2",413672956,null),"sicmutils/env.cljc",44,1,233,313,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_connection_2)?sicmutils.env.metric__GT_connection_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian->state-derivative"),new cljs.core.Var(function(){return sicmutils.env.Hamiltonian__GT_state_derivative;},new cljs.core.Symbol("sicmutils.env","Hamiltonian->state-derivative","sicmutils.env/Hamiltonian->state-derivative",-407797076,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Hamiltonian->state-derivative","Hamiltonian->state-derivative",853341788,null),"sicmutils/env.cljc",32,1,233,487,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Hamiltonian__GT_state_derivative)?sicmutils.env.Hamiltonian__GT_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up->column-matrix"),new cljs.core.Var(function(){return sicmutils.env.up__GT_column_matrix;},new cljs.core.Symbol("sicmutils.env","up->column-matrix","sicmutils.env/up->column-matrix",1475775852,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"up->column-matrix","up->column-matrix",1793835676,null),"sicmutils/env.cljc",20,1,233,476,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.up__GT_column_matrix)?sicmutils.env.up__GT_column_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-Lagrange-operator"),new cljs.core.Var(function(){return sicmutils.env.Euler_Lagrange_operator;},new cljs.core.Symbol("sicmutils.env","Euler-Lagrange-operator","sicmutils.env/Euler-Lagrange-operator",-791866996,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Euler-Lagrange-operator","Euler-Lagrange-operator",-2048146756,null),"sicmutils/env.cljc",26,1,233,455,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Euler_Lagrange_operator)?sicmutils.env.Euler_Lagrange_operator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kind"),new cljs.core.Var(function(){return sicmutils.env.kind;},new cljs.core.Symbol("sicmutils.env","kind","sicmutils.env/kind",1612267436,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"kind","kind",923265724,null),"sicmutils/env.cljc",25,1,233,526,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.kind)?sicmutils.env.kind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qp-submatrix"),new cljs.core.Var(function(){return sicmutils.env.qp_submatrix;},new cljs.core.Symbol("sicmutils.env","qp-submatrix","sicmutils.env/qp-submatrix",-1707582548,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"qp-submatrix","qp-submatrix",1695903452,null),"sicmutils/env.cljc",15,1,233,498,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.qp_submatrix)?sicmutils.env.qp_submatrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atanh"),new cljs.core.Var(function(){return sicmutils.env.atanh;},new cljs.core.Symbol("sicmutils.env","atanh","sicmutils.env/atanh",-790451252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"atanh","atanh",-1915750692,null),"sicmutils/env.cljc",20,1,233,265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.atanh)?sicmutils.env.atanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-SR-coordinates"),new cljs.core.Var(function(){return sicmutils.env.make_SR_coordinates;},new cljs.core.Symbol("sicmutils.env","make-SR-coordinates","sicmutils.env/make-SR-coordinates",193228172,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-SR-coordinates","make-SR-coordinates",-22454532,null),"sicmutils/env.cljc",22,1,233,444,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_SR_coordinates)?sicmutils.env.make_SR_coordinates.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("square"),new cljs.core.Var(function(){return sicmutils.env.square;},new cljs.core.Symbol("sicmutils.env","square","sicmutils.env/square",-279214580,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"square","square",-1842001092,null),"sicmutils/env.cljc",9,1,233,259,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.square)?sicmutils.env.square.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lower"),new cljs.core.Var(function(){return sicmutils.env.lower;},new cljs.core.Symbol("sicmutils.env","lower","sicmutils.env/lower",-546728340,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"lower","lower",-1534114948,null),"sicmutils/env.cljc",8,1,233,403,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.lower)?sicmutils.env.lower.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lcm"),new cljs.core.Var(function(){return sicmutils.env.lcm;},new cljs.core.Symbol("sicmutils.env","lcm","sicmutils.env/lcm",1334983404,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"lcm","lcm",-1699262564,null),"sicmutils/env.cljc",10,1,233,257,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.lcm)?sicmutils.env.lcm.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transfer-point"),new cljs.core.Var(function(){return sicmutils.env.transfer_point;},new cljs.core.Symbol("sicmutils.env","transfer-point","sicmutils.env/transfer-point",-1701103444,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"transfer-point","transfer-point",-1401040996,null),"sicmutils/env.cljc",46,1,233,377,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.transfer_point)?sicmutils.env.transfer_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity-like"),new cljs.core.Var(function(){return sicmutils.env.identity_like;},new cljs.core.Symbol("sicmutils.env","identity-like","sicmutils.env/identity-like",1888218860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"identity-like","identity-like",1541985180,null),"sicmutils/env.cljc",35,1,233,525,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.identity_like)?sicmutils.env.identity_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-tilted"),new cljs.core.Var(function(){return sicmutils.env.S2p_tilted;},new cljs.core.Symbol("sicmutils.env","S2p-tilted","sicmutils.env/S2p-tilted",-1734283188,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"S2p-tilted","S2p-tilted",-205552708,null),"sicmutils/env.cljc",31,1,233,392,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.S2p_tilted)?sicmutils.env.S2p_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback-function"),new cljs.core.Var(function(){return sicmutils.env.pullback_function;},new cljs.core.Symbol("sicmutils.env","pullback-function","sicmutils.env/pullback-function",1854397164,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pullback-function","pullback-function",811870172,null),"sicmutils/env.cljc",20,1,233,409,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pullback_function)?sicmutils.env.pullback_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("anticommutator"),new cljs.core.Var(function(){return sicmutils.env.anticommutator;},new cljs.core.Symbol("sicmutils.env","anticommutator","sicmutils.env/anticommutator",2100291628,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"anticommutator","anticommutator",369809372,null),"sicmutils/env.cljc",47,1,233,238,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.anticommutator)?sicmutils.env.anticommutator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-angles"),new cljs.core.Var(function(){return sicmutils.env.Euler_angles;},new cljs.core.Symbol("sicmutils.env","Euler-angles","sicmutils.env/Euler-angles",1352158956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Euler-angles","Euler-angles",-1077969924,null),"sicmutils/env.cljc",28,1,233,394,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Euler_angles)?sicmutils.env.Euler_angles.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sin"),new cljs.core.Var(function(){return sicmutils.env.sin;},new cljs.core.Symbol("sicmutils.env","sin","sicmutils.env/sin",1401341869,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sin","sin",1721439389,null),"sicmutils/env.cljc",10,1,233,260,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sin)?sicmutils.env.sin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sumr"),new cljs.core.Var(function(){return sicmutils.env.sumr;},new cljs.core.Symbol("sicmutils.env","sumr","sicmutils.env/sumr",972013485,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sumr","sumr",302547133,null),"sicmutils/env.cljc",12,1,233,279,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sumr)?sicmutils.env.sumr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->inverse-components"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_inverse_components;},new cljs.core.Symbol("sicmutils.env","metric->inverse-components","sicmutils.env/metric->inverse-components",-2031938771,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->inverse-components","metric->inverse-components",-804339491,null),"sicmutils/env.cljc",29,1,233,402,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_inverse_components)?sicmutils.env.metric__GT_inverse_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dimension"),new cljs.core.Var(function(){return sicmutils.env.dimension;},new cljs.core.Symbol("sicmutils.env","dimension","sicmutils.env/dimension",1464540109,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"dimension","dimension",-2111181571,null),"sicmutils/env.cljc",40,1,233,270,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.dimension)?sicmutils.env.dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-params"),new cljs.core.Var(function(){return sicmutils.env.frame_params;},new cljs.core.Symbol("sicmutils.env","frame-params","sicmutils.env/frame-params",297754221,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"frame-params","frame-params",-951014115,null),"sicmutils/env.cljc",35,1,210,210,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.frame_params)?sicmutils.env.frame_params.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant-manifold-function"),new cljs.core.Var(function(){return sicmutils.env.constant_manifold_function;},new cljs.core.Symbol("sicmutils.env","constant-manifold-function","sicmutils.env/constant-manifold-function",225479117,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"constant-manifold-function","constant-manifold-function",-128826051,null),"sicmutils/env.cljc",29,1,233,381,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.constant_manifold_function)?sicmutils.env.constant_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multidimensional-minimize"),new cljs.core.Var(function(){return sicmutils.env.multidimensional_minimize;},new cljs.core.Symbol("sicmutils.env","multidimensional-minimize","sicmutils.env/multidimensional-minimize",1302285357,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"multidimensional-minimize","multidimensional-minimize",448428381,null),"sicmutils/env.cljc",66,1,233,519,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.multidimensional_minimize)?sicmutils.env.multidimensional_minimize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler->M"),new cljs.core.Var(function(){return sicmutils.env.Euler__GT_M;},new cljs.core.Symbol("sicmutils.env","Euler->M","sicmutils.env/Euler->M",-1000809875,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Euler->M","Euler->M",464914845,null),"sicmutils/env.cljc",11,1,233,507,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Euler__GT_M)?sicmutils.env.Euler__GT_M.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->Christoffel"),new cljs.core.Var(function(){return sicmutils.env.Cartan__GT_Christoffel;},new cljs.core.Symbol("sicmutils.env","Cartan->Christoffel","sicmutils.env/Cartan->Christoffel",-651841811,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan->Christoffel","Cartan->Christoffel",-466028067,null),"sicmutils/env.cljc",22,1,233,324,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan__GT_Christoffel)?sicmutils.env.Cartan__GT_Christoffel.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-manifold"),new cljs.core.Var(function(){return sicmutils.env.make_manifold;},new cljs.core.Symbol("sicmutils.env","make-manifold","sicmutils.env/make-manifold",1635207949,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-manifold","make-manifold",1553241629,null),"sicmutils/env.cljc",16,1,233,370,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_manifold)?sicmutils.env.make_manifold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compare"),new cljs.core.Var(function(){return sicmutils.env.compare;},new cljs.core.Symbol("sicmutils.env","compare","sicmutils.env/compare",-1748710643,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"compare","compare",1109853757,null),"sicmutils/env.cljc",28,1,233,524,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.compare)?sicmutils.env.compare.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->Christoffel-2"),new cljs.core.Var(function(){return sicmutils.env.metric__GT_Christoffel_2;},new cljs.core.Symbol("sicmutils.env","metric->Christoffel-2","sicmutils.env/metric->Christoffel-2",-761897203,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"metric->Christoffel-2","metric->Christoffel-2",-1477146051,null),"sicmutils/env.cljc",46,1,233,311,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.metric__GT_Christoffel_2)?sicmutils.env.metric__GT_Christoffel_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("corresponding-velocities"),new cljs.core.Var(function(){return sicmutils.env.corresponding_velocities;},new cljs.core.Symbol("sicmutils.env","corresponding-velocities","sicmutils.env/corresponding-velocities",-940312819,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"corresponding-velocities","corresponding-velocities",-250568131,null),"sicmutils/env.cljc",27,1,233,378,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.corresponding_velocities)?sicmutils.env.corresponding_velocities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-polar"),new cljs.core.Var(function(){return sicmutils.env.make_polar;},new cljs.core.Symbol("sicmutils.env","make-polar","sicmutils.env/make-polar",1092110221,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-polar","make-polar",2147326621,null),"sicmutils/env.cljc",30,1,233,267,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_polar)?sicmutils.env.make_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Riemann"),new cljs.core.Var(function(){return sicmutils.env.Riemann;},new cljs.core.Symbol("sicmutils.env","Riemann","sicmutils.env/Riemann",-450733747,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Riemann","Riemann",809872061,null),"sicmutils/env.cljc",28,1,233,333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Riemann)?sicmutils.env.Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("momentum"),new cljs.core.Var(function(){return sicmutils.env.momentum;},new cljs.core.Symbol("sicmutils.env","momentum","sicmutils.env/momentum",1819300269,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"momentum","momentum",-1755355427,null),"sicmutils/env.cljc",11,1,233,495,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.momentum)?sicmutils.env.momentum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("minimize"),new cljs.core.Var(function(){return sicmutils.env.minimize;},new cljs.core.Symbol("sicmutils.env","minimize","sicmutils.env/minimize",-1021011859,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"minimize","minimize",-1647687907,null),"sicmutils/env.cljc",40,1,233,519,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.minimize)?sicmutils.env.minimize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("interior-product"),new cljs.core.Var(function(){return sicmutils.env.interior_product;},new cljs.core.Symbol("sicmutils.env","interior-product","sicmutils.env/interior-product",362989805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"interior-product","interior-product",1619499933,null),"sicmutils/env.cljc",19,1,233,321,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.interior_product)?sicmutils.env.interior_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("find-path"),new cljs.core.Var(function(){return sicmutils.env.find_path;},new cljs.core.Symbol("sicmutils.env","find-path","sicmutils.env/find-path",287114381,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"find-path","find-path",-63940675,null),"sicmutils/env.cljc",12,1,233,465,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.find_path)?sicmutils.env.find_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-constant-vector-field"),new cljs.core.Var(function(){return sicmutils.env.make_constant_vector_field;},new cljs.core.Symbol("sicmutils.env","make-constant-vector-field","sicmutils.env/make-constant-vector-field",-795110163,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"make-constant-vector-field","make-constant-vector-field",-71514147,null),"sicmutils/env.cljc",29,1,233,306,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.make_constant_vector_field)?sicmutils.env.make_constant_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->H-state"),new cljs.core.Var(function(){return sicmutils.env.__GT_H_state;},new cljs.core.Symbol("sicmutils.env","->H-state","sicmutils.env/->H-state",-263462771,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"->H-state","->H-state",-1515806723,null),"sicmutils/env.cljc",12,1,233,483,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.__GT_H_state)?sicmutils.env.__GT_H_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sec"),new cljs.core.Var(function(){return sicmutils.env.sec;},new cljs.core.Symbol("sicmutils.env","sec","sicmutils.env/sec",918040910,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"sec","sec",60154974,null),"sicmutils/env.cljc",10,1,233,261,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.sec)?sicmutils.env.sec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quotient"),new cljs.core.Var(function(){return sicmutils.env.quotient;},new cljs.core.Symbol("sicmutils.env","quotient","sicmutils.env/quotient",530756014,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"quotient","quotient",-1029733218,null),"sicmutils/env.cljc",11,1,233,251,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.quotient)?sicmutils.env.quotient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->basis"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_basis;},new cljs.core.Symbol("sicmutils.env","coordinate-system->basis","sicmutils.env/coordinate-system->basis",316232110,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->basis","coordinate-system->basis",-316169058,null),"sicmutils/env.cljc",27,1,233,299,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_basis)?sicmutils.env.coordinate_system__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exact-divide"),new cljs.core.Var(function(){return sicmutils.env.exact_divide;},new cljs.core.Symbol("sicmutils.env","exact-divide","sicmutils.env/exact-divide",-1794487410,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"exact-divide","exact-divide",-836167490,null),"sicmutils/env.cljc",15,1,233,258,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.exact_divide)?sicmutils.env.exact_divide.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate"),new cljs.core.Var(function(){return sicmutils.env.coordinate;},new cljs.core.Symbol("sicmutils.env","coordinate","sicmutils.env/coordinate",644479566,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate","coordinate",1527720318,null),"sicmutils/env.cljc",22,1,233,469,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate)?sicmutils.env.coordinate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modulo"),new cljs.core.Var(function(){return sicmutils.env.modulo;},new cljs.core.Symbol("sicmutils.env","modulo","sicmutils.env/modulo",1723054,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"modulo","modulo",725580254,null),"sicmutils/env.cljc",28,1,233,251,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.modulo)?sicmutils.env.modulo.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("form-field->form-field-over-map"),new cljs.core.Var(function(){return sicmutils.env.form_field__GT_form_field_over_map;},new cljs.core.Symbol("sicmutils.env","form-field->form-field-over-map","sicmutils.env/form-field->form-field-over-map",-1341745810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"form-field->form-field-over-map","form-field->form-field-over-map",1700913758,null),"sicmutils/env.cljc",34,1,233,414,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.form_field__GT_form_field_over_map)?sicmutils.env.form_field__GT_form_field_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrange-interpolation-function"),new cljs.core.Var(function(){return sicmutils.env.Lagrange_interpolation_function;},new cljs.core.Symbol("sicmutils.env","Lagrange-interpolation-function","sicmutils.env/Lagrange-interpolation-function",1857170254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrange-interpolation-function","Lagrange-interpolation-function",-1682964898,null),"sicmutils/env.cljc",34,1,233,461,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrange_interpolation_function)?sicmutils.env.Lagrange_interpolation_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pullback"),new cljs.core.Var(function(){return sicmutils.env.pullback;},new cljs.core.Symbol("sicmutils.env","pullback","sicmutils.env/pullback",1768832398,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"pullback","pullback",-1132207426,null),"sicmutils/env.cljc",11,1,233,417,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.pullback)?sicmutils.env.pullback.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("r->s"),new cljs.core.Var(function(){return sicmutils.env.r__GT_s;},new cljs.core.Symbol("sicmutils.env","r->s","sicmutils.env/r->s",-78047314,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"r->s","r->s",779371230,null),"sicmutils/env.cljc",7,1,233,468,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.r__GT_s)?sicmutils.env.r__GT_s.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime"),new cljs.core.Var(function(){return sicmutils.env.spacetime;},new cljs.core.Symbol("sicmutils.env","spacetime","sicmutils.env/spacetime",1732972014,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"spacetime","spacetime",1382825726,null),"sicmutils/env.cljc",12,1,233,388,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.spacetime)?sicmutils.env.spacetime.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->energy"),new cljs.core.Var(function(){return sicmutils.env.Lagrangian__GT_energy;},new cljs.core.Symbol("sicmutils.env","Lagrangian->energy","sicmutils.env/Lagrangian->energy",-793197650,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lagrangian->energy","Lagrangian->energy",-73689250,null),"sicmutils/env.cljc",21,1,233,462,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lagrangian__GT_energy)?sicmutils.env.Lagrangian__GT_energy.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mapr"),new cljs.core.Var(function(){return sicmutils.env.mapr;},new cljs.core.Symbol("sicmutils.env","mapr","sicmutils.env/mapr",-1638528402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"mapr","mapr",-483178594,null),"sicmutils/env.cljc",7,1,233,279,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.mapr)?sicmutils.env.mapr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->metric"),new cljs.core.Var(function(){return sicmutils.env.coordinate_system__GT_metric;},new cljs.core.Symbol("sicmutils.env","coordinate-system->metric","sicmutils.env/coordinate-system->metric",-2136810770,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-system->metric","coordinate-system->metric",2009542622,null),"sicmutils/env.cljc",28,1,233,398,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_system__GT_metric)?sicmutils.env.coordinate_system__GT_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one-like"),new cljs.core.Var(function(){return sicmutils.env.one_like;},new cljs.core.Symbol("sicmutils.env","one-like","sicmutils.env/one-like",-38510225,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"one-like","one-like",-1767302049,null),"sicmutils/env.cljc",21,1,233,525,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.one_like)?sicmutils.env.one_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cube"),new cljs.core.Var(function(){return sicmutils.env.cube;},new cljs.core.Symbol("sicmutils.env","cube","sicmutils.env/cube",-10815697,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"cube","cube",138920159,null),"sicmutils/env.cljc",14,1,233,259,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.cube)?sicmutils.env.cube.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-owner"),new cljs.core.Var(function(){return sicmutils.env.frame_owner;},new cljs.core.Symbol("sicmutils.env","frame-owner","sicmutils.env/frame-owner",915593167,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"frame-owner","frame-owner",1672840447,null),"sicmutils/env.cljc",14,1,233,357,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.frame_owner)?sicmutils.env.frame_owner.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("standard-map"),new cljs.core.Var(function(){return sicmutils.env.standard_map;},new cljs.core.Symbol("sicmutils.env","standard-map","sicmutils.env/standard-map",-1407579761,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"standard-map","standard-map",1530905855,null),"sicmutils/env.cljc",15,1,233,497,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.standard_map)?sicmutils.env.standard_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("r->p"),new cljs.core.Var(function(){return sicmutils.env.r__GT_p;},new cljs.core.Symbol("sicmutils.env","r->p","sicmutils.env/r->p",-1776558609,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"r->p","r->p",-80303841,null),"sicmutils/env.cljc",22,1,233,468,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.r__GT_p)?sicmutils.env.r__GT_p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("remainder"),new cljs.core.Var(function(){return sicmutils.env.remainder;},new cljs.core.Symbol("sicmutils.env","remainder","sicmutils.env/remainder",-1916157297,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"remainder","remainder",-1608248897,null),"sicmutils/env.cljc",21,1,233,251,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.remainder)?sicmutils.env.remainder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Legendre-transform"),new cljs.core.Var(function(){return sicmutils.env.Legendre_transform;},new cljs.core.Symbol("sicmutils.env","Legendre-transform","sicmutils.env/Legendre-transform",1802722959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Legendre-transform","Legendre-transform",77490623,null),"sicmutils/env.cljc",21,1,233,490,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Legendre_transform)?sicmutils.env.Legendre_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("m->s"),new cljs.core.Var(function(){return sicmutils.env.m__GT_s;},new cljs.core.Symbol("sicmutils.env","m->s","sicmutils.env/m->s",1710081199,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"m->s","m->s",1355461087,null),"sicmutils/env.cljc",7,1,233,473,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.m__GT_s)?sicmutils.env.m__GT_s.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis?"),new cljs.core.Var(function(){return sicmutils.env.coordinate_basis_QMARK_;},new cljs.core.Symbol("sicmutils.env","coordinate-basis?","sicmutils.env/coordinate-basis?",-398760209,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"coordinate-basis?","coordinate-basis?",-1009472993,null),"sicmutils/env.cljc",27,1,233,298,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.coordinate_basis_QMARK_)?sicmutils.env.coordinate_basis_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Cartan->forms"),new cljs.core.Var(function(){return sicmutils.env.Cartan__GT_forms;},new cljs.core.Symbol("sicmutils.env","Cartan->forms","sicmutils.env/Cartan->forms",1032422863,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Cartan->forms","Cartan->forms",1353403135,null),"sicmutils/env.cljc",36,1,233,322,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Cartan__GT_forms)?sicmutils.env.Cartan__GT_forms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("denominator"),new cljs.core.Var(function(){return sicmutils.env.denominator;},new cljs.core.Symbol("sicmutils.env","denominator","sicmutils.env/denominator",-902554609,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"denominator","denominator",836166431,null),"sicmutils/env.cljc",40,1,233,240,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.denominator)?sicmutils.env.denominator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("d"),new cljs.core.Var(function(){return sicmutils.env.d;},new cljs.core.Symbol("sicmutils.env","d","sicmutils.env/d",-1404423025,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"d","d",-682293345,null),"sicmutils/env.cljc",24,1,233,352,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.d)?sicmutils.env.d.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lap"),new cljs.core.Var(function(){return sicmutils.env.Lap;},new cljs.core.Symbol("sicmutils.env","Lap","sicmutils.env/Lap",883676879,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"Lap","Lap",25592799,null),"sicmutils/env.cljc",20,1,233,420,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.Lap)?sicmutils.env.Lap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("point"),new cljs.core.Var(function(){return sicmutils.env.point;},new cljs.core.Symbol("sicmutils.env","point","sicmutils.env/point",449113807,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.env","sicmutils.env",-1316831725,null),new cljs.core.Symbol(null,"point","point",-841237505,null),"sicmutils/env.cljc",14,1,233,376,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.env.point)?sicmutils.env.point.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-field->oneform-field"),new cljs.core.Var(function(){return sicmutils.calculus.metric.vector_field__GT_oneform_field;},new cljs.core.Symbol("sicmutils.calculus.metric","vector-field->oneform-field","sicmutils.calculus.metric/vector-field->oneform-field",1069845992,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"vector-field->oneform-field","vector-field->oneform-field",207224065,null),"sicmutils/calculus/metric.cljc",30,1,183,184,cljs.core.List.EMPTY,"Alias for [[lower]].",(cljs.core.truth_(sicmutils.calculus.metric.vector_field__GT_oneform_field)?sicmutils.calculus.metric.vector_field__GT_oneform_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise2"),new cljs.core.Var(function(){return sicmutils.calculus.metric.raise2;},new cljs.core.Symbol("sicmutils.calculus.metric","raise2","sicmutils.calculus.metric/raise2",-1010984270,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"raise2","raise2",-1138595067,null),"sicmutils/calculus/metric.cljc",13,1,234,234,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric-tensor","metric-tensor",201092848,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"For making a (0,2) tensor into a (2,0) tensor.",(cljs.core.truth_(sicmutils.calculus.metric.raise2)?sicmutils.calculus.metric.raise2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.calculus.metric.invert;},new cljs.core.Symbol("sicmutils.calculus.metric","invert","sicmutils.calculus.metric/invert",1625083069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/calculus/metric.cljc",13,1,136,136,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.invert)?sicmutils.calculus.metric.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise1"),new cljs.core.Var(function(){return sicmutils.calculus.metric.raise1;},new cljs.core.Symbol("sicmutils.calculus.metric","raise1","sicmutils.calculus.metric/raise1",-783776315,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"raise1","raise1",-2109852308,null),"sicmutils/calculus/metric.cljc",9,1,211,212,cljs.core.List.EMPTY,"Alias for [[raise]].",(cljs.core.truth_(sicmutils.calculus.metric.raise1)?sicmutils.calculus.metric.raise1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("raise"),new cljs.core.Var(function(){return sicmutils.calculus.metric.raise;},new cljs.core.Symbol("sicmutils.calculus.metric","raise","sicmutils.calculus.metric/raise",-1588275979,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"raise","raise",1824672588,null),"sicmutils/calculus/metric.cljc",12,1,191,191,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"To make a one-form field into a vector field, ie, a (0,1) tensor into a (1,0)\n  tensor.",(cljs.core.truth_(sicmutils.calculus.metric.raise)?sicmutils.calculus.metric.raise.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("embedding-map->metric-components"),new cljs.core.Var(function(){return sicmutils.calculus.metric.embedding_map__GT_metric_components;},new cljs.core.Symbol("sicmutils.calculus.metric","embedding-map->metric-components","sicmutils.calculus.metric/embedding-map->metric-components",854967860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"embedding-map->metric-components","embedding-map->metric-components",-1000114547,null),"sicmutils/calculus/metric.cljc",39,1,22,22,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"xi->rectangular","xi->rectangular",-1801725668,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.embedding_map__GT_metric_components)?sicmutils.calculus.metric.embedding_map__GT_metric_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->inverse-metric"),new cljs.core.Var(function(){return sicmutils.calculus.metric.coordinate_system__GT_inverse_metric;},new cljs.core.Symbol("sicmutils.calculus.metric","coordinate-system->inverse-metric","sicmutils.calculus.metric/coordinate-system->inverse-metric",-1926656857,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"coordinate-system->inverse-metric","coordinate-system->inverse-metric",1607613774,null),"sicmutils/calculus/metric.cljc",40,1,61,61,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.coordinate_system__GT_inverse_metric)?sicmutils.calculus.metric.coordinate_system__GT_inverse_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace2up"),new cljs.core.Var(function(){return sicmutils.calculus.metric.trace2up;},new cljs.core.Symbol("sicmutils.calculus.metric","trace2up","sicmutils.calculus.metric/trace2up",-778737946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"trace2up","trace2up",522966671,null),"sicmutils/calculus/metric.cljc",15,1,271,271,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric-tensor","metric-tensor",201092848,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"Computes the trace of a (2,0) tensor",(cljs.core.truth_(sicmutils.calculus.metric.trace2up)?sicmutils.calculus.metric.trace2up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-metric"),new cljs.core.Var(function(){return sicmutils.calculus.metric.S2_metric;},new cljs.core.Symbol("sicmutils.calculus.metric","S2-metric","sicmutils.calculus.metric/S2-metric",1928437624,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"S2-metric","S2-metric",1081044753,null),"sicmutils/calculus/metric.cljc",15,1,303,303,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.metric.S2_metric)?sicmutils.calculus.metric.S2_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("drop2"),new cljs.core.Var(function(){return sicmutils.calculus.metric.drop2;},new cljs.core.Symbol("sicmutils.calculus.metric","drop2","sicmutils.calculus.metric/drop2",576541051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"drop2","drop2",1353441554,null),"sicmutils/calculus/metric.cljc",12,1,215,215,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric-tensor","metric-tensor",201092848,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"For making a (2,0) tensor into a (0,2) tensor.",(cljs.core.truth_(sicmutils.calculus.metric.drop2)?sicmutils.calculus.metric.drop2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("components->metric"),new cljs.core.Var(function(){return sicmutils.calculus.metric.components__GT_metric;},new cljs.core.Symbol("sicmutils.calculus.metric","components->metric","sicmutils.calculus.metric/components->metric",-194386806,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"components->metric","components->metric",-1449192205,null),"sicmutils/calculus/metric.cljc",25,1,113,113,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"components","components",567342585,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.components__GT_metric)?sicmutils.calculus.metric.components__GT_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric-over-map"),new cljs.core.Var(function(){return sicmutils.calculus.metric.metric_over_map;},new cljs.core.Symbol("sicmutils.calculus.metric","metric-over-map","sicmutils.calculus.metric/metric-over-map",1478539553,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"metric-over-map","metric-over-map",-1970394890,null),"sicmutils/calculus/metric.cljc",22,1,149,149,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mu:N->M","mu:N->M",-1564575384,null),new cljs.core.Symbol(null,"g-on-M","g-on-M",168796354,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.metric_over_map)?sicmutils.calculus.metric.metric_over_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("drop1"),new cljs.core.Var(function(){return sicmutils.calculus.metric.drop1;},new cljs.core.Symbol("sicmutils.calculus.metric","drop1","sicmutils.calculus.metric/drop1",-351208051,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"drop1","drop1",648703478,null),"sicmutils/calculus/metric.cljc",8,1,187,188,cljs.core.List.EMPTY,"Alias for [[lower]].",(cljs.core.truth_(sicmutils.calculus.metric.drop1)?sicmutils.calculus.metric.drop1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sharpen"),new cljs.core.Var(function(){return sicmutils.calculus.metric.sharpen;},new cljs.core.Symbol("sicmutils.calculus.metric","sharpen","sicmutils.calculus.metric/sharpen",-2087495282,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"sharpen","sharpen",1323878487,null),"sicmutils/calculus/metric.cljc",14,1,291,291,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.sharpen)?sicmutils.calculus.metric.sharpen.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->metric-components"),new cljs.core.Var(function(){return sicmutils.calculus.metric.coordinate_system__GT_metric_components;},new cljs.core.Symbol("sicmutils.calculus.metric","coordinate-system->metric-components","sicmutils.calculus.metric/coordinate-system->metric-components",161326350,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"coordinate-system->metric-components","coordinate-system->metric-components",1424635351,null),"sicmutils/calculus/metric.cljc",43,1,38,38,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.coordinate_system__GT_metric_components)?sicmutils.calculus.metric.coordinate_system__GT_metric_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->components"),new cljs.core.Var(function(){return sicmutils.calculus.metric.metric__GT_components;},new cljs.core.Symbol("sicmutils.calculus.metric","metric->components","sicmutils.calculus.metric/metric->components",941842625,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"metric->components","metric->components",-280457160,null),"sicmutils/calculus/metric.cljc",25,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.metric__GT_components)?sicmutils.calculus.metric.metric__GT_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-metric"),new cljs.core.Var(function(){return sicmutils.calculus.metric.literal_metric;},new cljs.core.Symbol("sicmutils.calculus.metric","literal-metric","sicmutils.calculus.metric/literal-metric",-1479595856,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"literal-metric","literal-metric",-1799706791,null),"sicmutils/calculus/metric.cljc",21,1,91,91,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Flat coordinate systems here only.",(cljs.core.truth_(sicmutils.calculus.metric.literal_metric)?sicmutils.calculus.metric.literal_metric.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("oneform-field->vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.metric.oneform_field__GT_vector_field;},new cljs.core.Symbol("sicmutils.calculus.metric","oneform-field->vector-field","sicmutils.calculus.metric/oneform-field->vector-field",-404274875,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"oneform-field->vector-field","oneform-field->vector-field",-1253191494,null),"sicmutils/calculus/metric.cljc",30,1,207,208,cljs.core.List.EMPTY,"Alias for [[raise]].",(cljs.core.truth_(sicmutils.calculus.metric.oneform_field__GT_vector_field)?sicmutils.calculus.metric.oneform_field__GT_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace2down"),new cljs.core.Var(function(){return sicmutils.calculus.metric.trace2down;},new cljs.core.Symbol("sicmutils.calculus.metric","trace2down","sicmutils.calculus.metric/trace2down",-1101829787,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"trace2down","trace2down",1832753626,null),"sicmutils/calculus/metric.cljc",17,1,254,254,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric-tensor","metric-tensor",201092848,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"Computes the trace of a (0,2) tensor.",(cljs.core.truth_(sicmutils.calculus.metric.trace2down)?sicmutils.calculus.metric.trace2down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lower"),new cljs.core.Var(function(){return sicmutils.calculus.metric.lower;},new cljs.core.Symbol("sicmutils.calculus.metric","lower","sicmutils.calculus.metric/lower",-684051497,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"lower","lower",-1534114948,null),"sicmutils/calculus/metric.cljc",12,1,170,170,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null)], null)),"To make a vector field into a one-form field, ie, a (1,0) tensor into a (0,1)\n  tensor.",(cljs.core.truth_(sicmutils.calculus.metric.lower)?sicmutils.calculus.metric.lower.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->inverse-components"),new cljs.core.Var(function(){return sicmutils.calculus.metric.metric__GT_inverse_components;},new cljs.core.Symbol("sicmutils.calculus.metric","metric->inverse-components","sicmutils.calculus.metric/metric->inverse-components",-1900777292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"metric->inverse-components","metric->inverse-components",-804339491,null),"sicmutils/calculus/metric.cljc",33,1,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"Given a metric and a basis, computes the inverse metric.",(cljs.core.truth_(sicmutils.calculus.metric.metric__GT_inverse_components)?sicmutils.calculus.metric.metric__GT_inverse_components.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->metric"),new cljs.core.Var(function(){return sicmutils.calculus.metric.coordinate_system__GT_metric;},new cljs.core.Symbol("sicmutils.calculus.metric","coordinate-system->metric","sicmutils.calculus.metric/coordinate-system->metric",-1991131385,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.metric","sicmutils.calculus.metric",13931292,null),new cljs.core.Symbol(null,"coordinate-system->metric","coordinate-system->metric",2009542622,null),"sicmutils/calculus/metric.cljc",32,1,45,45,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.metric.coordinate_system__GT_metric)?sicmutils.calculus.metric.coordinate_system__GT_metric.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("permute"),new cljs.core.Var(function(){return sicmutils.util.permute.permute;},new cljs.core.Symbol("sicmutils.util.permute","permute","sicmutils.util.permute/permute",-1709469601,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"permute","permute",-199300448,null),"sicmutils/util/permute.cljc",14,1,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permutation","permutation",-1081825529,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given a `permutation` (represented as a list of numbers), and a sequence `xs`\n  to be permuted, construct the list so permuted.",(cljs.core.truth_(sicmutils.util.permute.permute)?sicmutils.util.permute.permute.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$util$permute101158"),new cljs.core.Var(function(){return sicmutils.util.permute.__GT_t_sicmutils$util$permute101158;},new cljs.core.Symbol("sicmutils.util.permute","->t_sicmutils$util$permute101158","sicmutils.util.permute/->t_sicmutils$util$permute101158",256715742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IIterable","cljs.core/IIterable",178674073,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"->t_sicmutils$util$permute101158","->t_sicmutils$util$permute101158",716672545,null),"sicmutils/util/permute.cljc",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),246,cljs.core.list(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"step","step",-1365547645,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"the-next","the-next",-1182032600,null),new cljs.core.Symbol(null,"o","o",290524299,null),new cljs.core.Symbol(null,"return","return",-250970578,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"as","as",-1505746128,null),new cljs.core.Symbol(null,"has-next","has-next",-1971250537,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"meta101159","meta101159",-454456302,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IIterable","cljs.core/IIterable",178674073,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.util.permute/t_sicmutils$util$permute101158.",(cljs.core.truth_(sicmutils.util.permute.__GT_t_sicmutils$util$permute101158)?sicmutils.util.permute.__GT_t_sicmutils$util$permute101158.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multichoose"),new cljs.core.Var(function(){return sicmutils.util.permute.multichoose;},new cljs.core.Symbol("sicmutils.util.permute","multichoose","sicmutils.util.permute/multichoose",1981510026,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"multichoose","multichoose",337768353,null),"sicmutils/util/permute.cljc",20,3,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns the number of possible ways of choosing a multiset with cardinality `k`\n  from a set of `n` items, where each item is allowed to be chosen multiple\n  times.",(cljs.core.truth_(sicmutils.util.permute.multichoose)?sicmutils.util.permute.multichoose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$util$permute101158"),new cljs.core.Var(function(){return sicmutils.util.permute.t_sicmutils$util$permute101158;},new cljs.core.Symbol("sicmutils.util.permute","t_sicmutils$util$permute101158","sicmutils.util.permute/t_sicmutils$util$permute101158",1731854733,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/util/permute.cljc",new cljs.core.Keyword(null,"line","line",212345235),246,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$util$permute101158","t_sicmutils$util$permute101158",-2060342362,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.util.permute.t_sicmutils$util$permute101158)?sicmutils.util.permute.t_sicmutils$util$permute101158.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("permutation-sequence"),new cljs.core.Var(function(){return sicmutils.util.permute.permutation_sequence;},new cljs.core.Symbol("sicmutils.util.permute","permutation-sequence","sicmutils.util.permute/permutation-sequence",-686771118,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"permutation-sequence","permutation-sequence",-182988279,null),"sicmutils/util/permute.cljc",27,1,195,195,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"as","as",-1505746128,null)], null)),"Produces an iterable sequence developing the permutations of the input sequence\n  of objects (which are considered distinct) in church-bell-changes order - that\n  is, each permutation differs from the previous by a transposition of adjacent\n  elements (Algorithm P from \u00A77.2.1.2 of Knuth).\n\n  This is an unusual way to go about this in a functional language, but it's\n  fun.\n\n  This approach has the side-effect of arranging for the parity of the generated\n  permutations to alternate; the first permutation yielded is the identity\n  permutation (which of course is even).\n\n  Inside, there is a great deal of mutable state, but this cannot be observed by\n  the user.",(cljs.core.truth_(sicmutils.util.permute.permutation_sequence)?sicmutils.util.permute.permutation_sequence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cartesian-product"),new cljs.core.Var(function(){return sicmutils.util.permute.cartesian_product;},new cljs.core.Symbol("sicmutils.util.permute","cartesian-product","sicmutils.util.permute/cartesian-product",796347040,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"cartesian-product","cartesian-product",1232721737,null),"sicmutils/util/permute.cljc",24,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"colls","colls",-397642425,null)], null)),"Accepts a sequence of collections `colls` and returns a lazy sequence of the\n  cartesian product of all collections.\n\n  The cartesian product of N collections is a sequences of sequences, each `N`\n  long, of every possible way of choosing `N` items where the first comes from\n  the first entry in `colls`, the second from the second entry and so on.\n\n  NOTE: This implementation comes from Alan Malloy at this [StackOverflow\n  post](https://stackoverflow.com/a/18248031). Thanks, Alan!",(cljs.core.truth_(sicmutils.util.permute.cartesian_product)?sicmutils.util.permute.cartesian_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("permutations"),new cljs.core.Var(function(){return sicmutils.util.permute.permutations;},new cljs.core.Symbol("sicmutils.util.permute","permutations","sicmutils.util.permute/permutations",1091942563,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"permutations","permutations",-1558265014,null),"sicmutils/util/permute.cljc",19,1,16,16,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a lazy sequence of every possible arrangement of the elements of `xs`.",(cljs.core.truth_(sicmutils.util.permute.permutations)?sicmutils.util.permute.permutations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("number-of-permutations"),new cljs.core.Var(function(){return sicmutils.util.permute.number_of_permutations;},new cljs.core.Symbol("sicmutils.util.permute","number-of-permutations","sicmutils.util.permute/number-of-permutations",905813963,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"number-of-permutations","number-of-permutations",401663020,null),"sicmutils/util/permute.cljc",29,1,170,170,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the number of possible ways of permuting a collection of `n` distinct\n  elements.",(cljs.core.truth_(sicmutils.util.permute.number_of_permutations)?sicmutils.util.permute.number_of_permutations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sort-and-permute"),new cljs.core.Var(function(){return sicmutils.util.permute.sort_and_permute;},new cljs.core.Symbol("sicmutils.util.permute","sort-and-permute","sicmutils.util.permute/sort-and-permute",68602773,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"sort-and-permute","sort-and-permute",-501389748,null),"sicmutils/util/permute.cljc",23,1,139,139,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ulist","ulist",-427264443,null),new cljs.core.Symbol(null,"<?","<?",-1929864530,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),"cont = (fn [ulist slist perm iperm] ...)\n\n  Given a short list and a comparison function, to sort the list by the\n  comparison, returning the original list, the sorted list, the permutation\n  procedure and the inverse permutation procedure developed by the sort.",(cljs.core.truth_(sicmutils.util.permute.sort_and_permute)?sicmutils.util.permute.sort_and_permute.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("subpermute"),new cljs.core.Var(function(){return sicmutils.util.permute.subpermute;},new cljs.core.Symbol("sicmutils.util.permute","subpermute","sicmutils.util.permute/subpermute",-335985708,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"subpermute","subpermute",99919407,null),"sicmutils/util/permute.cljc",17,1,160,160,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given a sequence `xs` and a map `m` of replacement indices, returns a new\n  version of `xs` with the element at the position marked by each key in `m`\n  replaced by the element at each value in the original `xs`.",(cljs.core.truth_(sicmutils.util.permute.subpermute)?sicmutils.util.permute.subpermute.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("combinations"),new cljs.core.Var(function(){return sicmutils.util.permute.combinations;},new cljs.core.Symbol("sicmutils.util.permute","combinations","sicmutils.util.permute/combinations",-1688311173,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"combinations","combinations",2103807122,null),"sicmutils/util/permute.cljc",19,1,29,29,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns a lazy sequence of every possible set of `p` elements chosen from\n  `xs`.",(cljs.core.truth_(sicmutils.util.permute.combinations)?sicmutils.util.permute.combinations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("permutation-parity"),new cljs.core.Var(function(){return sicmutils.util.permute.permutation_parity;},new cljs.core.Symbol("sicmutils.util.permute","permutation-parity","sicmutils.util.permute/permutation-parity",345404012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"permutation-parity","permutation-parity",915608661,null),"sicmutils/util/permute.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null),new cljs.core.Symbol(null,"original-list","original-list",1772023851,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null),new cljs.core.Symbol(null,"original-list","original-list",1772023851,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,102,102,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null),new cljs.core.Symbol(null,"original-list","original-list",1772023851,null)], null)),"If a single `permuted-list` is supplied, returns the parity of the number of\n  interchanges required to sort the permutation.\n\n  NOTE that the requirement that elements be sortable currently constrains\n  `permuted-list`'s elements to be numbers that respond to `>=`.\n\n  For two arguments, given a `permuted-list` and the `original-list`, returns\n  the parity (1 for even, -1 for odd) of the number of the number of\n  interchanges required to generate the permuted list from the original list.\n\n  In the two-argument case, if the two lists aren't permutations of each other,\n  returns 0.",(cljs.core.truth_(sicmutils.util.permute.permutation_parity)?sicmutils.util.permute.permutation_parity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("number-of-combinations"),new cljs.core.Var(function(){return sicmutils.util.permute.number_of_combinations;},new cljs.core.Symbol("sicmutils.util.permute","number-of-combinations","sicmutils.util.permute/number-of-combinations",-863955618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"number-of-combinations","number-of-combinations",-1363476619,null),"sicmutils/util/permute.cljc",29,1,176,176,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns 'n choose k', the number of possible ways of choosing `k` distinct\n  elements from a collection of `n` total items.",(cljs.core.truth_(sicmutils.util.permute.number_of_combinations)?sicmutils.util.permute.number_of_combinations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("list-interchanges"),new cljs.core.Var(function(){return sicmutils.util.permute.list_interchanges;},new cljs.core.Symbol("sicmutils.util.permute","list-interchanges","sicmutils.util.permute/list-interchanges",731034560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"list-interchanges","list-interchanges",899634747,null),"sicmutils/util/permute.cljc",24,1,59,59,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null),new cljs.core.Symbol(null,"original-list","original-list",1772023851,null)], null)),"Given a `permuted-list` and the `original-list`, returns the number of\n  interchanges required to generate the permuted list from the original list.",(cljs.core.truth_(sicmutils.util.permute.list_interchanges)?sicmutils.util.permute.list_interchanges.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("delete-nth"),new cljs.core.Var(function(){return sicmutils.util.permute.delete_nth;},new cljs.core.Symbol("sicmutils.util.permute","delete-nth","sicmutils.util.permute/delete-nth",1837049157,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"delete-nth","delete-nth",259017660,null),"sicmutils/util/permute.cljc",26,1,10,10,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"returns the sequence `xs` with its `n`th element dropped.",(cljs.core.truth_(sicmutils.util.permute.delete_nth)?sicmutils.util.permute.delete_nth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("permutation-interchanges"),new cljs.core.Var(function(){return sicmutils.util.permute.permutation_interchanges;},new cljs.core.Symbol("sicmutils.util.permute","permutation-interchanges","sicmutils.util.permute/permutation-interchanges",-1212544793,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.permute","sicmutils.util.permute",420539807,null),new cljs.core.Symbol(null,"permutation-interchanges","permutation-interchanges",1436643038,null),"sicmutils/util/permute.cljc",31,1,80,80,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"permuted-list","permuted-list",-1279209469,null)], null)),null,(cljs.core.truth_(sicmutils.util.permute.permutation_interchanges)?sicmutils.util.permute.permutation_interchanges.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symbolic-taylor-series"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.symbolic_taylor_series;},new cljs.core.Symbol("sicmutils.calculus.derivative","symbolic-taylor-series","sicmutils.calculus.derivative/symbolic-taylor-series",-1176255783,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"symbolic-taylor-series","symbolic-taylor-series",-622675349,null),"sicmutils/calculus/derivative.cljc",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,502,502,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Similar to [[taylor-series]], except `f` is evaluated with symbolic arguments,\n  and these arguments are only replaced with the values `xs` after Taylor series\n  expansion.\n\n  Please see the docs for [[taylor-series]]!",(cljs.core.truth_(sicmutils.calculus.derivative.symbolic_taylor_series)?sicmutils.calculus.derivative.symbolic_taylor_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D-as-matrix"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.D_as_matrix;},new cljs.core.Symbol("sicmutils.calculus.derivative","D-as-matrix","sicmutils.calculus.derivative/D-as-matrix",813284294,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"D-as-matrix","D-as-matrix",1433947152,null),"sicmutils/calculus/derivative.cljc",18,1,444,444,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.derivative.D_as_matrix)?sicmutils.calculus.derivative.D_as_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("derivative"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.derivative;},new cljs.core.Symbol("sicmutils.calculus.derivative","derivative","sicmutils.calculus.derivative/derivative",-1853801666,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"derivative","derivative",-1233120304,null),"sicmutils/calculus/derivative.cljc",17,1,227,227,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns a single-argument function of that, when called with an argument `x`,\n  returns the derivative of `f` at `x` using forward-mode automatic\n  differentiation.\n\n  For numerical differentiation,\n  see [[sicmutils.numerical.derivative/D-numeric]].\n\n  `f` must be built out of generic operations that know how to\n  handle [[d/Differential]] inputs in addition to any types that a normal `(f\n  x)` call would present. This restriction does _not_ apply to operations like\n  putting `x` into a container or destructuring; just primitive function calls.",(cljs.core.truth_(sicmutils.calculus.derivative.derivative)?sicmutils.calculus.derivative.derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.D;},new cljs.core.Symbol("sicmutils.calculus.derivative","D","sicmutils.calculus.derivative/D",1112608480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"D","D",1632515634,null),"sicmutils/calculus/derivative.cljc",33,1,429,440,cljs.core.List.EMPTY,"Derivative operator. Takes some function `f` and returns a function\n  whose value at some point can multiply an increment in the arguments, to\n  produce the best linear estimate of the increment in the function value.\n\n  For univariate functions, [[D]] computes a derivative. For vector-valued\n  functions, [[D]] computes\n  the [Jacobian](https://en.wikipedia.org/wiki/Jacobian_matrix_and_determinant)\n  of `f`.\n\n  The related [[Grad]] returns a function that produces a structure of the\n  opposite orientation as [[D]]. Both of these functions use forward-mode\n  automatic differentiation.",(cljs.core.truth_(sicmutils.calculus.derivative.D)?sicmutils.calculus.derivative.D.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("taylor-series"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.taylor_series;},new cljs.core.Symbol("sicmutils.calculus.derivative","taylor-series","sicmutils.calculus.derivative/taylor-series",1135520476,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"taylor-series","taylor-series",1018004082,null),"sicmutils/calculus/derivative.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,464,464,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Given a differentiable function `f` and any number of arguments `xs`, returns\n  a [[sicmutils.series/PowerSeries]] representing the [Taylor\n  series](https://en.wikipedia.org/wiki/Taylor_series) of the function `f`\n  expanded at `xs`.\n\n  Calling [[taylor-series]] with no arguments will return the [Maclaurin\n  series](https://en.wikipedia.org/wiki/Taylor_series#List_of_Maclaurin_series_of_some_common_functions)\n  of `f`, ie, the Taylor series expansion at `(= x 0)`.\n\n  Calling the returned power series with incremental argument `dx` will produce\n  a [[sicmutils.series/Series]] representing the terms of the Taylor series of\n  `f` expanded at `x` and evaluated at `x+dx`.\n\n  NOTE: Just like the [[D]] operator, functions `f` of multiple-arguments are\n  treated as a function of a single structural argument. If you pass multiple\n  arguments `xs`, you'll have to manually wrap your multiple-argument `dx` in\n  a [[sicmutils.structure/up]] or a vector before passing it to the returned\n  power series.\n\n  NOTE: The typical definition of a Taylor series of `f` expanded around some\n  point `x` is\n\n  $$T(p) = f(x) + \\frac{f'(x)}{1!}(p-x) + \\frac{f''(x)}{2!} (p-x)^2 + \\ldots,$$\n\n  where `p` is the evaluation point. When `(= p x)`, all derivatives of the\n  Taylor series expansion of `f` will exactly match the derivatives of `f`\n  itself.\n\n  The Taylor series returned here (call it $T'$) is actually a function of `dx`,\n  where\n\n  $$T'(dx) = T(x+dx) = f(x) + \\frac{f'(x)}{1!}(dx) + \\frac{f''(x)}{2!} (dx)^2 + \\ldots.$$",(cljs.core.truth_(sicmutils.calculus.derivative.taylor_series)?sicmutils.calculus.derivative.taylor_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial"),new cljs.core.Var(function(){return sicmutils.calculus.derivative.partial;},new cljs.core.Symbol("sicmutils.calculus.derivative","partial","sicmutils.calculus.derivative/partial",1294595434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.derivative","sicmutils.calculus.derivative",1852932868,null),new cljs.core.Symbol(null,"partial","partial",1881673272,null),"sicmutils/calculus/derivative.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"selectors","selectors",959789759,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,451,451,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),"Returns an operator that, when applied to a function `f`, produces a function\n  that computes the partial derivative of `f` at the (zero-based) slot index\n  provided via `selectors`.",(cljs.core.truth_(sicmutils.calculus.derivative.partial)?sicmutils.calculus.derivative.partial.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bracket-max"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.bracket_max;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","bracket-max","sicmutils.numerical.unimin.bracket/bracket-max",-1158069837,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"bracket-max","bracket-max",-1833956158,null),"sicmutils/numerical/unimin/bracket.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,187,187,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Identical to bracket-min, except brackets a maximum of the supplied fn.",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.bracket_max)?sicmutils.numerical.unimin.bracket.bracket_max.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parabolic-pieces"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.parabolic_pieces;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","parabolic-pieces","sicmutils.numerical.unimin.bracket/parabolic-pieces",-1920881774,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"parabolic-pieces","parabolic-pieces",1967742243,null),"sicmutils/numerical/unimin/bracket.cljc",23,1,18,18,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"fa","fa",2125512710,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"fb","fb",308862205,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xc","xc",-1246828562,null),new cljs.core.Symbol(null,"fc","fc",1492155206,null)], null)], null)),"Accepts three pairs of `[x, (f x)]`, fits a quadratic function to all three\n  points and returns the step from `xb` (the coordinate of the second argument)\n  to the minimum of the fitted quadratic.\n\n  Returns the numerator and denominator `p` and `q` of the required step. If `q`\n  is 0, then the supplied points were colinear.\n\n  `q` is guaranteed to be `>= 0`, while `p` might be negative.\n\n  See these notes for the derivation of this method:\n  http://fourier.eng.hmc.edu/e176/lectures/NM/node25.html",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.parabolic_pieces)?sicmutils.numerical.unimin.bracket.parabolic_pieces.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ascending-by"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.ascending_by;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","ascending-by","sicmutils.numerical.unimin.bracket/ascending-by",1278137465,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"ascending-by","ascending-by",670443144,null),"sicmutils/numerical/unimin/bracket.cljc",19,1,10,10,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Returns the points ordered as f(a) < f(b)",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.ascending_by)?sicmutils.numerical.unimin.bracket.ascending_by.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bracket-max-scmutils"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.bracket_max_scmutils;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","bracket-max-scmutils","sicmutils.numerical.unimin.bracket/bracket-max-scmutils",221723419,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"bracket-max-scmutils","bracket-max-scmutils",1979643050,null),"sicmutils/numerical/unimin/bracket.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,233,233,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Identical to bracket-min-scmutils, except brackets a maximum of the supplied\n  fn.",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.bracket_max_scmutils)?sicmutils.numerical.unimin.bracket.bracket_max_scmutils.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bracket-step-fn"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.bracket_step_fn;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","bracket-step-fn","sicmutils.numerical.unimin.bracket/bracket-step-fn",351662372,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"bracket-step-fn","bracket-step-fn",2063745685,null),"sicmutils/numerical/unimin/bracket.cljc",22,1,56,56,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"grow-limit","grow-limit",-524226826,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"grow-limit","grow-limit",-524226826,null),110.0], null)], null)], null)),"Returns a function that performs steps of bracket extension.\n\n  :grow-limit is the maximum factor that the parabolic interpolation can jump\n  the function.",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.bracket_step_fn)?sicmutils.numerical.unimin.bracket.bracket_step_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bracket-min"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.bracket_min;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","bracket-min","sicmutils.numerical.unimin.bracket/bracket-min",-1760298714,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"bracket-min","bracket-min",-1880863081,null),"sicmutils/numerical/unimin/bracket.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),0.0,new cljs.core.Symbol(null,"xb","xb",-765832,null),1.0,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),(1000)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),0.0,new cljs.core.Symbol(null,"xb","xb",-765832,null),1.0,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),(1000)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,109,109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"xa","xa",1388612750,null),0.0,new cljs.core.Symbol(null,"xb","xb",-765832,null),1.0,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),(1000)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Generates an interval `[lo, hi]` that is guaranteed to contain a minimum of the\n  function `f`, along with a candidate point `[mid, (f mid)]` that the user can\n  use to start a minimum search.\n\n  Returns a dictionary of the form:\n\n  {:lo `lower end of the bracket`\n   :mid `candidate point`\n   :hi `upper end of the bracket`\n   :fncalls `# of fn evaluations so far`\n   :iterations `total iterations`}\n\n  `:lo`, `:mid` and `:hi` are each pairs of the form `[x, (f x)]`.\n\n  The implementation works by growing the bounds using either:\n\n  - a step outside the bounds that places one bound at the golden-ratio cut\n  point between the new bounds, or\n  - a parabola with a minimum interpolated outside the current bounds, bounded b\n  a max.\n\n  This implementation was ported from `scipy.optimize.optimize.bracket`:\n  https://github.com/scipy/scipy/blob/v1.5.2/scipy/optimize/optimize.py#L2450\n\n  `bracket-min` supports the following optional keyword arguments:\n\n  `:xa` the initial guess for the lower end of the bracket. Defaults to 0.0.\n\n  `:xb` the initial guess for the upper end of the bracket. Defaults to 1.0. (If\n  these points aren't supplied in sorted order they'll be switched.)\n\n  `:grow-limit` The maximum factor that the parabolic interpolation can jump the\n  function. Defaults to 110.0.\n\n  `:maxiter` Maximum number of iterations allowed for the minimizer. Defaults to\n  1000.\n\n  `:maxfun` Maximum number of times the function can be evaluated before exiting.\n  Defaults to 1000.\n  ",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.bracket_min)?sicmutils.numerical.unimin.bracket.bracket_min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parabolic-step"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.parabolic_step;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","parabolic-step","sicmutils.numerical.unimin.bracket/parabolic-step",52744553,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"parabolic-step","parabolic-step",720135352,null),"sicmutils/numerical/unimin/bracket.cljc",21,1,42,42,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xb","xb",-765832,null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Fits a parabola through all three points, and returns the coordinate of the\n  minimum of the parabola.\n\n  If the supplied points are colinear, returns a point that takes a large jump\n  in the direction of the downward slope of the line.",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.parabolic_step)?sicmutils.numerical.unimin.bracket.parabolic_step.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bracket-min-scmutils"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.bracket.bracket_min_scmutils;},new cljs.core.Symbol("sicmutils.numerical.unimin.bracket","bracket-min-scmutils","sicmutils.numerical.unimin.bracket/bracket-min-scmutils",-2131504689,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.bracket","sicmutils.numerical.unimin.bracket",-229319958,null),new cljs.core.Symbol(null,"bracket-min-scmutils","bracket-min-scmutils",1756130332,null),"sicmutils/numerical/unimin/bracket.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"step","step",-1365547645,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"start","start",1285322546,null),(0),new cljs.core.Symbol(null,"step","step",-1365547645,null),(10),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000)], null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"step","step",-1365547645,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"start","start",1285322546,null),(0),new cljs.core.Symbol(null,"step","step",-1365547645,null),(10),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,194,194,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"start","start",1285322546,null),new cljs.core.Symbol(null,"step","step",-1365547645,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,"start","start",1285322546,null),(0),new cljs.core.Symbol(null,"step","step",-1365547645,null),(10),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000)], null)], null)], null))," Given a function f, a starting point and a step size, try to bracket a local\n  extremum for f.\n\n  Return a list (retcode a b c fa fb fc iter-count) where a < b < c, and fa, fb,\n  fc are the function values at these points. In the case of a minimum, fb\n  <= (min fa fc); the opposite inequality holds in the case of a maximum.\n\n  iter-count is the number of function evaluations required. retcode is 'okay if\n  the search succeeded, or 'maxcount if it was abandoned.\n  ",(cljs.core.truth_(sicmutils.numerical.unimin.bracket.bracket_min_scmutils)?sicmutils.numerical.unimin.bracket.bracket_min_scmutils.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame?"),new cljs.core.Var(function(){return sicmutils.calculus.frame.frame_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.frame","frame?","sicmutils.calculus.frame/frame?",2096436554,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"frame?","frame?",-229419232,null),"sicmutils/calculus/frame.cljc",13,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` implements [[IFrame]], false otherwise.",(cljs.core.truth_(sicmutils.calculus.frame.frame_QMARK_)?sicmutils.calculus.frame.frame_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("event?"),new cljs.core.Var(function(){return sicmutils.calculus.frame.event_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.frame","event?","sicmutils.calculus.frame/event?",1766955,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"event?","event?",-2038386683,null),"sicmutils/calculus/frame.cljc",13,1,45,45,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)),"Returns true if `e` is an event, false otherwise.\n\n  Make new events with [[make-event]].",(cljs.core.truth_(sicmutils.calculus.frame.event_QMARK_)?sicmutils.calculus.frame.event_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-event"),new cljs.core.Var(function(){return sicmutils.calculus.frame.make_event;},new cljs.core.Symbol("sicmutils.calculus.frame","make-event","sicmutils.calculus.frame/make-event",1214691723,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"make-event","make-event",-855573915,null),"sicmutils/calculus/frame.cljc",17,1,39,39,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"e","e",-1273166571,null)], null)),"Marks the input event `e` as an event via its metadata. The return value will\n  return `true` when passed to [[event?]].",(cljs.core.truth_(sicmutils.calculus.frame.make_event)?sicmutils.calculus.frame.make_event.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("claim"),new cljs.core.Var(function(){return sicmutils.calculus.frame.claim;},new cljs.core.Symbol("sicmutils.calculus.frame","claim","sicmutils.calculus.frame/claim",-1123811412,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"claim","claim",665172358,null),"sicmutils/calculus/frame.cljc",12,1,58,58,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coords","coords",1041102415,null),new cljs.core.Symbol(null,"owner","owner",1247919588,null)], null)),"Marks (via metadata) the supplied set of `coords` as being owned by `owner`. If\n  `coords` already has an owner (that is not equal to `owner`), throws.",(cljs.core.truth_(sicmutils.calculus.frame.claim)?sicmutils.calculus.frame.claim.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("event->coords"),new cljs.core.Var(function(){return sicmutils.calculus.frame.event__GT_coords;},new cljs.core.Symbol("sicmutils.calculus.frame","event->coords","sicmutils.calculus.frame/event->coords",2128399251,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"event->coords","event->coords",-81360503,null),"sicmutils/calculus/frame.cljc",17,1,12,20,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"event","event",1941966969,null)], null)),"Accepts a reference frame and an `event`, and returns this reference\n    frame's coordinate representation of the supplied `event`.",(cljs.core.truth_(sicmutils.calculus.frame.event__GT_coords)?sicmutils.calculus.frame.event__GT_coords.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$frame100913"),new cljs.core.Var(function(){return sicmutils.calculus.frame.__GT_t_sicmutils$calculus$frame100913;},new cljs.core.Symbol("sicmutils.calculus.frame","->t_sicmutils$calculus$frame100913","sicmutils.calculus.frame/->t_sicmutils$calculus$frame100913",-1498137108,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$frame100913","->t_sicmutils$calculus$frame100913",543063946,null),"sicmutils/calculus/frame.cljc",true,6,new cljs.core.Keyword(null,"positional","positional",-203580463),94,cljs.core.list(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c->e","c->e",366611773,null),new cljs.core.Symbol(null,"e->c","e->c",-1459982439,null),new cljs.core.Symbol(null,"call","call",1120531661,null),new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.Symbol(null,"meta100914","meta100914",565627383,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.frame/t_sicmutils$calculus$frame100913.",(cljs.core.truth_(sicmutils.calculus.frame.__GT_t_sicmutils$calculus$frame100913)?sicmutils.calculus.frame.__GT_t_sicmutils$calculus$frame100913.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ancestor-frame"),new cljs.core.Var(function(){return sicmutils.calculus.frame.ancestor_frame;},new cljs.core.Symbol("sicmutils.calculus.frame","ancestor-frame","sicmutils.calculus.frame/ancestor-frame",242424561,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),"sicmutils/calculus/frame.cljc",18,1,12,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Returns the ancestor [[IFrame]] instance of this frame, or nil if there is\n    no ancestor.",(cljs.core.truth_(sicmutils.calculus.frame.ancestor_frame)?sicmutils.calculus.frame.ancestor_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-name"),new cljs.core.Var(function(){return sicmutils.calculus.frame.frame_name;},new cljs.core.Symbol("sicmutils.calculus.frame","frame-name","sicmutils.calculus.frame/frame-name",-1432765418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"frame-name","frame-name",738489072,null),"sicmutils/calculus/frame.cljc",14,1,12,28,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Returns the symbolic name of the suppplied frame.",(cljs.core.truth_(sicmutils.calculus.frame.frame_name)?sicmutils.calculus.frame.frame_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("params"),new cljs.core.Var(function(){return sicmutils.calculus.frame.params;},new cljs.core.Symbol("sicmutils.calculus.frame","params","sicmutils.calculus.frame/params",109339252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"params","params",-1943919534,null),"sicmutils/calculus/frame.cljc",10,1,12,31,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Returns the parameters registered with the supplied frame.",(cljs.core.truth_(sicmutils.calculus.frame.params)?sicmutils.calculus.frame.params.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-maker"),new cljs.core.Var(function(){return sicmutils.calculus.frame.frame_maker;},new cljs.core.Symbol("sicmutils.calculus.frame","frame-maker","sicmutils.calculus.frame/frame-maker",-640890872,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"frame-maker","frame-maker",1417055762,null),"sicmutils/calculus/frame.cljc",18,1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c->e","c->e",366611773,null),new cljs.core.Symbol(null,"e->c","e->c",-1459982439,null)], null)),"Takes:\n\n  - `c->e`, a function mapping coordinates to events\n  - `e->c`, a function mapping events to coordinates\n\n  and returns a function that takes:\n\n  - a symbolic name\n  - an ancestor frame\n  - a dictionary of params\n\n  and returns instance of [[IFrame]].\n\n  Both `c->e` and `e->c` must accept three arguments:\n\n  - `ancestor-frame`\n  - the [[IFrame]] instance\n  - a map of parameters supplied to the returned function (possibly empty!).",(cljs.core.truth_(sicmutils.calculus.frame.frame_maker)?sicmutils.calculus.frame.frame_maker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$frame100913"),new cljs.core.Var(function(){return sicmutils.calculus.frame.t_sicmutils$calculus$frame100913;},new cljs.core.Symbol("sicmutils.calculus.frame","t_sicmutils$calculus$frame100913","sicmutils.calculus.frame/t_sicmutils$calculus$frame100913",-117126700,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/frame.cljc",new cljs.core.Keyword(null,"line","line",212345235),94,new cljs.core.Keyword(null,"column","column",2078222095),6,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$frame100913","t_sicmutils$calculus$frame100913",1652199354,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.frame.t_sicmutils$calculus$frame100913)?sicmutils.calculus.frame.t_sicmutils$calculus$frame100913.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coords->event"),new cljs.core.Var(function(){return sicmutils.calculus.frame.coords__GT_event;},new cljs.core.Symbol("sicmutils.calculus.frame","coords->event","sicmutils.calculus.frame/coords->event",-1381670123,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"coords->event","coords->event",637740539,null),"sicmutils/calculus/frame.cljc",17,1,12,13,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),"Accepts a coordinate representation `coords` of some `event` and returns a\n coordinate-free representation of the event.\n\n `coords` must be owned this this reference frame; [[coords->event]] will throw\n if not.",(cljs.core.truth_(sicmutils.calculus.frame.coords__GT_event)?sicmutils.calculus.frame.coords__GT_event.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-owner"),new cljs.core.Var(function(){return sicmutils.calculus.frame.frame_owner;},new cljs.core.Symbol("sicmutils.calculus.frame","frame-owner","sicmutils.calculus.frame/frame-owner",-316684607,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"frame-owner","frame-owner",1672840447,null),"sicmutils/calculus/frame.cljc",18,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),"Returns the owning [[IFrame]] instance of the supplied coordinates `coords`,\n  nil if there's no owner otherwise.",(cljs.core.truth_(sicmutils.calculus.frame.frame_owner)?sicmutils.calculus.frame.frame_owner.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("IFrame"),new cljs.core.Var(function(){return sicmutils.calculus.frame.IFrame;},new cljs.core.Symbol("sicmutils.calculus.frame","IFrame","sicmutils.calculus.frame/IFrame",-462124635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.frame","sicmutils.calculus.frame",-311050743,null),new cljs.core.Symbol(null,"IFrame","IFrame",1542387647,null),"sicmutils/calculus/frame.cljc",20,1,12,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.with_meta(new cljs.core.Symbol(null,"coords->event","coords->event",637740539,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Accepts a coordinate representation `coords` of some `event` and returns a\n coordinate-free representation of the event.\n\n `coords` must be owned this this reference frame; [[coords->event]] will throw\n if not."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"event->coords","event->coords",-81360503,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Accepts a reference frame and an `event`, and returns this reference\n    frame's coordinate representation of the supplied `event`."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"event","event",1941966969,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the ancestor [[IFrame]] instance of this frame, or nil if there is\n    no ancestor."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"frame-name","frame-name",738489072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the symbolic name of the suppplied frame."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the parameters registered with the supplied frame."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null)], null)], null),12,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"coords->event","coords->event",-1002790988),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"coords->event","coords->event",637740539,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Accepts a coordinate representation `coords` of some `event` and returns a\n coordinate-free representation of the event.\n\n `coords` must be owned this this reference frame; [[coords->event]] will throw\n if not."], null),new cljs.core.Keyword(null,"event->coords","event->coords",-1721892030),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"event->coords","event->coords",-81360503,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"event","event",1941966969,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Accepts a reference frame and an `event`, and returns this reference\n    frame's coordinate representation of the supplied `event`."], null),new cljs.core.Keyword(null,"ancestor-frame","ancestor-frame",857790116),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the ancestor [[IFrame]] instance of this frame, or nil if there is\n    no ancestor."], null),new cljs.core.Keyword(null,"frame-name","frame-name",-902042455),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"frame-name","frame-name",738489072,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the symbolic name of the suppplied frame."], null),new cljs.core.Keyword(null,"params","params",710516235),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"params","params",-1943919534,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the parameters registered with the supplied frame."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.calculus.frame.IFrame)?sicmutils.calculus.frame.IFrame.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.quaternion.arity;},new cljs.core.Symbol("sicmutils.quaternion","arity","sicmutils.quaternion/arity",1218713437,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/quaternion.cljc",12,1,739,739,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Given a quaternion `q` with function coefficients, returns an arity compatible\n  with all function coefficient entries.\n\n  NOTE that by default, if any arities are incompatible, the function will\n  return `[:at-least 0]`. To force strict arity checks,\n  bind [[sicmutils.function/*strict-arity-checks*]] to `true`.",(cljs.core.truth_(sicmutils.quaternion.arity)?sicmutils.quaternion.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-complex-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.from_complex_matrix;},new cljs.core.Symbol("sicmutils.quaternion","from-complex-matrix","sicmutils.quaternion/from-complex-matrix",-1152645017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-complex-matrix","from-complex-matrix",-334210528,null),"sicmutils/quaternion.cljc",26,1,1309,1309,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"Given a 2x2 complex matrix `M` of the form\n\n  ```\n  [ a + b i,  c + d i]\n  [ -c + d i, a - b i]\n  ```\n\n  Returns a [[Quaternion]] instance with coefficients `[a b c d]`.",(cljs.core.truth_(sicmutils.quaternion.from_complex_matrix)?sicmutils.quaternion.from_complex_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.I_matrix;},new cljs.core.Symbol("sicmutils.quaternion","I-matrix","sicmutils.quaternion/I-matrix",-1957169525,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"I-matrix","I-matrix",1453302592,null),"sicmutils/quaternion.cljc",11,1,1357,1358,cljs.core.List.EMPTY,"4x4 matrix representation of the quaternion [[I]].",(cljs.core.truth_(sicmutils.quaternion.I_matrix)?sicmutils.quaternion.I_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ZERO"),new cljs.core.Var(function(){return sicmutils.quaternion.ZERO;},new cljs.core.Symbol("sicmutils.quaternion","ZERO","sicmutils.quaternion/ZERO",598471078,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"ZERO","ZERO",-1889270687,null),"sicmutils/quaternion.cljc",7,1,590,591,cljs.core.List.EMPTY,"The zero quaternion. All coefficients are equal to 0.",(cljs.core.truth_(sicmutils.quaternion.ZERO)?sicmutils.quaternion.ZERO.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("three-vector"),new cljs.core.Var(function(){return sicmutils.quaternion.three_vector;},new cljs.core.Symbol("sicmutils.quaternion","three-vector","sicmutils.quaternion/three-vector",-1942128186,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"three-vector","three-vector",-512585855,null),"sicmutils/quaternion.cljc",19,1,491,491,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a 3-vector holding the coefficients of the non-real (imaginary)\n  components of the quaternion `q`.",(cljs.core.truth_(sicmutils.quaternion.three_vector)?sicmutils.quaternion.three_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add"),new cljs.core.Var(function(){return sicmutils.quaternion.add;},new cljs.core.Symbol("sicmutils.quaternion","add","sicmutils.quaternion/add",-1132009137,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"add","add",1875819266,null),"sicmutils/quaternion.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,788,788,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Variadic function that returns the sum of all supplied quaternions.\n\n  Given 1 argument `q`, acts as identity. Given no arguments, returns [[ZERO]],\n  the additive identity.\n\n  The sum of two or more quaternions is a new quaternion with coefficients equal\n  to the elementwise sum of the coefficients of all supplied quaternions.",(cljs.core.truth_(sicmutils.quaternion.add)?sicmutils.quaternion.add.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("negate"),new cljs.core.Var(function(){return sicmutils.quaternion.negate;},new cljs.core.Symbol("sicmutils.quaternion","negate","sicmutils.quaternion/negate",1140395295,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"negate","negate",337772450,null),"sicmutils/quaternion.cljc",13,1,831,831,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the negation (additive inverse) of the supplied quaternion `q`.\n\n  The additive inverse of a quaternion is a new quaternion that, when [[add]]ed\n  to `q`, will produce the [[ZERO]] quaternion (the additive identity).",(cljs.core.truth_(sicmutils.quaternion.negate)?sicmutils.quaternion.negate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real-part"),new cljs.core.Var(function(){return sicmutils.quaternion.real_part;},new cljs.core.Symbol("sicmutils.quaternion","real-part","sicmutils.quaternion/real-part",-570964226,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"real-part","real-part",-2001752061,null),"sicmutils/quaternion.cljc",16,1,438,438,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null)], null))], null)),"Returns the `r` component of the supplied quaternion `q`.\n\n  Identical to [[get-r]].",(cljs.core.truth_(sicmutils.quaternion.real_part)?sicmutils.quaternion.real_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("J-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.J_matrix;},new cljs.core.Symbol("sicmutils.quaternion","J-matrix","sicmutils.quaternion/J-matrix",1411374792,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"J-matrix","J-matrix",-388525949,null),"sicmutils/quaternion.cljc",11,1,1365,1366,cljs.core.List.EMPTY,"4x4 matrix representation of the quaternion [[J]].",(cljs.core.truth_(sicmutils.quaternion.J_matrix)?sicmutils.quaternion.J_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log"),new cljs.core.Var(function(){return sicmutils.quaternion.log;},new cljs.core.Symbol("sicmutils.quaternion","log","sicmutils.quaternion/log",1450586664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"log","log",45015523,null),"sicmutils/quaternion.cljc",10,1,1061,1061,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the logarithm $\\ln q$ of the supplied quaternion `q`.\n\n  Given a quaternion $q$ with real part $r$ and non-real vector $\\vec{v}$, the\n  logarithm [is computed\n  as](https://en.wikipedia.org/wiki/Quaternion#Exponential,_logarithm,_and_power_functions)\n\n  $$\n  \\ln(q) = \\ln \\|q\\| + \\frac{\\mathbf{v}}{\\|\\mathbf{v}\\|} \\\n  \\arccos \\frac{r}{\\|\\q\\|}\n  $$",(cljs.core.truth_(sicmutils.quaternion.log)?sicmutils.quaternion.log.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Quaternion"),new cljs.core.Var(function(){return sicmutils.quaternion.Quaternion;},new cljs.core.Symbol("sicmutils.quaternion","Quaternion","sicmutils.quaternion/Quaternion",2069013249,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/quaternion.cljc",new cljs.core.Keyword(null,"line","line",212345235),105,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.quaternion.Quaternion)?sicmutils.quaternion.Quaternion.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("K"),new cljs.core.Var(function(){return sicmutils.quaternion.K;},new cljs.core.Symbol("sicmutils.quaternion","K","sicmutils.quaternion/K",1025225935,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"K","K",1641243268,null),"sicmutils/quaternion.cljc",4,1,605,607,cljs.core.List.EMPTY,"Unit quaternion with `k` coefficient equal to 1, all other\n  coefficients equal to 0.",(cljs.core.truth_(sicmutils.quaternion.K)?sicmutils.quaternion.K.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("normalize"),new cljs.core.Var(function(){return sicmutils.quaternion.normalize;},new cljs.core.Symbol("sicmutils.quaternion","normalize","sicmutils.quaternion/normalize",-1400011749,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"normalize","normalize",-263858524,null),"sicmutils/quaternion.cljc",16,1,1033,1033,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a new quaternion generated by dividing each coefficient of the supplied\n  quaternion `q` by the [[magnitude]] of `q`. (If the [[magnitude]]\n  is [[zero?]], returns the zero quaternion `q`.)\n\n  The returned quaternion will have [[magnitude]] (approximately) equal to\n  1. [[unit?]] will return true for a [[normalize]]d quaternion, though you may\n  need to supply an `:epsilon`.",(cljs.core.truth_(sicmutils.quaternion.normalize)?sicmutils.quaternion.normalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("parse-quaternion"),new cljs.core.Var(function(){return sicmutils.quaternion.parse_quaternion;},new cljs.core.Symbol("sicmutils.quaternion","parse-quaternion","sicmutils.quaternion/parse-quaternion",-236025471,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"parse-quaternion","parse-quaternion",-1900619836,null),"sicmutils/quaternion.cljc",32,1,637,637,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Implementation of a reader literal that turns literal 4-vectors into calls\n  to [[make]]. For all other input, call [[make]] directly.\n\n  Installed by default under #sicm/quaternion.",(cljs.core.truth_(sicmutils.quaternion.parse_quaternion)?sicmutils.quaternion.parse_quaternion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("magnitude-sq"),new cljs.core.Var(function(){return sicmutils.quaternion.magnitude_sq;},new cljs.core.Symbol("sicmutils.quaternion","magnitude-sq","sicmutils.quaternion/magnitude-sq",326899168,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"magnitude-sq","magnitude-sq",1337215013,null),"sicmutils/quaternion.cljc",19,1,1015,1015,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the square of the [[magnitude]] of the supplied quaternion `q`,\n  equivalent to taking the [[dot-product]] of `q` with itself.",(cljs.core.truth_(sicmutils.quaternion.magnitude_sq)?sicmutils.quaternion.magnitude_sq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanh"),new cljs.core.Var(function(){return sicmutils.quaternion.tanh;},new cljs.core.Symbol("sicmutils.quaternion","tanh","sicmutils.quaternion/tanh",-914669376,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"tanh","tanh",480481797,null),"sicmutils/quaternion.cljc",11,1,1164,1164,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the hyperbolic tangent of the supplied quaternion `q`.\n\n  [[tan]] is defined as `(/ (sinh q) (cosh q))`.",(cljs.core.truth_(sicmutils.quaternion.tanh)?sicmutils.quaternion.tanh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-4x4-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.from_4x4_matrix;},new cljs.core.Symbol("sicmutils.quaternion","from-4x4-matrix","sicmutils.quaternion/from-4x4-matrix",-1450459430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-4x4-matrix","from-4x4-matrix",-733777051,null),"sicmutils/quaternion.cljc",22,1,1381,1381,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"four-matrix","four-matrix",2083177250,null)], null)),"Given a 4x4 matrix representation of a quaternion, returns the associated\n  quaternion by extracting the first row.",(cljs.core.truth_(sicmutils.quaternion.from_4x4_matrix)?sicmutils.quaternion.from_4x4_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->complex-pair"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_complex_pair;},new cljs.core.Symbol("sicmutils.quaternion","->complex-pair","sicmutils.quaternion/->complex-pair",90232270,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->complex-pair","->complex-pair",-769128571,null),"sicmutils/quaternion.cljc",21,1,472,472,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a pair of complex number created respectively from the `(r,i)`\n  and `(j,k)` components of the supplied quaternion `q`.\n\n  NOTE that this only works if the coefficients of `q` are real numbers, due to\n  restrictions on the current complex number implementation. ",(cljs.core.truth_(sicmutils.quaternion.__GT_complex_pair)?sicmutils.quaternion.__GT_complex_pair.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.quaternion.invert;},new cljs.core.Symbol("sicmutils.quaternion","invert","sicmutils.quaternion/invert",-356879911,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/quaternion.cljc",13,1,987,987,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the multiplicative inverse of the supplied quaternion `q`.\n\n  The inverse of a quaternion is a new quaternion that, when [[mul]]tiplied by\n  `q`, will produce the [[ONE]] quaternion (the multiplicative identity).",(cljs.core.truth_(sicmutils.quaternion.invert)?sicmutils.quaternion.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-j"),new cljs.core.Var(function(){return sicmutils.quaternion.get_j;},new cljs.core.Symbol("sicmutils.quaternion","get-j","sicmutils.quaternion/get-j",-1283152212,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"get-j","get-j",1199347047,null),"sicmutils/quaternion.cljc",12,1,450,450,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null)], null))], null)),"Returns the `j` component of the supplied quaternion `q`.",(cljs.core.truth_(sicmutils.quaternion.get_j)?sicmutils.quaternion.get_j.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quaternion?"),new cljs.core.Var(function(){return sicmutils.quaternion.quaternion_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","quaternion?","sicmutils.quaternion/quaternion?",-851483720,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"quaternion?","quaternion?",1626848711,null),"sicmutils/quaternion.cljc",18,1,420,420,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns `true` if `q` is an instance of [[Quaternion]], false otherwise.",(cljs.core.truth_(sicmutils.quaternion.quaternion_QMARK_)?sicmutils.quaternion.quaternion_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("conjugate"),new cljs.core.Var(function(){return sicmutils.quaternion.conjugate;},new cljs.core.Symbol("sicmutils.quaternion","conjugate","sicmutils.quaternion/conjugate",342513986,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"conjugate","conjugate",-1063123193,null),"sicmutils/quaternion.cljc",16,1,936,936,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the conjugate of the supplied quaternion `q`.\n\n  The conjugate of a quaternion is a new quaternion with real coefficient equal\n  to that of `q` and each imaginary coefficient negated. `(mul q (conjugate q))`\n  will return a [[real?]] quaternion.",(cljs.core.truth_(sicmutils.quaternion.conjugate)?sicmutils.quaternion.conjugate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->vector"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_vector;},new cljs.core.Symbol("sicmutils.quaternion","->vector","sicmutils.quaternion/->vector",947744034,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->vector","->vector",-1800052761,null),"sicmutils/quaternion.cljc",15,1,482,482,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a 4-vector of the coefficients of quaternion `q`.\n\n  Works identically to `(vec q)`, but more efficient as we are able to create\n  the new vector in one shot.",(cljs.core.truth_(sicmutils.quaternion.__GT_vector)?sicmutils.quaternion.__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex-1"),new cljs.core.Var(function(){return sicmutils.quaternion.complex_1;},new cljs.core.Symbol("sicmutils.quaternion","complex-1","sicmutils.quaternion/complex-1",492920485,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"complex-1","complex-1",-1582732184,null),"sicmutils/quaternion.cljc",16,1,460,460,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the `r` and `i` components of the quaternion `q` as a `Complex` number\n  instance.",(cljs.core.truth_(sicmutils.quaternion.complex_1)?sicmutils.quaternion.complex_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unit?"),new cljs.core.Var(function(){return sicmutils.quaternion.unit_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","unit?","sicmutils.quaternion/unit?",-479333484,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"unit?","unit?",-1881833431,null),"sicmutils/quaternion.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"epsilon","epsilon",910372957,null)], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"epsilon","epsilon",910372957,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,529,529,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"epsilon","epsilon",910372957,null)], null)], null)], null)),"Returns true if `q` is a unit quaternion (ie, a 'versor', a quaternion\n  with [[magnitude]] equal to one), false otherwise.\n\n  To check if the [[magnitude]] of `q` is /approximately/ equal to one, pass a\n  tolerance via the `:epsilon` keyword argument.\n\n  For more control, use [[magnitude]] to compute the magnitude directly.",(cljs.core.truth_(sicmutils.quaternion.unit_QMARK_)?sicmutils.quaternion.unit_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("commutator"),new cljs.core.Var(function(){return sicmutils.quaternion.commutator;},new cljs.core.Symbol("sicmutils.quaternion","commutator","sicmutils.quaternion/commutator",-770242668,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"commutator","commutator",1038087209,null),"sicmutils/quaternion.cljc",17,1,1046,1046,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the commutator of the supplied quaternions `l` and `r`.\n\n  The commutator of two quaternions is equal to\n\n  ```clj\n  (- (* l r) (* r l))\n  ```",(cljs.core.truth_(sicmutils.quaternion.commutator)?sicmutils.quaternion.commutator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt"),new cljs.core.Var(function(){return sicmutils.quaternion.expt;},new cljs.core.Symbol("sicmutils.quaternion","expt","sicmutils.quaternion/expt",769560622,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"expt","expt",2123850345,null),"sicmutils/quaternion.cljc",11,1,1171,1171,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns the result of raising quaternion `q` to the real, complex or quaternion\n  power `p`.",(cljs.core.truth_(sicmutils.quaternion.expt)?sicmutils.quaternion.expt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make"),new cljs.core.Var(function(){return sicmutils.quaternion.make;},new cljs.core.Symbol("sicmutils.quaternion","make","sicmutils.quaternion/make",-1502099897,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"make","make",356488202,null),"sicmutils/quaternion.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,609,609,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Constructor that builds [[Quaternion]] instances out of a variety of types.\n  Given:\n\n  - a quaternion `x`, acts as identity.\n\n  - a sequential `x`, returns a quaternion with coefficients built from the\n    first four entries.\n\n  - a complex number `x`, returns a quaternion built from the real and imaginary\n    components of `x` with `j` and `k` components equal to zero.\n\n  - a real number `x` and 3-vector, returns a quaternion with real coefficient\n    equal to `x` and imaginary components equal to the elements of the vector\n\n  - 4 distinct arguments `r`, `i`, `j` and `k`, returns a quaternion with these\n    as the coefficients.",(cljs.core.truth_(sicmutils.quaternion.make)?sicmutils.quaternion.make.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cylindrospherical"),new cljs.core.Var(function(){return sicmutils.quaternion.cylindrospherical;},new cljs.core.Symbol("sicmutils.quaternion","cylindrospherical","sicmutils.quaternion/cylindrospherical",-1980472627,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"cylindrospherical","cylindrospherical",893169674,null),"sicmutils/quaternion.cljc",24,1,714,714,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"phi","phi",113733223,null)], null)),"Returns a [[Quaternion]] `q` with [[real-part]] equal to `t` and\n  the [[three-vector]] part built from the spherical coordinates `r`, `colat`\n  and `lon`.",(cljs.core.truth_(sicmutils.quaternion.cylindrospherical)?sicmutils.quaternion.cylindrospherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cylindrical"),new cljs.core.Var(function(){return sicmutils.quaternion.cylindrical;},new cljs.core.Symbol("sicmutils.quaternion","cylindrical","sicmutils.quaternion/cylindrical",1583348497,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"cylindrical","cylindrical",218572202,null),"sicmutils/quaternion.cljc",18,1,725,725,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mag","mag",1689150701,null),new cljs.core.Symbol(null,"angle","angle",-1032341515,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns a [[Quaternion]] `q` with [[complex-1]] built from the polar\n  coordinates `mag` and `angle`, and `j` and `k` components equal to the\n  supplied `j` and `k`.",(cljs.core.truth_(sicmutils.quaternion.cylindrical)?sicmutils.quaternion.cylindrical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pure?"),new cljs.core.Var(function(){return sicmutils.quaternion.pure_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","pure?","sicmutils.quaternion/pure?",-1703276179,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"pure?","pure?",1991394218,null),"sicmutils/quaternion.cljc",12,1,520,520,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns true if the quaternion `q` has a zero real entry, false otherwise.\n\n  A 'pure' quaternion is sometimes called an 'imaginary' quaternion.",(cljs.core.truth_(sicmutils.quaternion.pure_QMARK_)?sicmutils.quaternion.pure_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I"),new cljs.core.Var(function(){return sicmutils.quaternion.I;},new cljs.core.Symbol("sicmutils.quaternion","I","sicmutils.quaternion/I",-1173860889,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"I","I",-827294806,null),"sicmutils/quaternion.cljc",4,1,597,599,cljs.core.List.EMPTY,"Unit quaternion with `i` coefficient equal to 1, all other\n  coefficients equal to 0.",(cljs.core.truth_(sicmutils.quaternion.I)?sicmutils.quaternion.I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scalar-quaternion"),new cljs.core.Var(function(){return sicmutils.quaternion.scalar_quaternion;},new cljs.core.Symbol("sicmutils.quaternion","scalar-quaternion","sicmutils.quaternion/scalar-quaternion",945646086,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"scalar-quaternion","scalar-quaternion",-325765941,null),"sicmutils/quaternion.cljc",33,1,865,865,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the quaternion result of subtracting `s` from the real part of\n  quaternion `q` and negating all imaginary entries.\n\n  See [[quaternion-scalar]] for a similar function with arguments reversed.",(cljs.core.truth_(sicmutils.quaternion.scalar_quaternion)?sicmutils.quaternion.scalar_quaternion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quaternion-scalar"),new cljs.core.Var(function(){return sicmutils.quaternion.quaternion_scalar;},new cljs.core.Symbol("sicmutils.quaternion","quaternion-scalar","sicmutils.quaternion/quaternion-scalar",-2036998964,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"quaternion-scalar","quaternion-scalar",903719435,null),"sicmutils/quaternion.cljc",33,1,877,877,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the quaternion result of subtracting `s` from the real part of\n  quaternion `q` and negating all imaginary entries.\n\n  See [[quaternion-scalar]] for a similar function with arguments reversed.",(cljs.core.truth_(sicmutils.quaternion.quaternion_scalar)?sicmutils.quaternion.quaternion_scalar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I-tensor"),new cljs.core.Var(function(){return sicmutils.quaternion.I_tensor;},new cljs.core.Symbol("sicmutils.quaternion","I-tensor","sicmutils.quaternion/I-tensor",786472400,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"I-tensor","I-tensor",-2120684949,null),"sicmutils/quaternion.cljc",11,1,1402,1403,cljs.core.List.EMPTY,"4x4 down-up tensor representation of the quaternion [[I]].",(cljs.core.truth_(sicmutils.quaternion.I_tensor)?sicmutils.quaternion.I_tensor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cos"),new cljs.core.Var(function(){return sicmutils.quaternion.cos;},new cljs.core.Symbol("sicmutils.quaternion","cos","sicmutils.quaternion/cos",2082585420,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"cos","cos",-1452677493,null),"sicmutils/quaternion.cljc",10,1,1109,1109,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the cosine of the supplied quaternion `q`.\n\n  See the [Boost\n  documentation](https://www.boost.org/doc/libs/1_78_0/libs/math/doc/html/math_toolkit/trans.html)\n  and [source](https://www.boost.org/doc/libs/1_78_0/boost/math/quaternion.hpp)\n  for a reference implementation.",(cljs.core.truth_(sicmutils.quaternion.cos)?sicmutils.quaternion.cos.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ONE-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.ONE_matrix;},new cljs.core.Symbol("sicmutils.quaternion","ONE-matrix","sicmutils.quaternion/ONE-matrix",852219110,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"ONE-matrix","ONE-matrix",-294443349,null),"sicmutils/quaternion.cljc",13,1,1349,1350,cljs.core.List.EMPTY,"4x4 matrix representation of the quaternion [[ONE]].",(cljs.core.truth_(sicmutils.quaternion.ONE_matrix)?sicmutils.quaternion.ONE_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dot-product"),new cljs.core.Var(function(){return sicmutils.quaternion.dot_product;},new cljs.core.Symbol("sicmutils.quaternion","dot-product","sicmutils.quaternion/dot-product",1193134903,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"dot-product","dot-product",-203055892,null),"sicmutils/quaternion.cljc",18,1,959,959,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns the quaternion dot product of the supplied quaternions `l` and `r`.\n\n  The quaternion dot product is the sum of the products of the corresponding\n  coefficients of each quaternion, equal to\n\n  $$r_l * r_r + i_l * i_r + j_l * j_r + k_l * k_r$$",(cljs.core.truth_(sicmutils.quaternion.dot_product)?sicmutils.quaternion.dot_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-k"),new cljs.core.Var(function(){return sicmutils.quaternion.get_k;},new cljs.core.Symbol("sicmutils.quaternion","get-k","sicmutils.quaternion/get-k",1762455331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"get-k","get-k",-1782268692,null),"sicmutils/quaternion.cljc",12,1,455,455,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null)], null))], null)),"Returns the `k` component of the supplied quaternion `q`.",(cljs.core.truth_(sicmutils.quaternion.get_k)?sicmutils.quaternion.get_k.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tan"),new cljs.core.Var(function(){return sicmutils.quaternion.tan;},new cljs.core.Symbol("sicmutils.quaternion","tan","sicmutils.quaternion/tan",1514805929,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"tan","tan",-1380825876,null),"sicmutils/quaternion.cljc",10,1,1141,1141,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the tangent of the supplied quaternion `q`.\n\n  [[tan]] is defined as `(/ (sin q) (cos q))`.",(cljs.core.truth_(sicmutils.quaternion.tan)?sicmutils.quaternion.tan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("eq"),new cljs.core.Var(function(){return sicmutils.quaternion.eq;},new cljs.core.Symbol("sicmutils.quaternion","eq","sicmutils.quaternion/eq",-1986918199,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"eq","eq",1021992460,null),"sicmutils/quaternion.cljc",9,1,543,543,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null)),"Returns true if the supplied quaternion `q1` is equal to the value `q2`. The\n  rules for [[eq]] are as follows:\n\n  - If `q2` is a quaternion, returns true if all coefficients match, false\n    otherwise\n\n  - If `q2` is complex, returns true if the real and `i` coefficients are equal,\n    with `j` and `k` coefficients of `q1` equal to zero, false otherwise\n\n  - If `q2` is sequential with a count of 4, it's interpreted as a vector of\n    quaternion coefficients.\n\n  Else, if `q1` is a [[real?]] quaternion, returns true if the real component of\n  `q1` is [[sicmutils.value/=]] to `q2`, false otherwise.",(cljs.core.truth_(sicmutils.quaternion.eq)?sicmutils.quaternion.eq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evaluate"),new cljs.core.Var(function(){return sicmutils.quaternion.evaluate;},new cljs.core.Symbol("sicmutils.quaternion","evaluate","sicmutils.quaternion/evaluate",-478556157,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"evaluate","evaluate",-1129217332,null),"sicmutils/quaternion.cljc",15,1,750,750,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Given a quaternion `q` with function coefficients and a sequence `args` of\n  arguments, and returns a new [[Quaternion]] generated by replacing each\n  coefficient with the result of applying the (functional) coefficient to\n  `args`.",(cljs.core.truth_(sicmutils.quaternion.evaluate)?sicmutils.quaternion.evaluate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-derivative"),new cljs.core.Var(function(){return sicmutils.quaternion.partial_derivative;},new cljs.core.Symbol("sicmutils.quaternion","partial-derivative","sicmutils.quaternion/partial-derivative",1542181378,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"partial-derivative","partial-derivative",-1901056819,null),"sicmutils/quaternion.cljc",25,1,771,771,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"selectors","selectors",959789759,null)], null)),"Given a quaternion `q` with function coefficients and a possibly-empty sequence\n  of partial derivative `selectors`, returns a new [[Quaternion]] generated by\n  replacing each (functional) coefficient with its derivative with respect to\n  `selectors`.",(cljs.core.truth_(sicmutils.quaternion.partial_derivative)?sicmutils.quaternion.partial_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Quaternion"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_Quaternion;},new cljs.core.Symbol("sicmutils.quaternion","->Quaternion","sicmutils.quaternion/->Quaternion",-1028926634,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->Quaternion","->Quaternion",2119310605,null),"sicmutils/quaternion.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),5,406,406,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Positional factory function for [[Quaternion]].\n\n  The final metadata argument `m` defaults to nil if not supplied.",(cljs.core.truth_(sicmutils.quaternion.__GT_Quaternion)?sicmutils.quaternion.__GT_Quaternion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-rotation-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.from_rotation_matrix;},new cljs.core.Symbol("sicmutils.quaternion","from-rotation-matrix","sicmutils.quaternion/from-rotation-matrix",1437109622,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-rotation-matrix","from-rotation-matrix",-1184842963,null),"sicmutils/quaternion.cljc",27,1,1418,1418,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"Given an orthogonal 3x3 matrix M representing a rotation in 3-space, returns\n  the unit quaternion that corresponds to the same transformation.\n\n  GJS notes in scmutils that this algorithm is the 'expanded Matt Mason method'.\n\n  NOTE Orthogonal means, no stretching allowed, only rotation!\n\n  NOTE this routine uses non-generic [[clojure.core/>=]]\n  and [[clojure.core/max]] internally, so if you use numeric entries (or if your\n  entries simplify down to numbers), make sure that they work with these native\n  operations. No `BigInt` in Clojurescript for now, for example.",(cljs.core.truth_(sicmutils.quaternion.from_rotation_matrix)?sicmutils.quaternion.from_rotation_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sub"),new cljs.core.Var(function(){return sicmutils.quaternion.sub;},new cljs.core.Symbol("sicmutils.quaternion","sub","sicmutils.quaternion/sub",-1289484703,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),"sicmutils/quaternion.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,843,843,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Variadic function for subtracting quaternion arguments.\n\n  - Given no arguments, returns [[ZERO]], the additive identity.\n  - Given 1 argument `q`, acts as identity.\n  - Given 2 arguments, returns the difference of quaternions `q1` and `q2`.\n  - Given more than 2 arguments, returns the difference of the first quaternion\n    `q1` with the sum of all remaining arguments.\n\n  The difference of two quaternions is a new quaternion with coefficients equal\n  to the pairwise difference of the coefficients of `q1` and `q2`.",(cljs.core.truth_(sicmutils.quaternion.sub)?sicmutils.quaternion.sub.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt"),new cljs.core.Var(function(){return sicmutils.quaternion.sqrt;},new cljs.core.Symbol("sicmutils.quaternion","sqrt","sicmutils.quaternion/sqrt",1120748331,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"sqrt","sqrt",370479598,null),"sicmutils/quaternion.cljc",11,1,1182,1182,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the square root of the supplied quaternion `q`.\n\n  `([[sqrt]] q)` is identical to, but more efficient than, raising `q` to the\n  1/2 power.\n\n  Thanks to the [Spire\n  library](https://github.com/typelevel/spire/blob/82f607714f94ba1c70b13fd4751063dfdcd155f5/core/src/main/scala/spire/math/Quaternion.scala#L217)\n  for the correct implementation used here.",(cljs.core.truth_(sicmutils.quaternion.sqrt)?sicmutils.quaternion.sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scale"),new cljs.core.Var(function(){return sicmutils.quaternion.scale;},new cljs.core.Symbol("sicmutils.quaternion","scale","sicmutils.quaternion/scale",956017077,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"scale","scale",1410104174,null),"sicmutils/quaternion.cljc",12,1,926,926,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new quaternion generated by multiplying each coefficient of the\n  supplied quaternion `q` by the supplied scalar `s` on the right.",(cljs.core.truth_(sicmutils.quaternion.scale)?sicmutils.quaternion.scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->complex-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_complex_matrix;},new cljs.core.Symbol("sicmutils.quaternion","->complex-matrix","sicmutils.quaternion/->complex-matrix",-1228624405,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->complex-matrix","->complex-matrix",37544878,null),"sicmutils/quaternion.cljc",23,1,1326,1326,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a 2x2 complex matrix representation of the supplied Quaternion `q`.\n\n  For a quaternion with coefficients `[a b c d]`, the returned matrix will have\n  the following form:\n\n  ```\n  [ a + b i,  c + d i]\n  [ -c + d i, a - b i]\n  ```\n\n  NOTE that this currently only works for quaternions `q` with real or symbolic\n  entries.",(cljs.core.truth_(sicmutils.quaternion.__GT_complex_matrix)?sicmutils.quaternion.__GT_complex_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ONE-tensor"),new cljs.core.Var(function(){return sicmutils.quaternion.ONE_tensor;},new cljs.core.Symbol("sicmutils.quaternion","ONE-tensor","sicmutils.quaternion/ONE-tensor",2064076171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"ONE-tensor","ONE-tensor",-1496343602,null),"sicmutils/quaternion.cljc",13,1,1398,1399,cljs.core.List.EMPTY,"4x4 down-up tensor representation of the quaternion [[ONE]].",(cljs.core.truth_(sicmutils.quaternion.ONE_tensor)?sicmutils.quaternion.ONE_tensor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-angle-axis"),new cljs.core.Var(function(){return sicmutils.quaternion.from_angle_axis;},new cljs.core.Symbol("sicmutils.quaternion","from-angle-axis","sicmutils.quaternion/from-angle-axis",2118025290,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-angle-axis","from-angle-axis",770100623,null),"sicmutils/quaternion.cljc",22,1,1232,1232,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angle","angle",-1032341515,null),new cljs.core.Symbol(null,"axis","axis",425140705,null)], null)),"Returns a [[Quaternion]] that represents a rotation of `angle` radians around a\n  normalized version of the vector described by `axis`. `axis` must be a\n  3-vector with components `x`, `y` and `z`.\n\n  Given an `axis` with numeric entries, [[from-angle-axis]] will explicitly\n  normalize `axis` before calling [[from-angle-normal-axis]]. If any entries are\n  non-numerical (ie, symbolic), [[from-angle-axis]] will instead log an\n  assumption that the magnitude of `axis` == 1 and proceed.\n\n  NOTE: If you have an already-normalized axis,\n  prefer [[from-angle-normal-axis]].",(cljs.core.truth_(sicmutils.quaternion.from_angle_axis)?sicmutils.quaternion.from_angle_axis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-complex"),new cljs.core.Var(function(){return sicmutils.quaternion.from_complex;},new cljs.core.Symbol("sicmutils.quaternion","from-complex","sicmutils.quaternion/from-complex",-1846237093,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-complex","from-complex",-1001613936,null),"sicmutils/quaternion.cljc",19,1,651,651,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Given two complex numbers `a` and `b`, returns a quaternion instance with\n\n  - `r` and `i` components set to the real and imaginary components of `a`\n  - `j` and `k` components set to the real and imaginary components of `b`",(cljs.core.truth_(sicmutils.quaternion.from_complex)?sicmutils.quaternion.from_complex.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->4x4-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_4x4_matrix;},new cljs.core.Symbol("sicmutils.quaternion","->4x4-matrix","sicmutils.quaternion/->4x4-matrix",1220980635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->4x4-matrix","->4x4-matrix",-1753309744,null),"sicmutils/quaternion.cljc",19,1,1388,1388,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the 4x4 matrix representation of the supplied [[Quaternion]] `q`.",(cljs.core.truth_(sicmutils.quaternion.__GT_4x4_matrix)?sicmutils.quaternion.__GT_4x4_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp"),new cljs.core.Var(function(){return sicmutils.quaternion.exp;},new cljs.core.Symbol("sicmutils.quaternion","exp","sicmutils.quaternion/exp",-2031664644,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"exp","exp",1378825265,null),"sicmutils/quaternion.cljc",10,1,1088,1088,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the exponential $e^q$ of the supplied quaternion `q`.\n\n  Given a quaternion $q$ with real part $r$ and non-real vector $\\vec{v}$, the\n  exponential [is computed\n  as](https://en.wikipedia.org/wiki/Quaternion#Exponential,_logarithm,_and_power_functions)\n\n  $$\n  \\exp(q) = e^r \\left(\\cos \\|\\mathbf{v}\\| \\\n  + \\frac{\\mathbf{v}}{\\|\\mathbf{v}\\|} \\sin\\|\\mathbf{v}\\| \\right)\n  $$",(cljs.core.truth_(sicmutils.quaternion.exp)?sicmutils.quaternion.exp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero?"),new cljs.core.Var(function(){return sicmutils.quaternion.zero_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","zero?","sicmutils.quaternion/zero?",-961381002,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null),"sicmutils/quaternion.cljc",12,1,508,508,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns true if `q` is a quaternion with zeros in all coefficient positions,\n  false otherwise.",(cljs.core.truth_(sicmutils.quaternion.zero_QMARK_)?sicmutils.quaternion.zero_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-r"),new cljs.core.Var(function(){return sicmutils.quaternion.get_r;},new cljs.core.Symbol("sicmutils.quaternion","get-r","sicmutils.quaternion/get-r",291380057,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"get-r","get-r",-31995758,null),"sicmutils/quaternion.cljc",12,1,431,431,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null)], null))], null)),"Returns the `r` component of the supplied quaternion `q`.\n\n  Identical to [[real-part]].",(cljs.core.truth_(sicmutils.quaternion.get_r)?sicmutils.quaternion.get_r.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("complex-2"),new cljs.core.Var(function(){return sicmutils.quaternion.complex_2;},new cljs.core.Symbol("sicmutils.quaternion","complex-2","sicmutils.quaternion/complex-2",-1368917031,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"complex-2","complex-2",490677522,null),"sicmutils/quaternion.cljc",16,1,466,466,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the `j` and `k` components of the quaternion `q` as a `Complex` number\n  instance.",(cljs.core.truth_(sicmutils.quaternion.complex_2)?sicmutils.quaternion.complex_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cosh"),new cljs.core.Var(function(){return sicmutils.quaternion.cosh;},new cljs.core.Symbol("sicmutils.quaternion","cosh","sicmutils.quaternion/cosh",936038159,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"cosh","cosh",-1962788142,null),"sicmutils/quaternion.cljc",11,1,1148,1148,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the hyperbolic cosine of the supplied quaternion `q`.\n\n  [[cosh]] is defined in terms of the [[exp]] function as `(e^q + e^{-q}) / 2`.",(cljs.core.truth_(sicmutils.quaternion.cosh)?sicmutils.quaternion.cosh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("yaw"),new cljs.core.Var(function(){return sicmutils.quaternion.yaw;},new cljs.core.Symbol("sicmutils.quaternion","yaw","sicmutils.quaternion/yaw",1110576895,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"yaw","yaw",-151366862,null),"sicmutils/quaternion.cljc",10,1,1260,1260,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)),"Create a quaternion representing a yaw rotation by the supplied\n  `angle` (specified in radians).",(cljs.core.truth_(sicmutils.quaternion.yaw)?sicmutils.quaternion.yaw.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scale-l"),new cljs.core.Var(function(){return sicmutils.quaternion.scale_l;},new cljs.core.Symbol("sicmutils.quaternion","scale-l","sicmutils.quaternion/scale-l",-1120814376,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"scale-l","scale-l",33154067,null),"sicmutils/quaternion.cljc",14,1,916,916,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns a new quaternion generated by multiplying each coefficient of the\n  supplied quaternion `q` by the supplied scalar `s` on the left.",(cljs.core.truth_(sicmutils.quaternion.scale_l)?sicmutils.quaternion.scale_l.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pitch"),new cljs.core.Var(function(){return sicmutils.quaternion.pitch;},new cljs.core.Symbol("sicmutils.quaternion","pitch","sicmutils.quaternion/pitch",86906558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"pitch","pitch",-1159309069,null),"sicmutils/quaternion.cljc",12,1,1254,1254,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)),"Create a quaternion representing a pitch rotation by the supplied\n  `angle` (specified in radians).",(cljs.core.truth_(sicmutils.quaternion.pitch)?sicmutils.quaternion.pitch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("J"),new cljs.core.Var(function(){return sicmutils.quaternion.J;},new cljs.core.Symbol("sicmutils.quaternion","J","sicmutils.quaternion/J",-382580488,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"J","J",-1259700941,null),"sicmutils/quaternion.cljc",4,1,601,603,cljs.core.List.EMPTY,"Unit quaternion with `j` coefficient equal to 1, all other\n  coefficients equal to 0.",(cljs.core.truth_(sicmutils.quaternion.J)?sicmutils.quaternion.J.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("K-tensor"),new cljs.core.Var(function(){return sicmutils.quaternion.K_tensor;},new cljs.core.Symbol("sicmutils.quaternion","K-tensor","sicmutils.quaternion/K-tensor",-339780469,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"K-tensor","K-tensor",-2023182764,null),"sicmutils/quaternion.cljc",11,1,1410,1411,cljs.core.List.EMPTY,"4x4 down-up tensor representation of the quaternion [[K]].",(cljs.core.truth_(sicmutils.quaternion.K_tensor)?sicmutils.quaternion.K_tensor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cross-product"),new cljs.core.Var(function(){return sicmutils.quaternion.cross_product;},new cljs.core.Symbol("sicmutils.quaternion","cross-product","sicmutils.quaternion/cross-product",2040642224,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"cross-product","cross-product",-823528331,null),"sicmutils/quaternion.cljc",20,1,974,974,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Returns a quaternion representing the (vector) cross product of the two pure\n  sides (retrieved via [[three-vector]]) of the supplied quaternions `l` and\n  `r`.\n\n  NOTE that the suggestion for this function comes from this [C++ quaternion\n  library](https://github.com/ferd36/quaternions/blob/master/include/quaternion.h#L1109).\n  Strictly, this is not the 'cross product of two quaternions'.",(cljs.core.truth_(sicmutils.quaternion.cross_product)?sicmutils.quaternion.cross_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("magnitude"),new cljs.core.Var(function(){return sicmutils.quaternion.magnitude;},new cljs.core.Symbol("sicmutils.quaternion","magnitude","sicmutils.quaternion/magnitude",-1449038672,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"magnitude","magnitude",-730161547,null),"sicmutils/quaternion.cljc",16,1,1024,1024,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the norm of the supplied quaternion `q`.\n\n  The norm of a quaternion is the square root of the sum of the squares of the\n  quaternion's coefficients.",(cljs.core.truth_(sicmutils.quaternion.magnitude)?sicmutils.quaternion.magnitude.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real?"),new cljs.core.Var(function(){return sicmutils.quaternion.real_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","real?","sicmutils.quaternion/real?",-1487562637,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"real?","real?",-118641994,null),"sicmutils/quaternion.cljc",12,1,500,500,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns true if the quaternion `q` has zero entries for all non-real fields,\n  false otherwise.",(cljs.core.truth_(sicmutils.quaternion.real_QMARK_)?sicmutils.quaternion.real_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scalar+quaternion"),new cljs.core.Var(function(){return sicmutils.quaternion.scalar_PLUS_quaternion;},new cljs.core.Symbol("sicmutils.quaternion","scalar+quaternion","sicmutils.quaternion/scalar+quaternion",-1783939374,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"scalar+quaternion","scalar+quaternion",-488437609,null),"sicmutils/quaternion.cljc",33,1,807,807,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the quaternion result of adding scalar `s` to the real part of\n  quaternion `q`. Addition occurs with scalar `s` on the left.\n\n  See [[quaternion+scalar]] for right addition.",(cljs.core.truth_(sicmutils.quaternion.scalar_PLUS_quaternion)?sicmutils.quaternion.scalar_PLUS_quaternion.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("J-tensor"),new cljs.core.Var(function(){return sicmutils.quaternion.J_tensor;},new cljs.core.Symbol("sicmutils.quaternion","J-tensor","sicmutils.quaternion/J-tensor",-218385796,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"J-tensor","J-tensor",129006775,null),"sicmutils/quaternion.cljc",11,1,1406,1407,cljs.core.List.EMPTY,"4x4 down-up tensor representation of the quaternion [[J]].",(cljs.core.truth_(sicmutils.quaternion.J_tensor)?sicmutils.quaternion.J_tensor.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("q-div-scalar"),new cljs.core.Var(function(){return sicmutils.quaternion.q_div_scalar;},new cljs.core.Symbol("sicmutils.quaternion","q-div-scalar","sicmutils.quaternion/q-div-scalar",830838600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"q-div-scalar","q-div-scalar",-1899125481,null),"sicmutils/quaternion.cljc",19,1,949,949,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new quaternion generated by dividing each coefficient of the supplied\n  quaternion `q` by the supplied scalar `s`.",(cljs.core.truth_(sicmutils.quaternion.q_div_scalar)?sicmutils.quaternion.q_div_scalar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("div"),new cljs.core.Var(function(){return sicmutils.quaternion.div;},new cljs.core.Symbol("sicmutils.quaternion","div","sicmutils.quaternion/div",1941154780,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"div","div",-1597244137,null),"sicmutils/quaternion.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,997,997,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Variadic function for dividing quaternion arguments.\n\n  - Given no arguments, returns [[ONE]], the multiplicative identity.\n  - Given 1 argument `q`, acts as identity.\n  - Given 2 arguments, returns the quotient of quaternions `q1` and `q2`.\n  - Given more than 2 arguments, returns the quotient of the first quaternion\n    `q1` with the product of all remaining arguments.\n\n  The quotient of two quaternions is a new quaternion equal to the product of\n  `q1` and the multiplicative inverse of `q2`",(cljs.core.truth_(sicmutils.quaternion.div)?sicmutils.quaternion.div.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spherical"),new cljs.core.Var(function(){return sicmutils.quaternion.spherical;},new cljs.core.Symbol("sicmutils.quaternion","spherical","sicmutils.quaternion/spherical",774893426,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"spherical","spherical",-2097688265,null),"sicmutils/quaternion.cljc",16,1,664,664,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"colat","colat",-1900781322,null),new cljs.core.Symbol(null,"lon","lon",-2132367332,null)], null)),"Generates a [[Quaternion]] instance, given:\n\n  - a magnitude `r`\n  - a rotation angle `theta`, with a natural range of `-2*pi` to `2*pi`\n  - `colat`, the [colatitude](https://mathworld.wolfram.com/Colatitude.html) of\n    the (non-real) vectorial part of the quaternion\n  - `lon`, the longitude of the vectorial part of the quaternion",(cljs.core.truth_(sicmutils.quaternion.spherical)?sicmutils.quaternion.spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->rotation-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_rotation_matrix;},new cljs.core.Symbol("sicmutils.quaternion","->rotation-matrix","sicmutils.quaternion/->rotation-matrix",-892074222,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->rotation-matrix","->rotation-matrix",1030542807,null),"sicmutils/quaternion.cljc",24,1,1501,1501,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Given a normalized [[Quaternion]] `q`, returns the corresponding orthogonal 3x3\n  rotation matrix representing a rotation in 3d-space.\n\n  The implementation here will first normalize `q` for you and then generate a\n  rotation matrix from that new quaternion `q-normal`.\n\n  [[->rotation-matrix]] will still work if `q` isn't normalized; but if\n  a [[Quaternion]] isn't normalized it doesn't make sense to interpret it as a\n  rotation.",(cljs.core.truth_(sicmutils.quaternion.__GT_rotation_matrix)?sicmutils.quaternion.__GT_rotation_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("semipolar"),new cljs.core.Var(function(){return sicmutils.quaternion.semipolar;},new cljs.core.Symbol("sicmutils.quaternion","semipolar","sicmutils.quaternion/semipolar",-2111959928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"semipolar","semipolar",-145327529,null),"sicmutils/quaternion.cljc",16,1,684,684,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"alpha","alpha",65549086,null),new cljs.core.Symbol(null,"theta1","theta1",7117474,null),new cljs.core.Symbol(null,"theta2","theta2",381749589,null)], null)),"Returns a [[Quaternion]] `q` with magnitude `rho`, built such that:\n\n  - the magnitude of `q` equals `rho`\n  - the magnitude `([[complex-1]] q)` equals `(* rho (cos alpha))`\n  - the angle of `([[complex-1]] q)` equals `theta1`\n  - The magnitude `([[complex-2]] q)` equals `(* rho (cos alpha))`\n  - the angle of `([[complex-2]] q)` equals `theta12`\n\n  This strange, possibly unnecessary constructor taken from the [Boost\n  quaternion\n  implementation](https://www.boost.org/doc/libs/1_78_0/libs/math/doc/html/math_toolkit/create.html).",(cljs.core.truth_(sicmutils.quaternion.semipolar)?sicmutils.quaternion.semipolar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one?"),new cljs.core.Var(function(){return sicmutils.quaternion.one_QMARK_;},new cljs.core.Symbol("sicmutils.quaternion","one?","sicmutils.quaternion/one?",961368296,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"one?","one?",1787102903,null),"sicmutils/quaternion.cljc",11,1,514,514,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns true if `q` is a [[real?]] quaternion with a one-like coefficient in\n  the real position, false otherwise.",(cljs.core.truth_(sicmutils.quaternion.one_QMARK_)?sicmutils.quaternion.one_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mul"),new cljs.core.Var(function(){return sicmutils.quaternion.mul;},new cljs.core.Symbol("sicmutils.quaternion","mul","sicmutils.quaternion/mul",-1275266,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),"sicmutils/quaternion.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,889,889,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q1","q1",1804441001,null),new cljs.core.Symbol(null,"q2","q2",282479025,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Variadic function that returns the product of all supplied quaternions.\n\n  Given 1 argument `q`, acts as identity. Given no arguments, returns [[ONE]],\n  the multiplicative identity.\n\n  The product of two or more quaternions is a new quaternion generated by\n  multiplying together each quaternion of the form `(r+ai+bj+ck)`, respecting\n  the quaternion rules:\n\n  i^2 == j^2 == k^2 == -1\n  ijk == -1,\n  ij  == k,  jk == i,  ki == j\n  ji  == -k, kj == -i, ik == -j",(cljs.core.truth_(sicmutils.quaternion.mul)?sicmutils.quaternion.mul.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*angle-axis-tolerance*"),new cljs.core.Var(function(){return sicmutils.quaternion._STAR_angle_axis_tolerance_STAR_;},new cljs.core.Symbol("sicmutils.quaternion","*angle-axis-tolerance*","sicmutils.quaternion/*angle-axis-tolerance*",589593442,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"*angle-axis-tolerance*","*angle-axis-tolerance*",2006721849,null),"sicmutils/quaternion.cljc",25,1,true,1272,1274,cljs.core.List.EMPTY,"Tolerance setting for [[->angle-axis]].",(cljs.core.truth_(sicmutils.quaternion._STAR_angle_axis_tolerance_STAR_)?sicmutils.quaternion._STAR_angle_axis_tolerance_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("K-matrix"),new cljs.core.Var(function(){return sicmutils.quaternion.K_matrix;},new cljs.core.Symbol("sicmutils.quaternion","K-matrix","sicmutils.quaternion/K-matrix",130725012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"K-matrix","K-matrix",-1333593383,null),"sicmutils/quaternion.cljc",11,1,1373,1374,cljs.core.List.EMPTY,"4x4 matrix representation of the quaternion [[K]].",(cljs.core.truth_(sicmutils.quaternion.K_matrix)?sicmutils.quaternion.K_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ONE"),new cljs.core.Var(function(){return sicmutils.quaternion.ONE;},new cljs.core.Symbol("sicmutils.quaternion","ONE","sicmutils.quaternion/ONE",1848145282,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"ONE","ONE",-1107326119,null),"sicmutils/quaternion.cljc",6,1,593,595,cljs.core.List.EMPTY,"The identity quaternion. The real coefficient is equal to 1, and\n  all coefficients are equal to 0.",(cljs.core.truth_(sicmutils.quaternion.ONE)?sicmutils.quaternion.ONE.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multipolar"),new cljs.core.Var(function(){return sicmutils.quaternion.multipolar;},new cljs.core.Symbol("sicmutils.quaternion","multipolar","sicmutils.quaternion/multipolar",-1981357145,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"multipolar","multipolar",-56699270,null),"sicmutils/quaternion.cljc",17,1,704,704,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r1","r1",-1963460869,null),new cljs.core.Symbol(null,"theta1","theta1",7117474,null),new cljs.core.Symbol(null,"r2","r2",1893375701,null),new cljs.core.Symbol(null,"theta2","theta2",381749589,null)], null)),"Returns a [[Quaternion]] instance with [[complex-1]] part built from the polar\n  coordinates `r1` and `theta1` and [[complex-2]] part built from `r2` and\n  `theta2`",(cljs.core.truth_(sicmutils.quaternion.multipolar)?sicmutils.quaternion.multipolar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinh"),new cljs.core.Var(function(){return sicmutils.quaternion.sinh;},new cljs.core.Symbol("sicmutils.quaternion","sinh","sicmutils.quaternion/sinh",1747936573,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"sinh","sinh",-990423302,null),"sicmutils/quaternion.cljc",11,1,1156,1156,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the hyperbolic sine of the supplied quaternion `q`.\n\n  [[sinh]] is defined in terms of the [[exp]] function as `(e^q - e^{-q}) / 2`.",(cljs.core.truth_(sicmutils.quaternion.sinh)?sicmutils.quaternion.sinh.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-i"),new cljs.core.Var(function(){return sicmutils.quaternion.get_i;},new cljs.core.Symbol("sicmutils.quaternion","get-i","sicmutils.quaternion/get-i",1096872182,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"get-i","get-i",841532219,null),"sicmutils/quaternion.cljc",12,1,445,445,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Quaternion","Quaternion",-1494551228,null)], null))], null)),"Returns the `i` component of the supplied quaternion `q`.",(cljs.core.truth_(sicmutils.quaternion.get_i)?sicmutils.quaternion.get_i.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sin"),new cljs.core.Var(function(){return sicmutils.quaternion.sin;},new cljs.core.Symbol("sicmutils.quaternion","sin","sicmutils.quaternion/sin",-715929768,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"sin","sin",1721439389,null),"sicmutils/quaternion.cljc",10,1,1125,1125,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Returns the sine of the supplied quaternion `q`.\n\n  See the [Boost\n  documentation](https://www.boost.org/doc/libs/1_78_0/libs/math/doc/html/math_toolkit/trans.html)\n  and [source](https://www.boost.org/doc/libs/1_78_0/boost/math/quaternion.hpp)\n  for a reference implementation.",(cljs.core.truth_(sicmutils.quaternion.sin)?sicmutils.quaternion.sin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-angle-normal-axis"),new cljs.core.Var(function(){return sicmutils.quaternion.from_angle_normal_axis;},new cljs.core.Symbol("sicmutils.quaternion","from-angle-normal-axis","sicmutils.quaternion/from-angle-normal-axis",-1066726618,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"from-angle-normal-axis","from-angle-normal-axis",2091071901,null),"sicmutils/quaternion.cljc",29,1,1216,1216,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angle","angle",-1032341515,null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null),new cljs.core.Symbol(null,"z","z",851004344,null)], null)], null)),"Returns a [[Quaternion]] that represents a rotation of `angle` radians around\n  the unit (normalized) vector described by the second argument, a 3-vector with\n  components `x`, `y` and `z`.\n\n  The second argument represents an axis of rotation.\n\n  NOTE: If you have an UN-normalized axis, prefer [[from-angle-axis]].",(cljs.core.truth_(sicmutils.quaternion.from_angle_normal_axis)?sicmutils.quaternion.from_angle_normal_axis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("roll"),new cljs.core.Var(function(){return sicmutils.quaternion.roll;},new cljs.core.Symbol("sicmutils.quaternion","roll","sicmutils.quaternion/roll",-1086341243,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"roll","roll",1651798526,null),"sicmutils/quaternion.cljc",11,1,1266,1266,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"angle","angle",-1032341515,null)], null)),"Create a quaternion representing a roll rotation by the supplied\n  `angle` (specified in radians).",(cljs.core.truth_(sicmutils.quaternion.roll)?sicmutils.quaternion.roll.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->angle-axis"),new cljs.core.Var(function(){return sicmutils.quaternion.__GT_angle_axis;},new cljs.core.Symbol("sicmutils.quaternion","->angle-axis","sicmutils.quaternion/->angle-axis",-1830897445,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"->angle-axis","->angle-axis",-837358946,null),"sicmutils/quaternion.cljc",19,1,1277,1277,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Given a unit quaternion `q` [representing a spatial\n  rotation](https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation) (sometimes\n  called a 'versor'), returns a pair of\n\n  - `theta`, the rotation in radians about the rotation axis\n  - `axis`, a 3-element unit vector with elements `x`, `y` and `z` representing\n    an axis of rotation in 3d Euclidean space.\n\n  If the unit quaternion `q` represents NO rotation, the axis is undefined; this\n  manifests as the squared norm of the non-real vector part of `q` sitting\n  within [[*angle-axis-tolerance*]] of 0.\n\n  In this case, the conversion is degenerate and [[->angle-axis]] returns the\n  pair [0 [1 0 0]] as a default. (This check only occurs with a quaternion with\n  all numeric elements in the non-real positions.)",(cljs.core.truth_(sicmutils.quaternion.__GT_angle_axis)?sicmutils.quaternion.__GT_angle_axis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quaternion+scalar"),new cljs.core.Var(function(){return sicmutils.quaternion.quaternion_PLUS_scalar;},new cljs.core.Symbol("sicmutils.quaternion","quaternion+scalar","sicmutils.quaternion/quaternion+scalar",-436329488,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.quaternion","sicmutils.quaternion",1470923025,null),new cljs.core.Symbol(null,"quaternion+scalar","quaternion+scalar",-1996073921,null),"sicmutils/quaternion.cljc",33,1,819,819,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the quaternion result of adding scalar `s` to the real part of\n  quaternion `q`. Addition occurs with scalar `s` on the right.\n\n  See [[scalar+quaternion]] for left addition.",(cljs.core.truth_(sicmutils.quaternion.quaternion_PLUS_scalar)?sicmutils.quaternion.quaternion_PLUS_scalar.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("succeed"),new cljs.core.Var(function(){return pattern.consequence.succeed;},new cljs.core.Symbol("pattern.consequence","succeed","pattern.consequence/succeed",1727123488,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.consequence","pattern.consequence",-139029692,null),new cljs.core.Symbol(null,"succeed","succeed",207632095,null),"pattern/consequence.cljc",14,1,26,26,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Wraps the argument `x` in a form that will always successfully return from a\n  consequence function, whatever its value.\n\n  Use [[succeed]] to return `nil` or `false` from a consequence function. For\n  all other return values, returning `(succeed x)` is identical to returning\n  `x`",(cljs.core.truth_(pattern.consequence.succeed)?pattern.consequence.succeed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unwrap"),new cljs.core.Var(function(){return pattern.consequence.unwrap;},new cljs.core.Symbol("pattern.consequence","unwrap","pattern.consequence/unwrap",-738352308,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.consequence","pattern.consequence",-139029692,null),new cljs.core.Symbol(null,"unwrap","unwrap",241356065,null),"pattern/consequence.cljc",13,1,36,36,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a form returned by a consequence function, unwraps the top level\n  `succeed` wrapper if present to return the final value.",(cljs.core.truth_(pattern.consequence.unwrap)?pattern.consequence.unwrap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-skeleton"),new cljs.core.Var(function(){return pattern.consequence.compile_skeleton;},new cljs.core.Symbol("pattern.consequence","compile-skeleton","pattern.consequence/compile-skeleton",1976967832,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.consequence","pattern.consequence",-139029692,null),new cljs.core.Symbol(null,"compile-skeleton","compile-skeleton",-668513117,null),"pattern/consequence.cljc",23,1,78,78,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame-sym","frame-sym",1690428135,null),new cljs.core.Symbol(null,"skel","skel",-840013828,null)], null)),"Takes:\n\n  - a symbol `frame-sym` meant to reference a map of bindings\n  - a skeleton expression `skel`\n\n  and returns an unevaluated body that, when evaluated, will produce a form\n  structure of identical shape to `skel`, with:\n\n  - all variable binding forms replaced by forms that look up the binding in a\n    map bound to `frame-sym`\n  - same with any segment binding form, with the added note that these should\n    be spliced in\n  - any `unquote` or `unquote-splicing` forms respected.",(cljs.core.truth_(pattern.consequence.compile_skeleton)?pattern.consequence.compile_skeleton.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sum"),new cljs.core.Var(function(){return sicmutils.util.aggregate.sum;},new cljs.core.Symbol("sicmutils.util.aggregate","sum","sicmutils.util.aggregate/sum",-222959083,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"sum","sum",1777518341,null),"sicmutils/util/aggregate.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,47,47,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),"Takes either:\n\n  - a series `xs` of numbers\n  - A transformation function `f`, an inclusive-lower bound `low` and\n    exclusive-upper bound `upper`\n\n  And returns the result of aggregating either `xs` or `(map f (range low\n  high))` using the fold dynamically bound to [[*fold*]].\n\n  Use `binding` to substitute in a different fold:\n\n  ```clj\n  (require '[sicmutils.algebra.fold :as af])\n\n  (binding [*fold* (af/join af/kahan af/min af/max)]\n    (sum inc 0 10))\n  ;;=> [55.0 1 10]\n  ```",(cljs.core.truth_(sicmutils.util.aggregate.sum)?sicmutils.util.aggregate.sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("group"),new cljs.core.Var(function(){return sicmutils.util.aggregate.group;},new cljs.core.Symbol("sicmutils.util.aggregate","group","sicmutils.util.aggregate/group",524904795,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"group","group",-2071839637,null),"sicmutils/util/aggregate.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,227,227,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"minus","minus",-43029965,null),new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)),"Similar to [[monoid]] for types with invertible elements. Accepts:\n\n  - binary `minus` and (associative) `plus` functions\n  - a unary `negate` function\n  - an element `id` that obeys `(plus id other) == (plus other id) == other`\n  - optionally, an `annihilate?` function that should return true for any `x`\n    such that `(plus x <any>) == x`.\n\n  And returns a function that will SUBTRACT elements. Given `x`, `y`, `z`, for\n  example, the returned function will return `(- x y z)`, implemented as `(minus\n  x (plus y z))`\n\n  If the `annihilate?` function is supplied, then if the aggregation produces a\n  value that returns `(annihilate? true)` at any point, the reduction will\n  return immediately.",(cljs.core.truth_(sicmutils.util.aggregate.group)?sicmutils.util.aggregate.group.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*fold*"),new cljs.core.Var(function(){return sicmutils.util.aggregate._STAR_fold_STAR_;},new cljs.core.Symbol("sicmutils.util.aggregate","*fold*","sicmutils.util.aggregate/*fold*",-1360039586,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"*fold*","*fold*",95822926,null),"sicmutils/util/aggregate.cljc",9,1,true,28,35,cljs.core.List.EMPTY,"Fold used to aggregate values encountered by [[sum]] or [[fold]].\n\n  Rebind this value to change the behavior of [[sum]] or [[fold]].\n\n  Defaults to [[sicmutils.algebra.fold/kahan-babushka-neumaier-fold]].",(cljs.core.truth_(sicmutils.util.aggregate._STAR_fold_STAR_)?sicmutils.util.aggregate._STAR_fold_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generic-sum"),new cljs.core.Var(function(){return sicmutils.util.aggregate.generic_sum;},new cljs.core.Symbol("sicmutils.util.aggregate","generic-sum","sicmutils.util.aggregate/generic-sum",-1157930786,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"generic-sum","generic-sum",800077806,null),"sicmutils/util/aggregate.cljc",14,1,8,15,cljs.core.List.EMPTY,"Sums either:\n\n  - a series `xs` of numbers, or\n  - the result of mapping function `f` to `(range low high)`\n\n  Using the generic [[sicmutils.generic/+]] function.",(cljs.core.truth_(sicmutils.util.aggregate.generic_sum)?sicmutils.util.aggregate.generic_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("merge-fn"),new cljs.core.Var(function(){return sicmutils.util.aggregate.merge_fn;},new cljs.core.Symbol("sicmutils.util.aggregate","merge-fn","sicmutils.util.aggregate/merge-fn",-116618396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"merge-fn","merge-fn",-2066368428,null),"sicmutils/util/aggregate.cljc",15,1,254,254,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"compare","compare",1109853757,null),new cljs.core.Symbol(null,"add","add",1875819266,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null),new cljs.core.Symbol(null,"make","make",356488202,null)], null)),"NOTE that the returned function recurs on increasing indices internally instead\n  of walking through the lists directly. This method of traversing vectors is\n  more efficient, and this function is called so often that the performance gain\n  is worth it, and reads almost like the explicit sequence traversal.",(cljs.core.truth_(sicmutils.util.aggregate.merge_fn)?sicmutils.util.aggregate.merge_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*cutoff*"),new cljs.core.Var(function(){return sicmutils.util.aggregate._STAR_cutoff_STAR_;},new cljs.core.Symbol("sicmutils.util.aggregate","*cutoff*","sicmutils.util.aggregate/*cutoff*",1241501991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"*cutoff*","*cutoff*",-768308169,null),"sicmutils/util/aggregate.cljc",11,1,true,120,123,cljs.core.List.EMPTY,"Dynamically bindable size below which [[pairwise-sum]] will defer\n  to [[sum]] to aggregate values.",(cljs.core.truth_(sicmutils.util.aggregate._STAR_cutoff_STAR_)?sicmutils.util.aggregate._STAR_cutoff_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pairwise-sum"),new cljs.core.Var(function(){return sicmutils.util.aggregate.pairwise_sum;},new cljs.core.Symbol("sicmutils.util.aggregate","pairwise-sum","sicmutils.util.aggregate/pairwise-sum",-1825927703,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"pairwise-sum","pairwise-sum",1070838009,null),"sicmutils/util/aggregate.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,144,144,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),"Given a vector of numbers, returns the [pairwise\n  summation](https://en.wikipedia.org/wiki/Pairwise_summation) of the vector\n  generated by arranging the vector into a binary tree and summing leaves\n  together all the way up to the root.\n\n  If `xs` is /not/ a vector, [[pairwise-sum]] will realize all elements into a\n  vector before operating.\n\n  If the initial vector, or some recursive slice, reaches a count\n  <= [[*cutoff*]], [[pairwise-sum]] defers to `(reduce + xs)`.\n\n  ### Performance Discussion\n\n  [[pairwise-sum]] is perhaps 10% faster than [[sum]]\n  with [[sicmutils.algebra.fold/kbn]] bound to [[*fold*]], but has poorer bounds\n  on its error growth. Instead of having roughly constant error regardless of\n  the size of the input, in the worst case its accumulated error grows with\n  $O(\\log n)$.\n\n  This improvement is due to the fact that [[pairwise-sum]] tends to add up\n  numbers of similar magnitude, instead of adding deltas into a progressively\n  larger sum.\n\n  This implementation was inspired by the `pairwiseSum` implementation in\n  the [`math-functions`](https://hackage.haskell.org/package/math-functions-0.3.4.2/docs/src/Numeric.Sum.html#pairwiseSum)\n  Haskell package. The notes above were adapted from that function's docs.",(cljs.core.truth_(sicmutils.util.aggregate.pairwise_sum)?sicmutils.util.aggregate.pairwise_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("monoid"),new cljs.core.Var(function(){return sicmutils.util.aggregate.monoid;},new cljs.core.Symbol("sicmutils.util.aggregate","monoid","sicmutils.util.aggregate/monoid",-488482324,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"monoid","monoid",1982407932,null),"sicmutils/util/aggregate.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,205,205,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"plus","plus",1852072188,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"annihilate?","annihilate?",-1123484107,null)], null)),"Accepts a binary (associative) aggregation function `plus` and an identity\n  element `id` and returns a multi-arity function that will combine its\n  arguments via `plus`. A 0-arity call returns `id`.\n\n  optionally takes an `annihilate?` function that should return true for any `x`\n  such that `(plus x <any>) == x`.\n\n  If the `annihilate?` function is supplied, then if the aggregation produces a\n  value that returns `(annihilate? true)` at any point, the reduction will\n  return immediately.",(cljs.core.truth_(sicmutils.util.aggregate.monoid)?sicmutils.util.aggregate.monoid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scan"),new cljs.core.Var(function(){return sicmutils.util.aggregate.scan;},new cljs.core.Symbol("sicmutils.util.aggregate","scan","sicmutils.util.aggregate/scan",-504979697,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.util.aggregate","sicmutils.util.aggregate",-1766744620,null),new cljs.core.Symbol(null,"scan","scan",1311631423,null),"sicmutils/util/aggregate.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"low","low",39169118,null),new cljs.core.Symbol(null,"high","high",-627137961,null)], null)),"Takes either:\n\n  - a series `xs` of numbers\n  - A transformation function `f`, an inclusive-lower bound `low` and\n    exclusive-upper bound `upper`\n\n  And returns a lazy sequence of all intermediate values seen while aggregating\n  either `xs` or `(map f (range low high))` using the fold dynamically bound\n  to [[*fold*]].\n\n  Use `binding` to substitute in a different fold:\n\n  ```clj\n  (require '[sicmutils.algebra.fold :as af])\n\n  (binding [*fold* (af/join af/kahan af/min af/max)]\n    (scan inc 0 3))\n  ;;=> ([1.0 1 1] [3.0 1 2] [6.0 1 3])\n  ```",(cljs.core.truth_(sicmutils.util.aggregate.scan)?sicmutils.util.aggregate.scan.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Christoffel-1"),new cljs.core.Var(function(){return sicmutils.calculus.connection.make_Christoffel_1;},new cljs.core.Symbol("sicmutils.calculus.connection","make-Christoffel-1","sicmutils.calculus.connection/make-Christoffel-1",187430369,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"make-Christoffel-1","make-Christoffel-1",77741028,null),"sicmutils/calculus/connection.cljc",25,1,16,16,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symbols","symbols",1641743270,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),"Returns a data structure representing [Christoffel symbols of the first\n  kind](https://en.wikipedia.org/wiki/Christoffel_symbols#Christoffel_symbols_of_the_first_kind).",(cljs.core.truth_(sicmutils.calculus.connection.make_Christoffel_1)?sicmutils.calculus.connection.make_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Christoffel-2"),new cljs.core.Var(function(){return sicmutils.calculus.connection.literal_Christoffel_2;},new cljs.core.Symbol("sicmutils.calculus.connection","literal-Christoffel-2","sicmutils.calculus.connection/literal-Christoffel-2",589667367,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"literal-Christoffel-2","literal-Christoffel-2",632148524,null),"sicmutils/calculus/connection.cljc",28,1,101,101,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.literal_Christoffel_2)?sicmutils.calculus.connection.literal_Christoffel_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure-constant"),new cljs.core.Var(function(){return sicmutils.calculus.connection.structure_constant;},new cljs.core.Symbol("sicmutils.calculus.connection","structure-constant","sicmutils.calculus.connection/structure-constant",-1308990734,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"structure-constant","structure-constant",-1401802547,null),"sicmutils/calculus/connection.cljc",25,1,118,118,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"e_i","e_i",-907547744,null),new cljs.core.Symbol(null,"e_j","e_j",-204646387,null),new cljs.core.Symbol(null,"e_k","e_k",-1989044598,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null),new cljs.core.Symbol(null,"metric","metric",2049329604,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.structure_constant)?sicmutils.calculus.connection.structure_constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->Christoffel-1"),new cljs.core.Var(function(){return sicmutils.calculus.connection.metric__GT_Christoffel_1;},new cljs.core.Symbol("sicmutils.calculus.connection","metric->Christoffel-1","sicmutils.calculus.connection/metric->Christoffel-1",1996793994,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"metric->Christoffel-1","metric->Christoffel-1",1888246415,null),"sicmutils/calculus/connection.cljc",28,1,24,24,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.metric__GT_Christoffel_1)?sicmutils.calculus.connection.metric__GT_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Christoffel-1"),new cljs.core.Var(function(){return sicmutils.calculus.connection.literal_Christoffel_1;},new cljs.core.Symbol("sicmutils.calculus.connection","literal-Christoffel-1","sicmutils.calculus.connection/literal-Christoffel-1",1962771151,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"literal-Christoffel-1","literal-Christoffel-1",2054549682,null),"sicmutils/calculus/connection.cljc",28,1,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.literal_Christoffel_1)?sicmutils.calculus.connection.literal_Christoffel_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Cartan"),new cljs.core.Var(function(){return sicmutils.calculus.connection.literal_Cartan;},new cljs.core.Symbol("sicmutils.calculus.connection","literal-Cartan","sicmutils.calculus.connection/literal-Cartan",1453870547,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"literal-Cartan","literal-Cartan",757080022,null),"sicmutils/calculus/connection.cljc",21,1,110,110,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.literal_Cartan)?sicmutils.calculus.connection.literal_Cartan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->connection-1"),new cljs.core.Var(function(){return sicmutils.calculus.connection.metric__GT_connection_1;},new cljs.core.Symbol("sicmutils.calculus.connection","metric->connection-1","sicmutils.calculus.connection/metric->connection-1",1362192701,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"metric->connection-1","metric->connection-1",1270458170,null),"sicmutils/calculus/connection.cljc",27,1,125,125,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.metric__GT_connection_1)?sicmutils.calculus.connection.metric__GT_connection_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->connection-2"),new cljs.core.Var(function(){return sicmutils.calculus.connection.metric__GT_connection_2;},new cljs.core.Symbol("sicmutils.calculus.connection","metric->connection-2","sicmutils.calculus.connection/metric->connection-2",-501098503,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"metric->connection-2","metric->connection-2",413672956,null),"sicmutils/calculus/connection.cljc",27,1,150,150,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.metric__GT_connection_2)?sicmutils.calculus.connection.metric__GT_connection_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("metric->Christoffel-2"),new cljs.core.Var(function(){return sicmutils.calculus.connection.metric__GT_Christoffel_2;},new cljs.core.Symbol("sicmutils.calculus.connection","metric->Christoffel-2","sicmutils.calculus.connection/metric->Christoffel-2",-1207117790,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.connection","sicmutils.calculus.connection",-2051156761,null),new cljs.core.Symbol(null,"metric->Christoffel-2","metric->Christoffel-2",-1477146051,null),"sicmutils/calculus/connection.cljc",28,1,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.connection.metric__GT_Christoffel_2)?sicmutils.calculus.connection.metric__GT_Christoffel_2.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arity"),new cljs.core.Var(function(){return sicmutils.function$.arity;},new cljs.core.Symbol("sicmutils.function","arity","sicmutils.function/arity",514122583,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),"sicmutils/function.cljc",9,1,28,29,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Return the cached or obvious arity of `f` if we know it. Otherwise\n    delegates to heavy duty reflection.",(cljs.core.truth_(sicmutils.function$.arity)?sicmutils.function$.arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("combine-arities"),new cljs.core.Var(function(){return sicmutils.function$.combine_arities;},new cljs.core.Symbol("sicmutils.function","combine-arities","sicmutils.function/combine-arities",-563437061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"combine-arities","combine-arities",-1180435548,null),"sicmutils/function.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,374,374,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Returns the joint arity of arities `a` and `b`.\n\n  The joint arity is the loosest possible arity specification compatible with\n  both `a` and `b`. Throws if `a` and `b` are incompatible.",(cljs.core.truth_(sicmutils.function$.combine_arities)?sicmutils.function$.combine_arities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-arity"),new cljs.core.Var(function(){return sicmutils.function$.with_arity;},new cljs.core.Symbol("sicmutils.function","with-arity","sicmutils.function/with-arity",216179824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"with-arity","with-arity",1915481989,null),"sicmutils/function.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Appends the supplied `arity` to the metadata of `f`, knocking out any\n  pre-existing arity notation.\n\n  Optionally accepts a third parameter `m` of metadata to attach to the return\n  function, in addition to the new `:arity` key.",(cljs.core.truth_(sicmutils.function$.with_arity)?sicmutils.function$.with_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exposed-arities"),new cljs.core.Var(function(){return sicmutils.function$.exposed_arities;},new cljs.core.Symbol("sicmutils.function","exposed-arities","sicmutils.function/exposed-arities",-857603283,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"exposed-arities","exposed-arities",321609062,null),"sicmutils/function.cljc",36,6,304,304,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"When CLJS functions have different arities, the function is represented as a js\n  object with each arity storied under its own key.",(cljs.core.truth_(sicmutils.function$.exposed_arities)?sicmutils.function$.exposed_arities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compose"),new cljs.core.Var(function(){return sicmutils.function$.compose;},new cljs.core.Symbol("sicmutils.function","compose","sicmutils.function/compose",2137166450,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"compose","compose",1144740903,null),"sicmutils/function.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"fns","fns",-1469296983,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"fns","fns",-1469296983,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"fns","fns",-1469296983,null)], null)),"Arity-preserving version of `clojure.core/comp`.\n\n  The arity of a composition is the arity of the rightmost (that is, first to be\n  applied) function term in `fns`.",(cljs.core.truth_(sicmutils.function$.compose)?sicmutils.function$.compose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-scale"),new cljs.core.Var(function(){return sicmutils.function$.arg_scale;},new cljs.core.Symbol("sicmutils.function","arg-scale","sicmutils.function/arg-scale",337754877,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"arg-scale","arg-scale",-828801718,null),"sicmutils/function.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,168,168,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),"Takes a function `f` and a sequence of `factors`, and returns a new function\n  that multiplies each factor by the corresponding argument of `f`. Too many or\n  two few factors are ignored.\n\n  ```clojure\n  ((arg-scale square 3) 4) ==> 144\n  ((arg-scale square 3 2 1) 4) ==> 144\n  ```",(cljs.core.truth_(sicmutils.function$.arg_scale)?sicmutils.function$.arg_scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get"),new cljs.core.Var(function(){return sicmutils.function$.get;},new cljs.core.Symbol("sicmutils.function","get","sicmutils.function/get",-314400681,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"get","get",-971253014,null),"sicmutils/function.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),"For non-functions, acts like [[clojure.core/get]]. For function\n  arguments (anything that responds true to [[function?]]), returns\n\n  ```clojure\n  (comp #(clojure.core/get % k) f)\n  ```\n\n  If `not-found` is supplied it's passed through to the\n  composed [[clojure.core/get]].",(cljs.core.truth_(sicmutils.function$.get)?sicmutils.function$.get.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I"),new cljs.core.Var(function(){return sicmutils.function$.I;},new cljs.core.Symbol("sicmutils.function","I","sicmutils.function/I",-402050595,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"I","I",-827294806,null),"sicmutils/function.cljc",4,1,144,145,cljs.core.List.EMPTY,"Identity function. Returns its argument.",(cljs.core.truth_(sicmutils.function$.I)?sicmutils.function$.I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("IArity"),new cljs.core.Var(function(){return sicmutils.function$.IArity;},new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"IArity","IArity",-158622163,null),"sicmutils/function.cljc",20,1,28,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Return the cached or obvious arity of `f` if we know it. Otherwise\n    delegates to heavy duty reflection."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null)], null)], null),28,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"arity","arity",-1808556135),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"arity","arity",-168024608,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Return the cached or obvious arity of `f` if we know it. Otherwise\n    delegates to heavy duty reflection."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.function$.IArity)?sicmutils.function$.IArity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-shift"),new cljs.core.Var(function(){return sicmutils.function$.arg_shift;},new cljs.core.Symbol("sicmutils.function","arg-shift","sicmutils.function/arg-shift",-1929969320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"arg-shift","arg-shift",-382841075,null),"sicmutils/function.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,153,153,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null)], null)),"Takes a function `f` and a sequence of `shifts`, and returns a new function\n  that adds each shift to the corresponding argument of `f`. Too many or two few\n  shifts are ignored.\n\n  ```clojure\n  ((arg-shift square 3) 4) ==> 49\n  ((arg-shift square 3 2 1) 4) ==> 49\n  ```",(cljs.core.truth_(sicmutils.function$.arg_shift)?sicmutils.function$.arg_shift.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("joint-arity"),new cljs.core.Var(function(){return sicmutils.function$.joint_arity;},new cljs.core.Symbol("sicmutils.function","joint-arity","sicmutils.function/joint-arity",-1066988063,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"joint-arity","joint-arity",632178222,null),"sicmutils/function.cljc",18,1,411,411,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arities","arities",-140591390,null)], null)),"Find the most relaxed possible statement of the joint arity of the given sequence of `arities`.\n  If they are incompatible, an exception is thrown.",(cljs.core.truth_(sicmutils.function$.joint_arity)?sicmutils.function$.joint_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("function?"),new cljs.core.Var(function(){return sicmutils.function$.function_QMARK_;},new cljs.core.Symbol("sicmutils.function","function?","sicmutils.function/function?",-2119367380,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"function?","function?",1729250129,null),"sicmutils/function.cljc",16,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if `f` is of [[v/kind]] `::v/function`, false otherwise.",(cljs.core.truth_(sicmutils.function$.function_QMARK_)?sicmutils.function$.function_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("memoize"),new cljs.core.Var(function(){return sicmutils.function$.memoize;},new cljs.core.Symbol("sicmutils.function","memoize","sicmutils.function/memoize",1561717414,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"memoize","memoize",2019341169,null),"sicmutils/function.cljc",14,1,78,78,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"meta-preserving version of `clojure.core/memoize`.\n\n  The returned function will have a new `:arity` entry in its metadata with the\n  `arity` of the original `f`; this is because the process used to figure out a\n  function's arity will not work across the memoization boundary.",(cljs.core.truth_(sicmutils.function$.memoize)?sicmutils.function$.memoize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coerce-to-fn"),new cljs.core.Var(function(){return sicmutils.function$.coerce_to_fn;},new cljs.core.Symbol("sicmutils.function","coerce-to-fn","sicmutils.function/coerce-to-fn",357102638,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"coerce-to-fn","coerce-to-fn",2129768019,null),"sicmutils/function.cljc",19,1,442,442,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"arity","arity",-168024608,null)], null)),"Given a [[value/numerical?]] input `x`, returns a function of arity `arity`\n  that always returns `x` no matter what input it receives.\n\n  For non-numerical `x`, returns `x`.",(cljs.core.truth_(sicmutils.function$.coerce_to_fn)?sicmutils.function$.coerce_to_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("variadic?"),new cljs.core.Var(function(){return sicmutils.function$.variadic_QMARK_;},new cljs.core.Symbol("sicmutils.function","variadic?","sicmutils.function/variadic?",-1579999838,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"variadic?","variadic?",-2070256007,null),"sicmutils/function.cljc",30,6,298,298,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns true if the supplied function is variadic, false otherwise.",(cljs.core.truth_(sicmutils.function$.variadic_QMARK_)?sicmutils.function$.variadic_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*strict-arity-checks*"),new cljs.core.Var(function(){return sicmutils.function$._STAR_strict_arity_checks_STAR_;},new cljs.core.Symbol("sicmutils.function","*strict-arity-checks*","sicmutils.function/*strict-arity-checks*",1784750742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"*strict-arity-checks*","*strict-arity-checks*",816380251,null),"sicmutils/function.cljc",24,1,true,354,358,cljs.core.List.EMPTY,"If true, attempting to pass two functions of incompatible arity\n  into any binary function, or into [[combine-arities]], will throw. False by\n  default.",(cljs.core.truth_(sicmutils.function$._STAR_strict_arity_checks_STAR_)?sicmutils.function$._STAR_strict_arity_checks_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("reflect-on-arity"),new cljs.core.Var(function(){return sicmutils.function$.reflect_on_arity;},new cljs.core.Symbol("sicmutils.function","reflect-on-arity","sicmutils.function/reflect-on-arity",-1227281018,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"reflect-on-arity","reflect-on-arity",-888020133,null),"sicmutils/function.cljc",19,1,346,350,cljs.core.List.EMPTY,"Returns the arity of the function f. Computing arities of clojure\n  functions is a bit complicated. It involves reflection, so the results are\n  definitely worth memoizing.",(cljs.core.truth_(sicmutils.function$.reflect_on_arity)?sicmutils.function$.reflect_on_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("js-arity"),new cljs.core.Var(function(){return sicmutils.function$.js_arity;},new cljs.core.Symbol("sicmutils.function","js-arity","sicmutils.function/js-arity",1412106056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"js-arity","js-arity",1868811965,null),"sicmutils/function.cljc",29,6,320,320,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns a data structure indicating the arity of the supplied function.",(cljs.core.truth_(sicmutils.function$.js_arity)?sicmutils.function$.js_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq-arity"),new cljs.core.Var(function(){return sicmutils.function$.seq_arity;},new cljs.core.Symbol("sicmutils.function","seq-arity","sicmutils.function/seq-arity",2066600464,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"seq-arity","seq-arity",-1795913505,null),"sicmutils/function.cljc",16,1,417,417,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns the most general arity compatible with the aritiies of all entries in\n  the supplied sequence `xs` of values.",(cljs.core.truth_(sicmutils.function$.seq_arity)?sicmutils.function$.seq_arity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-in"),new cljs.core.Var(function(){return sicmutils.function$.get_in;},new cljs.core.Symbol("sicmutils.function","get-in","sicmutils.function/get-in",-1356898166,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.function","sicmutils.function",1781149750,null),new cljs.core.Symbol(null,"get-in","get-in",-1965644065,null),"sicmutils/function.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,111,111,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"ks","ks",-754231827,null),new cljs.core.Symbol(null,"not-found","not-found",1011451547,null)], null)),"For non-functions, acts like [[clojure.core/get-in]]. For function\n  arguments (anything that responds true to [[function?]]), returns\n\n  ```clojure\n  (comp #(clojure.core/get-in % ks) f)\n  ```\n\n  If `not-found` is supplied it's passed through to the\n  composed [[clojure.core/get-in]].",(cljs.core.truth_(sicmutils.function$.get_in)?sicmutils.function$.get_in.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("minimize"),new cljs.core.Var(function(){return sicmutils.numerical.minimize.minimize;},new cljs.core.Symbol("sicmutils.numerical.minimize","minimize","sicmutils.numerical.minimize/minimize",-1861846802,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.minimize","sicmutils.numerical.minimize",2114619701,null),new cljs.core.Symbol(null,"minimize","minimize",-1647687907,null),"sicmutils/numerical/minimize.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,9,9,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"observe","observe",1553880077,null)], null)),"Find the minimum of the function `f: R -> R` in the interval `[a, b]`.\n\n  If an `observe` function is supplied, it will be invoked with the iteration\n  count and the values of x and f(x) at each search step.",(cljs.core.truth_(sicmutils.numerical.minimize.minimize)?sicmutils.numerical.minimize.minimize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multidimensional-minimize"),new cljs.core.Var(function(){return sicmutils.numerical.minimize.multidimensional_minimize;},new cljs.core.Symbol("sicmutils.numerical.minimize","multidimensional-minimize","sicmutils.numerical.minimize/multidimensional-minimize",536767660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.minimize","sicmutils.numerical.minimize",2114619701,null),new cljs.core.Symbol(null,"multidimensional-minimize","multidimensional-minimize",448428381,null),"sicmutils/numerical/minimize.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"func","func",1401825487,null),new cljs.core.Symbol(null,"x0","x0",2051374914,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"func","func",1401825487,null),new cljs.core.Symbol(null,"x0","x0",2051374914,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,18,18,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"func","func",1401825487,null),new cljs.core.Symbol(null,"x0","x0",2051374914,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"info?","info?",2002457080,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Entrypoint for multidimensional minimization routines.\n\n  See [[sicmutils.numerical.multimin.nelder-mead/nelder-mead]] for the only\n  supported option.",(cljs.core.truth_(sicmutils.numerical.minimize.multidimensional_minimize)?sicmutils.numerical.minimize.multidimensional_minimize.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("substitute"),new cljs.core.Var(function(){return sicmutils.expression.substitute;},new cljs.core.Symbol("sicmutils.expression","substitute","sicmutils.expression/substitute",790033387,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"substitute","substitute",-1998578400,null),"sicmutils/expression.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"old","old",-184691163,null),new cljs.core.Symbol(null,"new","new",-444906321,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"s-map","s-map",732813964,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"old","old",-184691163,null),new cljs.core.Symbol(null,"new","new",-444906321,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"s-map","s-map",732813964,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,216,216,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"old","old",-184691163,null),new cljs.core.Symbol(null,"new","new",-444906321,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"s-map","s-map",732813964,null)], null)),"Returns a form similar to `expr`, with all instances of `old` replaced by\n  `new`. Substitution occurs\n  in [postwalk](https://clojuredocs.org/clojure.walk/postwalk) order.\n\n  NOTE that this now works for expressions too.",(cljs.core.truth_(sicmutils.expression.substitute)?sicmutils.expression.substitute.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abstract?"),new cljs.core.Var(function(){return sicmutils.expression.abstract_QMARK_;},new cljs.core.Symbol("sicmutils.expression","abstract?","sicmutils.expression/abstract?",-1222068578,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"abstract?","abstract?",1420943811,null),"sicmutils/expression.cljc",16,1,146,146,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is both a [[Literal]] and has a type specified\n  in [[abstract-types]], false otherwise.",(cljs.core.truth_(sicmutils.expression.abstract_QMARK_)?sicmutils.expression.abstract_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sort"),new cljs.core.Var(function(){return sicmutils.expression.sort;},new cljs.core.Symbol("sicmutils.expression","sort","sicmutils.expression/sort",2014718288,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"sort","sort",-1700969851,null),"sicmutils/expression.cljc",11,1,286,286,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(sicmutils.expression.sort)?sicmutils.expression.sort.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Literal"),new cljs.core.Var(function(){return sicmutils.expression.Literal;},new cljs.core.Symbol("sicmutils.expression","Literal","sicmutils.expression/Literal",-585210406,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/expression.cljc",new cljs.core.Keyword(null,"line","line",212345235),34,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Literal","Literal",998711045,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.expression.Literal)?sicmutils.expression.Literal.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("variables-in"),new cljs.core.Var(function(){return sicmutils.expression.variables_in;},new cljs.core.Symbol("sicmutils.expression","variables-in","sicmutils.expression/variables-in",712499161,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"variables-in","variables-in",-1894872826,null),"sicmutils/expression.cljc",19,1,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Return the set of 'variables' (e.g. symbols) found in `expr`.\n\n  `expr` is either a symbol, a [[Literal]] instance or some sequence\n  representing a symbolic expression.",(cljs.core.truth_(sicmutils.expression.variables_in)?sicmutils.expression.variables_in.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pe"),new cljs.core.Var(function(){return sicmutils.expression.pe;},new cljs.core.Symbol("sicmutils.expression","pe","sicmutils.expression/pe",-1406606986,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"pe","pe",-876735477,null),"sicmutils/expression.cljc",8,1,315,315,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.pe)?sicmutils.expression.pe.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-apply"),new cljs.core.Var(function(){return sicmutils.expression.literal_apply;},new cljs.core.Symbol("sicmutils.expression","literal-apply","sicmutils.expression/literal-apply",1090314960,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"literal-apply","literal-apply",-411755029,null),"sicmutils/expression.cljc",20,1,124,124,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"op","op",-242456428,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Similar to [[make-literal]], but accepts:\n\n  - some operation\n  - the arguments to which it applies\n\n  Similar to `clojure.core/apply`.\n\n  For example:\n\n  ```clojure\n  (literal-apply ::numeric 'cos [1 2 3])\n  ;;=> (cos 1 2 3)\n  ```",(cljs.core.truth_(sicmutils.expression.literal_apply)?sicmutils.expression.literal_apply.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evaluate"),new cljs.core.Var(function(){return sicmutils.expression.evaluate;},new cljs.core.Symbol("sicmutils.expression","evaluate","sicmutils.expression/evaluate",-653567495,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"evaluate","evaluate",-1129217332,null),"sicmutils/expression.cljc",15,1,195,195,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"sym->var","sym->var",-1699261063,null),new cljs.core.Symbol(null,"sym->f","sym->f",-671768860,null)], null)),"Walk the unwrapped expression `expr` in postorder, replacing symbols found\n  there with their values in the `sym->var` mapping, if present.\n\n  `sym->f` is used for elements in function application position (first of a\n  sequence).",(cljs.core.truth_(sicmutils.expression.evaluate)?sicmutils.expression.evaluate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->string"),new cljs.core.Var(function(){return sicmutils.expression.expression__GT_string;},new cljs.core.Symbol("sicmutils.expression","expression->string","sicmutils.expression/expression->string",-1517749130,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"expression->string","expression->string",-956224851,null),"sicmutils/expression.cljc",25,1,304,304,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Returns a string representation of a frozen, simplified version of the supplied\n  expression `expr`.",(cljs.core.truth_(sicmutils.expression.expression__GT_string)?sicmutils.expression.expression__GT_string.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Literal"),new cljs.core.Var(function(){return sicmutils.expression.__GT_Literal;},new cljs.core.Symbol("sicmutils.expression","->Literal","sicmutils.expression/->Literal",1602880309,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IComparable","cljs.core/IComparable",1166626940,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("sicmutils.value","Numerical","sicmutils.value/Numerical",345532223,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"->Literal","->Literal",-67051922,null),"sicmutils/expression.cljc",17,1,new cljs.core.Keyword(null,"positional","positional",-203580463),34,34,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"expression","expression",1842843403,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IComparable","cljs.core/IComparable",1166626940,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.expression/Literal.",(cljs.core.truth_(sicmutils.expression.__GT_Literal)?sicmutils.expression.__GT_Literal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression-of"),new cljs.core.Var(function(){return sicmutils.expression.expression_of;},new cljs.core.Symbol("sicmutils.expression","expression-of","sicmutils.expression/expression-of",-1916089669,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"expression-of","expression-of",1790811504,null),"sicmutils/expression.cljc",20,1,171,171,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"If the supplied argument is a [[Literal]] (or a symbol, interpreted elsewhere\n  as a numerical literal expression), returns the wrapped expression (or the\n  symbol).\n\n  Else, returns `expr`.",(cljs.core.truth_(sicmutils.expression.expression_of)?sicmutils.expression.expression_of.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sorted?"),new cljs.core.Var(function(){return sicmutils.expression.sorted_QMARK_;},new cljs.core.Symbol("sicmutils.expression","sorted?","sicmutils.expression/sorted?",1756282479,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"sorted?","sorted?",892797714,null),"sicmutils/expression.cljc",14,1,280,280,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(sicmutils.expression.sorted_QMARK_)?sicmutils.expression.sorted_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("print-expression"),new cljs.core.Var(function(){return sicmutils.expression.print_expression;},new cljs.core.Symbol("sicmutils.expression","print-expression","sicmutils.expression/print-expression",152597824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"print-expression","print-expression",1826868853,null),"sicmutils/expression.cljc",23,1,311,311,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(sicmutils.expression.print_expression)?sicmutils.expression.print_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal?"),new cljs.core.Var(function(){return sicmutils.expression.literal_QMARK_;},new cljs.core.Symbol("sicmutils.expression","literal?","sicmutils.expression/literal?",-1472080413,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"literal?","literal?",1993017398,null),"sicmutils/expression.cljc",15,1,141,141,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is a [[Literal]] instance, false otherwise.",(cljs.core.truth_(sicmutils.expression.literal_QMARK_)?sicmutils.expression.literal_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-type"),new cljs.core.Var(function(){return sicmutils.expression.literal_type;},new cljs.core.Symbol("sicmutils.expression","literal-type","sicmutils.expression/literal-type",115492989,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"literal-type","literal-type",-1586719306,null),"sicmutils/expression.cljc",19,1,154,154,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"If `x` is a [[Literal]] instance, returns its type. Else, returns nil.",(cljs.core.truth_(sicmutils.expression.literal_type)?sicmutils.expression.literal_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expression->stream"),new cljs.core.Var(function(){return sicmutils.expression.expression__GT_stream;},new cljs.core.Symbol("sicmutils.expression","expression->stream","sicmutils.expression/expression->stream",-807767826,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"expression->stream","expression->stream",1834298297,null),"sicmutils/expression.cljc",25,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,293,293,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"stream","stream",-1119494121,null),new cljs.core.Symbol(null,"options","options",1740170016,null)], null)),"Renders an expression through the simplifier and onto the stream.",(cljs.core.truth_(sicmutils.expression.expression__GT_stream)?sicmutils.expression.expression__GT_stream.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-literal"),new cljs.core.Var(function(){return sicmutils.expression.make_literal;},new cljs.core.Symbol("sicmutils.expression","make-literal","sicmutils.expression/make-literal",-1756793945,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"make-literal","make-literal",886054236,null),"sicmutils/expression.cljc",19,1,118,118,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"type","type",-1480165421,null),new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Constructs a [[Literal]] instance with the supplied type and an empty metadata\n  map out of the literal form `expr`.",(cljs.core.truth_(sicmutils.expression.make_literal)?sicmutils.expression.make_literal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fmap"),new cljs.core.Var(function(){return sicmutils.expression.fmap;},new cljs.core.Symbol("sicmutils.expression","fmap","sicmutils.expression/fmap",-1512249239,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"fmap","fmap",55293788,null),"sicmutils/expression.cljc",11,1,160,160,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,"e","e",-1273166571,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"Literal","Literal",998711045,null)], null))], null)),"Returns a [[Literal]] generated by applying `f` to the expression part of\n  `e`.\n\n  [[literal-type]] and [[meta]] will return the same thing for `e` and the\n  return value.",(cljs.core.truth_(sicmutils.expression.fmap)?sicmutils.expression.fmap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compare"),new cljs.core.Var(function(){return sicmutils.expression.compare;},new cljs.core.Symbol("sicmutils.expression","compare","sicmutils.expression/compare",801012978,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"compare","compare",1109853757,null),"sicmutils/expression.cljc",14,1,229,229,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"l","l",-1258542346,null),new cljs.core.Symbol(null,"r","r",1169147337,null)], null)),"Comparator for expressions. The rule is that types have the following ordering:\n\n  - empty sequence is < anything (except another empty seq)\n  - real < symbol < string < sequence\n  - sequences compare element-by-element\n\n  Any types _not_ in this list compare with the other type using hashes.",(cljs.core.truth_(sicmutils.expression.compare)?sicmutils.expression.compare.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("abstract-types"),new cljs.core.Var(function(){return sicmutils.expression.abstract_types;},new cljs.core.Symbol("sicmutils.expression","abstract-types","sicmutils.expression/abstract-types",252547016,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression","sicmutils.expression",-1995933349,null),new cljs.core.Symbol(null,"abstract-types","abstract-types",-373599555,null),"sicmutils/expression.cljc",17,1,19,21,cljs.core.List.EMPTY,"These keywords reference 'abstract' types that stand in for some\n  concrete data type in the system.",(cljs.core.truth_(sicmutils.expression.abstract_types)?sicmutils.expression.abstract_types.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("boost-direction"),new cljs.core.Var(function(){return sicmutils.sr.frames.boost_direction;},new cljs.core.Symbol("sicmutils.sr.frames","boost-direction","sicmutils.sr.frames/boost-direction",2072551897,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"boost-direction","boost-direction",-335370591,null),"sicmutils/sr/frames.cljc",22,1,93,93,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame","frame",-70551061,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.boost_direction)?sicmutils.sr.frames.boost_direction.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("base-frame-point"),new cljs.core.Var(function(){return sicmutils.sr.frames.base_frame_point;},new cljs.core.Symbol("sicmutils.sr.frames","base-frame-point","sicmutils.sr.frames/base-frame-point",-1648977174,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"base-frame-point","base-frame-point",908107138,null),"sicmutils/sr/frames.cljc",23,1,75,75,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"this-frame","this-frame",797029280,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.base_frame_point)?sicmutils.sr.frames.base_frame_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-origin"),new cljs.core.Var(function(){return sicmutils.sr.frames.coordinate_origin;},new cljs.core.Symbol("sicmutils.sr.frames","coordinate-origin","sicmutils.sr.frames/coordinate-origin",682564508,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"coordinate-origin","coordinate-origin",-1339747644,null),"sicmutils/sr/frames.cljc",24,1,99,99,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame","frame",-70551061,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.coordinate_origin)?sicmutils.sr.frames.coordinate_origin.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add-velocities"),new cljs.core.Var(function(){return sicmutils.sr.frames.add_velocities;},new cljs.core.Symbol("sicmutils.sr.frames","add-velocities","sicmutils.sr.frames/add-velocities",-878206610,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"add-velocities","add-velocities",1395500614,null),"sicmutils/sr/frames.cljc",21,1,106,106,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v1","v1",-2141311508,null),new cljs.core.Symbol(null,"v2","v2",1875554983,null)], null)),"velocities must be in meters/second, since we don't yet have units support.",(cljs.core.truth_(sicmutils.sr.frames.add_velocities)?sicmutils.sr.frames.add_velocities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("base-frame-chart"),new cljs.core.Var(function(){return sicmutils.sr.frames.base_frame_chart;},new cljs.core.Symbol("sicmutils.sr.frames","base-frame-chart","sicmutils.sr.frames/base-frame-chart",1454418526,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"base-frame-chart","base-frame-chart",1026208390,null),"sicmutils/sr/frames.cljc",23,1,82,82,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"this-frame","this-frame",797029280,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.base_frame_chart)?sicmutils.sr.frames.base_frame_chart.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SR-name"),new cljs.core.Var(function(){return sicmutils.sr.frames.SR_name;},new cljs.core.Symbol("sicmutils.sr.frames","SR-name","sicmutils.sr.frames/SR-name",-1883815869,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"SR-name","SR-name",1611225963,null),"sicmutils/sr/frames.cljc",14,1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.SR_name)?sicmutils.sr.frames.SR_name.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("v:c"),new cljs.core.Var(function(){return sicmutils.sr.frames.v_COLON_c;},new cljs.core.Symbol("sicmutils.sr.frames","v:c","sicmutils.sr.frames/v:c",-595961338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"v:c","v:c",1270894894,null),"sicmutils/sr/frames.cljc",10,1,96,96,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame","frame",-70551061,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.v_COLON_c)?sicmutils.sr.frames.v_COLON_c.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-SR-frame"),new cljs.core.Var(function(){return sicmutils.sr.frames.make_SR_frame;},new cljs.core.Symbol("sicmutils.sr.frames","make-SR-frame","sicmutils.sr.frames/make-SR-frame",1877793991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"make-SR-frame","make-SR-frame",-949574673,null),"sicmutils/sr/frames.cljc",22,3,67,67,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"ancestor-frame","ancestor-frame",-1796645653,null),new cljs.core.Symbol(null,"boost-direction","boost-direction",-335370591,null),new cljs.core.Symbol(null,"v-over-c","v-over-c",275370392,null),new cljs.core.Symbol(null,"origin","origin",-1617063681,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.make_SR_frame)?sicmutils.sr.frames.make_SR_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("base-frame-maker"),new cljs.core.Var(function(){return sicmutils.sr.frames.base_frame_maker;},new cljs.core.Symbol("sicmutils.sr.frames","base-frame-maker","sicmutils.sr.frames/base-frame-maker",608642266,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"base-frame-maker","base-frame-maker",-1120850446,null),"sicmutils/sr/frames.cljc",22,1,87,87,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.sr.frames.base_frame_maker)?sicmutils.sr.frames.base_frame_maker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("the-ether"),new cljs.core.Var(function(){return sicmutils.sr.frames.the_ether;},new cljs.core.Symbol("sicmutils.sr.frames","the-ether","sicmutils.sr.frames/the-ether",-2012264597,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"the-ether","the-ether",-259961165,null),"sicmutils/sr/frames.cljc",15,1,90,90,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.sr.frames.the_ether)?sicmutils.sr.frames.the_ether.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SR-coordinates?"),new cljs.core.Var(function(){return sicmutils.sr.frames.SR_coordinates_QMARK_;},new cljs.core.Symbol("sicmutils.sr.frames","SR-coordinates?","sicmutils.sr.frames/SR-coordinates?",1292631564,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"SR-coordinates?","SR-coordinates?",-159254540,null),"sicmutils/sr/frames.cljc",22,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.SR_coordinates_QMARK_)?sicmutils.sr.frames.SR_coordinates_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add-v:cs"),new cljs.core.Var(function(){return sicmutils.sr.frames.add_v_COLON_cs;},new cljs.core.Symbol("sicmutils.sr.frames","add-v:cs","sicmutils.sr.frames/add-v:cs",-1602816430,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"add-v:cs","add-v:cs",939327354,null),"sicmutils/sr/frames.cljc",15,1,102,102,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v1:c","v1:c",-1611587706,null),new cljs.core.Symbol(null,"v2:c","v2:c",1724311857,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.add_v_COLON_cs)?sicmutils.sr.frames.add_v_COLON_cs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-SR-coordinates"),new cljs.core.Var(function(){return sicmutils.sr.frames.make_SR_coordinates;},new cljs.core.Symbol("sicmutils.sr.frames","make-SR-coordinates","sicmutils.sr.frames/make-SR-coordinates",1712800164,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.sr.frames","sicmutils.sr.frames",-1306881265,null),new cljs.core.Symbol(null,"make-SR-coordinates","make-SR-coordinates",-22454532,null),"sicmutils/sr/frames.cljc",26,1,27,27,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame","frame",-70551061,null),new cljs.core.Symbol(null,"four-tuple","four-tuple",1220782365,null)], null)),null,(cljs.core.truth_(sicmutils.sr.frames.make_SR_coordinates)?sicmutils.sr.frames.make_SR_coordinates.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-fn"),new cljs.core.Var(function(){return sicmutils.expression.compile.compile_fn;},new cljs.core.Symbol("sicmutils.expression.compile","compile-fn","sicmutils.expression.compile/compile-fn",914062990,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compile-fn","compile-fn",-1899745280,null),"sicmutils/expression/compile.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1089,1089,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Memoized version of [[compile-fn*]]. See that function's docs for more detail.\n\n  NOTE: that this function makes use of a global compilation cache, keyed by the\n  vector `[f n *mode*]`. See `compile-fn*` to avoid the cache.",(cljs.core.truth_(sicmutils.expression.compile.compile_fn)?sicmutils.expression.compile.compile_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("js-renames"),new cljs.core.Var(function(){return sicmutils.expression.compile.js_renames;},new cljs.core.Symbol("sicmutils.expression.compile","js-renames","sicmutils.expression.compile/js-renames",1079769295,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"js-renames","js-renames",682893889,null),"sicmutils/expression/compile.cljc",16,1,846,846,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.compile.js_renames)?sicmutils.expression.compile.js_renames.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("input-array-checker"),new cljs.core.Var(function(){return sicmutils.expression.compile.input_array_checker;},new cljs.core.Symbol("sicmutils.expression.compile","input-array-checker","sicmutils.expression.compile/input-array-checker",1557596958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"input-array-checker","input-array-checker",-2068135548,null),"sicmutils/expression/compile.cljc",26,1,99,99,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"result","result",-1239343558,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null))], null)),null,(cljs.core.truth_(sicmutils.expression.compile.input_array_checker)?sicmutils.expression.compile.input_array_checker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-fn*"),new cljs.core.Var(function(){return sicmutils.expression.compile.compile_fn_STAR_;},new cljs.core.Symbol("sicmutils.expression.compile","compile-fn*","sicmutils.expression.compile/compile-fn*",-1934097842,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compile-fn*","compile-fn*",-737425208,null),"sicmutils/expression/compile.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1061,1061,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a compiled, simplified version of `f`, given a function `f` of arity\n  `n` (ie, able to accept `n` symbolic arguments).\n\n  `n` defaults to `([[f/arity]] f)`.\n\n  The returned, compiled function expects `n` `Double` (or `js/Number`)\n  arguments. The function body is simplified and all common subexpressions\n  identified during compilation are extracted and computed only once.\n\n  NOTE: this function uses no cache. To take advantage of the global compilation\n  cache, see `compile-fn`.",(cljs.core.truth_(sicmutils.expression.compile.compile_fn_STAR_)?sicmutils.expression.compile.compile_fn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("set-compiler-mode!"),new cljs.core.Var(function(){return sicmutils.expression.compile.set_compiler_mode_BANG_;},new cljs.core.Symbol("sicmutils.expression.compile","set-compiler-mode!","sicmutils.expression.compile/set-compiler-mode!",1786683298,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"set-compiler-mode!","set-compiler-mode!",-768746968,null),"sicmutils/expression/compile.cljc",25,1,540,540,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null)),"Set the default compilation mode by supplying an entry from [[valid-modes]].",(cljs.core.truth_(sicmutils.expression.compile.set_compiler_mode_BANG_)?sicmutils.expression.compile.set_compiler_mode_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->argv"),new cljs.core.Var(function(){return sicmutils.expression.compile.state__GT_argv;},new cljs.core.Symbol("sicmutils.expression.compile","state->argv","sicmutils.expression.compile/state->argv",-84972046,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"state->argv","state->argv",-1566825912,null),"sicmutils/expression/compile.cljc",18,1,688,688,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state","state",-348086572,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null)], null)),"Given a (structural) initial `state` and a `gensym-fn` function from symbol =>\n  generated symbol walks the structure and converts all structures to vectors\n  and all non-structural elements to gensymmed symbols.",(cljs.core.truth_(sicmutils.expression.compile.state__GT_argv)?sicmutils.expression.compile.state__GT_argv.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->js-output"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_js_output;},new cljs.core.Symbol("sicmutils.expression.compile","->js-output","sicmutils.expression.compile/->js-output",1622988022,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->js-output","->js-output",-924316856,null),"sicmutils/expression/compile.cljc",27,1,722,722,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"body","body",-408674142,null),new cljs.core.Symbol(null,"output","output",534662484,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_js_output)?sicmutils.expression.compile.__GT_js_output.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-js"),new cljs.core.Var(function(){return sicmutils.expression.compile.compile_js;},new cljs.core.Symbol("sicmutils.expression.compile","compile-js","sicmutils.expression.compile/compile-js",-1834189321,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compile-js","compile-js",-893335991,null),"sicmutils/expression/compile.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,950,950,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.compile_js)?sicmutils.expression.compile.compile_js.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compiler-mode"),new cljs.core.Var(function(){return sicmutils.expression.compile.compiler_mode;},new cljs.core.Symbol("sicmutils.expression.compile","compiler-mode","sicmutils.expression.compile/compiler-mode",454302319,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compiler-mode","compiler-mode",-1594269719,null),"sicmutils/expression/compile.cljc",20,1,534,534,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Validates and returns the dynamically bound compilation [[*mode*]].\n  Throws on an invalid setting.",(cljs.core.truth_(sicmutils.expression.compile.compiler_mode)?sicmutils.expression.compile.compiler_mode.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-state-fn"),new cljs.core.Var(function(){return sicmutils.expression.compile.compile_state_fn;},new cljs.core.Symbol("sicmutils.expression.compile","compile-state-fn","sicmutils.expression.compile/compile-state-fn",1460262566,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compile-state-fn","compile-state-fn",-2216916,null),"sicmutils/expression/compile.cljc",23,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,810,810,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Version of [[compile-state-fn*]] memoized on the `f` parameter only.\n  See that function's docs for more detail.\n\n  NOTE that this function makes use of a global compilation cache, keyed by the\n  value of `f`. Passing in the same `f` twice, even with different arguments for\n  `prototype`, `opts` and different compilation modes, will return the cached\n  value. See `compile-state-fn*` to avoid the cache.",(cljs.core.truth_(sicmutils.expression.compile.compile_state_fn)?sicmutils.expression.compile.compile_state_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("apply-numeric-ops"),new cljs.core.Var(function(){return sicmutils.expression.compile.apply_numeric_ops;},new cljs.core.Symbol("sicmutils.expression.compile","apply-numeric-ops","sicmutils.expression.compile/apply-numeric-ops",1518726742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"apply-numeric-ops","apply-numeric-ops",49883596,null),"sicmutils/expression/compile.cljc",33,1,480,480,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"body","body",-408674142,null)], null)),"Takes a function body and returns a new body with all numeric operations\n  like `(/ 1 2)` evaluated and all numerical literals converted to `double` or\n  `js/Number`.\n\n  TODO expand this??",(cljs.core.truth_(sicmutils.expression.compile.apply_numeric_ops)?sicmutils.expression.compile.apply_numeric_ops.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->input-array-param"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_input_array_param;},new cljs.core.Symbol("sicmutils.expression.compile","->input-array-param","sicmutils.expression.compile/->input-array-param",-267569437,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->input-array-param","->input-array-param",-1468466323,null),"sicmutils/expression/compile.cljc",26,1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"g","g",-916345864,null),cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"out","out",729986010,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null))], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_input_array_param)?sicmutils.expression.compile.__GT_input_array_param.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sortable-gensym"),new cljs.core.Var(function(){return sicmutils.expression.compile.sortable_gensym;},new cljs.core.Symbol("sicmutils.expression.compile","sortable-gensym","sicmutils.expression.compile/sortable-gensym",1265669557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"sortable-gensym","sortable-gensym",-1557931985,null),"sicmutils/expression/compile.cljc",21,1,364,364,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.compile.sortable_gensym)?sicmutils.expression.compile.sortable_gensym.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vec-checker"),new cljs.core.Var(function(){return sicmutils.expression.compile.vec_checker;},new cljs.core.Symbol("sicmutils.expression.compile","vec-checker","sicmutils.expression.compile/vec-checker",-1729814347,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"vec-checker","vec-checker",810610479,null),"sicmutils/expression/compile.cljc",18,1,89,89,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arr","arr",2115492975,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.vec_checker)?sicmutils.expression.compile.vec_checker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("array-bindings"),new cljs.core.Var(function(){return sicmutils.expression.compile.array_bindings;},new cljs.core.Symbol("sicmutils.expression.compile","array-bindings","sicmutils.expression.compile/array-bindings",-2104668005,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"array-bindings","array-bindings",1965069585,null),"sicmutils/expression/compile.cljc",30,1,621,621,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vs","vs",-381565563,null),new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.Symbol(null,"inputs","inputs",-1788631911,null)], null)),"vs is the variables actually used",(cljs.core.truth_(sicmutils.expression.compile.array_bindings)?sicmutils.expression.compile.array_bindings.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("struct->array"),new cljs.core.Var(function(){return sicmutils.expression.compile.struct__GT_array;},new cljs.core.Symbol("sicmutils.expression.compile","struct->array","sicmutils.expression.compile/struct->array",431402076,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"struct->array","struct->array",-1312560430,null),"sicmutils/expression/compile.cljc",29,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"output","output",534662484,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"output","output",534662484,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,460,460,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"output","output",534662484,null)], null)),"Converts a structure to array lookups.",(cljs.core.truth_(sicmutils.expression.compile.struct__GT_array)?sicmutils.expression.compile.struct__GT_array.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("valid-modes"),new cljs.core.Var(function(){return sicmutils.expression.compile.valid_modes;},new cljs.core.Symbol("sicmutils.expression.compile","valid-modes","sicmutils.expression.compile/valid-modes",1741801545,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"valid-modes","valid-modes",-813432109,null),"sicmutils/expression/compile.cljc",14,1,518,519,cljs.core.List.EMPTY,"Set of all supported compilation modes.",(cljs.core.truth_(sicmutils.expression.compile.valid_modes)?sicmutils.expression.compile.valid_modes.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->input-array"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_input_array;},new cljs.core.Symbol("sicmutils.expression.compile","->input-array","sicmutils.expression.compile/->input-array",-256510887,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->input-array","->input-array",-1738125613,null),"sicmutils/expression/compile.cljc",20,1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"out","out",729986010,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null))], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_input_array)?sicmutils.expression.compile.__GT_input_array.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->array"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_array;},new cljs.core.Symbol("sicmutils.expression.compile","->array","sicmutils.expression.compile/->array",222977906,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->array","->array",-1510370828,null),"sicmutils/expression/compile.cljc",14,1,39,39,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null))], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_array)?sicmutils.expression.compile.__GT_array.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("validate-mode!"),new cljs.core.Var(function(){return sicmutils.expression.compile.validate_mode_BANG_;},new cljs.core.Symbol("sicmutils.expression.compile","validate-mode!","sicmutils.expression.compile/validate-mode!",-583620533,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"validate-mode!","validate-mode!",-1971203371,null),"sicmutils/expression/compile.cljc",21,1,522,522,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null)),"Given a keyword `mode` specifying a compilation mode, returns `mode` if valid,\n  and throws otherwise.",(cljs.core.truth_(sicmutils.expression.compile.validate_mode_BANG_)?sicmutils.expression.compile.validate_mode_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->output"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_output;},new cljs.core.Symbol("sicmutils.expression.compile","->output","sicmutils.expression.compile/->output",232524674,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->output","->output",-712921064,null),"sicmutils/expression/compile.cljc",24,1,713,713,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"body","body",-408674142,null),new cljs.core.Symbol(null,"output","output",534662484,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_output)?sicmutils.expression.compile.__GT_output.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("flatten-structs"),new cljs.core.Var(function(){return sicmutils.expression.compile.flatten_structs;},new cljs.core.Symbol("sicmutils.expression.compile","flatten-structs","sicmutils.expression.compile/flatten-structs",-1686413114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"flatten-structs","flatten-structs",-1030836904,null),"sicmutils/expression/compile.cljc",22,1,706,706,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.flatten_structs)?sicmutils.expression.compile.flatten_structs.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vec->vec"),new cljs.core.Var(function(){return sicmutils.expression.compile.vec__GT_vec;},new cljs.core.Symbol("sicmutils.expression.compile","vec->vec","sicmutils.expression.compile/vec->vec",1476393382,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"vec->vec","vec->vec",-299191496,null),"sicmutils/expression/compile.cljc",15,1,36,36,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"theta","theta",1213021269,null),new cljs.core.Symbol(null,"thetadot","thetadot",1584260463,null)], null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.vec__GT_vec)?sicmutils.expression.compile.vec__GT_vec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compile-state-fn*"),new cljs.core.Var(function(){return sicmutils.expression.compile.compile_state_fn_STAR_;},new cljs.core.Symbol("sicmutils.expression.compile","compile-state-fn*","sicmutils.expression.compile/compile-state-fn*",-2125194669,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"compile-state-fn*","compile-state-fn*",1496898777,null),"sicmutils/expression/compile.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,742,742,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"parameters","parameters",410611779,null),new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"mode","mode",-2000032078,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"gensym-fn","gensym-fn",757045695,null),new cljs.core.Symbol(null,"gensym","gensym",-1693147401,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Returns a compiled, simplified function with signature `(f state params)`,\n  given:\n\n  - a (possibly parametric) function `f` of state => state that can accept a\n    symbolic arguments\n\n  - `prototype`: Some structure of the same shape as the argument expected by\n    the fn returned by the state function `f`. Only the shape matters; the values\n    are ignored.\n\n  - an optional argument `opts`. Options accepted are:\n\n    - `:flatten?`: if `true` (default), the returned function will have\n      signature `(f <flattened-state> [params])`. If `false`, the first arg of the\n      returned function will be expected to have the same shape as `initial-state`.\n\n    - `:parameters`; Prototype of params TODO more details\n\n      any sequence of count equal to the number of arguments taken by `f`. The\n      values are ignored. TODO EDIT:: if `true` (default), the returned function\n      will take a second argument for the parameters of the state derivative and\n      keep params generic. If false, the returned function will take a single state\n      argument, and the supplied params will be hardcoded.\n\n    - `:genysym-fn`:\n\n    - `:mode`: Explicitly set the compilation mode to one of the values\n      in [[valid-modes]]. Explicit alternative to dynamically binding [[*mode*]].\n\n  The returned, compiled function expects all `Double` (or `js/Number`) for all\n  state primitives. The function body is simplified and all common\n  subexpressions identified during compilation are extracted and computed only\n  once.\n\n  NOTE this function uses no cache. To take advantage of the global compilation\n  cache, see `compile-state-fn`.",(cljs.core.truth_(sicmutils.expression.compile.compile_state_fn_STAR_)?sicmutils.expression.compile.compile_state_fn_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("js-handlers"),new cljs.core.Var(function(){return sicmutils.expression.compile.js_handlers;},new cljs.core.Symbol("sicmutils.expression.compile","js-handlers","sicmutils.expression.compile/js-handlers",-147773177,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"js-handlers","js-handlers",-1612290151,null),"sicmutils/expression/compile.cljc",17,1,889,889,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.compile.js_handlers)?sicmutils.expression.compile.js_handlers.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*mode*"),new cljs.core.Var(function(){return sicmutils.expression.compile._STAR_mode_STAR_;},new cljs.core.Symbol("sicmutils.expression.compile","*mode*","sicmutils.expression.compile/*mode*",1641402640,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"*mode*","*mode*",-1741124710,null),"sicmutils/expression/compile.cljc",9,1,true,512,514,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.compile._STAR_mode_STAR_)?sicmutils.expression.compile._STAR_mode_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->js"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_js;},new cljs.core.Symbol("sicmutils.expression.compile","->js","sicmutils.expression.compile/->js",-881688938,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->js","->js",-1825590244,null),"sicmutils/expression/compile.cljc",13,3,914,914,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_js)?sicmutils.expression.compile.__GT_js.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("infix-set"),new cljs.core.Var(function(){return sicmutils.expression.compile.infix_set;},new cljs.core.Symbol("sicmutils.expression.compile","infix-set","sicmutils.expression.compile/infix-set",-892604874,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"infix-set","infix-set",303604924,null),"sicmutils/expression/compile.cljc",15,1,843,843,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.compile.infix_set)?sicmutils.expression.compile.infix_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sci-eval"),new cljs.core.Var(function(){return sicmutils.expression.compile.sci_eval;},new cljs.core.Symbol("sicmutils.expression.compile","sci-eval","sicmutils.expression.compile/sci-eval",-1318689770,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"sci-eval","sci-eval",-372056164,null),"sicmutils/expression/compile.cljc",15,1,613,613,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f-form","f-form",309693281,null)], null)),"Given an unevaluated source code form `f-form` representing a function,\n  evaluates `f-form` using the bindings in [[sci-context]].\n\n  Generate these forms by setting `*mode*` to `:source`.",(cljs.core.truth_(sicmutils.expression.compile.sci_eval)?sicmutils.expression.compile.sci_eval.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cse-form"),new cljs.core.Var(function(){return sicmutils.expression.compile.cse_form;},new cljs.core.Symbol("sicmutils.expression.compile","cse-form","sicmutils.expression.compile/cse-form",-1158228077,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"cse-form","cse-form",1386355741,null),"sicmutils/expression/compile.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,422,422,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Given a symbolic expression `expr`, returns a new expression potentially\n  wrapped in a `let` binding with one binding per extracted common\n  subexpression.\n\n  ## Optional Arguments TODO say `see blah for options`\n\n  `:symbol-generator`: side-effecting function that returns a new, unique symbol\n  on each invocation. These generated symbols are used to create unique binding\n  names for extracted subexpressions. `sortable-gensym` by default.\n\n  NOTE that the symbols should appear in sorted order! Otherwise we can't\n  guarantee that the binding sequence won't contain entries that reference\n  previous entries, resulting in \"Unable to resolve symbol\" errors.\n\n  `:deterministic?`: if true, the function will order the let-binding contents\n  by sorting the string representations of each term before assignment. If false\n  the function won't guarantee a consistent variable naming convention in the\n  returned function. For tests, we recommend `:deterministic? true`.",(cljs.core.truth_(sicmutils.expression.compile.cse_form)?sicmutils.expression.compile.cse_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->vec"),new cljs.core.Var(function(){return sicmutils.expression.compile.__GT_vec;},new cljs.core.Symbol("sicmutils.expression.compile","->vec","sicmutils.expression.compile/->vec",-652873979,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"->vec","->vec",1900063167,null),"sicmutils/expression/compile.cljc",12,1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"arr","arr",2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"doubles","doubles",-1517872169,null)], null))], null)),null,(cljs.core.truth_(sicmutils.expression.compile.__GT_vec)?sicmutils.expression.compile.__GT_vec.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extract-common-subexpressions"),new cljs.core.Var(function(){return sicmutils.expression.compile.extract_common_subexpressions;},new cljs.core.Symbol("sicmutils.expression.compile","extract-common-subexpressions","sicmutils.expression.compile/extract-common-subexpressions",1245679061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"extract-common-subexpressions","extract-common-subexpressions",-1840588961,null),"sicmutils/expression/compile.cljc",36,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"deterministic?","deterministic?",583354863,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"sortable-gensym","sortable-gensym",-1557931985,null)], null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"deterministic?","deterministic?",583354863,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"sortable-gensym","sortable-gensym",-1557931985,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,367,367,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"continue","continue",1433184974,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"deterministic?","deterministic?",583354863,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"symbol-generator","symbol-generator",-2079948609,null),new cljs.core.Symbol(null,"sortable-gensym","sortable-gensym",-1557931985,null)], null)], null)], null)),"Considers an S-expression from the point of view of optimizing its evaluation\n  by isolating common subexpressions into auxiliary variables.\n\n  Accepts:\n\n  - A symbolic expression `expr`\n  - a continuation fn `continue` of two arguments:\n    - a new equivalent expression with possibly some subexpressions replaced by\n      new variables (delivered by the supplied generator, see below)\n    - a seq of pairs of `[aux variable, subexpression]` used to reconstitute the\n      value.\n\n  Calls the continuation at completion and returns the continuation's value.\n\n  ### Optional Arguments\n\n  `:symbol-generator`: side-effecting function that returns a new, unique\n  variable name on each invocation. `sortable-gensym` by default.\n\n  NOTE that the symbols should appear in sorted order! Otherwise we can't\n  guarantee that the binding sequence passed to `continue` won't contain entries\n  that reference previous entries.\n\n  `:deterministic?`: if true, the function will assign aux variables by sorting\n  the string representations of each term before assignment. Otherwise, the\n  nondeterministic order of hash maps inside this function won't guarantee a\n  consistent variable naming convention in the returned function. For tests, set\n  `:deterministic? true`.",(cljs.core.truth_(sicmutils.expression.compile.extract_common_subexpressions)?sicmutils.expression.compile.extract_common_subexpressions.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("array-checker"),new cljs.core.Var(function(){return sicmutils.expression.compile.array_checker;},new cljs.core.Symbol("sicmutils.expression.compile","array-checker","sicmutils.expression.compile/array-checker",1910244985,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.compile","sicmutils.expression.compile",-550467460,null),new cljs.core.Symbol(null,"array-checker","array-checker",-644887553,null),"sicmutils/expression/compile.cljc",20,1,94,94,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"arr","arr",2115492975,null)], null)),null,(cljs.core.truth_(sicmutils.expression.compile.array_checker)?sicmutils.expression.compile.array_checker.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("antisymmetric?"),new cljs.core.Var(function(){return sicmutils.matrix.antisymmetric_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","antisymmetric?","sicmutils.matrix/antisymmetric?",-1342740734,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"antisymmetric?","antisymmetric?",-335784736,null),"sicmutils/matrix.cljc",21,1,1096,1096,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"Returns true if the supplied matrix `M` is equal to the negation of its own\n  transpose (ie, antisymmetric), false otherwise.",(cljs.core.truth_(sicmutils.matrix.antisymmetric_QMARK_)?sicmutils.matrix.antisymmetric_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cramers-rule"),new cljs.core.Var(function(){return sicmutils.matrix.cramers_rule;},new cljs.core.Symbol("sicmutils.matrix","cramers-rule","sicmutils.matrix/cramers-rule",699228386,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"cramers-rule","cramers-rule",-1785048704,null),"sicmutils/matrix.cljc",19,1,1130,1130,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"add","add",1875819266,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),new cljs.core.Symbol(null,"div","div",-1597244137,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null)], null)),"Given coefficient procedures `add`, `sub`, `mul`, `div` and `zero?`, returns a\n  procedure that efficiently computes the solution to an inhomogeneous system of\n  linear equations, `A*x=b`, where the matrix `A` and the column matrix `b` are\n  given. The returned procedure returns the column matrix `x`.\n\n  Unlike LU decomposition, Cramer's rule generalizes to symbolic solutions.\n\n  [[cramers-rule]] is useful for generating fast type-specific linear equation\n  solvers. See [[solve]] for a default using generic arithmetic.",(cljs.core.truth_(sicmutils.matrix.cramers_rule)?sicmutils.matrix.cramers_rule.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-diagonal"),new cljs.core.Var(function(){return sicmutils.matrix.make_diagonal;},new cljs.core.Symbol("sicmutils.matrix","make-diagonal","sicmutils.matrix/make-diagonal",-1975740477,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"make-diagonal","make-diagonal",-970636127,null),"sicmutils/matrix.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1059,1059,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given a single (sequential) argument `v`, returns the diagonal matrix of\n  order `(count v)` with the elements of the sequence `v` along the diagonal.\n\n  Given two arguments `n` and some constant `x`, returns a diagonal `n` by `n`\n  matrix with `x` in every entry of the diagonal.\n\n  `(make-diagonal <n> 1)` is equivalent to `(I n)`.",(cljs.core.truth_(sicmutils.matrix.make_diagonal)?sicmutils.matrix.make_diagonal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:solve-linear-left"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_solve_linear_left;},new cljs.core.Symbol("sicmutils.matrix","s:solve-linear-left","sicmutils.matrix/s:solve-linear-left",-1800557597,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:solve-linear-left","s:solve-linear-left",682916545,null),"sicmutils/matrix.cljc",26,1,1009,1009,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null),new cljs.core.Symbol(null,"product","product",-1290961512,null)], null)),null,(cljs.core.truth_(sicmutils.matrix.s_COLON_solve_linear_left)?sicmutils.matrix.s_COLON_solve_linear_left.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("num-rows"),new cljs.core.Var(function(){return sicmutils.matrix.num_rows;},new cljs.core.Symbol("sicmutils.matrix","num-rows","sicmutils.matrix/num-rows",-1239523417,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"num-rows","num-rows",2047176513,null),"sicmutils/matrix.cljc",15,1,210,210,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the number of rows of the supplied matrix `m`. Throws if a\n  non-matrix is supplied.",(cljs.core.truth_(sicmutils.matrix.num_rows)?sicmutils.matrix.num_rows.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("diagonal?"),new cljs.core.Var(function(){return sicmutils.matrix.diagonal_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","diagonal?","sicmutils.matrix/diagonal?",868076195,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"diagonal?","diagonal?",2008193921,null),"sicmutils/matrix.cljc",16,1,1075,1075,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if `m` is a diagonal matrix (ie, a square matrix where every\n  non-diagonal element is zero), false otherwise.",(cljs.core.truth_(sicmutils.matrix.diagonal_QMARK_)?sicmutils.matrix.diagonal_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rsolve"),new cljs.core.Var(function(){return sicmutils.matrix.rsolve;},new cljs.core.Symbol("sicmutils.matrix","rsolve","sicmutils.matrix/rsolve",-1035978718,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"rsolve","rsolve",108587268,null),"sicmutils/matrix.cljc",13,1,1168,1168,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"A","A",-48410867,null)], null)),"Generalization of [[solve]] that can handle `up` and `down` structures, as well\n  as `row` and `column` matrices.\n\n  Given `row` or `down` values for `b`, `A` is appropriately transposed before\n  solving.",(cljs.core.truth_(sicmutils.matrix.rsolve)?sicmutils.matrix.rsolve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("classical-adjoint-formula"),new cljs.core.Var(function(){return sicmutils.matrix.classical_adjoint_formula;},new cljs.core.Symbol("sicmutils.matrix","classical-adjoint-formula","sicmutils.matrix/classical-adjoint-formula",669991203,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"classical-adjoint-formula","classical-adjoint-formula",-471551995,null),"sicmutils/matrix.cljc",32,1,959,959,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"add","add",1875819266,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),new cljs.core.Symbol(null,"div","div",-1597244137,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null)], null)),"Given coefficient procedures `add`, `sub`, `mul` and `zero?`, returns a\n  procedure that efficiently computes the inverse of the supplied square\n  matrix `m`.\n\n  [[classical-adjoint-formula]] is useful for generating fast type-specific\n  matrix inversion routines. See [[invert]] for a default using generic\n  arithmetic.",(cljs.core.truth_(sicmutils.matrix.classical_adjoint_formula)?sicmutils.matrix.classical_adjoint_formula.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity?"),new cljs.core.Var(function(){return sicmutils.matrix.identity_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","identity?","sicmutils.matrix/identity?",210020775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"identity?","identity?",-1064576891,null),"sicmutils/matrix.cljc",16,1,1045,1045,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if the supplied matrix `m` is an identity matrix, false\n  otherwise.",(cljs.core.truth_(sicmutils.matrix.identity_QMARK_)?sicmutils.matrix.identity_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cofactors"),new cljs.core.Var(function(){return sicmutils.matrix.cofactors;},new cljs.core.Symbol("sicmutils.matrix","cofactors","sicmutils.matrix/cofactors",-1733493817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"cofactors","cofactors",-589984987,null),"sicmutils/matrix.cljc",16,1,941,941,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the matrix of cofactors of the supplied square matrix `m`.",(cljs.core.truth_(sicmutils.matrix.cofactors)?sicmutils.matrix.cofactors.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down->row-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.down__GT_row_matrix;},new cljs.core.Symbol("sicmutils.matrix","down->row-matrix","sicmutils.matrix/down->row-matrix",691484452,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"down->row-matrix","down->row-matrix",1694498822,null),"sicmutils/matrix.cljc",23,1,703,703,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns a row matrix with the contents of the supplied `down` structure.\n  Errors if any other type is provided.",(cljs.core.truth_(sicmutils.matrix.down__GT_row_matrix)?sicmutils.matrix.down__GT_row_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nth-col"),new cljs.core.Var(function(){return sicmutils.matrix.nth_col;},new cljs.core.Symbol("sicmutils.matrix","nth-col","sicmutils.matrix/nth-col",1384062080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"nth-col","nth-col",510012518,null),"sicmutils/matrix.cljc",14,1,668,668,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the `n`-th column of the supplied matrix `m` as an `up` structure.",(cljs.core.truth_(sicmutils.matrix.nth_col)?sicmutils.matrix.nth_col.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("invert"),new cljs.core.Var(function(){return sicmutils.matrix.invert;},new cljs.core.Symbol("sicmutils.matrix","invert","sicmutils.matrix/invert",-92467964,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"invert","invert",-1100858266,null),"sicmutils/matrix.cljc",9,1,980,982,cljs.core.List.EMPTY,"Returns the inverse of the supplied square matrix `m`.",(cljs.core.truth_(sicmutils.matrix.invert)?sicmutils.matrix.invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:invert"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_invert;},new cljs.core.Symbol("sicmutils.matrix","s:invert","sicmutils.matrix/s:invert",-1896771196,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:invert","s:invert",-889536282,null),"sicmutils/matrix.cljc",15,1,802,802,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given some 2-tensor `s` (a 'square' nested structure), returns a structure\n  that represents the multiplicative inverse of the supplied structure. The\n  inner and outer structure orientations of `(s:invert s)` are the SAME as `s`.\n\n  If `s` is an up-of-downs or down-of-ups, `(g/* s (s:invert s))`\n  and `(g/* (s:invert s) s)` will evaluate to an identity-matrix-shaped\n  up-of-downs or down-of-ups.\n\n  If `s` is an up-of-ups or down-of-downs, multiplying `s` `(s:invert s)` will\n  result in a scalar, as both structures collapse.\n\n  NOTE: I DO NOT yet understand the meaning of this scalar! If you do, please\n  open a pull request and explain it here.",(cljs.core.truth_(sicmutils.matrix.s_COLON_invert)?sicmutils.matrix.s_COLON_invert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("as-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.as_matrix;},new cljs.core.Symbol("sicmutils.matrix","as-matrix","sicmutils.matrix/as-matrix",1298568256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"as-matrix","as-matrix",157934886,null),"sicmutils/matrix.cljc",16,1,655,655,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),"Any one argument function of a structure can be seen as a matrix. This is only\n  useful if the function has a linear multiplier (e.g. derivative)",(cljs.core.truth_(sicmutils.matrix.as_matrix)?sicmutils.matrix.as_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matrix->vector"),new cljs.core.Var(function(){return sicmutils.matrix.matrix__GT_vector;},new cljs.core.Symbol("sicmutils.matrix","matrix->vector","sicmutils.matrix/matrix->vector",-1799201728,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"matrix->vector","matrix->vector",1354067238,null),"sicmutils/matrix.cljc",21,1,226,226,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"If `m` is already a vector, acts as identity. Else, returns the matrix as a\n  vector of rows (or throws if neither of these types is passed).",(cljs.core.truth_(sicmutils.matrix.matrix__GT_vector)?sicmutils.matrix.matrix__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row"),new cljs.core.Var(function(){return sicmutils.matrix.row;},new cljs.core.Symbol("sicmutils.matrix","row","sicmutils.matrix/row",2077496292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"row","row",1070392006,null),"sicmutils/matrix.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"xs","xs",-2004992428,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,459,459,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a row matrix populated by the supplied `xs`. Variadic equivalent\n  to [[row*]].",(cljs.core.truth_(sicmutils.matrix.row)?sicmutils.matrix.row.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->matrix"),new cljs.core.Var(function(){return sicmutils.matrix.structure__GT_matrix;},new cljs.core.Symbol("sicmutils.matrix","structure->matrix","sicmutils.matrix/structure->matrix",-2006152342,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"structure->matrix","structure->matrix",1147394120,null),"sicmutils/matrix.cljc",24,1,594,594,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given some 2-tensor-shaped structure `s`, returns the corresponding matrix.\n\n  The outer orientation is ignored; If the inner structures are `up`, they're\n  treated as columns. Inner `down` structures are treated as rows.",(cljs.core.truth_(sicmutils.matrix.structure__GT_matrix)?sicmutils.matrix.structure__GT_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nth-row"),new cljs.core.Var(function(){return sicmutils.matrix.nth_row;},new cljs.core.Symbol("sicmutils.matrix","nth-row","sicmutils.matrix/nth-row",115601326,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"nth-row","nth-row",1256930440,null),"sicmutils/matrix.cljc",14,1,663,663,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the `n`-th row of the supplied matrix `m` as a `down` structure.",(cljs.core.truth_(sicmutils.matrix.nth_row)?sicmutils.matrix.nth_row.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s->m"),new cljs.core.Var(function(){return sicmutils.matrix.s__GT_m;},new cljs.core.Symbol("sicmutils.matrix","s->m","sicmutils.matrix/s->m",1281125446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s->m","s->m",137060200,null),"sicmutils/matrix.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,637,637,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),"Convert the structure `ms`, which would be a scalar if the (compatible)\n  multiplication `(* ls ms rs)` were performed, to a matrix.",(cljs.core.truth_(sicmutils.matrix.s__GT_m)?sicmutils.matrix.s__GT_m.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:solve-linear-right"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_solve_linear_right;},new cljs.core.Symbol("sicmutils.matrix","s:solve-linear-right","sicmutils.matrix/s:solve-linear-right",-81748402,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:solve-linear-right","s:solve-linear-right",1060089768,null),"sicmutils/matrix.cljc",27,1,1014,1014,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"product","product",-1290961512,null),new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),null,(cljs.core.truth_(sicmutils.matrix.s_COLON_solve_linear_right)?sicmutils.matrix.s_COLON_solve_linear_right.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:transpose"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_transpose;},new cljs.core.Symbol("sicmutils.matrix","s:transpose","sicmutils.matrix/s:transpose",-1813986517,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:transpose","s:transpose",-671608823,null),"sicmutils/matrix.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,738,738,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),"Given structural inputs `ls` (optional), `ms` and `rs`, constrained such\n  that `(* ls ms rs)` returns a numerical quantity, returns a result such that\n  the following relationship remains true:\n\n  ```clj\n  (* <ls| (* ms |rs>)) = (* <rs| (* (s:transpose ms) |ls>))\n  ```\n\n  For example:\n\n  ```clj\n  (let [ls (s/up 1 2)\n      ms (s/up (s/down 1 2) (s/down 3 4))\n      rs (s/down 1 2)]\n  (g/* ls (g/* ms rs))\n  ;;=> 27\n\n  (g/* rs (g/* (s:transpose ls ms rs) ls))\n  ;;=> 27\n  )\n  ```\n\n  `ls` is optional. If `ls` is not supplied, a compatible shape is generated\n  internally.",(cljs.core.truth_(sicmutils.matrix.s_COLON_transpose)?sicmutils.matrix.s_COLON_transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-row-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.literal_row_matrix;},new cljs.core.Symbol("sicmutils.matrix","literal-row-matrix","sicmutils.matrix/literal-row-matrix",-2039837589,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"literal-row-matrix","literal-row-matrix",-1031962807,null),"sicmutils/matrix.cljc",25,1,342,342,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"ncols","ncols",1256712774,null)], null)),"Returns a row matrix of `ncols` symbolic entries, each prefixed by the\n  supplied symbol `sym`.\n\n  For example:\n\n  ```clojure\n  (= (literal-row-matrix 'x 3)\n     (by-rows ['x_0 'x_1 'x_2]))\n  ```",(cljs.core.truth_(sicmutils.matrix.literal_row_matrix)?sicmutils.matrix.literal_row_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row-matrix->down"),new cljs.core.Var(function(){return sicmutils.matrix.row_matrix__GT_down;},new cljs.core.Symbol("sicmutils.matrix","row-matrix->down","sicmutils.matrix/row-matrix->down",-732246716,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"row-matrix->down","row-matrix->down",273914986,null),"sicmutils/matrix.cljc",23,1,710,710,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the single row from the supplied row matrix as a `down`. Errors if some\n  other type is supplied.",(cljs.core.truth_(sicmutils.matrix.row_matrix__GT_down)?sicmutils.matrix.row_matrix__GT_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:transpose-orientation"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_transpose_orientation;},new cljs.core.Symbol("sicmutils.matrix","s:transpose-orientation","sicmutils.matrix/s:transpose-orientation",569912812,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:transpose-orientation","s:transpose-orientation",1694629066,null),"sicmutils/matrix.cljc",30,1,769,769,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given some 2 tensor `s`, returns a structure with elements 'transposed' by\n  swapping the inner and outer orientations and dimensions, like a matrix\n  transpose.\n\n  Orientations are only flipped if they are different in the input. If the inner\n  and outer orientations of `s` are the same, the returned structure has this\n  identical orientation.\n\n  For example:\n\n  ```clj\n  ;; opposite orientation gets flipped:\n  (s:transpose-orientation (s/up (s/down 1 2 3) (s/down 4 5 6)))\n  ;;=> (down (up 1 4) (up 2 5) (up 3 6))\n\n  ;; same orientation stays the same:\n  (s:transpose-orientation (s/down (s/down 1 2 3) (s/down 4 5 6)))\n  ;;=> (down (down 1 4) (down 2 5) (down 3 6))\n  ```\n\n  See [[structure/two-tensor?]] for more detail on 2 tensors.\n\n  NOTE: In scmutils, this function is called `s:transpose2`.",(cljs.core.truth_(sicmutils.matrix.s_COLON_transpose_orientation)?sicmutils.matrix.s_COLON_transpose_orientation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("I"),new cljs.core.Var(function(){return sicmutils.matrix.I;},new cljs.core.Symbol("sicmutils.matrix","I","sicmutils.matrix/I",-1966527868,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"I","I",-827294806,null),"sicmutils/matrix.cljc",8,1,1028,1028,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Return the identity matrix of order `n`.",(cljs.core.truth_(sicmutils.matrix.I)?sicmutils.matrix.I.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->structure"),new cljs.core.Var(function(){return sicmutils.matrix.__GT_structure;},new cljs.core.Symbol("sicmutils.matrix","->structure","sicmutils.matrix/->structure",238714829,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"->structure","->structure",1110609707,null),"sicmutils/matrix.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"outer-orientation","outer-orientation",654965214,null),new cljs.core.Symbol(null,"inner-orientation","inner-orientation",911755630,null),new cljs.core.Symbol(null,"t?","t?",-2042555639,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"outer-orientation","outer-orientation",654965214,null),new cljs.core.Symbol(null,"inner-orientation","inner-orientation",911755630,null),new cljs.core.Symbol(null,"t?","t?",-2042555639,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,486,486,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"outer-orientation","outer-orientation",654965214,null),new cljs.core.Symbol(null,"inner-orientation","inner-orientation",911755630,null),new cljs.core.Symbol(null,"t?","t?",-2042555639,null)], null)),"Returns a structure generated by converting `m` into a nested structure with\n  the supplied `outer-orientation` and `inner-orientation`.\n\n  If `t?` is true, the columns of `m` will form the inner tuples. If `t?` is\n  false, the rows of `m` will form the inner tuples.\n\n  By default, if you supply a single argument (the matrix `m`), a matrix turns\n  into a single outer `::s/down` of inner columns represented as `::up`\n  structures.",(cljs.core.truth_(sicmutils.matrix.__GT_structure)?sicmutils.matrix.__GT_structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column-matrix->vector"),new cljs.core.Var(function(){return sicmutils.matrix.column_matrix__GT_vector;},new cljs.core.Symbol("sicmutils.matrix","column-matrix->vector","sicmutils.matrix/column-matrix->vector",-1179887543,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"column-matrix->vector","column-matrix->vector",2109025131,null),"sicmutils/matrix.cljc",28,1,696,696,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the single column from the supplied column matrix as a vector. Errors\n  if some other type is supplied.",(cljs.core.truth_(sicmutils.matrix.column_matrix__GT_vector)?sicmutils.matrix.column_matrix__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("by-cols*"),new cljs.core.Var(function(){return sicmutils.matrix.by_cols_STAR_;},new cljs.core.Symbol("sicmutils.matrix","by-cols*","sicmutils.matrix/by-cols*",-1286909490,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"by-cols*","by-cols*",1865655980,null),"sicmutils/matrix.cljc",15,1,432,432,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cols","cols",-274269768,null)], null)),"Returns a matrix whose columns consist of the supplied sequence of `cols`.\n  These all must be the same length.\n\n  for a variadic equivalent, see [[by-cols]].",(cljs.core.truth_(sicmutils.matrix.by_cols_STAR_)?sicmutils.matrix.by_cols_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("by-rows"),new cljs.core.Var(function(){return sicmutils.matrix.by_rows;},new cljs.core.Symbol("sicmutils.matrix","by-rows","sicmutils.matrix/by-rows",-1492158230,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"by-rows","by-rows",1662495500,null),"sicmutils/matrix.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"rows","rows",-1804386089,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,424,424,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)),"Returns a matrix whose rows consist of the supplied sequence of `rows`. These\n  all must be the same length.\n\n  Variadic equivalent to [[by-rows*]].",(cljs.core.truth_(sicmutils.matrix.by_rows)?sicmutils.matrix.by_rows.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("diagonal"),new cljs.core.Var(function(){return sicmutils.matrix.diagonal;},new cljs.core.Symbol("sicmutils.matrix","diagonal","sicmutils.matrix/diagonal",-1473785521,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"diagonal","diagonal",-329457619,null),"sicmutils/matrix.cljc",15,1,673,673,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the diagonal of the supplied matrix `m` as an up structure. Errors if a\n  type other than a diagonal matrix is supplied.",(cljs.core.truth_(sicmutils.matrix.diagonal)?sicmutils.matrix.diagonal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seq->"),new cljs.core.Var(function(){return sicmutils.matrix.seq__GT_;},new cljs.core.Symbol("sicmutils.matrix","seq->","sicmutils.matrix/seq->",260541551,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"seq->","seq->",-877593267,null),"sicmutils/matrix.cljc",12,1,505,505,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Convert a sequence `xs` (typically, of function arguments) to an up-structure.\n\n  Any matrix present in the argument list will be converted to row of columns\n  via [[->structure]].",(cljs.core.truth_(sicmutils.matrix.seq__GT_)?sicmutils.matrix.seq__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("submatrix"),new cljs.core.Var(function(){return sicmutils.matrix.submatrix;},new cljs.core.Symbol("sicmutils.matrix","submatrix","sicmutils.matrix/submatrix",1078109775,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"submatrix","submatrix",73135469,null),"sicmutils/matrix.cljc",16,1,843,843,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"lowrow","lowrow",829607435,null),new cljs.core.Symbol(null,"hirow","hirow",-388964312,null),new cljs.core.Symbol(null,"lowcol","lowcol",-1417324880,null),new cljs.core.Symbol(null,"hicol","hicol",413945288,null)], null)),"Returns the submatrix of the matrix (or matrix-like structure) `s` generated by\n  taking\n\n  - rows    from `lowrow` -> `hirow` (inclusive)\n  - columns from `lowcol` -> `hicol` (inclusive)",(cljs.core.truth_(sicmutils.matrix.submatrix)?sicmutils.matrix.submatrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-tensor-operation"),new cljs.core.Var(function(){return sicmutils.matrix.two_tensor_operation;},new cljs.core.Symbol("sicmutils.matrix","two-tensor-operation","sicmutils.matrix/two-tensor-operation",2011865171,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"two-tensor-operation","two-tensor-operation",-1277856915,null),"sicmutils/matrix.cljc",27,1,588,588,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Applies matrix operation `f` to square structure `s` and returns a structure of\n  the same type as the supplied structure.",(cljs.core.truth_(sicmutils.matrix.two_tensor_operation)?sicmutils.matrix.two_tensor_operation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column*"),new cljs.core.Var(function(){return sicmutils.matrix.column_STAR_;},new cljs.core.Symbol("sicmutils.matrix","column*","sicmutils.matrix/column*",155454191,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"column*","column*",1968036749,null),"sicmutils/matrix.cljc",14,1,465,465,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a column matrix populated by the supplied `xs`. For a variadic equivalent,\n  see [[column]].",(cljs.core.truth_(sicmutils.matrix.column_STAR_)?sicmutils.matrix.column_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*careful-conversion*"),new cljs.core.Var(function(){return sicmutils.matrix._STAR_careful_conversion_STAR_;},new cljs.core.Symbol("sicmutils.matrix","*careful-conversion*","sicmutils.matrix/*careful-conversion*",-629173016,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"*careful-conversion*","*careful-conversion*",375806734,null),"sicmutils/matrix.cljc",23,1,true,632,635,cljs.core.List.EMPTY,"Set this dynamic variable to `false` to allow [[s->m]] to operate\n  on structures for which `(* ls ms rs)` does NOT yield a numerical value.",(cljs.core.truth_(sicmutils.matrix._STAR_careful_conversion_STAR_)?sicmutils.matrix._STAR_careful_conversion_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fmap-indexed"),new cljs.core.Var(function(){return sicmutils.matrix.fmap_indexed;},new cljs.core.Symbol("sicmutils.matrix","fmap-indexed","sicmutils.matrix/fmap-indexed",-926790195,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"fmap-indexed","fmap-indexed",-1932165905,null),"sicmutils/matrix.cljc",19,1,384,384,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Maps `f` over three arguments:\n\n  - each element of the matrix `m`\n  - its row `i`\n  - its column `j`\n\n  and returns a new matrix of the same dimensions as `m`. ",(cljs.core.truth_(sicmutils.matrix.fmap_indexed)?sicmutils.matrix.fmap_indexed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("square?"),new cljs.core.Var(function(){return sicmutils.matrix.square_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","square?","sicmutils.matrix/square?",1750004753,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"square?","square?",-1270504145,null),"sicmutils/matrix.cljc",14,1,235,235,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if `m` is a square matrix, false otherwise.",(cljs.core.truth_(sicmutils.matrix.square_QMARK_)?sicmutils.matrix.square_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose"),new cljs.core.Var(function(){return sicmutils.matrix.transpose;},new cljs.core.Symbol("sicmutils.matrix","transpose","sicmutils.matrix/transpose",423957521,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),"sicmutils/matrix.cljc",16,1,478,478,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the transpose of the matrix `m`. The transpose is the original matrix,\n  with rows and columns swapped.",(cljs.core.truth_(sicmutils.matrix.transpose)?sicmutils.matrix.transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column-matrix->up"),new cljs.core.Var(function(){return sicmutils.matrix.column_matrix__GT_up;},new cljs.core.Symbol("sicmutils.matrix","column-matrix->up","sicmutils.matrix/column-matrix->up",-1225622703,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"column-matrix->up","column-matrix->up",-84333969,null),"sicmutils/matrix.cljc",24,1,689,689,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the single column from the supplied column matrix as an `up`. Errors if\n  some other type is supplied.",(cljs.core.truth_(sicmutils.matrix.column_matrix__GT_up)?sicmutils.matrix.column_matrix__GT_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("characteristic-polynomial"),new cljs.core.Var(function(){return sicmutils.matrix.characteristic_polynomial;},new cljs.core.Symbol("sicmutils.matrix","characteristic-polynomial","sicmutils.matrix/characteristic-polynomial",-1093599763,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"characteristic-polynomial","characteristic-polynomial",-86494513,null),"sicmutils/matrix.cljc",32,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1104,1104,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the [characteristic\n  polynomial](https://en.wikipedia.org/wiki/Characteristic_polynomial) of the\n  square matrix `m`.\n\n  If only `m` is supplied, returns a [[polynomial/Polynomial]] instance\n  representing the matrix `m`'s characteristic polynomial.\n\n  If `x` is supplied, returns the value of the characteristic polynomial of `m`\n  evaluated at `x`.\n\n  Typically `x` will be a symbolic variable, but if you wanted to get the value\n  of the characteristic polynomial at some particular numerical point `x` you\n  could pass that too.",(cljs.core.truth_(sicmutils.matrix.characteristic_polynomial)?sicmutils.matrix.characteristic_polynomial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("trace"),new cljs.core.Var(function(){return sicmutils.matrix.trace;},new cljs.core.Symbol("sicmutils.matrix","trace","sicmutils.matrix/trace",-456670446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"trace","trace",557784112,null),"sicmutils/matrix.cljc",12,1,883,883,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the trace (the sum of diagonal elements) of the square matrix `m`.\n\n  Generic operations are used, so this works on symbolic square matrices.",(cljs.core.truth_(sicmutils.matrix.trace)?sicmutils.matrix.trace.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generate"),new cljs.core.Var(function(){return sicmutils.matrix.generate;},new cljs.core.Symbol("sicmutils.matrix","generate","sicmutils.matrix/generate",471031635,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"generate","generate",1477078705,null),"sicmutils/matrix.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,282,282,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Returns a matrix with `r` rows and `c` columns, whose entries are generated by\n  the supplied function `f`.\n\n  If you only supply one dimension `n` the returned matrix will be square.\n\n  The entry in the `i`th row and `j`-th column is `(f i j)`.",(cljs.core.truth_(sicmutils.matrix.generate)?sicmutils.matrix.generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matrix?"),new cljs.core.Var(function(){return sicmutils.matrix.matrix_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","matrix?","sicmutils.matrix/matrix?",27416019,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"matrix?","matrix?",1297778417,null),"sicmutils/matrix.cljc",14,1,204,204,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if the supplied `m` is an instance of [[Matrix]], false\n  otherwise.",(cljs.core.truth_(sicmutils.matrix.matrix_QMARK_)?sicmutils.matrix.matrix_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("some"),new cljs.core.Var(function(){return sicmutils.matrix.some;},new cljs.core.Symbol("sicmutils.matrix","some","sicmutils.matrix/some",-1589495664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"some","some",-310548046,null),"sicmutils/matrix.cljc",11,1,370,370,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if `f` is true for some element of the matrix `m`, false\n  otherwise. (Also works on arbitrary nested sequences.)",(cljs.core.truth_(sicmutils.matrix.some)?sicmutils.matrix.some.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("determinant"),new cljs.core.Var(function(){return sicmutils.matrix.determinant;},new cljs.core.Symbol("sicmutils.matrix","determinant","sicmutils.matrix/determinant",292740396,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"determinant","determinant",-580156910,null),"sicmutils/matrix.cljc",14,1,934,938,cljs.core.List.EMPTY,"Returns the determinant of the supplied square matrix `m`.\n\n  Generic operations are used, so this works on symbolic square matrices.",(cljs.core.truth_(sicmutils.matrix.determinant)?sicmutils.matrix.determinant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-tensor->"),new cljs.core.Var(function(){return sicmutils.matrix.two_tensor__GT_;},new cljs.core.Symbol("sicmutils.matrix","two-tensor->","sicmutils.matrix/two-tensor->",-1017651344,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"two-tensor->","two-tensor->",-2025001390,null),"sicmutils/matrix.cljc",19,1,558,558,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"cont","cont",1063431313,null)], null)),"Converts the square structure `s` into a matrix, and calls the supplied\n  continuation `cont` with\n\n  - the generated matrix\n  - a function which will restore a matrix to a structure with the same inner\n    and outer orientations as s\n\n  Returns the result of the continuation call.",(cljs.core.truth_(sicmutils.matrix.two_tensor__GT_)?sicmutils.matrix.two_tensor__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column?"),new cljs.core.Var(function(){return sicmutils.matrix.column_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","column?","sicmutils.matrix/column?",1114248365,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"column?","column?",510745491,null),"sicmutils/matrix.cljc",14,1,242,242,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if `m` is a matrix with a single column (a 'column matrix'),\n  false otherwise.",(cljs.core.truth_(sicmutils.matrix.column_QMARK_)?sicmutils.matrix.column_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("solve"),new cljs.core.Var(function(){return sicmutils.matrix.solve;},new cljs.core.Symbol("sicmutils.matrix","solve","sicmutils.matrix/solve",1642307990,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"solve","solve",636252852,null),"sicmutils/matrix.cljc",8,1,1157,1165,cljs.core.List.EMPTY,"Given a matrix `A` and a column matrix `b`, computes the solution\n  to an inhomogeneous system of linear equations, `A*x=b`, where the matrix `A`\n  and the column matrix `b` are given.\n\n Returns the column matrix `x`.\n\n Unlike LU decomposition, Cramer's rule generalizes to symbolic solutions.",(cljs.core.truth_(sicmutils.matrix.solve)?sicmutils.matrix.solve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row-matrix->vector"),new cljs.core.Var(function(){return sicmutils.matrix.row_matrix__GT_vector;},new cljs.core.Symbol("sicmutils.matrix","row-matrix->vector","sicmutils.matrix/row-matrix->vector",-1079154341,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"row-matrix->vector","row-matrix->vector",1672763573,null),"sicmutils/matrix.cljc",25,1,717,717,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the single row from the supplied row matrix as a vector. Errors if some\n  other type is supplied.",(cljs.core.truth_(sicmutils.matrix.row_matrix__GT_vector)?sicmutils.matrix.row_matrix__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("num-cols"),new cljs.core.Var(function(){return sicmutils.matrix.num_cols;},new cljs.core.Symbol("sicmutils.matrix","num-cols","sicmutils.matrix/num-cols",-143511661,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"num-cols","num-cols",729489141,null),"sicmutils/matrix.cljc",15,1,218,218,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the number of columns of the supplied matrix `m`. Throws if a\n  non-matrix is supplied.",(cljs.core.truth_(sicmutils.matrix.num_cols)?sicmutils.matrix.num_cols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("by-cols"),new cljs.core.Var(function(){return sicmutils.matrix.by_cols;},new cljs.core.Symbol("sicmutils.matrix","by-cols","sicmutils.matrix/by-cols",1009544052,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"by-cols","by-cols",2016712726,null),"sicmutils/matrix.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"cols","cols",-274269768,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"cols","cols",-274269768,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,444,444,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"cols","cols",-274269768,null)], null)),"Returns a matrix whose columns consist of the supplied sequence of `cols`.\n  These all must be the same length.\n\n  Variadic equivalent to [[by-cols*]].",(cljs.core.truth_(sicmutils.matrix.by_cols)?sicmutils.matrix.by_cols.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("column"),new cljs.core.Var(function(){return sicmutils.matrix.column;},new cljs.core.Symbol("sicmutils.matrix","column","sicmutils.matrix/column",30470776,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"column","column",-576213674,null),"sicmutils/matrix.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"xs","xs",-2004992428,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,472,472,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a column matrix populated by the supplied `xs`. Variadic equivalent\n  to [[column*]].",(cljs.core.truth_(sicmutils.matrix.column)?sicmutils.matrix.column.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row?"),new cljs.core.Var(function(){return sicmutils.matrix.row_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","row?","sicmutils.matrix/row?",-1252377576,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"row?","row?",2035501942,null),"sicmutils/matrix.cljc",11,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns true if `m` is a matrix with a single row (a 'row matrix'), false\n  otherwise.",(cljs.core.truth_(sicmutils.matrix.row_QMARK_)?sicmutils.matrix.row_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symmetric?"),new cljs.core.Var(function(){return sicmutils.matrix.symmetric_QMARK_;},new cljs.core.Symbol("sicmutils.matrix","symmetric?","sicmutils.matrix/symmetric?",-1198987628,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"symmetric?","symmetric?",-57665610,null),"sicmutils/matrix.cljc",17,1,1088,1088,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"Returns true if the supplied matrix `M` is equal to its own transpose (ie,\n  symmetric), false otherwise.",(cljs.core.truth_(sicmutils.matrix.symmetric_QMARK_)?sicmutils.matrix.symmetric_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("without"),new cljs.core.Var(function(){return sicmutils.matrix.without;},new cljs.core.Symbol("sicmutils.matrix","without","sicmutils.matrix/without",-271597195,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"without","without",-1547399081,null),"sicmutils/matrix.cljc",14,1,859,859,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null)], null)),"Returns the matrix formed by deleting the `i`-th row and `j`-th column of the\n  given matrix `m`.\n\n  This is also called the 'minor' of m.",(cljs.core.truth_(sicmutils.matrix.without)?sicmutils.matrix.without.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:divide-by-structure"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_divide_by_structure;},new cljs.core.Symbol("sicmutils.matrix","s:divide-by-structure","sicmutils.matrix/s:divide-by-structure",-1601831851,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:divide-by-structure","s:divide-by-structure",-459494025,null),"sicmutils/matrix.cljc",28,1,1019,1019,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rv","rv",-860258924,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.matrix.s_COLON_divide_by_structure)?sicmutils.matrix.s_COLON_divide_by_structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("row*"),new cljs.core.Var(function(){return sicmutils.matrix.row_STAR_;},new cljs.core.Symbol("sicmutils.matrix","row*","sicmutils.matrix/row*",86813749,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"row*","row*",1238605271,null),"sicmutils/matrix.cljc",11,1,452,452,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a row matrix populated by the supplied `xs`. For a variadic equivalent,\n  see [[row]].",(cljs.core.truth_(sicmutils.matrix.row_STAR_)?sicmutils.matrix.row_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.literal_matrix;},new cljs.core.Symbol("sicmutils.matrix","literal-matrix","sicmutils.matrix/literal-matrix",-2016965323,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"literal-matrix","literal-matrix",-1009819945,null),"sicmutils/matrix.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null),new cljs.core.Symbol(null,"ncols","ncols",1256712774,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null),new cljs.core.Symbol(null,"ncols","ncols",1256712774,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,299,299,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null),new cljs.core.Symbol(null,"ncols","ncols",1256712774,null)], null)),"Generates a `nrows` x `ncols` matrix of symbolic entries, each prefixed by the\n  supplied symbol `sym`.\n\n  If `ncols` (the third argument) is not supplied, returns a square matrix of\n  size `nrows` x `nrows`.\n\n  NOTE: The symbols in the returned matrix record their Einstein-notation path\n  into the structure that this matrix represents; a `down` of `up` columns. This\n  means that the returned indices embedded in the symbols look flipped, `ji` vs\n  `ij`.\n\n  For example:\n\n  ```clojure\n  (= (literal-matrix 'x 2 2)\n     (by-rows ['x_0\u21910 'x_1\u21910]\n              ['x_0\u21911 'x_1\u21911]))\n  ```",(cljs.core.truth_(sicmutils.matrix.literal_matrix)?sicmutils.matrix.literal_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Matrix"),new cljs.core.Var(function(){return sicmutils.matrix.__GT_Matrix;},new cljs.core.Symbol("sicmutils.matrix","->Matrix","sicmutils.matrix/->Matrix",-100859786,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IIndexed","cljs.core/IIndexed",-436490749,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("cljs.core","IFind","cljs.core/IFind",-1727519574,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("cljs.core","IEmptyableCollection","cljs.core/IEmptyableCollection",5045035,null),"null",new cljs.core.Symbol("cljs.core","ICounted","cljs.core/ICounted",-1299011378,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IAssociative","cljs.core/IAssociative",-1700920611,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"->Matrix","->Matrix",635711640,null),"sicmutils/matrix.cljc",16,1,new cljs.core.Keyword(null,"positional","positional",-203580463),30,30,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"r","r",1169147337,null),new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol("cljs.core","IIndexed","cljs.core/IIndexed",-436490749,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","IEmptyableCollection","cljs.core/IEmptyableCollection",5045035,null),"null",new cljs.core.Symbol("cljs.core","ICounted","cljs.core/ICounted",-1299011378,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IAssociative","cljs.core/IAssociative",-1700920611,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null"], null), null),"Positional factory function for sicmutils.matrix/Matrix.",(cljs.core.truth_(sicmutils.matrix.__GT_Matrix)?sicmutils.matrix.__GT_Matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-column-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.literal_column_matrix;},new cljs.core.Symbol("sicmutils.matrix","literal-column-matrix","sicmutils.matrix/literal-column-matrix",1941541946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"literal-column-matrix","literal-column-matrix",-1078794984,null),"sicmutils/matrix.cljc",28,1,326,326,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"nrows","nrows",-1642567020,null)], null)),"Returns a column matrix of `nrows` symbolic entries, each prefixed by the\n  supplied symbol `sym`.\n\n  For example:\n\n  ```clojure\n  (= (literal-column-matrix 'x 3)\n     (by-cols ['x\u21910 'x\u21911 'x\u21912]))\n  ```",(cljs.core.truth_(sicmutils.matrix.literal_column_matrix)?sicmutils.matrix.literal_column_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Matrix"),new cljs.core.Var(function(){return sicmutils.matrix.Matrix;},new cljs.core.Symbol("sicmutils.matrix","Matrix","sicmutils.matrix/Matrix",951459707,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/matrix.cljc",new cljs.core.Keyword(null,"line","line",212345235),30,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Matrix","Matrix",2091502681,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.matrix.Matrix)?sicmutils.matrix.Matrix.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("by-rows*"),new cljs.core.Var(function(){return sicmutils.matrix.by_rows_STAR_;},new cljs.core.Symbol("sicmutils.matrix","by-rows*","sicmutils.matrix/by-rows*",-1996887777,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"by-rows*","by-rows*",1156495609,null),"sicmutils/matrix.cljc",15,1,412,412,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rows","rows",-1804386089,null)], null)),"Returns a matrix whose rows consist of the supplied sequence of `rows`. These\n  all must be the same length.\n\n  for a variadic equivalent, see [[by-rows]].",(cljs.core.truth_(sicmutils.matrix.by_rows_STAR_)?sicmutils.matrix.by_rows_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:inverse"),new cljs.core.Var(function(){return sicmutils.matrix.s_COLON_inverse;},new cljs.core.Symbol("sicmutils.matrix","s:inverse","sicmutils.matrix/s:inverse",-62287233,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"s:inverse","s:inverse",-1336873639,null),"sicmutils/matrix.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1000,1000,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"ms","ms",487821794,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),null,(cljs.core.truth_(sicmutils.matrix.s_COLON_inverse)?sicmutils.matrix.s_COLON_inverse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-substituted-row"),new cljs.core.Var(function(){return sicmutils.matrix.with_substituted_row;},new cljs.core.Symbol("sicmutils.matrix","with-substituted-row","sicmutils.matrix/with-substituted-row",2134880760,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"with-substituted-row","with-substituted-row",-1155079974,null),"sicmutils/matrix.cljc",27,1,832,832,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns a new matrix of identical shape to `m`, with the vector `v` substituted\n  for the `i`th row.",(cljs.core.truth_(sicmutils.matrix.with_substituted_row)?sicmutils.matrix.with_substituted_row.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("elementwise"),new cljs.core.Var(function(){return sicmutils.matrix.elementwise;},new cljs.core.Symbol("sicmutils.matrix","elementwise","sicmutils.matrix/elementwise",813371197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"elementwise","elementwise",-328999909,null),"sicmutils/matrix.cljc",27,1,544,544,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Applies `f` elementwise between the matrices `a` and `b`. Throws if `a` and `b`\n  don't have the same dimensions.",(cljs.core.truth_(sicmutils.matrix.elementwise)?sicmutils.matrix.elementwise.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-zero"),new cljs.core.Var(function(){return sicmutils.matrix.make_zero;},new cljs.core.Symbol("sicmutils.matrix","make-zero","sicmutils.matrix/make-zero",-2015536359,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"make-zero","make-zero",-1008366341,null),"sicmutils/matrix.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1022,1022,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Return a zero-valued matrix of `m` rows and `n` columns (`nXn` if only `n` is\n  supplied).",(cljs.core.truth_(sicmutils.matrix.make_zero)?sicmutils.matrix.make_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("general-determinant"),new cljs.core.Var(function(){return sicmutils.matrix.general_determinant;},new cljs.core.Symbol("sicmutils.matrix","general-determinant","sicmutils.matrix/general-determinant",1482439226,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"general-determinant","general-determinant",-464196132,null),"sicmutils/matrix.cljc",26,1,897,897,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"add","add",1875819266,null),new cljs.core.Symbol(null,"sub","sub",-453228498,null),new cljs.core.Symbol(null,"mul","mul",1285905465,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null)], null)),"Given coefficient procedures `add`, `sub`, `mul` and `zero?`, returns a\n  procedure that efficiently computes the determinant of the supplied square\n  matrix `m`.\n\n  [[general-determinant]] is useful for generating fast type-specific\n  determinant routines. See [[determinant]] for a default using generic\n  arithmetic.",(cljs.core.truth_(sicmutils.matrix.general_determinant)?sicmutils.matrix.general_determinant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up->column-matrix"),new cljs.core.Var(function(){return sicmutils.matrix.up__GT_column_matrix;},new cljs.core.Symbol("sicmutils.matrix","up->column-matrix","sicmutils.matrix/up->column-matrix",652407106,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"up->column-matrix","up->column-matrix",1793835676,null),"sicmutils/matrix.cljc",24,1,682,682,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns a column matrix with the contents of the supplied `up` structure.\n  Errors if any other type is provided.",(cljs.core.truth_(sicmutils.matrix.up__GT_column_matrix)?sicmutils.matrix.up__GT_column_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fmap"),new cljs.core.Var(function(){return sicmutils.matrix.fmap;},new cljs.core.Symbol("sicmutils.matrix","fmap","sicmutils.matrix/fmap",-814562302,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"fmap","fmap",55293788,null),"sicmutils/matrix.cljc",11,1,376,376,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Maps `f` over the elements of the matrix `m` returning a new matrix of the same\n  dimensions as `m`.",(cljs.core.truth_(sicmutils.matrix.fmap)?sicmutils.matrix.fmap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity-like"),new cljs.core.Var(function(){return sicmutils.matrix.identity_like;},new cljs.core.Symbol("sicmutils.matrix","identity-like","sicmutils.matrix/identity-like",-1610677510,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"identity-like","identity-like",1541985180,null),"sicmutils/matrix.cljc",20,1,1033,1033,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"Return an identity matrix whose ones and zeros match the types of the supplied\n  square matrix `M`. Errors if a non-square matrix `M` is supplied.",(cljs.core.truth_(sicmutils.matrix.identity_like)?sicmutils.matrix.identity_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dimension"),new cljs.core.Var(function(){return sicmutils.matrix.dimension;},new cljs.core.Symbol("sicmutils.matrix","dimension","sicmutils.matrix/dimension",-970932317,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"dimension","dimension",-2111181571,null),"sicmutils/matrix.cljc",16,1,876,876,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns the 'dimension', ie, the number of rows & columns, of the supplied\n  square matrix. Errors if some other type is supplied.",(cljs.core.truth_(sicmutils.matrix.dimension)?sicmutils.matrix.dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("m->s"),new cljs.core.Var(function(){return sicmutils.matrix.m__GT_s;},new cljs.core.Symbol("sicmutils.matrix","m->s","sicmutils.matrix/m->s",-1799200639,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"m->s","m->s",1355461087,null),"sicmutils/matrix.cljc",11,1,724,724,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"ls","ls",-1458647179,null),new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"rs","rs",-1740853800,null)], null)),"Convert the matrix `m` into a structure `S`, guided by the requirement that `(*\n  ls S rs)` should be a scalar.",(cljs.core.truth_(sicmutils.matrix.m__GT_s)?sicmutils.matrix.m__GT_s.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-in"),new cljs.core.Var(function(){return sicmutils.matrix.get_in;},new cljs.core.Symbol("sicmutils.matrix","get-in","sicmutils.matrix/get-in",-824215107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.matrix","sicmutils.matrix",775312232,null),new cljs.core.Symbol(null,"get-in","get-in",-1965644065,null),"sicmutils/matrix.cljc",13,1,358,358,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"is","is",2009660525,null)], null)),"Like [[clojure.core/get-in]] for matrices, but obeying the scmutils convention:\n  only one index is required to get an unboxed element from a column vector.\n\n  NOTE that this is perhaps an unprincipled exception...",(cljs.core.truth_(sicmutils.matrix.get_in)?sicmutils.matrix.get_in.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Jacobian"),new cljs.core.Var(function(){return sicmutils.calculus.basis.Jacobian;},new cljs.core.Symbol("sicmutils.calculus.basis","Jacobian","sicmutils.calculus.basis/Jacobian",-769172194,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"Jacobian","Jacobian",-1342622555,null),"sicmutils/calculus/basis.cljc",15,1,106,106,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"to-basis","to-basis",1787878908,null),new cljs.core.Symbol(null,"from-basis","from-basis",-1326422435,null)], null)),"Returns the Jacobian of transition from `from-basis` to `to-basis`.\n\n  The Jacobian is a structure of manifold functions. The outer index is the\n  from-basis index, so this structure can be multiplied by tuple of component\n  functions of a vector field relative to `from-basis` to get component\n  functions for a vector field in `to-basis`.",(cljs.core.truth_(sicmutils.calculus.basis.Jacobian)?sicmutils.calculus.basis.Jacobian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis?"),new cljs.core.Var(function(){return sicmutils.calculus.basis.basis_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.basis","basis?","sicmutils.calculus.basis/basis?",-993864623,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"basis?","basis?",1311714792,null),"sicmutils/calculus/basis.cljc",13,1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is a basis, false otherwise.",(cljs.core.truth_(sicmutils.calculus.basis.basis_QMARK_)?sicmutils.calculus.basis.basis_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("contract"),new cljs.core.Var(function(){return sicmutils.calculus.basis.contract;},new cljs.core.Symbol("sicmutils.calculus.basis","contract","sicmutils.calculus.basis/contract",1785021759,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"contract","contract",-1856283024,null),"sicmutils/calculus/basis.cljc",15,1,69,69,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"basis","basis",-788616430,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.basis.contract)?sicmutils.calculus.basis.contract.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->dimension"),new cljs.core.Var(function(){return sicmutils.calculus.basis.basis__GT_dimension;},new cljs.core.Symbol("sicmutils.calculus.basis","basis->dimension","sicmutils.calculus.basis/basis->dimension",-1183721751,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"basis->dimension","basis->dimension",1009774354,null),"sicmutils/calculus/basis.cljc",23,1,63,63,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Extract the dimension from the given basis object `b`.",(cljs.core.truth_(sicmutils.calculus.basis.basis__GT_dimension)?sicmutils.calculus.basis.basis__GT_dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-basis"),new cljs.core.Var(function(){return sicmutils.calculus.basis.make_basis;},new cljs.core.Symbol("sicmutils.calculus.basis","make-basis","sicmutils.calculus.basis/make-basis",2082995243,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"make-basis","make-basis",-507384846,null),"sicmutils/calculus/basis.cljc",17,1,34,34,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vector-basis","vector-basis",770571439,null),new cljs.core.Symbol(null,"dual-basis","dual-basis",-73332233,null)], null)),"Make a basis object out of a vector and dual basis.\n\n  The dimensions of `vector-basis` and `dual-basis` must agree.",(cljs.core.truth_(sicmutils.calculus.basis.make_basis)?sicmutils.calculus.basis.make_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-basis->dual"),new cljs.core.Var(function(){return sicmutils.calculus.basis.vector_basis__GT_dual;},new cljs.core.Symbol("sicmutils.calculus.basis","vector-basis->dual","sicmutils.calculus.basis/vector-basis->dual",1908467085,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"vector-basis->dual","vector-basis->dual",-54882730,null),"sicmutils/calculus/basis.cljc",25,1,74,74,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vector-basis","vector-basis",770571439,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.basis.vector_basis__GT_dual)?sicmutils.calculus.basis.vector_basis__GT_dual.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->oneform-basis"),new cljs.core.Var(function(){return sicmutils.calculus.basis.basis__GT_oneform_basis;},new cljs.core.Symbol("sicmutils.calculus.basis","basis->oneform-basis","sicmutils.calculus.basis/basis->oneform-basis",-1914750271,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"basis->oneform-basis","basis->oneform-basis",150278774,null),"sicmutils/calculus/basis.cljc",27,1,51,51,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Extract the dual basis from the given basis object `b`.",(cljs.core.truth_(sicmutils.calculus.basis.basis__GT_oneform_basis)?sicmutils.calculus.basis.basis__GT_oneform_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->vector-basis"),new cljs.core.Var(function(){return sicmutils.calculus.basis.basis__GT_vector_basis;},new cljs.core.Symbol("sicmutils.calculus.basis","basis->vector-basis","sicmutils.calculus.basis/basis->vector-basis",1892347821,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"basis->vector-basis","basis->vector-basis",-168519818,null),"sicmutils/calculus/basis.cljc",26,1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Extract the vector basis from the given basis object `b`.",(cljs.core.truth_(sicmutils.calculus.basis.basis__GT_vector_basis)?sicmutils.calculus.basis.basis__GT_vector_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis->coordinate-system"),new cljs.core.Var(function(){return sicmutils.calculus.basis.basis__GT_coordinate_system;},new cljs.core.Symbol("sicmutils.calculus.basis","basis->coordinate-system","sicmutils.calculus.basis/basis->coordinate-system",389540706,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"basis->coordinate-system","basis->coordinate-system",-1847737797,null),"sicmutils/calculus/basis.cljc",31,1,30,30,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.basis.basis__GT_coordinate_system)?sicmutils.calculus.basis.basis__GT_coordinate_system.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-constant-vector-field"),new cljs.core.Var(function(){return sicmutils.calculus.basis.make_constant_vector_field;},new cljs.core.Symbol("sicmutils.calculus.basis","make-constant-vector-field","sicmutils.calculus.basis/make-constant-vector-field",2128001188,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"make-constant-vector-field","make-constant-vector-field",-71514147,null),"sicmutils/calculus/basis.cljc",33,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"basis","basis",-788616430,null),new cljs.core.Symbol(null,"m0","m0",142676688,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.basis.make_constant_vector_field)?sicmutils.calculus.basis.make_constant_vector_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system->basis"),new cljs.core.Var(function(){return sicmutils.calculus.basis.coordinate_system__GT_basis;},new cljs.core.Symbol("sicmutils.calculus.basis","coordinate-system->basis","sicmutils.calculus.basis/coordinate-system->basis",1746553959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"coordinate-system->basis","coordinate-system->basis",-316169058,null),"sicmutils/calculus/basis.cljc",31,1,12,12,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Returns the standard basis object for `coordinate-system`.",(cljs.core.truth_(sicmutils.calculus.basis.coordinate_system__GT_basis)?sicmutils.calculus.basis.coordinate_system__GT_basis.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-basis?"),new cljs.core.Var(function(){return sicmutils.calculus.basis.coordinate_basis_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.basis","coordinate-basis?","sicmutils.calculus.basis/coordinate-basis?",1325286056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.basis","sicmutils.calculus.basis",-1855948010,null),new cljs.core.Symbol(null,"coordinate-basis?","coordinate-basis?",-1009472993,null),"sicmutils/calculus/basis.cljc",24,1,23,23,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is a coordinate basis, false otherwise.",(cljs.core.truth_(sicmutils.calculus.basis.coordinate_basis_QMARK_)?sicmutils.calculus.basis.coordinate_basis_QMARK_.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-functions"),new cljs.core.Var(function(){return sicmutils.calculus.coordinate.coordinate_functions;},new cljs.core.Symbol("sicmutils.calculus.coordinate","coordinate-functions","sicmutils.calculus.coordinate/coordinate-functions",1802102717,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.coordinate","sicmutils.calculus.coordinate",1791156794,null),new cljs.core.Symbol(null,"coordinate-functions","coordinate-functions",736537820,null),"sicmutils/calculus/coordinate.cljc",27,1,11,11,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Returns a structure similar to the [[manifold/coordinate-prototype]] of\n  `coordinate-system`, where every entry is a function from manifold point =>\n  the associated component of the point in the coordinate representation\n  described by `coordinate-system`.",(cljs.core.truth_(sicmutils.calculus.coordinate.coordinate_functions)?sicmutils.calculus.coordinate.coordinate_functions.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quotify-coordinate-prototype"),new cljs.core.Var(function(){return sicmutils.calculus.coordinate.quotify_coordinate_prototype;},new cljs.core.Symbol("sicmutils.calculus.coordinate","quotify-coordinate-prototype","sicmutils.calculus.coordinate/quotify-coordinate-prototype",1916440087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.coordinate","sicmutils.calculus.coordinate",1791156794,null),new cljs.core.Symbol(null,"quotify-coordinate-prototype","quotify-coordinate-prototype",-1299623498,null),"sicmutils/calculus/coordinate.cljc",35,1,25,25,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Scmutils wants to allow forms like this:\n\n  ```clojure\n  (using-coordinates (up x y) R2-rect ...)\n  ```\n\n   Note that `x`, `y` are unquoted. This function converts such an unquoted form\n  into a quoted one that could be evaluated to return an up-tuple of the\n  symbols:\n\n  ```clojure\n  (up 'x 'y)\n  ```\n\n  Such an object is useful for [[structure/mapr]].",(cljs.core.truth_(sicmutils.calculus.coordinate.quotify_coordinate_prototype)?sicmutils.calculus.coordinate.quotify_coordinate_prototype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symbols-from-prototype"),new cljs.core.Var(function(){return sicmutils.calculus.coordinate.symbols_from_prototype;},new cljs.core.Symbol("sicmutils.calculus.coordinate","symbols-from-prototype","sicmutils.calculus.coordinate/symbols-from-prototype",-1337652788,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.coordinate","sicmutils.calculus.coordinate",1791156794,null),new cljs.core.Symbol(null,"symbols-from-prototype","symbols-from-prototype",1892830509,null),"sicmutils/calculus/coordinate.cljc",38,1,55,55,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Generates a list of symbols from the supplied argument prototype. The\n  prototype is allowed to be a vector, a list like `(up x y)` or a bare symbol.\n  Anything else causes an exception.\n\n  Nested structures are fine! The return value is a flat sequence.",(cljs.core.truth_(sicmutils.calculus.coordinate.symbols_from_prototype)?sicmutils.calculus.coordinate.symbols_from_prototype.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pi-mod-2pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.pi_mod_2pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","pi-mod-2pi?","sicmutils.numsymb/pi-mod-2pi?",-830511923,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"pi-mod-2pi?","pi-mod-2pi?",-1529657791,null),"sicmutils/numsymb.cljc",26,1,187,187,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.pi_mod_2pi_QMARK_)?sicmutils.numsymb.pi_mod_2pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("expt?"),new cljs.core.Var(function(){return sicmutils.numsymb.expt_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","expt?","sicmutils.numsymb/expt?",1887439558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"expt?","expt?",370959426,null),"sicmutils/numsymb.cljc",11,1,39,39,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.expt_QMARK_)?sicmutils.numsymb.expt_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("derivative?"),new cljs.core.Var(function(){return sicmutils.numsymb.derivative_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","derivative?","sicmutils.numsymb/derivative?",2027491582,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"derivative?","derivative?",1454715490,null),"sicmutils/numsymb.cljc",17,1,42,42,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.derivative_QMARK_)?sicmutils.numsymb.derivative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sum?"),new cljs.core.Var(function(){return sicmutils.numsymb.sum_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","sum?","sicmutils.numsymb/sum?",1750533295,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"sum?","sum?",1995120931,null),"sicmutils/numsymb.cljc",10,1,36,36,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.sum_QMARK_)?sicmutils.numsymb.sum_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-pi-over-2-mod-2pi?"),new cljs.core.Var(function(){return sicmutils.numsymb._pi_over_2_mod_2pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","-pi-over-2-mod-2pi?","sicmutils.numsymb/-pi-over-2-mod-2pi?",1866425576,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"-pi-over-2-mod-2pi?","-pi-over-2-mod-2pi?",1436583780,null),"sicmutils/numsymb.cljc",34,1,186,186,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb._pi_over_2_mod_2pi_QMARK_)?sicmutils.numsymb._pi_over_2_mod_2pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pi-over-2-mod-2pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.pi_over_2_mod_2pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","pi-over-2-mod-2pi?","sicmutils.numsymb/pi-over-2-mod-2pi?",-877518526,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"pi-over-2-mod-2pi?","pi-over-2-mod-2pi?",-249151802,null),"sicmutils/numsymb.cljc",33,1,185,185,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.pi_over_2_mod_2pi_QMARK_)?sicmutils.numsymb.pi_over_2_mod_2pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("-pi-over-4-mod-pi?"),new cljs.core.Var(function(){return sicmutils.numsymb._pi_over_4_mod_pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","-pi-over-4-mod-pi?","sicmutils.numsymb/-pi-over-4-mod-pi?",1856595940,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"-pi-over-4-mod-pi?","-pi-over-4-mod-pi?",348471912,null),"sicmutils/numsymb.cljc",33,1,190,190,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb._pi_over_4_mod_pi_QMARK_)?sicmutils.numsymb._pi_over_4_mod_pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arctan?"),new cljs.core.Var(function(){return sicmutils.numsymb.arctan_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","arctan?","sicmutils.numsymb/arctan?",373317143,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"arctan?","arctan?",167558251,null),"sicmutils/numsymb.cljc",13,1,41,41,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.arctan_QMARK_)?sicmutils.numsymb.arctan_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dot-product"),new cljs.core.Var(function(){return sicmutils.numsymb.dot_product;},new cljs.core.Symbol("sicmutils.numsymb","dot-product","sicmutils.numsymb/dot-product",-629572760,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"dot-product","dot-product",-203055892,null),"sicmutils/numsymb.cljc",18,1,474,474,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"z1","z1",-635827689,null),new cljs.core.Symbol(null,"z2","z2",-752480244,null)], null)),"Returns the symbolic dot product of the two supplied numbers `z1` and `z2`.\n\n  If both are numbers, defers to [[sicmutils.generic/dot-product]]. Else,\n  returns\n\n  $$\\Re(z_1)\\Re(z_2) + \\Im(z_1)\\Im(z_2)$$",(cljs.core.truth_(sicmutils.numsymb.dot_product)?sicmutils.numsymb.dot_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("quotient?"),new cljs.core.Var(function(){return sicmutils.numsymb.quotient_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","quotient?","sicmutils.numsymb/quotient?",251127904,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"quotient?","quotient?",895716076,null),"sicmutils/numsymb.cljc",15,1,40,40,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.quotient_QMARK_)?sicmutils.numsymb.quotient_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt"),new cljs.core.Var(function(){return sicmutils.numsymb.sqrt;},new cljs.core.Symbol("sicmutils.numsymb","sqrt","sicmutils.numsymb/sqrt",837366626,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"sqrt","sqrt",370479598,null),"sicmutils/numsymb.cljc",10,1,380,380,cljs.core.List.EMPTY,"Square root implementation that attempts to preserve exact numbers wherever\n  possible. If the incoming value is not exact, simply computes sqrt.",(cljs.core.truth_(sicmutils.numsymb.sqrt)?sicmutils.numsymb.sqrt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symbolic-operator"),new cljs.core.Var(function(){return sicmutils.numsymb.symbolic_operator;},new cljs.core.Symbol("sicmutils.numsymb","symbolic-operator","sicmutils.numsymb/symbolic-operator",-13541998,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"symbolic-operator","symbolic-operator",-644006930,null),"sicmutils/numsymb.cljc",24,1,648,648,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given a symbol (like `'+`) returns an applicable operator if there is a\n  corresponding symbolic operator construction available.",(cljs.core.truth_(sicmutils.numsymb.symbolic_operator)?sicmutils.numsymb.symbolic_operator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pi-over-4-mod-pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.pi_over_4_mod_pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","pi-over-4-mod-pi?","sicmutils.numsymb/pi-over-4-mod-pi?",-981630260,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"pi-over-4-mod-pi?","pi-over-4-mod-pi?",801743152,null),"sicmutils/numsymb.cljc",32,1,191,191,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.pi_over_4_mod_pi_QMARK_)?sicmutils.numsymb.pi_over_4_mod_pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("derivative"),new cljs.core.Var(function(){return sicmutils.numsymb.derivative;},new cljs.core.Symbol("sicmutils.numsymb","derivative","sicmutils.numsymb/derivative",-669241260,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"derivative","derivative",-1233120304,null),"sicmutils/numsymb.cljc",26,1,493,493,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Returns the symbolic derivative of the expression `expr`, which should\n  represent a function like `f`.\n\n  If the expression is already a derivative like `(D f)` or `((expt D 2) f)`,\n  `derivative` will increase the power of the exponent.\n\n  For example:\n\n  ```clojure\n  (derivative 'f)              ;;=> (D f)\n  (derivative '(D f))          ;;=> ((expt D 2) f)\n  (derivative '((expt D 2) f)) ;;=> ((expt D 3) f)\n  ```",(cljs.core.truth_(sicmutils.numsymb.derivative)?sicmutils.numsymb.derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated-derivative?"),new cljs.core.Var(function(){return sicmutils.numsymb.iterated_derivative_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","iterated-derivative?","sicmutils.numsymb/iterated-derivative?",-37275561,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"iterated-derivative?","iterated-derivative?",-1758259757,null),"sicmutils/numsymb.cljc",27,1,44,44,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),null,(cljs.core.truth_(sicmutils.numsymb.iterated_derivative_QMARK_)?sicmutils.numsymb.iterated_derivative_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-mod-2pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.zero_mod_2pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","zero-mod-2pi?","sicmutils.numsymb/zero-mod-2pi?",-840216841,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"zero-mod-2pi?","zero-mod-2pi?",-167285901,null),"sicmutils/numsymb.cljc",28,1,189,189,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.zero_mod_2pi_QMARK_)?sicmutils.numsymb.zero_mod_2pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*incremental-simplifier*"),new cljs.core.Var(function(){return sicmutils.numsymb._STAR_incremental_simplifier_STAR_;},new cljs.core.Symbol("sicmutils.numsymb","*incremental-simplifier*","sicmutils.numsymb/*incremental-simplifier*",1800532880,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"*incremental-simplifier*","*incremental-simplifier*",231067924,null),"sicmutils/numsymb.cljc",27,1,true,17,23,cljs.core.List.EMPTY,"When bound to a simplifier (a function from symbolic expression =>\n  symbolic expression), this simplifier will be called after every operation\n  performed on `sicmutils.abstract.number` instances.\n\n  `nil` by default.",(cljs.core.truth_(sicmutils.numsymb._STAR_incremental_simplifier_STAR_)?sicmutils.numsymb._STAR_incremental_simplifier_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operands"),new cljs.core.Var(function(){return sicmutils.numsymb.operands;},new cljs.core.Symbol("sicmutils.numsymb","operands","sicmutils.numsymb/operands",1414457649,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"operands","operands",1252182965,null),"sicmutils/numsymb.cljc",14,1,26,26,cljs.core.List.EMPTY,null,((sicmutils.numsymb.operands)?sicmutils.numsymb.operands.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pi-over-2-mod-pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.pi_over_2_mod_pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","pi-over-2-mod-pi?","sicmutils.numsymb/pi-over-2-mod-pi?",680396491,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"pi-over-2-mod-pi?","pi-over-2-mod-pi?",35322711,null),"sicmutils/numsymb.cljc",32,1,188,188,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.pi_over_2_mod_pi_QMARK_)?sicmutils.numsymb.pi_over_2_mod_pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt?"),new cljs.core.Var(function(){return sicmutils.numsymb.sqrt_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","sqrt?","sicmutils.numsymb/sqrt?",-1934199876,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"sqrt?","sqrt?",-1493021640,null),"sicmutils/numsymb.cljc",11,1,38,38,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.sqrt_QMARK_)?sicmutils.numsymb.sqrt_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("product?"),new cljs.core.Var(function(){return sicmutils.numsymb.product_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","product?","sicmutils.numsymb/product?",-236164737,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"product?","product?",242454523,null),"sicmutils/numsymb.cljc",14,1,37,37,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.product_QMARK_)?sicmutils.numsymb.product_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-mod-pi?"),new cljs.core.Var(function(){return sicmutils.numsymb.zero_mod_pi_QMARK_;},new cljs.core.Symbol("sicmutils.numsymb","zero-mod-pi?","sicmutils.numsymb/zero-mod-pi?",-267005968,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"zero-mod-pi?","zero-mod-pi?",-289805188,null),"sicmutils/numsymb.cljc",27,1,184,184,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.zero_mod_pi_QMARK_)?sicmutils.numsymb.zero_mod_pi_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("operator"),new cljs.core.Var(function(){return sicmutils.numsymb.operator;},new cljs.core.Symbol("sicmutils.numsymb","operator","sicmutils.numsymb/operator",-860734367,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numsymb","sicmutils.numsymb",1124080728,null),new cljs.core.Symbol(null,"operator","operator",-220343811,null),"sicmutils/numsymb.cljc",14,1,25,25,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.numsymb.operator)?sicmutils.numsymb.operator.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bulirsch-stoer-sum"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bulirsch_stoer_sum;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bulirsch-stoer-sum","sicmutils.rational-function.interpolate/bulirsch-stoer-sum",-285694570,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bulirsch-stoer-sum","bulirsch-stoer-sum",-265874685,null),"sicmutils/rational_function/interpolate.cljc",25,1,267,267,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns the best approximation of `x` using a rational\n  function fitted to all points in `xs` using the algorithm described\n  in [[modified-bulirsch-stoer]].\n\n  Faster than, but equivalent to, `(last ([[bulirsch-stoer]] xs x))`",(cljs.core.truth_(sicmutils.rational_function.interpolate.bulirsch_stoer_sum)?sicmutils.rational_function.interpolate.bulirsch_stoer_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-bulirsch-stoer-fold"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.modified_bulirsch_stoer_fold;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","modified-bulirsch-stoer-fold","sicmutils.rational-function.interpolate/modified-bulirsch-stoer-fold",153215162,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"modified-bulirsch-stoer-fold","modified-bulirsch-stoer-fold",258037031,null),"sicmutils/rational_function/interpolate.cljc",35,1,245,245,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given some point `x`, returns a fold that accumulates rows of a rational\n  function interpolation tableau providing successively better estimates (at the\n  value `x`) of a rational function interpolated to all seen points.\n\n  The 2-arity aggregation step takes:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x_new (f x_new)]`\n\n  Returns a function that accepts:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x (f x)]`\n\n  and returns the next row of the tableau using the algorithm described in\n  [[modified-bulirsch-stoer]].",(cljs.core.truth_(sicmutils.rational_function.interpolate.modified_bulirsch_stoer_fold)?sicmutils.rational_function.interpolate.modified_bulirsch_stoer_fold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bs-prepare"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bs_prepare;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bs-prepare","sicmutils.rational-function.interpolate/bs-prepare",-368158571,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bs-prepare","bs-prepare",-1806775766,null),"sicmutils/rational_function/interpolate.cljc",17,1,78,78,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"fx","fx",402701955,null)], null)], null)),null,(cljs.core.truth_(sicmutils.rational_function.interpolate.bs_prepare)?sicmutils.rational_function.interpolate.bs_prepare.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bulirsch-stoer-scan"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bulirsch_stoer_scan;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bulirsch-stoer-scan","sicmutils.rational-function.interpolate/bulirsch-stoer-scan",-1740385668,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bulirsch-stoer-scan","bulirsch-stoer-scan",-1711062801,null),"sicmutils/rational_function/interpolate.cljc",26,1,278,278,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns a lazy sequence of successive approximations of\n  `x` using rational functions fitted to the first point, then the first and\n  second points, etc. using the algorithm described\n  in [[modified-bulirsch-stoer]].\n\n  Equivalent to `([[bulirsch-stoer]] xs x)`.",(cljs.core.truth_(sicmutils.rational_function.interpolate.bulirsch_stoer_scan)?sicmutils.rational_function.interpolate.bulirsch_stoer_scan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bs-merge"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bs_merge;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bs-merge","sicmutils.rational-function.interpolate/bs-merge",1435778514,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bs-merge","bs-merge",1465164655,null),"sicmutils/rational_function/interpolate.cljc",15,1,81,81,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.rational_function.interpolate.bs_merge)?sicmutils.rational_function.interpolate.bs_merge.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-bulirsch-stoer-scan"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.modified_bulirsch_stoer_scan;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","modified-bulirsch-stoer-scan","sicmutils.rational-function.interpolate/modified-bulirsch-stoer-scan",2132711679,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"modified-bulirsch-stoer-scan","modified-bulirsch-stoer-scan",1926311504,null),"sicmutils/rational_function/interpolate.cljc",35,1,301,301,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns a lazy sequence of successive approximations of\n  `x` using rational functions fitted to the first point, then the first and\n  second points, etc. using the algorithm described\n  in [[modified-bulirsch-stoer]].\n\n  Equivalent to `([[modified-bulirsch-stoer]] xs x)`.",(cljs.core.truth_(sicmutils.rational_function.interpolate.modified_bulirsch_stoer_scan)?sicmutils.rational_function.interpolate.modified_bulirsch_stoer_scan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-bulirsch-stoer-sum"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.modified_bulirsch_stoer_sum;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","modified-bulirsch-stoer-sum","sicmutils.rational-function.interpolate/modified-bulirsch-stoer-sum",-614099899,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"modified-bulirsch-stoer-sum","modified-bulirsch-stoer-sum",-651883568,null),"sicmutils/rational_function/interpolate.cljc",34,1,290,290,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns the best approximation of `x` using a rational\n  function fitted to all points in `xs` using the algorithm described\n  in [[modified-bulirsch-stoer]].\n\n  Faster than, but equivalent to, `(last ([[modified-bulirsch-stoer]] xs x))`",(cljs.core.truth_(sicmutils.rational_function.interpolate.modified_bulirsch_stoer_sum)?sicmutils.rational_function.interpolate.modified_bulirsch_stoer_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bulirsch-stoer-recursive"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bulirsch_stoer_recursive;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bulirsch-stoer-recursive","sicmutils.rational-function.interpolate/bulirsch-stoer-recursive",1138546945,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bulirsch-stoer-recursive","bulirsch-stoer-recursive",1302097042,null),"sicmutils/rational_function/interpolate.cljc",31,1,28,28,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns the value of `P(x)`, where `P` is rational function fit (using the\n  Bulirsch-Stoer algorithm, of similar style to Neville's algorithm described in\n  [[sicmutils.numerical.interpolate.polynomial]]) to every point in the supplied\n  sequence `points`.\n\n  `points`: is a sequence of pairs of the form `[x (f x)]`.\n\n  \"The Bulirsch-Stoer algorithm produces the so-called diagonal rational\n  function, with the degrees of numerator and denominator equal (if m is even)\n  or with the degree of the denominator larger by one if m is odd.\" ~ Press,\n  Numerical Recipes, p105\n\n  The implementation follows [Equation 3.2.3 on on page 105 of\n  Press](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-2.pdf).\n\n  References:\n\n    - Stoer & Bulirsch, ['Introduction to Numerical Analysis'](https://www.amazon.com/Introduction-Numerical-Analysis-Applied-Mathematics/dp/144193006X)\n    - [PDF of the same reference](http://www.math.uni.wroc.pl/~olech/metnum2/Podreczniki/(eBook)%20Introduction%20to%20Numerical%20Analysis%20-%20J.Stoer,R.Bulirsch.pdf)\n    - Press's Numerical Recipes (p105), [Section 3.2](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-2.pdf)",(cljs.core.truth_(sicmutils.rational_function.interpolate.bulirsch_stoer_recursive)?sicmutils.rational_function.interpolate.bulirsch_stoer_recursive.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-bulirsch-stoer"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.modified_bulirsch_stoer;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","modified-bulirsch-stoer","sicmutils.rational-function.interpolate/modified-bulirsch-stoer",1934478472,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"modified-bulirsch-stoer","modified-bulirsch-stoer",1854691701,null),"sicmutils/rational_function/interpolate.cljc",30,1,196,196,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Similar to [[bulirsch-stoer]] (the interface is identical) but slightly more\n  efficient. Internally this builds up its estimates by tracking the delta from\n  the previous estimate.\n\n  This non-obvious change lets us swap an addition in for a division,\n  making the algorithm slightly more efficient.\n\n  See [[bulirsch-stoer]] for usage information, and info about the required\n  structure of the arguments.\n\n  References:\n\n   - Press's Numerical Recipes (p105), [Section 3.2](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-2.pdf)",(cljs.core.truth_(sicmutils.rational_function.interpolate.modified_bulirsch_stoer)?sicmutils.rational_function.interpolate.modified_bulirsch_stoer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bulirsch-stoer"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bulirsch_stoer;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bulirsch-stoer","sicmutils.rational-function.interpolate/bulirsch-stoer",-2008383142,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bulirsch-stoer","bulirsch-stoer",-1970651209,null),"sicmutils/rational_function/interpolate.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,93,93,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),"Takes\n\n  - a (potentially lazy) sequence of `points` of the form `[x (f x)]` and\n  - a point `x` to interpolate\n\n  and generates a lazy sequence of approximations of `P(x)`. Each entry in the\n  return sequence incorporates one more point from `points` into the `P(x)`\n  estimate.\n\n  `P(x)` is rational function fit (using the Bulirsch-Stoer algorithm, of\n  similar style to Neville's algorithm described\n  in [[sicmutils.numerical.interpolate.polynomial]]) to every point in the\n  supplied sequence `points`.\n\n  \"The Bulirsch-Stoer algorithm produces the so-called diagonal rational\n  function, with the degrees of numerator and denominator equal (if m is even)\n  or with the degree of the denominator larger by one if m is odd.\" ~ Press,\n  Numerical Recipes, p105\n\n  The implementation follows [Equation 3.2.3 on on page 105 of\n  Press](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-2.pdf).\n\n  ### Column\n\n  If you supply an integer for the third (optional) `column` argument,\n  `bulirsch-stoer` will return that /column/ offset the interpolation tableau\n  instead of the first row. This will give you a sequence of nth-order\n  polynomial approximations taken between point `i` and the next `n` points.\n\n  As a reminder, this is the shape of the tableau:\n\n  ```\n  p0 p01 p012 p0123 p01234\n  p1 p12 p123 p1234 .\n  p2 p23 p234 .     .\n  p3 p34 .    .     .\n  p4 .   .    .     .\n  ```\n\n  So supplying a `column` of `1` gives a sequence of 2-point approximations\n  between pairs of points; `2` gives 3-point approximations between successive\n  triplets, etc.\n\n  References:\n\n    - Stoer & Bulirsch, ['Introduction to Numerical Analysis'](https://www.amazon.com/Introduction-Numerical-Analysis-Applied-Mathematics/dp/144193006X)\n    - [PDF of the same reference](http://www.math.uni.wroc.pl/~olech/metnum2/Podreczniki/(eBook)%20Introduction%20to%20Numerical%20Analysis%20-%20J.Stoer,R.Bulirsch.pdf)\n    - Press's Numerical Recipes (p105), [Section 3.2](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-2.pdf)",(cljs.core.truth_(sicmutils.rational_function.interpolate.bulirsch_stoer)?sicmutils.rational_function.interpolate.bulirsch_stoer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bulirsch-stoer-fold"),new cljs.core.Var(function(){return sicmutils.rational_function.interpolate.bulirsch_stoer_fold;},new cljs.core.Symbol("sicmutils.rational-function.interpolate","bulirsch-stoer-fold","sicmutils.rational-function.interpolate/bulirsch-stoer-fold",30136107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.rational-function.interpolate","sicmutils.rational-function.interpolate",1867511969,null),new cljs.core.Symbol(null,"bulirsch-stoer-fold","bulirsch-stoer-fold",59460024,null),"sicmutils/rational_function/interpolate.cljc",26,1,222,222,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given some point `x`, returns a fold that accumulates rows of a rational\n  function interpolation tableau providing successively better estimates (at the\n  value `x`) of a rational function interpolated to all seen points.\n\n  The 2-arity aggregation step takes:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x_new (f x_new)]`\n\n  Returns a function that accepts:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x (f x)]`\n\n  and returns the next row of the tableau using the algorithm described in\n  [[bulirsch-stoer]].",(cljs.core.truth_(sicmutils.rational_function.interpolate.bulirsch_stoer_fold)?sicmutils.rational_function.interpolate.bulirsch_stoer_fold.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure?"),new cljs.core.Var(function(){return sicmutils.structure.structure_QMARK_;},new cljs.core.Symbol("sicmutils.structure","structure?","sicmutils.structure/structure?",517418159,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"structure?","structure?",-1962489375,null),"sicmutils/structure.cljc",17,1,378,378,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns `true` if `s` is a structure, false otherwise. (Vectors are treated as\n  up structures.)",(cljs.core.truth_(sicmutils.structure.structure_QMARK_)?sicmutils.structure.structure_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down-of-ups?"),new cljs.core.Var(function(){return sicmutils.structure.down_of_ups_QMARK_;},new cljs.core.Symbol("sicmutils.structure","down-of-ups?","sicmutils.structure/down-of-ups?",-2000895640,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"down-of-ups?","down-of-ups?",2140316834,null),"sicmutils/structure.cljc",15,1,478,481,cljs.core.List.EMPTY,"Returns true if `s` is a `down` structure containing all `up`\n structures of the same size, false otherwise.",(cljs.core.truth_(sicmutils.structure.down_of_ups_QMARK_)?sicmutils.structure.down_of_ups_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:nth"),new cljs.core.Var(function(){return sicmutils.structure.s_COLON_nth;},new cljs.core.Symbol("sicmutils.structure","s:nth","sicmutils.structure/s:nth",1307884712,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"s:nth","s:nth",-662023710,null),"sicmutils/structure.cljc",21,1,323,323,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Structure-specific version of `nth`; acts as [[clojure.core/nth]] for\n  structural things.\n\n  For non-sequential things, if `i` is `0`, acts as identity. Throws otherwise.",(cljs.core.truth_(sicmutils.structure.s_COLON_nth)?sicmutils.structure.s_COLON_nth.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("same-orientation?"),new cljs.core.Var(function(){return sicmutils.structure.same_orientation_QMARK_;},new cljs.core.Symbol("sicmutils.structure","same-orientation?","sicmutils.structure/same-orientation?",795283469,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"same-orientation?","same-orientation?",-1650887357,null),"sicmutils/structure.cljc",24,1,404,404,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Returns true if the supplied structures have the same orientation, false\n  otherwise.",(cljs.core.truth_(sicmutils.structure.same_orientation_QMARK_)?sicmutils.structure.same_orientation_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up?"),new cljs.core.Var(function(){return sicmutils.structure.up_QMARK_;},new cljs.core.Symbol("sicmutils.structure","up?","sicmutils.structure/up?",-717336567,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"up?","up?",1718386499,null),"sicmutils/structure.cljc",10,1,385,385,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns `true` if `s` is an `up` structure, false otherwise.",(cljs.core.truth_(sicmutils.structure.up_QMARK_)?sicmutils.structure.up_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-dot-product"),new cljs.core.Var(function(){return sicmutils.structure.vector_dot_product;},new cljs.core.Symbol("sicmutils.structure","vector-dot-product","sicmutils.structure/vector-dot-product",-1425717926,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"vector-dot-product","vector-dot-product",433547396,null),"sicmutils/structure.cljc",25,1,856,856,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v1","v1",-2141311508,null),new cljs.core.Symbol(null,"v2","v2",1875554983,null)], null)),"Returns the (vector) dot product of `v1` and `v2`; this is equivalent to the sum\n  of the pairwise product of each entry.\n\n  The arguments must have identical length, and all pairwise entries must be\n  compatible via [[g/*]].",(cljs.core.truth_(sicmutils.structure.vector_dot_product)?sicmutils.structure.vector_dot_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector->down"),new cljs.core.Var(function(){return sicmutils.structure.vector__GT_down;},new cljs.core.Symbol("sicmutils.structure","vector->down","sicmutils.structure/vector->down",-1331028914,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"vector->down","vector->down",595456260,null),"sicmutils/structure.cljc",19,1,521,521,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Form a down-tuple from a vector.\n\n  NOTE that this is an alias of [[down*]] that is more restrictive, in that it\n  only accepts a vector. Use [[down*]] if you'd like to pass an arbitrary\n  sequence. (If you pass a vector to [[down*]]) it will be just as efficient.",(cljs.core.truth_(sicmutils.structure.vector__GT_down)?sicmutils.structure.vector__GT_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:count"),new cljs.core.Var(function(){return sicmutils.structure.s_COLON_count;},new cljs.core.Symbol("sicmutils.structure","s:count","sicmutils.structure/s:count",516388498,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"s:count","s:count",-1944775228,null),"sicmutils/structure.cljc",23,1,308,308,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the count for sequential `s`, `1` otherwise.",(cljs.core.truth_(sicmutils.structure.s_COLON_count)?sicmutils.structure.s_COLON_count.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-up"),new cljs.core.Var(function(){return sicmutils.structure.literal_up;},new cljs.core.Symbol("sicmutils.structure","literal-up","sicmutils.structure/literal-up",-918293474,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"literal-up","literal-up",2121652004,null),"sicmutils/structure.cljc",17,1,592,592,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"size","size",-1555742762,null)], null)),"Generates an `up` structure of dimension `size` populated by symbolic entries,\n  each prefixed by the supplied symbol `sym`.\n\n  For example:\n\n  ```clojure\n  (= (literal-up 'x 3)\n     (up 'x\u21910 'x\u21911 'x\u21912))\n  ```",(cljs.core.truth_(sicmutils.structure.literal_up)?sicmutils.structure.literal_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("valid-orientation?"),new cljs.core.Var(function(){return sicmutils.structure.valid_orientation_QMARK_;},new cljs.core.Symbol("sicmutils.structure","valid-orientation?","sicmutils.structure/valid-orientation?",613679839,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"valid-orientation?","valid-orientation?",1508041189,null),"sicmutils/structure.cljc",25,1,398,398,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o","o",290524299,null)], null)),"Returns true if the supplied orientation lives in the set of allowed\n  orientations, false otherwise.",(cljs.core.truth_(sicmutils.structure.valid_orientation_QMARK_)?sicmutils.structure.valid_orientation_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symbol-set"),new cljs.core.Var(function(){return sicmutils.structure.symbol_set;},new cljs.core.Symbol("sicmutils.structure","symbol-set","sicmutils.structure/symbol-set",-775801793,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"symbol-set","symbol-set",589043653,null),"sicmutils/structure.cljc",25,1,32,32,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.structure.symbol_set)?sicmutils.structure.symbol_set.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orientation->symbol"),new cljs.core.Var(function(){return sicmutils.structure.orientation__GT_symbol;},new cljs.core.Symbol("sicmutils.structure","orientation->symbol","sicmutils.structure/orientation->symbol",655835228,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"orientation->symbol","orientation->symbol",-1840677530,null),"sicmutils/structure.cljc",34,1,29,29,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.structure.orientation__GT_symbol)?sicmutils.structure.orientation__GT_symbol.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-tensor-info"),new cljs.core.Var(function(){return sicmutils.structure.two_tensor_info;},new cljs.core.Symbol("sicmutils.structure","two-tensor-info","sicmutils.structure/two-tensor-info",1266192854,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"two-tensor-info","two-tensor-info",-594608408,null),"sicmutils/structure.cljc",22,1,416,416,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given an `up` or `down` structure containing structures of the same\n  orientation and size (a 2 tensor), returns a dictionary with keys:\n\n  ```clj\n  {:outer-orientation <::up or ::down>\n   :inner-orientation <::up or ::down>\n   :outer-size <int>\n   :inner-size <int>}\n\n  If `s` is /not/ a valid tensor, returns nil.\n  ```",(cljs.core.truth_(sicmutils.structure.two_tensor_info)?sicmutils.structure.two_tensor_info.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down"),new cljs.core.Var(function(){return sicmutils.structure.down;},new cljs.core.Symbol("sicmutils.structure","down","sicmutils.structure/down",140665603,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"down","down",-1089190199,null),"sicmutils/structure.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"xs","xs",-2004992428,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,531,531,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Construct a down (covariant) tuple from the arguments. Variadic version\n  of [[down*]].",(cljs.core.truth_(sicmutils.structure.down)?sicmutils.structure.down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make"),new cljs.core.Var(function(){return sicmutils.structure.make;},new cljs.core.Symbol("sicmutils.structure","make","sicmutils.structure/make",-2033288900,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"make","make",356488202,null),"sicmutils/structure.cljc",11,1,486,486,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Generate a structure with the supplied orientation, given some sequence `xs`",(cljs.core.truth_(sicmutils.structure.make)?sicmutils.structure.make.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-up?"),new cljs.core.Var(function(){return sicmutils.structure.two_up_QMARK_;},new cljs.core.Symbol("sicmutils.structure","two-up?","sicmutils.structure/two-up?",448847984,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"two-up?","two-up?",-1449212662,null),"sicmutils/structure.cljc",10,1,466,469,cljs.core.List.EMPTY,"Returns true if `s` is an `up` structure containing all `up`\nstructures of the same size, false otherwise.",(cljs.core.truth_(sicmutils.structure.two_up_QMARK_)?sicmutils.structure.two_up_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->prototype"),new cljs.core.Var(function(){return sicmutils.structure.structure__GT_prototype;},new cljs.core.Symbol("sicmutils.structure","structure->prototype","sicmutils.structure/structure->prototype",-1602464911,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"structure->prototype","structure->prototype",927102475,null),"sicmutils/structure.cljc",27,1,734,734,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name","name",-810760592,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Accepts\n\n  - some symbolic (or string) `name`\n  - a structure `s`\n\n  and returns a new structure of identical shape, with symbolic entries like\n  `'x\u21910_1` that show their access chain with proper orientations for each step.",(cljs.core.truth_(sicmutils.structure.structure__GT_prototype)?sicmutils.structure.structure__GT_prototype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("unflatten"),new cljs.core.Var(function(){return sicmutils.structure.unflatten;},new cljs.core.Symbol("sicmutils.structure","unflatten","sicmutils.structure/unflatten",-1623576607,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"unflatten","unflatten",527019,null),"sicmutils/structure.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"constructor","constructor",-313397284,null),new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"constructor","constructor",-313397284,null),new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,752,752,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"constructor","constructor",-313397284,null),new cljs.core.Symbol(null,"values","values",2013177083,null),new cljs.core.Symbol(null,"struct","struct",325972931,null)], null)),"Given:\n\n  - a sequence of `values`\n  - a model `struct`\n\n  Returns a new structure generated by unpacking `values` into a structure with\n  the same shape as `struct`.",(cljs.core.truth_(sicmutils.structure.unflatten)?sicmutils.structure.unflatten.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("opposite"),new cljs.core.Var(function(){return sicmutils.structure.opposite;},new cljs.core.Symbol("sicmutils.structure","opposite","sicmutils.structure/opposite",1612793653,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"opposite","opposite",-720147765,null),"sicmutils/structure.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,542,542,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"For a non-[[Structure]] `s`, the single-arity case acts as [[identity]]. For\n  a [[Structure]], returns an identical structure with its orientation\n  reversed (up becomes down, down becomes up).\n\n  NOTE that a vector is interpreted as an `up` structure, so:\n\n  (opposite [1 2 3])\n  ;;=> (down 1 2 3)\n\n  The two-arity case returns a new [[Structure]] of opposite orientation to `s`\n  with the contents of the sequence `xs`.",(cljs.core.truth_(sicmutils.structure.opposite)?sicmutils.structure.opposite.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down?"),new cljs.core.Var(function(){return sicmutils.structure.down_QMARK_;},new cljs.core.Symbol("sicmutils.structure","down?","sicmutils.structure/down?",-1294059418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"down?","down?",-953416276,null),"sicmutils/structure.cljc",12,1,392,392,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns `true` if `s` is a `down` structure, false otherwise.",(cljs.core.truth_(sicmutils.structure.down_QMARK_)?sicmutils.structure.down_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-zero"),new cljs.core.Var(function(){return sicmutils.structure.compatible_zero;},new cljs.core.Symbol("sicmutils.structure","compatible-zero","sicmutils.structure/compatible-zero",-1817484858,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"compatible-zero","compatible-zero",-453704180,null),"sicmutils/structure.cljc",22,1,809,809,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a structure compatible for multiplication with `s` down to 0.",(cljs.core.truth_(sicmutils.structure.compatible_zero)?sicmutils.structure.compatible_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("same"),new cljs.core.Var(function(){return sicmutils.structure.same;},new cljs.core.Symbol("sicmutils.structure","same","sicmutils.structure/same",395500582,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"same","same",-1566530708,null),"sicmutils/structure.cljc",11,1,537,537,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a structure containing `xs` with the same orientation as `s`.",(cljs.core.truth_(sicmutils.structure.same)?sicmutils.structure.same.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-for-contraction?"),new cljs.core.Var(function(){return sicmutils.structure.compatible_for_contraction_QMARK_;},new cljs.core.Symbol("sicmutils.structure","compatible-for-contraction?","sicmutils.structure/compatible-for-contraction?",1846309184,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"compatible-for-contraction?","compatible-for-contraction?",-50704882,null),"sicmutils/structure.cljc",43,1,838,838,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Returns `true` if `s` and `t` are\n\n  - of opposite orientation\n  - equal in length\n  - are full of elements also compatible for contraction (also true if either\n    pair is NOT a structure)\n\n  false otherwise.",(cljs.core.truth_(sicmutils.structure.compatible_for_contraction_QMARK_)?sicmutils.structure.compatible_for_contraction_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dual-zero"),new cljs.core.Var(function(){return sicmutils.structure.dual_zero;},new cljs.core.Symbol("sicmutils.structure","dual-zero","sicmutils.structure/dual-zero",-1445566535,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"dual-zero","dual-zero",973357295,null),"sicmutils/structure.cljc",12,1,815,816,cljs.core.List.EMPTY,"Alias for [[compatible-zero]].",(cljs.core.truth_(sicmutils.structure.dual_zero)?sicmutils.structure.dual_zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose"),new cljs.core.Var(function(){return sicmutils.structure.transpose;},new cljs.core.Symbol("sicmutils.structure","transpose","sicmutils.structure/transpose",-930422279,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),"sicmutils/structure.cljc",16,1,775,775,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a structure with the same shape as `s`, with all orientations\n  inverted.",(cljs.core.truth_(sicmutils.structure.transpose)?sicmutils.structure.transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*allow-incompatible-multiplication*"),new cljs.core.Var(function(){return sicmutils.structure._STAR_allow_incompatible_multiplication_STAR_;},new cljs.core.Symbol("sicmutils.structure","*allow-incompatible-multiplication*","sicmutils.structure/*allow-incompatible-multiplication*",-438092314,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"*allow-incompatible-multiplication*","*allow-incompatible-multiplication*",1994211376,null),"sicmutils/structure.cljc",51,1,true,25,25,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.structure._STAR_allow_incompatible_multiplication_STAR_)?sicmutils.structure._STAR_allow_incompatible_multiplication_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typical-object"),new cljs.core.Var(function(){return sicmutils.structure.typical_object;},new cljs.core.Symbol("sicmutils.structure","typical-object","sicmutils.structure/typical-object",1267156966,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"typical-object","typical-object",-699041232,null),"sicmutils/structure.cljc",21,1,803,803,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a structure of the same shape and orientation as `s`, generated by\n  substituting gensymmed symbols in for each entry.",(cljs.core.truth_(sicmutils.structure.typical_object)?sicmutils.structure.typical_object.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose-outer"),new cljs.core.Var(function(){return sicmutils.structure.transpose_outer;},new cljs.core.Symbol("sicmutils.structure","transpose-outer","sicmutils.structure/transpose-outer",-1107704246,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"transpose-outer","transpose-outer",248243056,null),"sicmutils/structure.cljc",22,1,785,785,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new structure with the same orientation as the first element of `s`,\n  filled with elements of the same orientation as `s`.\n\n  Each element is generating by taking the first element of each entry in `s`,\n  the the second, etc... In that sense this is similar to a traditional matrix\n  transpose.\n\n  A comment from `scmutils` states:\n\n  'used only in symmetrize-Christoffel in\n  src/calculus/covariant-derivative.scm.'",(cljs.core.truth_(sicmutils.structure.transpose_outer)?sicmutils.structure.transpose_outer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up*"),new cljs.core.Var(function(){return sicmutils.structure.up_STAR_;},new cljs.core.Symbol("sicmutils.structure","up*","sicmutils.structure/up*",-19043909,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"up*","up*",1811123313,null),"sicmutils/structure.cljc",10,1,492,492,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Construct an up (contravariant) tuple from the supplied sequence. For a\n  variadic version, see [[up]].",(cljs.core.truth_(sicmutils.structure.up_STAR_)?sicmutils.structure.up_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generate"),new cljs.core.Var(function(){return sicmutils.structure.generate;},new cljs.core.Symbol("sicmutils.structure","generate","sicmutils.structure/generate",-354137717,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"generate","generate",1477078705,null),"sicmutils/structure.cljc",15,1,563,563,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dimension","dimension",-2111181571,null),new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Generate a structure with the given `orientation` whose elements are\n\n  (f i)\n\n  where i ranges from `[0..dimension)`.",(cljs.core.truth_(sicmutils.structure.generate)?sicmutils.structure.generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orientation"),new cljs.core.Var(function(){return sicmutils.structure.orientation;},new cljs.core.Symbol("sicmutils.structure","orientation","sicmutils.structure/orientation",331706052,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),"sicmutils/structure.cljc",18,1,300,300,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns the orientation of `s`, either `::up` or `::down`. Defaults to `::up`,\n  even for non-structures.",(cljs.core.truth_(sicmutils.structure.orientation)?sicmutils.structure.orientation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Structure"),new cljs.core.Var(function(){return sicmutils.structure.Structure;},new cljs.core.Symbol("sicmutils.structure","Structure","sicmutils.structure/Structure",-979637560,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/structure.cljc",new cljs.core.Keyword(null,"line","line",212345235),69,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Structure","Structure",1458950130,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.structure.Structure)?sicmutils.structure.Structure.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-down"),new cljs.core.Var(function(){return sicmutils.structure.literal_down;},new cljs.core.Symbol("sicmutils.structure","literal-down","sicmutils.structure/literal-down",1120500025,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"literal-down","literal-down",-1340662285,null),"sicmutils/structure.cljc",19,1,605,605,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"size","size",-1555742762,null)], null)),"Generates a `down` structure of dimension `size` populated by symbolic entries,\n  each prefixed by the supplied symbol `sym`.\n\n  For example:\n\n  ```clojure\n  (= (literal-down 'x 3)\n     (down 'x_0 'x_1 'x_2))\n  ```",(cljs.core.truth_(sicmutils.structure.literal_down)?sicmutils.structure.literal_down.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Structure"),new cljs.core.Var(function(){return sicmutils.structure.__GT_Structure;},new cljs.core.Symbol("sicmutils.structure","->Structure","sicmutils.structure/->Structure",789380842,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 21, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IIndexed","cljs.core/IIndexed",-436490749,null),"null",new cljs.core.Symbol("cljs.core","IReversible","cljs.core/IReversible",-1422278012,null),"null",new cljs.core.Symbol("cljs.core","IKVReduce","cljs.core/IKVReduce",878013381,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ICollection","cljs.core/ICollection",802638471,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("cljs.core","IFind","cljs.core/IFind",-1727519574,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("cljs.core","IEmptyableCollection","cljs.core/IEmptyableCollection",5045035,null),"null",new cljs.core.Symbol("cljs.core","ICounted","cljs.core/ICounted",-1299011378,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","IAssociative","cljs.core/IAssociative",-1700920611,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null",new cljs.core.Symbol("cljs.core","IReduce","cljs.core/IReduce",-577837345,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"->Structure","->Structure",-1170287724,null),"sicmutils/structure.cljc",19,1,new cljs.core.Keyword(null,"positional","positional",-203580463),69,69,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 16, [new cljs.core.Symbol("cljs.core","IIndexed","cljs.core/IIndexed",-436490749,null),"null",new cljs.core.Symbol("cljs.core","IReversible","cljs.core/IReversible",-1422278012,null),"null",new cljs.core.Symbol("cljs.core","IKVReduce","cljs.core/IKVReduce",878013381,null),"null",new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ICollection","cljs.core/ICollection",802638471,null),"null",new cljs.core.Symbol("cljs.core","IEmptyableCollection","cljs.core/IEmptyableCollection",5045035,null),"null",new cljs.core.Symbol("cljs.core","ICounted","cljs.core/ICounted",-1299011378,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null",new cljs.core.Symbol("cljs.core","IAssociative","cljs.core/IAssociative",-1700920611,null),"null",new cljs.core.Symbol("cljs.core","ILookup","cljs.core/ILookup",-150575073,null),"null",new cljs.core.Symbol("cljs.core","IReduce","cljs.core/IReduce",-577837345,null),"null"], null), null),"Positional factory function for sicmutils.structure/Structure.",(cljs.core.truth_(sicmutils.structure.__GT_Structure)?sicmutils.structure.__GT_Structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->access-chains"),new cljs.core.Var(function(){return sicmutils.structure.structure__GT_access_chains;},new cljs.core.Symbol("sicmutils.structure","structure->access-chains","sicmutils.structure/structure->access-chains",2122463938,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"structure->access-chains","structure->access-chains",-204414988,null),"sicmutils/structure.cljc",31,1,712,712,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Return a structure of the same shape as `s` whose elements are access chains\n  corresponding to position of each element (i.e., the sequence of indices\n  needed to address that element via [[get-in]]).\n\n  Each access chain has the sequence of orientations (`::s/up`, `::s/down`)\n  associated with each step attached to it as metadata, under an `:orientations`\n  key. Use this if the orientation of the indices matters.",(cljs.core.truth_(sicmutils.structure.structure__GT_access_chains)?sicmutils.structure.structure__GT_access_chains.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("component"),new cljs.core.Var(function(){return sicmutils.structure.component;},new cljs.core.Symbol("sicmutils.structure","component","sicmutils.structure/component",869273763,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"component","component",-1098498987,null),"sicmutils/structure.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"indices","indices",422393184,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,336,336,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"indices","indices",422393184,null)], null)),"Given an access chain (a sequence of indices), return a function that accepts a\n  structure and returns the element at the specified access chain.",(cljs.core.truth_(sicmutils.structure.component)?sicmutils.structure.component.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cross-product"),new cljs.core.Var(function(){return sicmutils.structure.cross_product;},new cljs.core.Symbol("sicmutils.structure","cross-product","sicmutils.structure/cross-product",1480069439,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"cross-product","cross-product",-823528331,null),"sicmutils/structure.cljc",29,1,953,953,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Returns the cross product of structures of length 3. Input orientations are\n  ignored; result is an up-tuple.",(cljs.core.truth_(sicmutils.structure.cross_product)?sicmutils.structure.cross_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up-of-downs?"),new cljs.core.Var(function(){return sicmutils.structure.up_of_downs_QMARK_;},new cljs.core.Symbol("sicmutils.structure","up-of-downs?","sicmutils.structure/up-of-downs?",-1882665073,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"up-of-downs?","up-of-downs?",43706581,null),"sicmutils/structure.cljc",15,1,472,475,cljs.core.List.EMPTY,"Returns true if `s` is an `up` structure containing all `down`\nstructures of the same size, false otherwise.",(cljs.core.truth_(sicmutils.structure.up_of_downs_QMARK_)?sicmutils.structure.up_of_downs_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-down?"),new cljs.core.Var(function(){return sicmutils.structure.two_down_QMARK_;},new cljs.core.Symbol("sicmutils.structure","two-down?","sicmutils.structure/two-down?",-1259271221,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"two-down?","two-down?",640100597,null),"sicmutils/structure.cljc",12,1,460,463,cljs.core.List.EMPTY,"Returns true if `s` is a `down` structure containing all `down`\nstructures of the same size, false otherwise.",(cljs.core.truth_(sicmutils.structure.two_down_QMARK_)?sicmutils.structure.two_down_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("down*"),new cljs.core.Var(function(){return sicmutils.structure.down_STAR_;},new cljs.core.Symbol("sicmutils.structure","down*","sicmutils.structure/down*",-1121724061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"down*","down*",813038101,null),"sicmutils/structure.cljc",12,1,515,515,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Construct a down (covariant) tuple from the supplied sequence. For a\n  variadic version, see [[down]].",(cljs.core.truth_(sicmutils.structure.down_STAR_)?sicmutils.structure.down_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kronecker"),new cljs.core.Var(function(){return sicmutils.structure.kronecker;},new cljs.core.Symbol("sicmutils.structure","kronecker","sicmutils.structure/kronecker",1097578600,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"kronecker","kronecker",-759603946,null),"sicmutils/structure.cljc",16,1,52,52,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"j","j",242556762,null)], null)),"Returns `1` if `i`== `j`, `0` otherwise.",(cljs.core.truth_(sicmutils.structure.kronecker)?sicmutils.structure.kronecker.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("up"),new cljs.core.Var(function(){return sicmutils.structure.up;},new cljs.core.Symbol("sicmutils.structure","up","sicmutils.structure/up",-498407412,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"up","up",1370819414,null),"sicmutils/structure.cljc",9,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"xs","xs",-2004992428,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,508,508,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Construct an up (contravariant) tuple from the arguments.\n\n  Variadic version of [[up*]].",(cljs.core.truth_(sicmutils.structure.up)?sicmutils.structure.up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-shape"),new cljs.core.Var(function(){return sicmutils.structure.compatible_shape;},new cljs.core.Symbol("sicmutils.structure","compatible-shape","sicmutils.structure/compatible-shape",-200826707,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"compatible-shape","compatible-shape",2037767671,null),"sicmutils/structure.cljc",23,1,819,819,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a structure compatible for multiplication with `s` down to a scalar,\n  with the slots filled with gensyms.",(cljs.core.truth_(sicmutils.structure.compatible_shape)?sicmutils.structure.compatible_shape.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure->vector"),new cljs.core.Var(function(){return sicmutils.structure.structure__GT_vector;},new cljs.core.Symbol("sicmutils.structure","structure->vector","sicmutils.structure/structure->vector",310617673,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"structure->vector","structure->vector",-530711689,null),"sicmutils/structure.cljc",24,1,292,292,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Return the structure `s` in unoriented vector form.",(cljs.core.truth_(sicmutils.structure.structure__GT_vector)?sicmutils.structure.structure__GT_vector.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("opposite-orientation"),new cljs.core.Var(function(){return sicmutils.structure.opposite_orientation;},new cljs.core.Symbol("sicmutils.structure","opposite-orientation","sicmutils.structure/opposite-orientation",2016236995,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"opposite-orientation","opposite-orientation",-1960888039,null),"sicmutils/structure.cljc",26,1,38,38,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.structure.opposite_orientation)?sicmutils.structure.opposite_orientation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("s:*"),new cljs.core.Var(function(){return sicmutils.structure.s_COLON__STAR_;},new cljs.core.Symbol("sicmutils.structure","s:*","sicmutils.structure/s:*",113324293,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"s:*","s:*",-1273506213,null),"sicmutils/structure.cljc",19,1,881,881,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"If `s` and `t` are compatible for contraction, returns their vector dot\n  product.\n\n  Else, returns a new structure generated by multiplying `s` by every element of\n  `t`, following the usual multiplicating rules for whatever entry type exists.\n\n  If `*allow-incompatible-multiplication*` is set to false, `s` and `t` will be\n  checked for:\n\n  - opposite orientations,\n  - every element of `t` must be compatible for multiplication with all of `s`.\n\n  If those tests fail, `s:*` will throw.",(cljs.core.truth_(sicmutils.structure.s_COLON__STAR_)?sicmutils.structure.s_COLON__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector->up"),new cljs.core.Var(function(){return sicmutils.structure.vector__GT_up;},new cljs.core.Symbol("sicmutils.structure","vector->up","sicmutils.structure/vector->up",-260900991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"vector->up","vector->up",1833229019,null),"sicmutils/structure.cljc",17,1,498,498,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Form an up-tuple from a vector.\n\n  NOTE that this is an alias of [[up*]] that is more restrictive, in that it\n  only accepts a vector. Use [[up*]] if you'd like to pass an arbitrary\n  sequence. (If you pass a vector to [[up*]]) it will be just as efficient.",(cljs.core.truth_(sicmutils.structure.vector__GT_up)?sicmutils.structure.vector__GT_up.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("basis-unit"),new cljs.core.Var(function(){return sicmutils.structure.basis_unit;},new cljs.core.Symbol("sicmutils.structure","basis-unit","sicmutils.structure/basis-unit",726133418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"basis-unit","basis-unit",-1238004324,null),"sicmutils/structure.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"i","i",253690212,null)], null)),"Returns a basis sequence of `n` 0s, with `1` in the `i`th position.\n\n  If `n` is not supplied returns an infinite sequence.",(cljs.core.truth_(sicmutils.structure.basis_unit)?sicmutils.structure.basis_unit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map-chain"),new cljs.core.Var(function(){return sicmutils.structure.map_chain;},new cljs.core.Symbol("sicmutils.structure","map-chain","sicmutils.structure/map-chain",-1669310762,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"map-chain","map-chain",299004316,null),"sicmutils/structure.cljc",16,1,680,680,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new structure of equivalent shape to `s`, generated by applying `f`\n  to three arguments:\n\n  - the entry in the structure\n  - a vector of its 'access chain', ie, the path you'd pass\n    to [[clojure.core/get-in]] to access the entry\n  - a vector of orientations associated with each index in the access chain\n\n  For example:\n\n  ```clojure\n  (dorun (map-chain println (s/down (s/up 1 2) (s/up 3 4))))\n\n  1 [0 0] [:s/down :s/up]\n  2 [0 1] [:s/down :s/up]\n  3 [1 0] [:s/down :s/up]\n  4 [1 1] [:s/down :s/up]\n  ```",(cljs.core.truth_(sicmutils.structure.map_chain)?sicmutils.structure.map_chain.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scalar*structure"),new cljs.core.Var(function(){return sicmutils.structure.scalar_STAR_structure;},new cljs.core.Symbol("sicmutils.structure","scalar*structure","sicmutils.structure/scalar*structure",910506162,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"scalar*structure","scalar*structure",-1533862404,null),"sicmutils/structure.cljc",32,1,832,832,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"v","v",1661996586,null)], null)),"Returns a structure generated by multiplying every element of `v` by `s` (on\n  the left).",(cljs.core.truth_(sicmutils.structure.scalar_STAR_structure)?sicmutils.structure.scalar_STAR_structure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orientation->separator"),new cljs.core.Var(function(){return sicmutils.structure.orientation__GT_separator;},new cljs.core.Symbol("sicmutils.structure","orientation->separator","sicmutils.structure/orientation->separator",1522230130,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"orientation->separator","orientation->separator",-712423748,null),"sicmutils/structure.cljc",37,1,35,35,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.structure.orientation__GT_separator)?sicmutils.structure.orientation__GT_separator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal"),new cljs.core.Var(function(){return sicmutils.structure.literal;},new cljs.core.Symbol("sicmutils.structure","literal","sicmutils.structure/literal",1211147954,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"literal","literal",-989660164,null),"sicmutils/structure.cljc",14,1,573,573,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"size","size",-1555742762,null),new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null)], null)),"Generates a structure of the specified `orientation` and dimension `size`\n  populated by symbolic entries, each prefixed by the supplied symbol `sym`.\n\n  For example:\n\n  (= (literal 'x 3 ::s/up)\n     (up 'x\u21910 'x\u21911 'x\u21912))\n\n  See [[literal-up]] and [[literal-down]] for constructors with baked in\n  orientations.",(cljs.core.truth_(sicmutils.structure.literal)?sicmutils.structure.literal.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sumr"),new cljs.core.Var(function(){return sicmutils.structure.sumr;},new cljs.core.Symbol("sicmutils.structure","sumr","sicmutils.structure/sumr",-1487247881,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"sumr","sumr",302547133,null),"sicmutils/structure.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,644,644,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null)], null)),"Given some function `f` and any number of isomorphic `structures`,\n  returns the sum of the results of applying `f` to each associated set of\n  entries in each `structure`.",(cljs.core.truth_(sicmutils.structure.sumr)?sicmutils.structure.sumr.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("structure*scalar"),new cljs.core.Var(function(){return sicmutils.structure.structure_STAR_scalar;},new cljs.core.Symbol("sicmutils.structure","structure*scalar","sicmutils.structure/structure*scalar",-1171705049,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"structure*scalar","structure*scalar",897110237,null),"sicmutils/structure.cljc",32,1,826,826,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v","v",1661996586,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a structure generated by multiplying every element of `v` by `s` (on\n  the right).",(cljs.core.truth_(sicmutils.structure.structure_STAR_scalar)?sicmutils.structure.structure_STAR_scalar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("dimension"),new cljs.core.Var(function(){return sicmutils.structure.dimension;},new cljs.core.Symbol("sicmutils.structure","dimension","sicmutils.structure/dimension",-182472437,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"dimension","dimension",-2111181571,null),"sicmutils/structure.cljc",16,1,315,315,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"If `s` is sequential, returns its dimension, ie, the total number of\n  non-sequential entries in the structure. Else, returns 1.",(cljs.core.truth_(sicmutils.structure.dimension)?sicmutils.structure.dimension.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("vector-inner-product"),new cljs.core.Var(function(){return sicmutils.structure.vector_inner_product;},new cljs.core.Symbol("sicmutils.structure","vector-inner-product","sicmutils.structure/vector-inner-product",-377032752,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"vector-inner-product","vector-inner-product",-1766536674,null),"sicmutils/structure.cljc",27,1,868,868,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"v1","v1",-2141311508,null),new cljs.core.Symbol(null,"v2","v2",1875554983,null)], null)),"Returns the (vector) inner product of `v1` and `v2`; this is equivalent to the\n  sum of the pairwise product of each entry.\n\n    This is equivalent to [[vector-dot-product]] with every element of `v1`\n  transformed into its complex conjugate.\n\n  The arguments must have identical length, and all pairwise entries must be\n  compatible via [[g/*]].",(cljs.core.truth_(sicmutils.structure.vector_inner_product)?sicmutils.structure.vector_inner_product.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-tensor?"),new cljs.core.Var(function(){return sicmutils.structure.two_tensor_QMARK_;},new cljs.core.Symbol("sicmutils.structure","two-tensor?","sicmutils.structure/two-tensor?",1663330244,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"two-tensor?","two-tensor?",269900542,null),"sicmutils/structure.cljc",18,1,452,452,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if `s` is an `up` or `down` structure containing all `up` or\n  `down` structures of internally-matching orientation and size, false\n  otherwise.",(cljs.core.truth_(sicmutils.structure.two_tensor_QMARK_)?sicmutils.structure.two_tensor_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mapr"),new cljs.core.Var(function(){return sicmutils.structure.mapr;},new cljs.core.Symbol("sicmutils.structure","mapr","sicmutils.structure/mapr",2082300072,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.structure","sicmutils.structure",-695742594,null),new cljs.core.Symbol(null,"mapr","mapr",-483178594,null),"sicmutils/structure.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,674,674,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"structures","structures",1081902171,null)], null)),"Return a structure with the same shape as s but with f applied to each\n  primitive (that is, not structural) component.",(cljs.core.truth_(sicmutils.structure.mapr)?sicmutils.structure.mapr.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->K"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.F__GT_K;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","F->K","sicmutils.mechanics.hamilton/F->K",1379723208,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"F->K","F->K",-401605312,null),"sicmutils/mechanics/hamilton.cljc",11,1,388,388,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.F__GT_K)?sicmutils.mechanics.hamilton.F__GT_K.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("linear-function->multiplier"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.linear_function__GT_multiplier;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","linear-function->multiplier","sicmutils.mechanics.hamilton/linear-function->multiplier",518173512,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"linear-function->multiplier","linear-function->multiplier",-185354560,null),"sicmutils/mechanics/hamilton.cljc",34,1,426,426,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null),new cljs.core.Symbol(null,"argument","argument",-1471433928,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.linear_function__GT_multiplier)?sicmutils.mechanics.hamilton.linear_function__GT_multiplier.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-particle-center-of-mass"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.two_particle_center_of_mass;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","two-particle-center-of-mass","sicmutils.mechanics.hamilton/two-particle-center-of-mass",-2080572696,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"two-particle-center-of-mass","two-particle-center-of-mass",-171051168,null),"sicmutils/mechanics/hamilton.cljc",34,1,482,482,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m0","m0",142676688,null),new cljs.core.Symbol(null,"m1","m1",1532436901,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.two_particle_center_of_mass)?sicmutils.mechanics.hamilton.two_particle_center_of_mass.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-matrix?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.symplectic_matrix_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","symplectic-matrix?","sicmutils.mechanics.hamilton/symplectic-matrix?",721145400,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"symplectic-matrix?","symplectic-matrix?",-2132491360,null),"sicmutils/mechanics/hamilton.cljc",25,1,555,555,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"M","M",-115210679,null)], null)),"p. 334",(cljs.core.truth_(sicmutils.mechanics.hamilton.symplectic_matrix_QMARK_)?sicmutils.mechanics.hamilton.symplectic_matrix_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Hamiltonian;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Hamiltonian","sicmutils.mechanics.hamilton/Hamiltonian",1044431753,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Hamiltonian","Hamiltonian",-802031359,null),"sicmutils/mechanics/hamilton.cljc",18,1,22,22,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns function signature for a Hamiltonian with n degrees of freedom (or an\n  unrestricted number if n is not given).\n\n  Useful for constructing Hamiltonian literal functions.",(cljs.core.truth_(sicmutils.mechanics.hamilton.Hamiltonian)?sicmutils.mechanics.hamilton.Hamiltonian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("polar-canonical-inverse"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.polar_canonical_inverse;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","polar-canonical-inverse","sicmutils.mechanics.hamilton/polar-canonical-inverse",1773199449,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"polar-canonical-inverse","polar-canonical-inverse",-746066399,null),"sicmutils/mechanics/hamilton.cljc",30,1,473,473,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"alpha","alpha",65549086,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.polar_canonical_inverse)?sicmutils.mechanics.hamilton.polar_canonical_inverse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-state->matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_state__GT_matrix;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-state->matrix","sicmutils.mechanics.hamilton/H-state->matrix",-1727426149,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-state->matrix","H-state->matrix",859345923,null),"sicmutils/mechanics/hamilton.cljc",22,1,119,119,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_state__GT_matrix)?sicmutils.mechanics.hamilton.H_state__GT_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("J-matrix"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.J_matrix;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","J-matrix","sicmutils.mechanics.hamilton/J-matrix",-1832456949,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"J-matrix","J-matrix",-388525949,null),"sicmutils/mechanics/hamilton.cljc",15,1,525,525,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"n == degrees of freedom",(cljs.core.truth_(sicmutils.mechanics.hamilton.J_matrix)?sicmutils.mechanics.hamilton.J_matrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("canonical-transform?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.canonical_transform_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","canonical-transform?","sicmutils.mechanics.hamilton/canonical-transform?",-1461003061,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"canonical-transform?","canonical-transform?",1108728387,null),"sicmutils/mechanics/hamilton.cljc",27,1,518,518,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.canonical_transform_QMARK_)?sicmutils.mechanics.hamilton.canonical_transform_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Phi"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Phi;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Phi","sicmutils.mechanics.hamilton/Phi",-2037655012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Phi","Phi",679137412,null),"sicmutils/mechanics/hamilton.cljc",10,1,429,429,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Phi)?sicmutils.mechanics.hamilton.Phi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-two-form"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.symplectic_two_form;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","symplectic-two-form","sicmutils.mechanics.hamilton/symplectic-two-form",-1945439332,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"symplectic-two-form","symplectic-two-form",-501487260,null),"sicmutils/mechanics/hamilton.cljc",26,1,512,512,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"zeta1","zeta1",-475321608,null),new cljs.core.Symbol(null,"zeta2","zeta2",-1365055378,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.symplectic_two_form)?sicmutils.mechanics.hamilton.symplectic_two_form.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qp-canonical?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.qp_canonical_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","qp-canonical?","sicmutils.mechanics.hamilton/qp-canonical?",-682868916,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"qp-canonical?","qp-canonical?",-1589954108,null),"sicmutils/mechanics/hamilton.cljc",20,1,451,451,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"H","H",702383200,null)], null)),"Tests that K yields a canonical transformation if the C is symplectic. (The\n  qp-canonical? code is really a symplectic test without factoring out the\n  Hamiltonian.)",(cljs.core.truth_(sicmutils.mechanics.hamilton.qp_canonical_QMARK_)?sicmutils.mechanics.hamilton.qp_canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("canonical?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.canonical_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","canonical?","sicmutils.mechanics.hamilton/canonical?",1841319772,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"canonical?","canonical?",-942586428,null),"sicmutils/mechanics/hamilton.cljc",17,1,397,397,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"H","H",702383200,null),new cljs.core.Symbol(null,"Hprime","Hprime",-2140990051,null)], null)),"p.324",(cljs.core.truth_(sicmutils.mechanics.hamilton.canonical_QMARK_)?sicmutils.mechanics.hamilton.canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian->Lagrangian"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Hamiltonian->Lagrangian","sicmutils.mechanics.hamilton/Hamiltonian->Lagrangian",48109596,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Hamiltonian->Lagrangian","Hamiltonian->Lagrangian",-1691416956,null),"sicmutils/mechanics/hamilton.cljc",29,1,266,266,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian)?sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("canonical-K?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.canonical_K_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","canonical-K?","sicmutils.mechanics.hamilton/canonical-K?",-663101619,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"canonical-K?","canonical-K?",1986971077,null),"sicmutils/mechanics/hamilton.cljc",19,1,421,421,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"K","K",1641243268,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.canonical_K_QMARK_)?sicmutils.mechanics.hamilton.canonical_K_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-Hamiltonian"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.make_Hamiltonian;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","make-Hamiltonian","sicmutils.mechanics.hamilton/make-Hamiltonian",-283861442,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"make-Hamiltonian","make-Hamiltonian",1457755270,null),"sicmutils/mechanics/hamilton.cljc",23,1,130,130,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"kinetic-energy","kinetic-energy",1014555443,null),new cljs.core.Symbol(null,"potential-energy","potential-energy",-990216810,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.make_Hamiltonian)?sicmutils.mechanics.hamilton.make_Hamiltonian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Lie_derivative;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Lie-derivative","sicmutils.mechanics.hamilton/Lie-derivative",1878852991,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Lie-derivative","Lie-derivative",-641072185,null),"sicmutils/mechanics/hamilton.cljc",30,1,287,287,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null)], null)),"p. 428\n\n  We define the Lie derivative of F, as a derivative-like operator, relative to\n  the given Hamiltonian-like function, H. Generalization and redefinition in\n  calculus/Lie.scm\n  ",(cljs.core.truth_(sicmutils.mechanics.hamilton.Lie_derivative)?sicmutils.mechanics.hamilton.Lie_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("L-state->H-state"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.L_state__GT_H_state;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","L-state->H-state","sicmutils.mechanics.hamilton/L-state->H-state",1191554928,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"L-state->H-state","L-state->H-state",-46880312,null),"sicmutils/mechanics/hamilton.cljc",23,1,105,105,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.L_state__GT_H_state)?sicmutils.mechanics.hamilton.L_state__GT_H_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian->Lagrangian-procedure"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian_procedure;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Hamiltonian->Lagrangian-procedure","sicmutils.mechanics.hamilton/Hamiltonian->Lagrangian-procedure",-1530792736,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Hamiltonian->Lagrangian-procedure","Hamiltonian->Lagrangian-procedure",449903208,null),"sicmutils/mechanics/hamilton.cljc",49,1,259,259,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Hamiltonian","Hamiltonian",-802031359,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian_procedure)?sicmutils.mechanics.hamilton.Hamiltonian__GT_Lagrangian_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("polar-canonical"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.polar_canonical;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","polar-canonical","sicmutils.mechanics.hamilton/polar-canonical",-913726416,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"polar-canonical","polar-canonical",-1550139768,null),"sicmutils/mechanics/hamilton.cljc",22,1,465,465,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"alpha","alpha",65549086,null)], null)),"p.327",(cljs.core.truth_(sicmutils.mechanics.hamilton.polar_canonical)?sicmutils.mechanics.hamilton.polar_canonical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-Hamiltonian-state"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.literal_Hamiltonian_state;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","literal-Hamiltonian-state","sicmutils.mechanics.hamilton/literal-Hamiltonian-state",-275386719,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"literal-Hamiltonian-state","literal-Hamiltonian-state",94824489,null),"sicmutils/mechanics/hamilton.cljc",32,1,99,99,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n-dof","n-dof",148884184,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.literal_Hamiltonian_state)?sicmutils.mechanics.hamilton.literal_Hamiltonian_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->Hamiltonian"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Lagrangian->Hamiltonian","sicmutils.mechanics.hamilton/Lagrangian->Hamiltonian",-678669631,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Lagrangian->Hamiltonian","Lagrangian->Hamiltonian",570239049,null),"sicmutils/mechanics/hamilton.cljc",29,1,255,255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian)?sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("iterated-map"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.iterated_map;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","iterated-map","sicmutils.mechanics.hamilton/iterated-map",1071574577,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"iterated-map","iterated-map",-1443897207,null),"sicmutils/mechanics/hamilton.cljc",19,1,343,343,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"f is a function of (x y continue fail), which calls continue with the values of\n  x' y' that follow x y in the mapping.\n\n  Returns a map of the same shape that iterates the iterated map n times before\n  invoking the continuation, or invokes the fail continuation if the inner map\n  fails.",(cljs.core.truth_(sicmutils.mechanics.hamilton.iterated_map)?sicmutils.mechanics.hamilton.iterated_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compositional-canonical?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.compositional_canonical_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","compositional-canonical?","sicmutils.mechanics.hamilton/compositional-canonical?",1810820033,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"compositional-canonical?","compositional-canonical?",-235019959,null),"sicmutils/mechanics/hamilton.cljc",31,1,403,403,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"H","H",702383200,null)], null)),"p.324",(cljs.core.truth_(sicmutils.mechanics.hamilton.compositional_canonical_QMARK_)?sicmutils.mechanics.hamilton.compositional_canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("momenta"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.momenta;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","momenta","sicmutils.mechanics.hamilton/momenta",570648993,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"momenta","momenta",-1206749655,null),"sicmutils/mechanics/hamilton.cljc",10,1,81,82,cljs.core.List.EMPTY,"Alias for [[momentum]].",(cljs.core.truth_(sicmutils.mechanics.hamilton.momenta)?sicmutils.mechanics.hamilton.momenta.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-state?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_state_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-state?","sicmutils.mechanics.hamilton/H-state?",937663297,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-state?","H-state?",-1647143223,null),"sicmutils/mechanics/hamilton.cljc",15,1,38,38,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if the supplied state is\n\n  - of type [[sicmutils.structure/up]]\n\n  - contains three elements of `time`, `coordinate` and `momentum` of either of\n    the following type shapes:\n\n  ```\n  (up <number> <number> <number>)\n  (up <number> (up <number>*) (down <number>*))\n  ```\n\n  If structural, the dimension of the coordinate and momentum tuples must match.",(cljs.core.truth_(sicmutils.mechanics.hamilton.H_state_QMARK_)?sicmutils.mechanics.hamilton.H_state_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("T-func"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.T_func;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","T-func","sicmutils.mechanics.hamilton/T-func",-1569187118,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"T-func","T-func",476643498,null),"sicmutils/mechanics/hamilton.cljc",13,1,411,411,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.T_func)?sicmutils.mechanics.hamilton.T_func.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transpose-function"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.transpose_function;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","transpose-function","sicmutils.mechanics.hamilton/transpose-function",-390567710,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"transpose-function","transpose-function",45049194,null),"sicmutils/mechanics/hamilton.cljc",25,1,499,499,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.transpose_function)?sicmutils.mechanics.hamilton.transpose_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-central"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_central;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-central","sicmutils.mechanics.hamilton/H-central",-1333574878,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-central","H-central",1534229930,null),"sicmutils/mechanics/hamilton.cljc",16,1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"V","V",471247521,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_central)?sicmutils.mechanics.hamilton.H_central.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-transform?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.symplectic_transform_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","symplectic-transform?","sicmutils.mechanics.hamilton/symplectic-transform?",1919364675,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"symplectic-transform?","symplectic-transform?",-597154357,null),"sicmutils/mechanics/hamilton.cljc",28,1,569,569,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),"p. 334",(cljs.core.truth_(sicmutils.mechanics.hamilton.symplectic_transform_QMARK_)?sicmutils.mechanics.hamilton.symplectic_transform_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->qp"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.state__GT_qp;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","state->qp","sicmutils.mechanics.hamilton/state->qp",1693994019,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"state->qp","state->qp",185160363,null),"sicmutils/mechanics/hamilton.cljc",16,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Given a hamiltonian state, returns a [[sicmutils.structure/up]] containing the\n  coordinate and momentum components. ",(cljs.core.truth_(sicmutils.mechanics.hamilton.state__GT_qp)?sicmutils.mechanics.hamilton.state__GT_qp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qp->H-state-path"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.qp__GT_H_state_path;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","qp->H-state-path","sicmutils.mechanics.hamilton/qp->H-state-path",241403300,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"qp->H-state-path","qp->H-state-path",1616022316,null),"sicmutils/mechanics/hamilton.cljc",23,1,95,95,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.qp__GT_H_state_path)?sicmutils.mechanics.hamilton.qp__GT_H_state_path.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("time-independent-canonical?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.time_independent_canonical_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","time-independent-canonical?","sicmutils.mechanics.hamilton/time-independent-canonical?",-1575703115,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"time-independent-canonical?","time-independent-canonical?",-605708243,null),"sicmutils/mechanics/hamilton.cljc",34,1,437,437,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),"p.326",(cljs.core.truth_(sicmutils.mechanics.hamilton.time_independent_canonical_QMARK_)?sicmutils.mechanics.hamilton.time_independent_canonical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("phase-space-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.phase_space_derivative;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","phase-space-derivative","sicmutils.mechanics.hamilton/phase-space-derivative",1739255077,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"phase-space-derivative","phase-space-derivative",-105121875,null),"sicmutils/mechanics/hamilton.cljc",25,1,139,141,cljs.core.List.EMPTY,"Alias for [[Hamiltonian->state-derivative]], for compatibility with\n  1st edition of SICM.",(cljs.core.truth_(sicmutils.mechanics.hamilton.phase_space_derivative)?sicmutils.mechanics.hamilton.phase_space_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state->p"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.state__GT_p;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","state->p","sicmutils.mechanics.hamilton/state->p",26064742,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"state->p","state->p",-1751204370,null),"sicmutils/mechanics/hamilton.cljc",11,1,78,79,cljs.core.List.EMPTY,"Alias for [[momentum]].",(cljs.core.truth_(sicmutils.mechanics.hamilton.state__GT_p)?sicmutils.mechanics.hamilton.state__GT_p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->CT"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.F__GT_CT;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","F->CT","sicmutils.mechanics.hamilton/F->CT",967484550,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"F->CT","F->CT",-1012552178,null),"sicmutils/mechanics/hamilton.cljc",8,1,379,380,cljs.core.List.EMPTY,"Alias for [[F->CH]].",(cljs.core.truth_(sicmutils.mechanics.hamilton.F__GT_CT)?sicmutils.mechanics.hamilton.F__GT_CT.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamilton-equations"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Hamilton_equations;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Hamilton-equations","sicmutils.mechanics.hamilton/Hamilton-equations",1292844439,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Hamilton-equations","Hamilton-equations",655898383,null),"sicmutils/mechanics/hamilton.cljc",25,1,144,144,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Hamiltonian","Hamiltonian",-802031359,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Hamilton_equations)?sicmutils.mechanics.hamilton.Hamilton_equations.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lie-transform"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Lie_transform;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Lie-transform","sicmutils.mechanics.hamilton/Lie-transform",-871878887,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Lie-transform","Lie-transform",1913072017,null),"sicmutils/mechanics/hamilton.cljc",20,1,312,312,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"p. 428, the Lie transform is just the time-advance operator using the Lie\n  derivative (see Hamiltonian.scm).",(cljs.core.truth_(sicmutils.mechanics.hamilton.Lie_transform)?sicmutils.mechanics.hamilton.Lie_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("two-particle-center-of-mass-canonical"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.two_particle_center_of_mass_canonical;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","two-particle-center-of-mass-canonical","sicmutils.mechanics.hamilton/two-particle-center-of-mass-canonical",1670398506,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"two-particle-center-of-mass-canonical","two-particle-center-of-mass-canonical",-102541166,null),"sicmutils/mechanics/hamilton.cljc",44,1,488,488,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m0","m0",142676688,null),new cljs.core.Symbol(null,"m1","m1",1532436901,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.two_particle_center_of_mass_canonical)?sicmutils.mechanics.hamilton.two_particle_center_of_mass_canonical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("P"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.P;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","P","sicmutils.mechanics.hamilton/P",1395856490,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"P","P",-985522478,null),"sicmutils/mechanics/hamilton.cljc",4,1,84,85,cljs.core.List.EMPTY,"Alias for [[momentum]].",(cljs.core.truth_(sicmutils.mechanics.hamilton.P)?sicmutils.mechanics.hamilton.P.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Poisson-bracket"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Poisson_bracket;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Poisson-bracket","sicmutils.mechanics.hamilton/Poisson-bracket",1364292906,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Poisson-bracket","Poisson-bracket",-79662190,null),"sicmutils/mechanics/hamilton.cljc",22,1,270,270,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"g","g",-916345864,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Poisson_bracket)?sicmutils.mechanics.hamilton.Poisson_bracket.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.symplectic_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","symplectic?","sicmutils.mechanics.hamilton/symplectic?",390442539,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"symplectic?","symplectic?",-1923699789,null),"sicmutils/mechanics/hamilton.cljc",18,1,537,537,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),"Symplectic test in terms of matrices",(cljs.core.truth_(sicmutils.mechanics.hamilton.symplectic_QMARK_)?sicmutils.mechanics.hamilton.symplectic_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-central-polar"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_central_polar;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-central-polar","sicmutils.mechanics.hamilton/H-central-polar",-1664669011,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-central-polar","H-central-polar",37104917,null),"sicmutils/mechanics/hamilton.cljc",22,1,173,173,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"V","V",471247521,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_central_polar)?sicmutils.mechanics.hamilton.H_central_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("standard-map-inverse"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.standard_map_inverse;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","standard-map-inverse","sicmutils.mechanics.hamilton/standard-map-inverse",-317992723,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"standard-map-inverse","standard-map-inverse",1527044725,null),"sicmutils/mechanics/hamilton.cljc",27,1,335,335,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"K","K",1641243268,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.standard_map_inverse)?sicmutils.mechanics.hamilton.standard_map_inverse.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Lagrangian->Hamiltonian-procedure"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian_procedure;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Lagrangian->Hamiltonian-procedure","sicmutils.mechanics.hamilton/Lagrangian->Hamiltonian-procedure",1160660926,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Lagrangian->Hamiltonian-procedure","Lagrangian->Hamiltonian-procedure",993872182,null),"sicmutils/mechanics/hamilton.cljc",49,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"Lagrangian","Lagrangian",-1148415573,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian_procedure)?sicmutils.mechanics.hamilton.Lagrangian__GT_Hamiltonian_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multiplicative-transpose"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.multiplicative_transpose;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","multiplicative-transpose","sicmutils.mechanics.hamilton/multiplicative-transpose",-22053954,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"multiplicative-transpose","multiplicative-transpose",1690205494,null),"sicmutils/mechanics/hamilton.cljc",31,1,503,503,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.multiplicative_transpose)?sicmutils.mechanics.hamilton.multiplicative_transpose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Legendre-transform-procedure"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Legendre_transform_procedure;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Legendre-transform-procedure","sicmutils.mechanics.hamilton/Legendre-transform-procedure",1819596958,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Legendre-transform-procedure","Legendre-transform-procedure",-699935210,null),"sicmutils/mechanics/hamilton.cljc",44,1,212,212,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),"Note from GJS: This ugly version tests for correctness of the result.",(cljs.core.truth_(sicmutils.mechanics.hamilton.Legendre_transform_procedure)?sicmutils.mechanics.hamilton.Legendre_transform_procedure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compatible-H-state?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.compatible_H_state_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","compatible-H-state?","sicmutils.mechanics.hamilton/compatible-H-state?",2111829856,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"compatible-H-state?","compatible-H-state?",-1949500168,null),"sicmutils/mechanics/hamilton.cljc",26,1,64,64,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if `s` is compatible for contraction with a proper H-state, false\n  otherwise.",(cljs.core.truth_(sicmutils.mechanics.hamilton.compatible_H_state_QMARK_)?sicmutils.mechanics.hamilton.compatible_H_state_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("flow-transform"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.flow_transform;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","flow-transform","sicmutils.mechanics.hamilton/flow-transform",419914336,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"flow-transform","flow-transform",1928355832,null),"sicmutils/mechanics/hamilton.cljc",21,1,320,320,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null),new cljs.core.Symbol(null,"delta-t","delta-t",1769095452,null)], null)),"The generalization of Lie-transform to include time dependence.",(cljs.core.truth_(sicmutils.mechanics.hamilton.flow_transform)?sicmutils.mechanics.hamilton.flow_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matrix->H-state"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.matrix__GT_H_state;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","matrix->H-state","sicmutils.mechanics.hamilton/matrix->H-state",-1902923199,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"matrix->H-state","matrix->H-state",1619175641,null),"sicmutils/mechanics/hamilton.cljc",22,1,123,123,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.matrix__GT_H_state)?sicmutils.mechanics.hamilton.matrix__GT_H_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*validate-Legendre-transform?*"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton._STAR_validate_Legendre_transform_QMARK__STAR_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","*validate-Legendre-transform?*","sicmutils.mechanics.hamilton/*validate-Legendre-transform?*",844371185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"*validate-Legendre-transform?*","*validate-Legendre-transform?*",-2006767239,null),"sicmutils/mechanics/hamilton.cljc",33,1,true,203,209,cljs.core.List.EMPTY,"If true, the state passed to the fn returned\n       by [[Legendre-transform]] is checked for correctness. If `false` errors\n       may occur. See the code body for more detail.\n\n       Defaults to `false`.",(cljs.core.truth_(sicmutils.mechanics.hamilton._STAR_validate_Legendre_transform_QMARK__STAR_)?sicmutils.mechanics.hamilton._STAR_validate_Legendre_transform_QMARK__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("J-func"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.J_func;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","J-func","sicmutils.mechanics.hamilton/J-func",-1041724655,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"J-func","J-func",1541898649,null),"sicmutils/mechanics/hamilton.cljc",13,1,408,408,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"DHs","DHs",-78081496,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.J_func)?sicmutils.mechanics.hamilton.J_func.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-rectangular"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_rectangular;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-rectangular","sicmutils.mechanics.hamilton/H-rectangular",1182308817,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-rectangular","H-rectangular",745243481,null),"sicmutils/mechanics/hamilton.cljc",20,1,161,161,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"V","V",471247521,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_rectangular)?sicmutils.mechanics.hamilton.H_rectangular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Phi*"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Phi_STAR_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Phi*","sicmutils.mechanics.hamilton/Phi*",946813185,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Phi*","Phi*",-2105657447,null),"sicmutils/mechanics/hamilton.cljc",11,1,433,433,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"A","A",-48410867,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Phi_STAR_)?sicmutils.mechanics.hamilton.Phi_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("symplectic-unit"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.symplectic_unit;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","symplectic-unit","sicmutils.mechanics.hamilton/symplectic-unit",-1787342670,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"symplectic-unit","symplectic-unit",54553914,null),"sicmutils/mechanics/hamilton.cljc",22,1,545,545,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"p. 334 (used, but not defined there)",(cljs.core.truth_(sicmutils.mechanics.hamilton.symplectic_unit)?sicmutils.mechanics.hamilton.symplectic_unit.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("canonical-H?"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.canonical_H_QMARK_;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","canonical-H?","sicmutils.mechanics.hamilton/canonical-H?",2109985106,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"canonical-H?","canonical-H?",-405611558,null),"sicmutils/mechanics/hamilton.cljc",19,1,416,416,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null),new cljs.core.Symbol(null,"H","H",702383200,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.canonical_H_QMARK_)?sicmutils.mechanics.hamilton.canonical_H_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("F->CH"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.F__GT_CH;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","F->CH","sicmutils.mechanics.hamilton/F->CH",-301686828,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"F->CH","F->CH",404198748,null),"sicmutils/mechanics/hamilton.cljc",12,1,368,368,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"F","F",524988269,null)], null)),"A transformation of configuration coordinates F to a procedure implementing a\n  transformation of phase-space coordinates (p. 320)",(cljs.core.truth_(sicmutils.mechanics.hamilton.F__GT_CH)?sicmutils.mechanics.hamilton.F__GT_CH.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hamiltonian->state-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Hamiltonian__GT_state_derivative;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Hamiltonian->state-derivative","sicmutils.mechanics.hamilton/Hamiltonian->state-derivative",-1531973420,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Hamiltonian->state-derivative","Hamiltonian->state-derivative",853341788,null),"sicmutils/mechanics/hamilton.cljc",36,1,133,133,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Hamiltonian__GT_state_derivative)?sicmutils.mechanics.hamilton.Hamiltonian__GT_state_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("qp-submatrix"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.qp_submatrix;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","qp-submatrix","sicmutils.mechanics.hamilton/qp-submatrix",-620336860,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"qp-submatrix","qp-submatrix",1695903452,null),"sicmutils/mechanics/hamilton.cljc",19,1,566,566,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.qp_submatrix)?sicmutils.mechanics.hamilton.qp_submatrix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("momentum"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.momentum;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","momentum","sicmutils.mechanics.hamilton/momentum",760111909,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"momentum","momentum",-1755355427,null),"sicmutils/mechanics/hamilton.cljc",15,1,71,71,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H-state","H-state",766610049,null)], null)),"Returns the momentum element of a local Hamiltonian state tuple (by convention,\n  the third element).",(cljs.core.truth_(sicmutils.mechanics.hamilton.momentum)?sicmutils.mechanics.hamilton.momentum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-harmonic"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_harmonic;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-harmonic","sicmutils.mechanics.hamilton/H-harmonic",1589619797,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-harmonic","H-harmonic",881633245,null),"sicmutils/mechanics/hamilton.cljc",17,1,181,181,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_harmonic)?sicmutils.mechanics.hamilton.H_harmonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->H-state"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.__GT_H_state;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","->H-state","sicmutils.mechanics.hamilton/->H-state",867537413,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"->H-state","->H-state",-1515806723,null),"sicmutils/mechanics/hamilton.cljc",16,1,31,31,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"q","q",-1965434072,null),new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Given a time `t`, coordinate tuple (or scalar) `q` and momentum tuple (or\n  scalar) `p`, returns a 'Hamiltonian state tuple', ie, the state expected by a\n  Hamiltonian.",(cljs.core.truth_(sicmutils.mechanics.hamilton.__GT_H_state)?sicmutils.mechanics.hamilton.__GT_H_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H-state->L-state"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.H_state__GT_L_state;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","H-state->L-state","sicmutils.mechanics.hamilton/H-state->L-state",316114438,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"H-state->L-state","H-state->L-state",-455042562,null),"sicmutils/mechanics/hamilton.cljc",23,1,112,112,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.H_state__GT_L_state)?sicmutils.mechanics.hamilton.H_state__GT_L_state.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("flow-derivative"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.flow_derivative;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","flow-derivative","sicmutils.mechanics.hamilton/flow-derivative",1022989814,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"flow-derivative","flow-derivative",-2031576450,null),"sicmutils/mechanics/hamilton.cljc",22,1,299,299,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null)], null)),"the flow derivative generalizes the Lie derivative to allow for time dependent\n  H and F --- computes the 'time' derivative of F along the flow specified by H",(cljs.core.truth_(sicmutils.mechanics.hamilton.flow_derivative)?sicmutils.mechanics.hamilton.flow_derivative.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("standard-map"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.standard_map;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","standard-map","sicmutils.mechanics.hamilton/standard-map",-316080377,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"standard-map","standard-map",1530905855,null),"sicmutils/mechanics/hamilton.cljc",19,1,327,327,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"K","K",1641243268,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.standard_map)?sicmutils.mechanics.hamilton.standard_map.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Legendre-transform"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.Legendre_transform;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","Legendre-transform","sicmutils.mechanics.hamilton/Legendre-transform",-1435667657,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"Legendre-transform","Legendre-transform",77490623,null),"sicmutils/mechanics/hamilton.cljc",24,1,242,242,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.mechanics.hamilton.Legendre_transform)?sicmutils.mechanics.hamilton.Legendre_transform.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("D-phase-space"),new cljs.core.Var(function(){return sicmutils.mechanics.hamilton.D_phase_space;},new cljs.core.Symbol("sicmutils.mechanics.hamilton","D-phase-space","sicmutils.mechanics.hamilton/D-phase-space",-42721321,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.hamilton","sicmutils.mechanics.hamilton",1856371254,null),new cljs.core.Symbol(null,"D-phase-space","D-phase-space",1736774239,null),"sicmutils/mechanics/hamilton.cljc",20,1,151,151,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"H","H",702383200,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.hamilton.D_phase_space)?sicmutils.mechanics.hamilton.D_phase_space.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville-recursive"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville_recursive;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville-recursive","sicmutils.polynomial.interpolate/neville-recursive",1989267204,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville-recursive","neville-recursive",-641526016,null),"sicmutils/polynomial/interpolate.cljc",24,1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Top-down implementation of [Neville's\n  algorithm]((https://en.wikipedia.org/wiki/Neville%27s_algorithm))\n\n  Returns the value of `P(x)`, where `P` is a polynomial fit (using Neville's\n  algorithm) to every point in the supplied sequence `points` (of form `[x (f\n  x)]`)\n\n  The efficiency and results should be identical to\n  [[sicmutils.numerical.interpolate/lagrange]]. This function represents a step\n  on the journey toward more incremental methods of polynomial interpolation.\n\n  References:\n\n  - Press's Numerical Recipes (p103), [chapter 3](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-1.pdf)\n  - Wikipedia, [Neville's Algorithm](https://en.wikipedia.org/wiki/Neville%27s_algorithm)",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville_recursive)?sicmutils.polynomial.interpolate.neville_recursive.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville-fold"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville_fold;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville-fold","sicmutils.polynomial.interpolate/neville-fold",1207035740,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville-fold","neville-fold",-291266752,null),"sicmutils/polynomial/interpolate.cljc",19,1,706,706,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given some point `x`, returns a fold that accumulates rows of an interpolation\n  tableau providing successively better estimates (at the value `x`) of a\n  polynomial interpolated to all seen points.\n\n  The 2-arity aggregation step takes:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x_new (f x_new)]`\n\n    and returns the next row of the tableau using the algorithm described in\n  [[neville]].",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville_fold)?sicmutils.polynomial.interpolate.neville_fold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville-scan"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville_scan;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville-scan","sicmutils.polynomial.interpolate/neville-scan",1965957351,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville-scan","neville-scan",-738395933,null),"sicmutils/polynomial/interpolate.cljc",19,1,775,775,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns a lazy sequence of successive approximations of\n  `x` using polynomials fitted to the first point, then the first and second\n  points, etc. using the algorithm described in [[neville]].\n\n  Equivalent to `([[neville]] xs x)`.",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville_scan)?sicmutils.polynomial.interpolate.neville_scan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-neville-sum"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.modified_neville_sum;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","modified-neville-sum","sicmutils.polynomial.interpolate/modified-neville-sum",1059020064,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"modified-neville-sum","modified-neville-sum",-1873943260,null),"sicmutils/polynomial/interpolate.cljc",27,1,786,786,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns the best approximation of `x` using a polynomial\n  fitted to all points in `xs` using the algorithm described\n  in [[modified-neville]].\n\n  Faster than, but equivalent to, `(last ([[modified-neville]] xs x))`",(cljs.core.truth_(sicmutils.polynomial.interpolate.modified_neville_sum)?sicmutils.polynomial.interpolate.modified_neville_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("first-terms"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.first_terms;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","first-terms","sicmutils.polynomial.interpolate/first-terms",-376068254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"first-terms","first-terms",-2032660634,null),"sicmutils/polynomial/interpolate.cljc",27,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tableau","tableau",993969965,null)], null)),null,(cljs.core.truth_(sicmutils.polynomial.interpolate.first_terms)?sicmutils.polynomial.interpolate.first_terms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville-sum"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville_sum;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville-sum","sicmutils.polynomial.interpolate/neville-sum",-995221491,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville-sum","neville-sum",-1107691511,null),"sicmutils/polynomial/interpolate.cljc",18,1,765,765,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns the best approximation of `x` using a polynomial\n  fitted to all points in `xs` using the algorithm described in [[neville]].\n\n  Faster than, but equivalent to, `(last ([[neville]] xs x))`",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville_sum)?sicmutils.polynomial.interpolate.neville_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tableau-fold-fn"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.tableau_fold_fn;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","tableau-fold-fn","sicmutils.polynomial.interpolate/tableau-fold-fn",-155005401,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"tableau-fold-fn","tableau-fold-fn",521156139,null),"sicmutils/polynomial/interpolate.cljc",22,1,661,661,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prepare","prepare",190876862,null),new cljs.core.Symbol(null,"merge","merge",-163787882,null),new cljs.core.Symbol(null,"present","present",415886062,null)], null)),"Given `prepare` and `merge` and `present` functions, returns a fold capable of\n  aggregating a point of the form [x, f(x)] into an accumulating tableau\n  row (generating the next tableau row).\n\n  The 0-arity of the returned function returns an empty row, `[]`.\n\n  The 1-arity calls the supplied `present` on the accumulated tableau row.\n\n  The 2-arity scans the supplied `merge` across all entries in the accumulating\n  row, producing a new row.\n\n  ### More detail on the arguments:\n\n  - `prepare`: a fn that processes each element of the supplied `points` into\n  the state necessary to calculate future tableau entries.\n\n  - `merge`: a fn of `l`and `r` the tableau entries:\n\n  l -- return\n     /\n    /\n   /\n  r\n\n  the inputs are of the same form returned by `prepare`. `merge` should return a\n  new structure of the same form.\n\n  - `present`: Transforms a `tableau` row into an estimate at some value `x` of\n  the polynomial interpolated to hit all supplied points.",(cljs.core.truth_(sicmutils.polynomial.interpolate.tableau_fold_fn)?sicmutils.polynomial.interpolate.tableau_fold_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lagrange"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.lagrange;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","lagrange","sicmutils.polynomial.interpolate/lagrange",-780252477,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"lagrange","lagrange",1990996687,null),"sicmutils/polynomial/interpolate.cljc",15,1,11,11,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Generates a lagrange interpolating polynomial that fits every point in the\n  supplied sequence `points` (of form `[x (f x)]`) and returns the value of the\n  polynomial evaluated at `x`.\n\n  The Lagrange polynomial has this form:\n\n  ```\n  g(x) =  (f(a) * [(x-b)(x-c)...] / [(a-b)(a-c)...])\n        + (f(b) * [(x-a)(x-c)...] / [(b-a)(b-c)...])\n        + ...\n  ```\n\n  for points `[a f(a)], [b f(b)], [c f(c)]` etc.\n\n  This particular method of interpolating `x` into the polynomial is\n  inefficient; any new calculation requires fully recomputing. Takes `O(n^2)`\n  operations in the number of points.\n  ",(cljs.core.truth_(sicmutils.polynomial.interpolate.lagrange)?sicmutils.polynomial.interpolate.lagrange.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville","sicmutils.polynomial.interpolate/neville",-693566091,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville","neville",1283153265,null),"sicmutils/polynomial/interpolate.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,365,365,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"column","column",-576213674,null)], null)),"Takes:\n\n  - a (potentially lazy) sequence of `points` of the form `[x (f x)]` and\n  - a point `x` to interpolate\n\n  and generates a lazy sequence of approximations of `P(x)`. Each entry in the\n  return sequence incorporates one more point from `points` into the `P(x)`\n  estimate.\n\n  Said another way: the Nth in the returned sequence is the estimate using a\n  polynomial generated from the first `N` points of the input sequence:\n\n  ```\n  p0 p01 p012 p0123 p01234\n  ```\n\n  This function generates each estimate using Neville's algorithm:\n\n  ```\n  $$P(x) = [(x - x_r) P_l(x) - (x - x_l) P_r(x)] / [x_l - x_r]$$\n  ```\n\n  ### Column\n\n  If you supply an integer for the third `column` argument, `neville` will\n  return that /column/ of the interpolation tableau instead of the first row.\n  This will give you a sequence of nth-order polynomial approximations taken\n  between point `i` and the next `n` points.\n\n  As a reminder, this is the shape of the tableau:\n\n  ```\n   p0 p01 p012 p0123 p01234\n   p1 p12 p123 p1234 .\n   p2 p23 p234 .     .\n   p3 p34 .    .     .\n   p4 .   .    .     .\n  ```\n\n  So supplying a `column` of `1` gives a sequence of linear approximations\n  between pairs of points; `2` gives quadratic approximations between successive\n  triplets, etc.\n\n  References:\n\n  - [Press's Numerical Recipes (p103), chapter 3](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-1.pdf)\n  - Wikipedia, [Neville's Algorithm](https://en.wikipedia.org/wiki/Neville%27s_algorithm)",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville)?sicmutils.polynomial.interpolate.neville.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("neville-incremental"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.neville_incremental;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","neville-incremental","sicmutils.polynomial.interpolate/neville-incremental",126188446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"neville-incremental","neville-incremental",-1672797294,null),"sicmutils/polynomial/interpolate.cljc",26,1,260,260,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Takes a potentially lazy sequence of `points` and a point `x` and generates a\n  lazy sequence of approximations of P(x).\n\n  entry N in the returned sequence is the estimate using a polynomial generated\n  from the first N points of the input sequence.",(cljs.core.truth_(sicmutils.polynomial.interpolate.neville_incremental)?sicmutils.polynomial.interpolate.neville_incremental.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-neville-fold"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.modified_neville_fold;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","modified-neville-fold","sicmutils.polynomial.interpolate/modified-neville-fold",730650296,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"modified-neville-fold","modified-neville-fold",1163820724,null),"sicmutils/polynomial/interpolate.cljc",28,1,739,739,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Given some point `x`, returns a fold that accumulates rows of an interpolation\n  tableau providing successively better estimates (at the value `x`) of a\n  polynomial interpolated to all seen points.\n\n  The 2-arity aggregation step takes:\n\n  - `previous-row`: previous row of an interpolation tableau\n  - a new point of the form `[x_new (f x_new)]`\n\n  and returns the next row of the tableau using the algorithm described in\n  [[modified-neville]].",(cljs.core.truth_(sicmutils.polynomial.interpolate.modified_neville_fold)?sicmutils.polynomial.interpolate.modified_neville_fold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-neville"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.modified_neville;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","modified-neville","sicmutils.polynomial.interpolate/modified-neville",1289303902,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"modified-neville","modified-neville",-477401254,null),"sicmutils/polynomial/interpolate.cljc",23,1,500,500,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"points","points",153934644,null),new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Similar to [[neville]] (the interface is identical) but slightly more efficient.\n  Internally this builds up its estimates by tracking the delta from the\n  previous estimate.\n\n  This non-obvious change lets us swap an addition in for a multiplication,\n  making the algorithm slightly more efficient.\n\n  See [[neville]] for usage information, and info about the required structure\n  of the arguments.\n\n  The structure of the [[modified-neville]] algorithm makes it difficult to\n  select a particular column. See [[neville]] if you'd like to generate\n  polynomial approximations between successive sequences of points.\n\n  References:\n\n  - [\"A comparison of algorithms for polynomial interpolation\"](https://www.sciencedirect.com/science/article/pii/0771050X82900511), A. Macleod\n  - [Press's Numerical Recipes (p103), chapter 3](http://phys.uri.edu/nigh/NumRec/bookfpdf/f3-1.pdf)",(cljs.core.truth_(sicmutils.polynomial.interpolate.modified_neville)?sicmutils.polynomial.interpolate.modified_neville.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tableau-fn"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.tableau_fn;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","tableau-fn","sicmutils.polynomial.interpolate/tableau-fn",-1062977631,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"tableau-fn","tableau-fn",-1503017027,null),"sicmutils/polynomial/interpolate.cljc",17,1,311,311,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prepare","prepare",190876862,null),new cljs.core.Symbol(null,"merge","merge",-163787882,null),new cljs.core.Symbol(null,"points","points",153934644,null)], null)),"Returns a Newton-style approximation tableau, given:\n\n  - `prepare`: a fn that processes each element of the supplied `points` into\n  the state necessary to calculate future tableau entries.\n\n  - `merge`: a fn of `l`and `r` the tableau entries:\n\n  ```\n  l -- return\n     /\n    /\n   /\n  r\n  ```\n\n  the inputs are of the same form returned by `prepare`. `merge` should return a\n  new structure of the same form.\n\n  - `points`: the (potentially lazy) sequence of points used to generate the\n  first column of the tableau.\n  ",(cljs.core.truth_(sicmutils.polynomial.interpolate.tableau_fn)?sicmutils.polynomial.interpolate.tableau_fn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mn-present-final"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.mn_present_final;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","mn-present-final","sicmutils.polynomial.interpolate/mn-present-final",-175547294,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"mn-present-final","mn-present-final",-1688501122,null),"sicmutils/polynomial/interpolate.cljc",32,1,731,731,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"row","row",1070392006,null)], null)),"Aggregates intermediate deltas to produce an estimate for the final value in\n  the supplied row.",(cljs.core.truth_(sicmutils.polynomial.interpolate.mn_present_final)?sicmutils.polynomial.interpolate.mn_present_final.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("mn-present"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.mn_present;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","mn-present","sicmutils.polynomial.interpolate/mn-present",-677642854,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"mn-present","mn-present",1323935134,null),"sicmutils/polynomial/interpolate.cljc",26,1,488,488,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"row","row",1070392006,null)], null)),"Returns a (lazy) sequence of estimates by successively adding C values from the\n  first entry of each tableau column. Each C value is the delta from the\n  previous estimate.",(cljs.core.truth_(sicmutils.polynomial.interpolate.mn_present)?sicmutils.polynomial.interpolate.mn_present.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modified-neville-scan"),new cljs.core.Var(function(){return sicmutils.polynomial.interpolate.modified_neville_scan;},new cljs.core.Symbol("sicmutils.polynomial.interpolate","modified-neville-scan","sicmutils.polynomial.interpolate/modified-neville-scan",-738333254,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.interpolate","sicmutils.polynomial.interpolate",-1055430193,null),new cljs.core.Symbol(null,"modified-neville-scan","modified-neville-scan",1947157950,null),"sicmutils/polynomial/interpolate.cljc",28,1,797,797,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `[x_i, f(x_i)]` and returns a lazy sequence of successive approximations of\n  `x` using polynomials fitted to the first point, then the first and second\n  points, etc. using the algorithm described in [[modified-neville]].\n\n  Equivalent to `([[modified-neville]] xs x)`.",(cljs.core.truth_(sicmutils.polynomial.interpolate.modified_neville_scan)?sicmutils.polynomial.interpolate.modified_neville_scan.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("principal-value"),new cljs.core.Var(function(){return sicmutils.value.principal_value;},new cljs.core.Symbol("sicmutils.value","principal-value","sicmutils.value/principal-value",-373041651,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"principal-value","principal-value",-344542783,null),"sicmutils/value.cljc",22,1,521,521,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"cuthigh","cuthigh",-1046878586,null)], null)),null,(cljs.core.truth_(sicmutils.value.principal_value)?sicmutils.value.principal_value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("numerical?"),new cljs.core.Var(function(){return sicmutils.value.numerical_QMARK_;},new cljs.core.Symbol("sicmutils.value","numerical?","sicmutils.value/numerical?",333791805,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Numerical","sicmutils.value/Numerical",345532223,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"numerical?","numerical?",286810593,null),"sicmutils/value.cljc",23,1,24,25,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),null,((sicmutils.value.numerical_QMARK_)?sicmutils.value.numerical_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integral?"),new cljs.core.Var(function(){return sicmutils.value.integral_QMARK_;},new cljs.core.Symbol("sicmutils.value","integral?","sicmutils.value/integral?",-2047160107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"integral?","integral?",-2027571295,null),"sicmutils/value.cljc",16,1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is an integral number, false otherwise.",(cljs.core.truth_(sicmutils.value.integral_QMARK_)?sicmutils.value.integral_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-like"),new cljs.core.Var(function(){return sicmutils.value.zero_like;},new cljs.core.Symbol("sicmutils.value","zero-like","sicmutils.value/zero-like",-887480579,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"zero-like","zero-like",-895025247,null),"sicmutils/value.cljc",13,1,31,35,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,(cljs.core.truth_(sicmutils.value.zero_like)?sicmutils.value.zero_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("="),new cljs.core.Var(function(){return sicmutils.value._EQ_;},new cljs.core.Symbol("sicmutils.value","=","sicmutils.value/=",-1462515041,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"=","=",-1501502141,null),"sicmutils/value.cljc",12,1,258,258,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value._EQ_)?sicmutils.value._EQ_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity?"),new cljs.core.Var(function(){return sicmutils.value.identity_QMARK_;},new cljs.core.Symbol("sicmutils.value","identity?","sicmutils.value/identity?",-1023477647,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"identity?","identity?",-1064576891,null),"sicmutils/value.cljc",22,1,31,34,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,((sicmutils.value.identity_QMARK_)?sicmutils.value.identity_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exact-zero?"),new cljs.core.Var(function(){return sicmutils.value.exact_zero_QMARK_;},new cljs.core.Symbol("sicmutils.value","exact-zero?","sicmutils.value/exact-zero?",344417236,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"exact-zero?","exact-zero?",357843816,null),"sicmutils/value.cljc",18,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns true if the supplied argument is an exact numerical zero, false\n  otherwise.",(cljs.core.truth_(sicmutils.value.exact_zero_QMARK_)?sicmutils.value.exact_zero_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("absolute-integer-tolerance"),new cljs.core.Var(function(){return sicmutils.value.absolute_integer_tolerance;},new cljs.core.Symbol("sicmutils.value","absolute-integer-tolerance","sicmutils.value/absolute-integer-tolerance",1050826141,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"absolute-integer-tolerance","absolute-integer-tolerance",956249385,null),"sicmutils/value.cljc",41,1,500,500,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.absolute_integer_tolerance)?sicmutils.value.absolute_integer_tolerance.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("numeric-zero?"),new cljs.core.Var(function(){return sicmutils.value.numeric_zero_QMARK_;},new cljs.core.Symbol("sicmutils.value","numeric-zero?","sicmutils.value/numeric-zero?",-732925058,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"numeric-zero?","numeric-zero?",-636661046,null),"sicmutils/value.cljc",20,1,116,116,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns `true` if `x` is both a [[number?]] and [[zero?]], false otherwise.",(cljs.core.truth_(sicmutils.value.numeric_zero_QMARK_)?sicmutils.value.numeric_zero_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Numerical"),new cljs.core.Var(function(){return sicmutils.value.Numerical;},new cljs.core.Symbol("sicmutils.value","Numerical","sicmutils.value/Numerical",345532223,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"Numerical","Numerical",390792779,null),"sicmutils/value.cljc",23,1,24,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 1, [cljs.core.with_meta(new cljs.core.Symbol(null,"numerical?","numerical?",286810593,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)], null)], null)], null),24,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"numerical?","numerical?",-1353720934),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"numerical?","numerical?",286810593,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.value.Numerical)?sicmutils.value.Numerical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("freeze"),new cljs.core.Var(function(){return sicmutils.value.freeze;},new cljs.core.Symbol("sicmutils.value","freeze","sicmutils.value/freeze",-650069952,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"freeze","freeze",-610969460,null),"sicmutils/value.cljc",10,1,31,40,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Freezing an expression means removing wrappers and other metadata from\n  subexpressions, so that the result is basically a pure S-expression with the\n  same structure as the input. Doing this will rob an expression of useful\n  information for further computation; so this is intended to be done just\n  before simplification and printing, to simplify those processes.",(cljs.core.truth_(sicmutils.value.freeze)?sicmutils.value.freeze.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("argument-kind"),new cljs.core.Var(function(){return sicmutils.value.argument_kind;},new cljs.core.Symbol("sicmutils.value","argument-kind","sicmutils.value/argument-kind",1406796017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"argument-kind","argument-kind",1292297133,null),"sicmutils/value.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,48,48,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),null,(cljs.core.truth_(sicmutils.value.argument_kind)?sicmutils.value.argument_kind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("seqtype"),new cljs.core.Var(function(){return sicmutils.value.seqtype;},new cljs.core.Symbol("sicmutils.value","seqtype","sicmutils.value/seqtype",-1156264719,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"seqtype","seqtype",-1127485523,null),"sicmutils/value.cljc",13,1,53,53,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.seqtype)?sicmutils.value.seqtype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kind-predicate"),new cljs.core.Var(function(){return sicmutils.value.kind_predicate;},new cljs.core.Symbol("sicmutils.value","kind-predicate","sicmutils.value/kind-predicate",306569434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"kind-predicate","kind-predicate",336774062,null),"sicmutils/value.cljc",21,1,432,432,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns a predicate that returns true if its argument matches the supplied\n  kind-keyword `k`, false otherwise.",(cljs.core.truth_(sicmutils.value.kind_predicate)?sicmutils.value.kind_predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("relative-integer-tolerance"),new cljs.core.Var(function(){return sicmutils.value.relative_integer_tolerance;},new cljs.core.Symbol("sicmutils.value","relative-integer-tolerance","sicmutils.value/relative-integer-tolerance",-242948660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"relative-integer-tolerance","relative-integer-tolerance",-204372624,null),"sicmutils/value.cljc",41,1,499,499,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.relative_integer_tolerance)?sicmutils.value.relative_integer_tolerance.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("almost-integral?"),new cljs.core.Var(function(){return sicmutils.value.almost_integral_QMARK_;},new cljs.core.Symbol("sicmutils.value","almost-integral?","sicmutils.value/almost-integral?",230580844,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"almost-integral?","almost-integral?",66142864,null),"sicmutils/value.cljc",23,1,502,502,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is either:\n\n  - [[integral?]],\n  - a floating point number either < [[absolute-integer-tolerance]] (if near\n    zero) or within [[relative-integer-tolerance]] of the closest integer,\n\n  false otherwise.",(cljs.core.truth_(sicmutils.value.almost_integral_QMARK_)?sicmutils.value.almost_integral_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero?"),new cljs.core.Var(function(){return sicmutils.value.zero_QMARK_;},new cljs.core.Symbol("sicmutils.value","zero?","sicmutils.value/zero?",283070477,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"zero?","zero?",325758897,null),"sicmutils/value.cljc",18,1,31,32,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,((sicmutils.value.zero_QMARK_)?sicmutils.value.zero_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("twopi"),new cljs.core.Var(function(){return sicmutils.value.twopi;},new cljs.core.Symbol("sicmutils.value","twopi","sicmutils.value/twopi",656682984,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"twopi","twopi",1500974612,null),"sicmutils/value.cljc",11,1,519,519,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.twopi)?sicmutils.value.twopi.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("add-object-symbols!"),new cljs.core.Var(function(){return sicmutils.value.add_object_symbols_BANG_;},new cljs.core.Symbol("sicmutils.value","add-object-symbols!","sicmutils.value/add-object-symbols!",1323738361,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"add-object-symbols!","add-object-symbols!",1079364533,null),"sicmutils/value.cljc",26,1,480,480,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"o->syms","o->syms",-25830305,null)], null)),null,(cljs.core.truth_(sicmutils.value.add_object_symbols_BANG_)?sicmutils.value.add_object_symbols_BANG_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("real?"),new cljs.core.Var(function(){return sicmutils.value.real_QMARK_;},new cljs.core.Symbol("sicmutils.value","real?","sicmutils.value/real?",-155677942,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"real?","real?",-118641994,null),"sicmutils/value.cljc",12,1,86,86,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is either an integral number or a floating point number (ie,\n  in the numeric tower but not complex), false otherwise.",(cljs.core.truth_(sicmutils.value.real_QMARK_)?sicmutils.value.real_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one?"),new cljs.core.Var(function(){return sicmutils.value.one_QMARK_;},new cljs.core.Symbol("sicmutils.value","one?","sicmutils.value/one?",1761224163,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"one?","one?",1787102903,null),"sicmutils/value.cljc",17,1,31,33,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,((sicmutils.value.one_QMARK_)?sicmutils.value.one_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sqrt-machine-epsilon"),new cljs.core.Var(function(){return sicmutils.value.sqrt_machine_epsilon;},new cljs.core.Symbol("sicmutils.value","sqrt-machine-epsilon","sicmutils.value/sqrt-machine-epsilon",-204751468,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"sqrt-machine-epsilon","sqrt-machine-epsilon",-243376808,null),"sicmutils/value.cljc",26,1,490,490,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.sqrt_machine_epsilon)?sicmutils.value.sqrt_machine_epsilon.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exact?"),new cljs.core.Var(function(){return sicmutils.value.exact_QMARK_;},new cljs.core.Symbol("sicmutils.value","exact?","sicmutils.value/exact?",-2058980267,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"exact?","exact?",-2028776167,null),"sicmutils/value.cljc",19,1,31,38,new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Entries that are exact are available for `gcd`, among\n  other operations.",((sicmutils.value.exact_QMARK_)?sicmutils.value.exact_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("machine-epsilon"),new cljs.core.Var(function(){return sicmutils.value.machine_epsilon;},new cljs.core.Symbol("sicmutils.value","machine-epsilon","sicmutils.value/machine-epsilon",406930376,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"machine-epsilon","machine-epsilon",437133340,null),"sicmutils/value.cljc",21,1,484,484,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.machine_epsilon)?sicmutils.value.machine_epsilon.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("native-integral?"),new cljs.core.Var(function(){return sicmutils.value.native_integral_QMARK_;},new cljs.core.Symbol("sicmutils.value","native-integral?","sicmutils.value/native-integral?",1935631560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"native-integral?","native-integral?",1972110620,null),"sicmutils/value.cljc",23,1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if x is an integral number that Clojure's math operations work\n  with, false otherwise.",(cljs.core.truth_(sicmutils.value.native_integral_QMARK_)?sicmutils.value.native_integral_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("kind"),new cljs.core.Var(function(){return sicmutils.value.kind;},new cljs.core.Symbol("sicmutils.value","kind","sicmutils.value/kind",888458088,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"kind","kind",923265724,null),"sicmutils/value.cljc",8,1,31,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,(cljs.core.truth_(sicmutils.value.kind)?sicmutils.value.kind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity-like"),new cljs.core.Var(function(){return sicmutils.value.identity_like;},new cljs.core.Symbol("sicmutils.value","identity-like","sicmutils.value/identity-like",1562768080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"identity-like","identity-like",1541985180,null),"sicmutils/value.cljc",17,1,31,37,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,(cljs.core.truth_(sicmutils.value.identity_like)?sicmutils.value.identity_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compare"),new cljs.core.Var(function(){return sicmutils.value.compare;},new cljs.core.Symbol("sicmutils.value","compare","sicmutils.value/compare",1081796465,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"compare","compare",1109853757,null),"sicmutils/value.cljc",25,4,453,453,new cljs.core.Symbol(null,"number","number",-1084057331,null),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"y","y",-117328249,null)], null)),"Comparator. Clone of [[cljs.core/compare]] that works with the expanded\n      SICMUtils numeric tower.\n\n  Returns a negative number, zero, or a positive number when x is logically\n  'less than', 'equal to', or 'greater than' y. Uses IComparable if available\n  and google.array.defaultCompare for objects of the same type and special-cases\n  nil to be less than any other object.",(cljs.core.truth_(sicmutils.value.compare)?sicmutils.value.compare.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("scalar?"),new cljs.core.Var(function(){return sicmutils.value.scalar_QMARK_;},new cljs.core.Symbol("sicmutils.value","scalar?","sicmutils.value/scalar?",1406131017,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"scalar?","scalar?",1570438077,null),"sicmutils/value.cljc",14,1,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true for anything that derives from `::scalar`, ie, any numeric type in\n  the numeric tower that responds true to [[number?]], plus symbolic expressions\n  generated by [[sicmutils.abstract.number/literal-number]],\n\n  false otherwise.",(cljs.core.truth_(sicmutils.value.scalar_QMARK_)?sicmutils.value.scalar_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Value"),new cljs.core.Var(function(){return sicmutils.value.Value;},new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"Value","Value",2029092958,null),"sicmutils/value.cljc",19,1,31,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),cljs.core.PersistentHashMap.fromArrays([cljs.core.with_meta(new cljs.core.Symbol(null,"zero-like","zero-like",-895025247,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"identity?","identity?",-1064576891,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"freeze","freeze",-610969460,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Freezing an expression means removing wrappers and other metadata from\n  subexpressions, so that the result is basically a pure S-expression with the\n  same structure as the input. Doing this will rob an expression of useful\n  information for further computation; so this is intended to be done just\n  before simplification and printing, to simplify those processes."], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"zero?","zero?",325758897,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"one?","one?",1787102903,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"exact?","exact?",-2028776167,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null),new cljs.core.Keyword(null,"doc","doc",1913296891),"Entries that are exact are available for `gcd`, among\n  other operations."], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"identity-like","identity-like",1541985180,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)),cljs.core.with_meta(new cljs.core.Symbol(null,"one-like","one-like",-1767302049,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),null], null))],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)])], null),31,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"freeze","freeze",2043466309),new cljs.core.Keyword(null,"zero?","zero?",-1314772630),new cljs.core.Keyword(null,"one?","one?",146571376),new cljs.core.Keyword(null,"exact?","exact?",625659602),new cljs.core.Keyword(null,"kind","kind",-717265803),new cljs.core.Keyword(null,"identity-like","identity-like",-98546347),new cljs.core.Keyword(null,"one-like","one-like",887133720),new cljs.core.Keyword(null,"zero-like","zero-like",1759410522),new cljs.core.Keyword(null,"identity?","identity?",1589858878)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"freeze","freeze",-610969460,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Freezing an expression means removing wrappers and other metadata from\n  subexpressions, so that the result is basically a pure S-expression with the\n  same structure as the input. Doing this will rob an expression of useful\n  information for further computation; so this is intended to be done just\n  before simplification and printing, to simplify those processes."], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"zero?","zero?",325758897,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"one?","one?",1787102903,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"exact?","exact?",-2028776167,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Entries that are exact are available for `gcd`, among\n  other operations."], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"kind","kind",923265724,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"identity-like","identity-like",1541985180,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"one-like","one-like",-1767302049,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"zero-like","zero-like",-895025247,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),cljs.core.with_meta(new cljs.core.Symbol(null,"identity?","identity?",-1064576891,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"boolean","boolean",-278886877,null)], null)),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),null], null)]),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.value.Value)?sicmutils.value.Value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("number?"),new cljs.core.Var(function(){return sicmutils.value.number_QMARK_;},new cljs.core.Symbol("sicmutils.value","number?","sicmutils.value/number?",-1794214006,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"number?","number?",-1747282210,null),"sicmutils/value.cljc",14,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is any number type in the numeric tower:\n\n  - integral\n  - floating point\n  - complex\n\n  false otherwise.",(cljs.core.truth_(sicmutils.value.number_QMARK_)?sicmutils.value.number_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("within"),new cljs.core.Var(function(){return sicmutils.value.within;},new cljs.core.Symbol("sicmutils.value","within","sicmutils.value/within",1556601738,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"within","within",1563704062,null),"sicmutils/value.cljc",13,1,493,493,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,"\u03B5","\u03B5",-1396568965,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",-1290361223),new cljs.core.Symbol(null,"double","double",-1769548886,null)], null))], null)),"Returns a function that tests whether two values are within \u03B5 of each other.",(cljs.core.truth_(sicmutils.value.within)?sicmutils.value.within.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one-like"),new cljs.core.Var(function(){return sicmutils.value.one_like;},new cljs.core.Symbol("sicmutils.value","one-like","sicmutils.value/one-like",-1457619677,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"one-like","one-like",-1767302049,null),"sicmutils/value.cljc",12,1,31,36,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),null,(cljs.core.truth_(sicmutils.value.one_like)?sicmutils.value.one_like.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("object-name-map"),new cljs.core.Var(function(){return sicmutils.value.object_name_map;},new cljs.core.Symbol("sicmutils.value","object-name-map","sicmutils.value/object-name-map",-1050931165,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.value","sicmutils.value",1790615752,null),new cljs.core.Symbol(null,"object-name-map","object-name-map",-812683425,null),"sicmutils/value.cljc",21,1,51,51,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.value.object_name_map)?sicmutils.value.object_name_map.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S3;},new cljs.core.Symbol("sicmutils.calculus.manifold","S3","sicmutils.calculus.manifold/S3",1775560985,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S3","S3",1919527328,null),"sicmutils/calculus/manifold.cljc",8,1,1335,1335,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S3)?sicmutils.calculus.manifold.S3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R4;},new cljs.core.Symbol("sicmutils.calculus.manifold","R4","sicmutils.calculus.manifold/R4",-1057946353,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R4","R4",-879475264,null),"sicmutils/calculus/manifold.cljc",8,1,1186,1186,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R4)?sicmutils.calculus.manifold.R4.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101296"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101296;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101296","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101296",1127255675,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101296","->t_sicmutils$calculus$manifold101296",1151192608,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),680,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101297","meta101297",676763275,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101296.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101296)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101296.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("uuid"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.uuid;},new cljs.core.Symbol("sicmutils.calculus.manifold","uuid","sicmutils.calculus.manifold/uuid",-368593511,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),"sicmutils/calculus/manifold.cljc",8,1,325,342,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns a unique identifier for this instance of [[ICoordinateSystem]].\n\n    (This is an internal implementation detail to allow us to attach coordinate\n    prototypes and other items as metadata to an [[ICoordinateSystem]] without\n    affecting equality.)",(cljs.core.truth_(sicmutils.calculus.manifold.uuid)?sicmutils.calculus.manifold.uuid.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-stereographic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S3_stereographic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S3-stereographic","sicmutils.calculus.manifold/S3-stereographic",616851419,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S3-stereographic","S3-stereographic",731850624,null),"sicmutils/calculus/manifold.cljc",22,1,1341,1341,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S3_stereographic)?sicmutils.calculus.manifold.S3_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system-at"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.coordinate_system_at;},new cljs.core.Symbol("sicmutils.calculus.manifold","coordinate-system-at","sicmutils.calculus.manifold/coordinate-system-at",-862181746,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"coordinate-system-at","coordinate-system-at",-933140671,null),"sicmutils/calculus/manifold.cljc",27,1,249,249,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-system-name","coordinate-system-name",-448421652,null),new cljs.core.Symbol(null,"patch-name","patch-name",433729698,null)], null)),"Returns an [[ICoordinateSystem]] instance specialized to the patch named\n  `patch-name` on `manifold`.",(cljs.core.truth_(sicmutils.calculus.manifold.coordinate_system_at)?sicmutils.calculus.manifold.coordinate_system_at.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-cyl"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R3_cyl;},new cljs.core.Symbol("sicmutils.calculus.manifold","R3-cyl","sicmutils.calculus.manifold/R3-cyl",-1139401170,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R3-cyl","R3-cyl",-1317838879,null),"sicmutils/calculus/manifold.cljc",12,1,1183,1183,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R3_cyl)?sicmutils.calculus.manifold.R3_cyl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S1;},new cljs.core.Symbol("sicmutils.calculus.manifold","S1","sicmutils.calculus.manifold/S1",956985561,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S1","S1",1013002370,null),"sicmutils/calculus/manifold.cljc",8,1,1322,1322,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S1)?sicmutils.calculus.manifold.S1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SO3-type"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.SO3_type;},new cljs.core.Symbol("sicmutils.calculus.manifold","SO3-type","sicmutils.calculus.manifold/SO3-type",-336256071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"SO3-type","SO3-type",-259399070,null),"sicmutils/calculus/manifold.cljc",14,1,1350,1350,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.SO3_type)?sicmutils.calculus.manifold.SO3_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101323"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101323;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101323","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101323",2090236653,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101323","->t_sicmutils$calculus$manifold101323",2017147554,null),"sicmutils/calculus/manifold.cljc",true,12,new cljs.core.Keyword(null,"positional","positional",-203580463),926,cljs.core.list(new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orientation-function","orientation-function",-1851559379,null),new cljs.core.Symbol(null,"ctor","ctor",-903570967,null),new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"orientation-matrix","orientation-matrix",-591482625,null),new cljs.core.Symbol(null,"orientation-inverse-matrix","orientation-inverse-matrix",1827755966,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101324","meta101324",846538188,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101323.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101323)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101323.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2-rect"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R2_rect;},new cljs.core.Symbol("sicmutils.calculus.manifold","R2-rect","sicmutils.calculus.manifold/R2-rect",1687113529,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R2-rect","R2-rect",1642598370,null),"sicmutils/calculus/manifold.cljc",13,1,1178,1178,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R2_rect)?sicmutils.calculus.manifold.R2_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101333"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101333;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101333","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101333",1845725146,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101333","->t_sicmutils$calculus$manifold101333",1403402339,null),"sicmutils/calculus/manifold.cljc",true,12,new cljs.core.Keyword(null,"positional","positional",-203580463),1004,cljs.core.list(new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orientation-function","orientation-function",-1851559379,null),new cljs.core.Symbol(null,"ctor","ctor",-903570967,null),new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"orientation-matrix","orientation-matrix",-591482625,null),new cljs.core.Symbol(null,"orientation-inverse-matrix","orientation-inverse-matrix",1827755966,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101334","meta101334",-681614627,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101333.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101333)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101333.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-slope"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S1_slope;},new cljs.core.Symbol("sicmutils.calculus.manifold","S1-slope","sicmutils.calculus.manifold/S1-slope",-1514203894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S1-slope","S1-slope",-1191127613,null),"sicmutils/calculus/manifold.cljc",14,1,1325,1325,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S1_slope)?sicmutils.calculus.manifold.S1_slope.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-rect"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R3_rect;},new cljs.core.Symbol("sicmutils.calculus.manifold","R3-rect","sicmutils.calculus.manifold/R3-rect",-312384948,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R3-rect","R3-rect",-421879293,null),"sicmutils/calculus/manifold.cljc",13,1,1182,1182,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R3_rect)?sicmutils.calculus.manifold.R3_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime-rect"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.spacetime_rect;},new cljs.core.Symbol("sicmutils.calculus.manifold","spacetime-rect","sicmutils.calculus.manifold/spacetime-rect",-713275917,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"spacetime-rect","spacetime-rect",-779647580,null),"sicmutils/calculus/manifold.cljc",20,1,1195,1195,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.spacetime_rect)?sicmutils.calculus.manifold.spacetime_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-gnomonic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_gnomonic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-gnomonic","sicmutils.calculus.manifold/S2-gnomonic",949195069,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-gnomonic","S2-gnomonic",876138980,null),"sicmutils/calculus/manifold.cljc",17,1,1265,1265,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2_gnomonic)?sicmutils.calculus.manifold.S2_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold?"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold?","sicmutils.calculus.manifold/manifold?",-131424097,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold?","manifold?",-57809116,null),"sicmutils/calculus/manifold.cljc",16,1,150,150,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns `true` if `m` is a dictionary representing a manifold, false\n  otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold_QMARK_)?sicmutils.calculus.manifold.manifold_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-manifold-function"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.literal_manifold_function;},new cljs.core.Symbol("sicmutils.calculus.manifold","literal-manifold-function","sicmutils.calculus.manifold/literal-manifold-function",-976965154,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"literal-manifold-function","literal-manifold-function",-894930843,null),"sicmutils/calculus/manifold.cljc",32,1,447,447,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given a symbolic name `sym` and an [[ICoordinateSystem]], returns a literal\n  function that maps coordinate-free manifold points to a scalar output.\n\n  Also aliased as [[literal-manifold-function]].",(cljs.core.truth_(sicmutils.calculus.manifold.literal_manifold_function)?sicmutils.calculus.manifold.literal_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Sn"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.Sn;},new cljs.core.Symbol("sicmutils.calculus.manifold","Sn","sicmutils.calculus.manifold/Sn",-231204354,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"Sn","Sn",-153298683,null),"sicmutils/calculus/manifold.cljc",8,1,1267,1267,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.Sn)?sicmutils.calculus.manifold.Sn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-type"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold_type;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold-type","sicmutils.calculus.manifold/manifold-type",-1967353492,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold-type","manifold-type",-2024681051,null),"sicmutils/calculus/manifold.cljc",20,1,156,156,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null)], null)),"The supplied manifold `m` locally resembles some vector space; this function\n  returns the field over which that vector space was specified.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold_type)?sicmutils.calculus.manifold.manifold_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("check-coordinates"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.check_coordinates;},new cljs.core.Symbol("sicmutils.calculus.manifold","check-coordinates","sicmutils.calculus.manifold/check-coordinates",-438412558,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"check-coordinates","check-coordinates",-511993179,null),"sicmutils/calculus/manifold.cljc",21,1,325,326,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),"Returns true if the supplied coordinates `coords` can be converted into a\n    point by this [[ICoordinateSystem]], false otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.check_coordinates)?sicmutils.calculus.manifold.check_coordinates.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101269"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101269;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101269","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101269",-738240706,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101269","->t_sicmutils$calculus$manifold101269",-686057659,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),524,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101270","meta101270",1408454348,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101269.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101269)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101269.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typical-point"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.typical_point;},new cljs.core.Symbol("sicmutils.calculus.manifold","typical-point","sicmutils.calculus.manifold/typical-point",-1299772660,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"typical-point","typical-point",-1087714491,null),"sicmutils/calculus/manifold.cljc",20,1,405,405,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given an [[ICoordinateSystem]], returns a unique, symbolically-represented\n  point on the manifold associated with `coordinate-system`.\n\n  See [[typical-coords]] for a coordinate-based version of this function.",(cljs.core.truth_(sicmutils.calculus.manifold.typical_point)?sicmutils.calculus.manifold.typical_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("literal-scalar-field"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.literal_scalar_field;},new cljs.core.Symbol("sicmutils.calculus.manifold","literal-scalar-field","sicmutils.calculus.manifold/literal-scalar-field",1631208332,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"literal-scalar-field","literal-scalar-field",1822360517,null),"sicmutils/calculus/manifold.cljc",23,1,464,466,cljs.core.List.EMPTY,"Alias for [[literal-manifold-function]], present for scmutils\ncodebase compatibility.",(cljs.core.truth_(sicmutils.calculus.manifold.literal_scalar_field)?sicmutils.calculus.manifold.literal_scalar_field.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101338"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101338;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101338","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101338",1797468241,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101338","->t_sicmutils$calculus$manifold101338",1850109958,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),1070,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101339","meta101339",-1508594802,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101338.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101338)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101338.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101296"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101296;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101296","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101296",1747108799,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),680,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101296","t_sicmutils$calculus$manifold101296",1732640870,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101296)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101296.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101274"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101274;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101274","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101274",-1399347249,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101274","->t_sicmutils$calculus$manifold101274",-1338185978,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),562,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101275","meta101275",1749103676,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101274.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101274)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101274.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-tilted"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S3_tilted;},new cljs.core.Symbol("sicmutils.calculus.manifold","S3-tilted","sicmutils.calculus.manifold/S3-tilted",-1364796146,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S3-tilted","S3-tilted",-1815929529,null),"sicmutils/calculus/manifold.cljc",15,1,1337,1337,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S3_tilted)?sicmutils.calculus.manifold.S3_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-Riemann"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_Riemann;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-Riemann","sicmutils.calculus.manifold/S2-Riemann",1034181006,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-Riemann","S2-Riemann",940087751,null),"sicmutils/calculus/manifold.cljc",16,1,1264,1264,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2_Riemann)?sicmutils.calculus.manifold.S2_Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3-spherical"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R3_spherical;},new cljs.core.Symbol("sicmutils.calculus.manifold","R3-spherical","sicmutils.calculus.manifold/R3-spherical",812603150,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R3-spherical","R3-spherical",934549319,null),"sicmutils/calculus/manifold.cljc",18,1,1184,1184,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R3_spherical)?sicmutils.calculus.manifold.R3_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-patch"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.get_patch;},new cljs.core.Symbol("sicmutils.calculus.manifold","get-patch","sicmutils.calculus.manifold/get-patch",-82769353,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"get-patch","get-patch",-636344,null),"sicmutils/calculus/manifold.cljc",16,1,195,195,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"patch-name","patch-name",433729698,null)], null)),"Returns the patch named by `patch-name` within the supplied `manifold` if\n  registered. Throws otherwise.\n\n  NOTE that the returned patch will keep a reference to the supplied `manifold`\n  under a `:manifold` key.\n\n  A coordinate patch is a simply-connected open set around a point in the\n  manifold. A manifold might have many patches. Coordinate systems are defined\n  on patches; these allow the parameterization of any point on the patch in\n  terms of a tuple of real numbers (the coordinates).",(cljs.core.truth_(sicmutils.calculus.manifold.get_patch)?sicmutils.calculus.manifold.get_patch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-spherical"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_spherical;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-spherical","sicmutils.calculus.manifold/S2-spherical",17655473,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-spherical","S2-spherical",173450952,null),"sicmutils/calculus/manifold.cljc",18,1,1256,1256,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2_spherical)?sicmutils.calculus.manifold.S2_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one-manifold-function"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.one_manifold_function;},new cljs.core.Symbol("sicmutils.calculus.manifold","one-manifold-function","sicmutils.calculus.manifold/one-manifold-function",39995377,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"one-manifold-function","one-manifold-function",117769992,null),"sicmutils/calculus/manifold.cljc",28,1,475,475,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Manifold function that maps every input manifold `point` to the scalar value 1.",(cljs.core.truth_(sicmutils.calculus.manifold.one_manifold_function)?sicmutils.calculus.manifold.one_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p","sicmutils.calculus.manifold/S2p",914971957,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p","S2p",220470602,null),"sicmutils/calculus/manifold.cljc",9,1,1328,1328,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p)?sicmutils.calculus.manifold.S2p.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101285"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101285;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101285","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101285",1391033408,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),621,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101285","t_sicmutils$calculus$manifold101285",1447869835,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101285)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101285.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101333"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101333;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101333","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101333",776150578,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),1004,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101333","t_sicmutils$calculus$manifold101333",690478667,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101333)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101333.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-stereographic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_stereographic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-stereographic","sicmutils.calculus.manifold/S2-stereographic",-57124313,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-stereographic","S2-stereographic",-100853268,null),"sicmutils/calculus/manifold.cljc",22,1,1263,1263,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2_stereographic)?sicmutils.calculus.manifold.S2_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Rn"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.Rn;},new cljs.core.Symbol("sicmutils.calculus.manifold","Rn","sicmutils.calculus.manifold/Rn",1969933147,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"Rn","Rn",1925679884,null),"sicmutils/calculus/manifold.cljc",8,1,1165,1165,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.Rn)?sicmutils.calculus.manifold.Rn.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101323"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101323;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101323","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101323",1886559364,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),926,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101323","t_sicmutils$calculus$manifold101323",1974459597,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101323)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101323.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-gnomonic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p_gnomonic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p-gnomonic","sicmutils.calculus.manifold/S2p-gnomonic",-13129446,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p-gnomonic","S2p-gnomonic",-68458035,null),"sicmutils/calculus/manifold.cljc",18,1,1333,1333,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p_gnomonic)?sicmutils.calculus.manifold.S2p_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("point->coords"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.point__GT_coords;},new cljs.core.Symbol("sicmutils.calculus.manifold","point->coords","sicmutils.calculus.manifold/point->coords",-1917298505,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"point->coords","point->coords",-1341974162,null),"sicmutils/calculus/manifold.cljc",17,1,325,338,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Returns a coordinate representation of the supplied manifold point `point`,\n    as specified by this [[ICoordinateSystem]].",(cljs.core.truth_(sicmutils.calculus.manifold.point__GT_coords)?sicmutils.calculus.manifold.point__GT_coords.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("attach-coordinate-system"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.attach_coordinate_system;},new cljs.core.Symbol("sicmutils.calculus.manifold","attach-coordinate-system","sicmutils.calculus.manifold/attach-coordinate-system",1347019225,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"attach-coordinate-system","attach-coordinate-system",-1382768242,null),"sicmutils/calculus/manifold.cljc",31,1,220,220,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"coordinate-system-name","coordinate-system-name",-448421652,null),new cljs.core.Symbol(null,"patch-name","patch-name",433729698,null),new cljs.core.Symbol(null,"coordinate-system-ctor","coordinate-system-ctor",301188674,null)], null)),"Returns a new manifold family generated by attaching the supplied coordinate\n  system constructor to `family`, indexed by the supplied patch and coordinate\n  system names.",(cljs.core.truth_(sicmutils.calculus.manifold.attach_coordinate_system)?sicmutils.calculus.manifold.attach_coordinate_system.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ICoordinateSystem"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.ICoordinateSystem;},new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"ICoordinateSystem","ICoordinateSystem",131120782,null),"sicmutils/calculus/manifold.cljc",31,1,325,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.with_meta(new cljs.core.Symbol(null,"check-coordinates","check-coordinates",-511993179,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied coordinates `coords` can be converted into a\n    point by this [[ICoordinateSystem]], false otherwise."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"check-point","check-point",689371383,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied `point` can be converted into coordinates by\n    this [[ICoordinateSystem]], false otherwise."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"coords->point","coords->point",-1467945699,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the manifold point on this [[ICoordinateSystem]]'s manifold\n    corresponding to the supplied `coords`."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"point->coords","point->coords",-1341974162,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns a coordinate representation of the supplied manifold point `point`,\n    as specified by this [[ICoordinateSystem]]."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns a unique identifier for this instance of [[ICoordinateSystem]].\n\n    (This is an internal implementation detail to allow us to attach coordinate\n    prototypes and other items as metadata to an [[ICoordinateSystem]] without\n    affecting equality.)"], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null)], null)], null),325,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"check-coordinates","check-coordinates",2142442590),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"check-coordinates","check-coordinates",-511993179,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied coordinates `coords` can be converted into a\n    point by this [[ICoordinateSystem]], false otherwise."], null),new cljs.core.Keyword(null,"check-point","check-point",-951160144),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"check-point","check-point",689371383,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied `point` can be converted into coordinates by\n    this [[ICoordinateSystem]], false otherwise."], null),new cljs.core.Keyword(null,"coords->point","coords->point",1186490070),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"coords->point","coords->point",-1467945699,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns the manifold point on this [[ICoordinateSystem]]'s manifold\n    corresponding to the supplied `coords`."], null),new cljs.core.Keyword(null,"point->coords","point->coords",1312461607),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"point->coords","point->coords",-1341974162,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns a coordinate representation of the supplied manifold point `point`,\n    as specified by this [[ICoordinateSystem]]."], null),new cljs.core.Keyword(null,"uuid","uuid",-2145095719),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"uuid","uuid",-504564192,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns a unique identifier for this instance of [[ICoordinateSystem]].\n\n    (This is an internal implementation detail to allow us to attach coordinate\n    prototypes and other items as metadata to an [[ICoordinateSystem]] without\n    affecting equality.)"], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.calculus.manifold.ICoordinateSystem)?sicmutils.calculus.manifold.ICoordinateSystem.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2-polar"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R2_polar;},new cljs.core.Symbol("sicmutils.calculus.manifold","R2-polar","sicmutils.calculus.manifold/R2-polar",-1626798151,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R2-polar","R2-polar",-1569929362,null),"sicmutils/calculus/manifold.cljc",14,1,1179,1179,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R2_polar)?sicmutils.calculus.manifold.R2_polar.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2","sicmutils.calculus.manifold/S2",1491470680,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2","S2",1434700047,null),"sicmutils/calculus/manifold.cljc",8,1,1255,1255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2)?sicmutils.calculus.manifold.S2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-spherical"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S3_spherical;},new cljs.core.Symbol("sicmutils.calculus.manifold","S3-spherical","sicmutils.calculus.manifold/S3-spherical",-413315434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S3-spherical","S3-spherical",-73265585,null),"sicmutils/calculus/manifold.cljc",18,1,1336,1336,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S3_spherical)?sicmutils.calculus.manifold.S3_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101338"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101338;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101338","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101338",211064470,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),1070,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101338","t_sicmutils$calculus$manifold101338",394221135,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101338)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101338.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("c:generate"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.c_COLON_generate;},new cljs.core.Symbol("sicmutils.calculus.manifold","c:generate","sicmutils.calculus.manifold/c:generate",-1131604348,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"c:generate","c:generate",1080088399,null),"sicmutils/calculus/manifold.cljc",17,1,493,493,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Generates a coordinate structure of the supplied dimension `n`, and\n  `orientation` using the supplied function `f` for entries. See the very\n  similar [[sicmutils.structure/generate]] for more details.\n\n  NOTE from GJS: this is a kludge introduced only to allow a coordinate of\n  dimension 1 to automatically unwrap itself.",(cljs.core.truth_(sicmutils.calculus.manifold.c_COLON_generate)?sicmutils.calculus.manifold.c_COLON_generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime-sphere"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.spacetime_sphere;},new cljs.core.Symbol("sicmutils.calculus.manifold","spacetime-sphere","sicmutils.calculus.manifold/spacetime-sphere",-15541724,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"spacetime-sphere","spacetime-sphere",-189162513,null),"sicmutils/calculus/manifold.cljc",22,1,1198,1198,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.spacetime_sphere)?sicmutils.calculus.manifold.spacetime_sphere.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-spherical"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p_spherical;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p-spherical","sicmutils.calculus.manifold/S2p-spherical",-639847201,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p-spherical","S2p-spherical",-596118512,null),"sicmutils/calculus/manifold.cljc",19,1,1329,1329,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p_spherical)?sicmutils.calculus.manifold.S2p_spherical.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R1-rect"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R1_rect;},new cljs.core.Symbol("sicmutils.calculus.manifold","R1-rect","sicmutils.calculus.manifold/R1-rect",-192651989,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R1-rect","R1-rect",-127853232,null),"sicmutils/calculus/manifold.cljc",13,1,1174,1174,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R1_rect)?sicmutils.calculus.manifold.R1_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("the-real-line"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.the_real_line;},new cljs.core.Symbol("sicmutils.calculus.manifold","the-real-line","sicmutils.calculus.manifold/the-real-line",340824267,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"the-real-line","the-real-line",319574384,null),"sicmutils/calculus/manifold.cljc",19,1,1175,1175,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.the_real_line)?sicmutils.calculus.manifold.the_real_line.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4-rect"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R4_rect;},new cljs.core.Symbol("sicmutils.calculus.manifold","R4-rect","sicmutils.calculus.manifold/R4-rect",1835734335,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R4-rect","R4-rect",1343116656,null),"sicmutils/calculus/manifold.cljc",13,1,1187,1187,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R4_rect)?sicmutils.calculus.manifold.R4_rect.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-coordinate-prototype"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.with_coordinate_prototype;},new cljs.core.Symbol("sicmutils.calculus.manifold","with-coordinate-prototype","sicmutils.calculus.manifold/with-coordinate-prototype",-1767714087,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"with-coordinate-prototype","with-coordinate-prototype",-1647439344,null),"sicmutils/calculus/manifold.cljc",32,1,363,363,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null),new cljs.core.Symbol(null,"prototype","prototype",519166522,null)], null)),"Returns an identical `coordsys` with the new `coordinate-prototype` installed.",(cljs.core.truth_(sicmutils.calculus.manifold.with_coordinate_prototype)?sicmutils.calculus.manifold.with_coordinate_prototype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101315"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101315;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101315","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101315",1994014687,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),813,new cljs.core.Keyword(null,"column","column",2078222095),14,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101315","t_sicmutils$calculus$manifold101315",1807744784,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101315)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101315.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("point->manifold"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.point__GT_manifold;},new cljs.core.Symbol("sicmutils.calculus.manifold","point->manifold","sicmutils.calculus.manifold/point->manifold",814606937,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"point->manifold","point->manifold",937995152,null),"sicmutils/calculus/manifold.cljc",22,1,292,292,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Return the manifold upon which this `point` was defined.",(cljs.core.truth_(sicmutils.calculus.manifold.point__GT_manifold)?sicmutils.calculus.manifold.point__GT_manifold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("alternate-angles"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.alternate_angles;},new cljs.core.Symbol("sicmutils.calculus.manifold","alternate-angles","sicmutils.calculus.manifold/alternate-angles",-1734650744,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"alternate-angles","alternate-angles",-469789615,null),"sicmutils/calculus/manifold.cljc",22,1,1363,1363,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.alternate_angles)?sicmutils.calculus.manifold.alternate_angles.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101269"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101269;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101269","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101269",1040781656,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),524,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101269","t_sicmutils$calculus$manifold101269",91508881,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101269)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101269.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101346"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101346;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101346","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101346",1681022398,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),1120,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101346","t_sicmutils$calculus$manifold101346",1754701297,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101346)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101346.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101285"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101285;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101285","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101285",1456809528,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101285","->t_sicmutils$calculus$manifold101285",1563616881,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),621,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101286","meta101286",951046592,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101285.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101285)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101285.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-type"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_type;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-type","sicmutils.calculus.manifold/S2-type",-1200249654,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-type","S2-type",-1290736783,null),"sicmutils/calculus/manifold.cljc",13,1,1207,1207,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2_type)?sicmutils.calculus.manifold.S2_type.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2-tilted"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2_tilted;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2-tilted","sicmutils.calculus.manifold/S2-tilted",828355741,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2-tilted","S2-tilted",875853010,null),"sicmutils/calculus/manifold.cljc",12,1,1258,1260,cljs.core.List.EMPTY,"Similar to the [[S2-spherical]] coordinate system, with the north\n  pole rotated 90 degrees and lying along the positive y axis.",(cljs.core.truth_(sicmutils.calculus.manifold.S2_tilted)?sicmutils.calculus.manifold.S2_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101346"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101346;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101346","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101346",599415243,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101346","->t_sicmutils$calculus$manifold101346",659986834,null),"sicmutils/calculus/manifold.cljc",true,10,new cljs.core.Keyword(null,"positional","positional",-203580463),1120,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101347","meta101347",-315549546,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101346.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101346)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101346.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101305"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101305;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101305","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101305",952507643,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101305","->t_sicmutils$calculus$manifold101305",1014685490,null),"sicmutils/calculus/manifold.cljc",true,15,new cljs.core.Keyword(null,"positional","positional",-203580463),749,cljs.core.list(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orientation","orientation",-2030878190,null),new cljs.core.Symbol(null,"inverse-orientation","inverse-orientation",338347381,null),new cljs.core.Symbol(null,"ctor","ctor",-903570967,null),new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"meta101306","meta101306",87136988,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101305.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101305)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101305.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-tilted"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S1_tilted;},new cljs.core.Symbol("sicmutils.calculus.manifold","S1-tilted","sicmutils.calculus.manifold/S1-tilted",2138535242,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S1-tilted","S1-tilted",1914352915,null),"sicmutils/calculus/manifold.cljc",15,1,1324,1324,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S1_tilted)?sicmutils.calculus.manifold.S1_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-Riemann"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p_Riemann;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p-Riemann","sicmutils.calculus.manifold/S2p-Riemann",2091126122,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p-Riemann","S2p-Riemann",1897909555,null),"sicmutils/calculus/manifold.cljc",17,1,1332,1332,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p_Riemann)?sicmutils.calculus.manifold.S2p_Riemann.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101305"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101305;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101305","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101305",-371466276,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),749,new cljs.core.Keyword(null,"column","column",2078222095),15,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101305","t_sicmutils$calculus$manifold101305",-491479277,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101305)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101305.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("SO3"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.SO3;},new cljs.core.Symbol("sicmutils.calculus.manifold","SO3","sicmutils.calculus.manifold/SO3",-1601303462,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"SO3","SO3",-1478144109,null),"sicmutils/calculus/manifold.cljc",9,1,1357,1357,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.SO3)?sicmutils.calculus.manifold.SO3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("patch-names"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.patch_names;},new cljs.core.Symbol("sicmutils.calculus.manifold","patch-names","sicmutils.calculus.manifold/patch-names",-1461421124,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"patch-names","patch-names",-1547977741,null),"sicmutils/calculus/manifold.cljc",18,1,189,189,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold","manifold",-299796682,null)], null)),"Returns a set of patch names registered in the supplied manifold.",(cljs.core.truth_(sicmutils.calculus.manifold.patch_names)?sicmutils.calculus.manifold.patch_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-circular"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S1_circular;},new cljs.core.Symbol("sicmutils.calculus.manifold","S1-circular","sicmutils.calculus.manifold/S1-circular",-71961073,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S1-circular","S1-circular",-435145260,null),"sicmutils/calculus/manifold.cljc",17,1,1323,1323,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S1_circular)?sicmutils.calculus.manifold.S1_circular.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-stereographic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p_stereographic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p-stereographic","sicmutils.calculus.manifold/S2p-stereographic",1175080172,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p-stereographic","S2p-stereographic",1252985877,null),"sicmutils/calculus/manifold.cljc",23,1,1331,1331,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p_stereographic)?sicmutils.calculus.manifold.S2p_stereographic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S3-gnomonic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S3_gnomonic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S3-gnomonic","sicmutils.calculus.manifold/S3-gnomonic",-1974713297,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S3-gnomonic","S3-gnomonic",-1897888682,null),"sicmutils/calculus/manifold.cljc",17,1,1338,1338,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S3_gnomonic)?sicmutils.calculus.manifold.S3_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-point?"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold_point_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold-point?","sicmutils.calculus.manifold/manifold-point?",-1874942865,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold-point?","manifold-point?",-1801722474,null),"sicmutils/calculus/manifold.cljc",22,1,297,297,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"p","p",1791580836,null)], null)),"Returns true if `p` is a manifold point, false otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold_point_QMARK_)?sicmutils.calculus.manifold.manifold_point_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold","sicmutils.calculus.manifold/manifold",-242962303,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),"sicmutils/calculus/manifold.cljc",15,1,162,162,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"If `m` is a manifold, acts as identity. Else, if given some structure\n  associated with a manifold (like a coordinate system), returns the associated\n  manifold.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold)?sicmutils.calculus.manifold.manifold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->t_sicmutils$calculus$manifold101315"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101315;},new cljs.core.Symbol("sicmutils.calculus.manifold","->t_sicmutils$calculus$manifold101315","sicmutils.calculus.manifold/->t_sicmutils$calculus$manifold101315",-1520211761,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"anonymous","anonymous",447897231),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"->t_sicmutils$calculus$manifold101315","->t_sicmutils$calculus$manifold101315",-1583564938,null),"sicmutils/calculus/manifold.cljc",true,14,new cljs.core.Keyword(null,"positional","positional",-203580463),813,cljs.core.list(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"rotate-left","rotate-left",-1088090459,null),new cljs.core.Symbol(null,"ctor","ctor",-903570967,null),new cljs.core.Symbol(null,"orientation-function","orientation-function",-1851559379,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"manifold","manifold",-299796682,null),new cljs.core.Symbol(null,"id","id",252129435,null),new cljs.core.Symbol(null,"orientation-inverse-matrix","orientation-inverse-matrix",1827755966,null),new cljs.core.Symbol(null,"orientation-matrix","orientation-matrix",-591482625,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),new cljs.core.Symbol(null,"meta101316","meta101316",1458038331,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101315.",(cljs.core.truth_(sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101315)?sicmutils.calculus.manifold.__GT_t_sicmutils$calculus$manifold101315.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system-names"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.coordinate_system_names;},new cljs.core.Symbol("sicmutils.calculus.manifold","coordinate-system-names","sicmutils.calculus.manifold/coordinate-system-names",873588685,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"coordinate-system-names","coordinate-system-names",793552790,null),"sicmutils/calculus/manifold.cljc",30,1,230,230,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"patch","patch",2021306636,null)], null)),"Returns a set of names of all coordinate system constructors registered in the\n  supplied patch.",(cljs.core.truth_(sicmutils.calculus.manifold.coordinate_system_names)?sicmutils.calculus.manifold.coordinate_system_names.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("check-point"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.check_point;},new cljs.core.Symbol("sicmutils.calculus.manifold","check-point","sicmutils.calculus.manifold/check-point",904771662,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"check-point","check-point",689371383,null),"sicmutils/calculus/manifold.cljc",15,1,325,330,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Returns true if the supplied `point` can be converted into coordinates by\n    this [[ICoordinateSystem]], false otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.check_point)?sicmutils.calculus.manifold.check_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S1-gnomonic"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S1_gnomonic;},new cljs.core.Symbol("sicmutils.calculus.manifold","S1-gnomonic","sicmutils.calculus.manifold/S1-gnomonic",1083996480,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S1-gnomonic","S1-gnomonic",1277278711,null),"sicmutils/calculus/manifold.cljc",17,1,1326,1326,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S1_gnomonic)?sicmutils.calculus.manifold.S1_gnomonic.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R4-cyl"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R4_cyl;},new cljs.core.Symbol("sicmutils.calculus.manifold","R4-cyl","sicmutils.calculus.manifold/R4-cyl",-1843836276,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R4-cyl","R4-cyl",-1631843753,null),"sicmutils/calculus/manifold.cljc",12,1,1188,1188,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R4_cyl)?sicmutils.calculus.manifold.R4_cyl.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-family?"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold_family_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold-family?","sicmutils.calculus.manifold/manifold-family?",-251973135,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold-family?","manifold-family?",-175083464,null),"sicmutils/calculus/manifold.cljc",23,1,121,121,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns `true` if `m` is a dictionary representing a manifold family, false\n  otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold_family_QMARK_)?sicmutils.calculus.manifold.manifold_family_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R1"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R1;},new cljs.core.Symbol("sicmutils.calculus.manifold","R1","sicmutils.calculus.manifold/R1",1539305217,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R1","R1",1595616472,null),"sicmutils/calculus/manifold.cljc",8,1,1173,1173,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R1)?sicmutils.calculus.manifold.R1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("chart"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.chart;},new cljs.core.Symbol("sicmutils.calculus.manifold","chart","sicmutils.calculus.manifold/chart",-1554135469,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"chart","chart",-1481210344,null),"sicmutils/calculus/manifold.cljc",12,1,371,371,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given an [[ICoordinateSystem]], returns a function from a point on the\n  coordinate system's manifold to the coordinate representation specified by the\n  supplied `coordinate-system`.",(cljs.core.truth_(sicmutils.calculus.manifold.chart)?sicmutils.calculus.manifold.chart.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-system?"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.coordinate_system_QMARK_;},new cljs.core.Symbol("sicmutils.calculus.manifold","coordinate-system?","sicmutils.calculus.manifold/coordinate-system?",-774695231,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"coordinate-system?","coordinate-system?",-697018728,null),"sicmutils/calculus/manifold.cljc",25,1,349,349,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` implements [[ICoordinateSystem]], false otherwise.",(cljs.core.truth_(sicmutils.calculus.manifold.coordinate_system_QMARK_)?sicmutils.calculus.manifold.coordinate_system_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-manifold-family"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.make_manifold_family;},new cljs.core.Symbol("sicmutils.calculus.manifold","make-manifold-family","sicmutils.calculus.manifold/make-manifold-family",452306067,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"make-manifold-family","make-manifold-family",391146328,null),"sicmutils/calculus/manifold.cljc",27,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null),new cljs.core.Symbol(null,"over","over",1833084578,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null),new cljs.core.Symbol(null,"over","over",1833084578,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,103,103,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"name-format","name-format",-680058666,null),new cljs.core.Symbol(null,"over","over",1833084578,null)], null)),"Generates a manifold family (a template for building manifolds) from the\n  supplied `name-format`.\n\n  Generated manifolds locally resemble Euclidean space (Rn) by default. You can\n  optionally pass `'Complex` or `'Quaternion` to `over` to customize the field\n  of the vector space that the manifold locally resembles at each point.\n\n  NOTE: only `'Real` does anything as of 3.15.2021.",(cljs.core.truth_(sicmutils.calculus.manifold.make_manifold_family)?sicmutils.calculus.manifold.make_manifold_family.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R2"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R2;},new cljs.core.Symbol("sicmutils.calculus.manifold","R2","sicmutils.calculus.manifold/R2",129140560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R2","R2",51758745,null),"sicmutils/calculus/manifold.cljc",8,1,1177,1177,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R2)?sicmutils.calculus.manifold.R2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("R3"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.R3;},new cljs.core.Symbol("sicmutils.calculus.manifold","R3","sicmutils.calculus.manifold/R3",-15988909,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"R3","R3",-72629094,null),"sicmutils/calculus/manifold.cljc",8,1,1181,1181,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.R3)?sicmutils.calculus.manifold.R3.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("typical-coords"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.typical_coords;},new cljs.core.Symbol("sicmutils.calculus.manifold","typical-coords","sicmutils.calculus.manifold/typical-coords",-114492699,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"typical-coords","typical-coords",-29279558,null),"sicmutils/calculus/manifold.cljc",21,1,393,393,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given an [[ICoordinateSystem]], returns a structure that matches\n  the [[coordinate-prototype]] of `coordinate-system`, with all unique,\n  gensym-ed entries.\n\n  Use [[typical-coords]] if you require a unique symbolic coordinate\n  representation compatible with `coordinate-system`.\n\n  See [[typical-point]] for a coordinate-free version of this function.",(cljs.core.truth_(sicmutils.calculus.manifold.typical_coords)?sicmutils.calculus.manifold.typical_coords.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero-manifold-function"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.zero_manifold_function;},new cljs.core.Symbol("sicmutils.calculus.manifold","zero-manifold-function","sicmutils.calculus.manifold/zero-manifold-function",-351850172,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"zero-manifold-function","zero-manifold-function",-429657829,null),"sicmutils/calculus/manifold.cljc",29,1,469,469,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Manifold function that maps every input manifold `point` to the scalar value 0.",(cljs.core.truth_(sicmutils.calculus.manifold.zero_manifold_function)?sicmutils.calculus.manifold.zero_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("get-coordinates"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.get_coordinates;},new cljs.core.Symbol("sicmutils.calculus.manifold","get-coordinates","sicmutils.calculus.manifold/get-coordinates",1748627056,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"get-coordinates","get-coordinates",1704799803,null),"sicmutils/calculus/manifold.cljc",22,1,310,310,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"manifold-point","manifold-point",1980743222,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null),new cljs.core.Symbol(null,"thunk","thunk",74255732,null)], null)),"Returns the representation of `manifold-point` in `coordinate-system`.\n\n  If an entry for the given `coordinate-system` is not found, `thunk` is called\n  to produce the representation. The representation is cached in the point.",(cljs.core.truth_(sicmutils.calculus.manifold.get_coordinates)?sicmutils.calculus.manifold.get_coordinates.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("transfer-point"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.transfer_point;},new cljs.core.Symbol("sicmutils.calculus.manifold","transfer-point","sicmutils.calculus.manifold/transfer-point",-1596387739,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"transfer-point","transfer-point",-1401040996,null),"sicmutils/calculus/manifold.cljc",21,1,414,414,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"embedded","embedded",1525045279,null),new cljs.core.Symbol(null,"embedding","embedding",-2043869411,null)], null)),"Returns a function that takes a single manifold `point` embedded in the\n  manifold `embedded` and transfers the point to the supplied `embedding`\n  manifold.\n\n  The embedding dimension must be the same for both manifolds.\n\n  NOTE that `embedded` and `embedding` can be either manifolds, or instances\n  of [[ICoordinateSystem]]. In the latter case `embedded` and `embedding` will\n  bind to the manifold associated with the supplied [[ICoordinateSystem]].",(cljs.core.truth_(sicmutils.calculus.manifold.transfer_point)?sicmutils.calculus.manifold.transfer_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("S2p-tilted"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.S2p_tilted;},new cljs.core.Symbol("sicmutils.calculus.manifold","S2p-tilted","sicmutils.calculus.manifold/S2p-tilted",-18693371,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"S2p-tilted","S2p-tilted",-205552708,null),"sicmutils/calculus/manifold.cljc",16,1,1330,1330,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.S2p_tilted)?sicmutils.calculus.manifold.S2p_tilted.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Euler-angles"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.Euler_angles;},new cljs.core.Symbol("sicmutils.calculus.manifold","Euler-angles","sicmutils.calculus.manifold/Euler-angles",-1168491593,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"Euler-angles","Euler-angles",-1077969924,null),"sicmutils/calculus/manifold.cljc",18,1,1360,1360,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.Euler_angles)?sicmutils.calculus.manifold.Euler_angles.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("t_sicmutils$calculus$manifold101274"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101274;},new cljs.core.Symbol("sicmutils.calculus.manifold","t_sicmutils$calculus$manifold101274","sicmutils.calculus.manifold/t_sicmutils$calculus$manifold101274",-2039911340,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/calculus/manifold.cljc",new cljs.core.Keyword(null,"line","line",212345235),562,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"t_sicmutils$calculus$manifold101274","t_sicmutils$calculus$manifold101274",-2100450275,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101274)?sicmutils.calculus.manifold.t_sicmutils$calculus$manifold101274.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("attach-patch"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.attach_patch;},new cljs.core.Symbol("sicmutils.calculus.manifold","attach-patch","sicmutils.calculus.manifold/attach-patch",1870274026,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"attach-patch","attach-patch",1619352669,null),"sicmutils/calculus/manifold.cljc",19,1,179,179,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"patch-name","patch-name",433729698,null)], null)),"Takes a manifold `family` and attaches a patch template with the supplied\n  `patch-name`. Returns a new manifold family.\n\n  All manifolds generated from the returned family will have this coordinate\n  patch attached.",(cljs.core.truth_(sicmutils.calculus.manifold.attach_patch)?sicmutils.calculus.manifold.attach_patch.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coords->point"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.coords__GT_point;},new cljs.core.Symbol("sicmutils.calculus.manifold","coords->point","sicmutils.calculus.manifold/coords->point",-1388630556,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.calculus.manifold","ICoordinateSystem","sicmutils.calculus.manifold/ICoordinateSystem",143520071,null),new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"coords->point","coords->point",-1467945699,null),"sicmutils/calculus/manifold.cljc",17,1,325,334,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),"Returns the manifold point on this [[ICoordinateSystem]]'s manifold\n    corresponding to the supplied `coords`.",(cljs.core.truth_(sicmutils.calculus.manifold.coords__GT_point)?sicmutils.calculus.manifold.coords__GT_point.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant-manifold-function"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.constant_manifold_function;},new cljs.core.Symbol("sicmutils.calculus.manifold","constant-manifold-function","sicmutils.calculus.manifold/constant-manifold-function",-485587324,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"constant-manifold-function","constant-manifold-function",-128826051,null),"sicmutils/calculus/manifold.cljc",33,1,481,481,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Takes some constant `c` and returns a manifold function that maps every input\n  manifold `point` to `c.`",(cljs.core.truth_(sicmutils.calculus.manifold.constant_manifold_function)?sicmutils.calculus.manifold.constant_manifold_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-manifold"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.make_manifold;},new cljs.core.Symbol("sicmutils.calculus.manifold","make-manifold","sicmutils.calculus.manifold/make-manifold",1529435862,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"make-manifold","make-manifold",1553241629,null),"sicmutils/calculus/manifold.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"embedding-dimension","embedding-dimension",-1284849802,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"embedding-dimension","embedding-dimension",-1284849802,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"family","family",327385835,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"embedding-dimension","embedding-dimension",-1284849802,null)], null)),"Returns a concrete manifold generated by specializing the supplied manifold\n  `family` into a concrete manifold of dimension `n`. `n` must be a positive\n  integer.\n\n  Optionally takes an `embedding-dimension`; this must be >= the value of `n`.\n  Use this in cases like an n-sphere embedded in a euclidean space of dimension\n  n+1.\n\n  A [manifold](https://en.wikipedia.org/wiki/Manifold) is a topological space\n  that locally resembles Euclidean space near each point.",(cljs.core.truth_(sicmutils.calculus.manifold.make_manifold)?sicmutils.calculus.manifold.make_manifold.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("corresponding-velocities"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.corresponding_velocities;},new cljs.core.Symbol("sicmutils.calculus.manifold","corresponding-velocities","sicmutils.calculus.manifold/corresponding-velocities",-306847116,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"corresponding-velocities","corresponding-velocities",-250568131,null),"sicmutils/calculus/manifold.cljc",31,1,435,435,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coords","coords",1041102415,null)], null)),"Takes a coordinate representation `coords` of a manifold point with all\n  symbolic entries, and returns a structure of the same shape with `v:`\n  prepended to all symbols.\n\n  This structure is appropriate for representing the velocities associated with\n  each coordinate.",(cljs.core.truth_(sicmutils.calculus.manifold.corresponding_velocities)?sicmutils.calculus.manifold.corresponding_velocities.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("manifold-point-representation"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.manifold_point_representation;},new cljs.core.Symbol("sicmutils.calculus.manifold","manifold-point-representation","sicmutils.calculus.manifold/manifold-point-representation",-708651831,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"manifold-point-representation","manifold-point-representation",-630647746,null),"sicmutils/calculus/manifold.cljc",36,1,286,286,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"point","point",-841237505,null)], null)),"Returns the backing Euclidean space representation of the supplied manifold\n  point.",(cljs.core.truth_(sicmutils.calculus.manifold.manifold_point_representation)?sicmutils.calculus.manifold.manifold_point_representation.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("spacetime"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.spacetime;},new cljs.core.Symbol("sicmutils.calculus.manifold","spacetime","sicmutils.calculus.manifold/spacetime",1569259189,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"spacetime","spacetime",1382825726,null),"sicmutils/calculus/manifold.cljc",15,1,1190,1190,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.calculus.manifold.spacetime)?sicmutils.calculus.manifold.spacetime.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("coordinate-prototype"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.coordinate_prototype;},new cljs.core.Symbol("sicmutils.calculus.manifold","coordinate-prototype","sicmutils.calculus.manifold/coordinate-prototype",-1218691562,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"coordinate-prototype","coordinate-prototype",-1149174049,null),"sicmutils/calculus/manifold.cljc",27,1,354,354,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordsys","coordsys",1968681528,null)], null)),"Returns the symbolic coordinate prototype associated with `coordsys`. This is\n   a structure of the correct dimension for this coordinate system, with all\n   symbolic entries.\n\n  Returns nil for non-valid inputs.",(cljs.core.truth_(sicmutils.calculus.manifold.coordinate_prototype)?sicmutils.calculus.manifold.coordinate_prototype.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("point"),new cljs.core.Var(function(){return sicmutils.calculus.manifold.point;},new cljs.core.Symbol("sicmutils.calculus.manifold","point","sicmutils.calculus.manifold/point",-1064895434,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.manifold","sicmutils.calculus.manifold",229186428,null),new cljs.core.Symbol(null,"point","point",-841237505,null),"sicmutils/calculus/manifold.cljc",12,1,382,382,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),"Given an [[ICoordinateSystem]], returns a function from coordinates in\n  `coordinate-system`'s repesentation to the matching point on the manifold\n  associated with `coordinate-system`.",(cljs.core.truth_(sicmutils.calculus.manifold.point)?sicmutils.calculus.manifold.point.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integration-opts"),new cljs.core.Var(function(){return sicmutils.numerical.ode.integration_opts;},new cljs.core.Symbol("sicmutils.numerical.ode","integration-opts","sicmutils.numerical.ode/integration-opts",2080678956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"integration-opts","integration-opts",185824687,null),"sicmutils/numerical/ode.cljc",23,1,79,79,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"derivative-args","derivative-args",1022399972,null),new cljs.core.Symbol(null,"initial-state","initial-state",-381085279,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"compile?","compile?",813843877,null),new cljs.core.Symbol(null,"epsilon","epsilon",910372957,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"epsilon","epsilon",910372957,null),1.0E-8,new cljs.core.Symbol(null,"compile?","compile?",813843877,null),true], null)], null)], null)),"Returns a map with the following kv pairs:\n\n  - `:integrator` an instance of `GraggBulirschStoerIntegrator`\n  - `:equations` instance of `FirstOrderDifferentialEquations`\n  - `:dimension` the total number of entries in the flattened initial state tuple\n  - `:stopwatch` [[IStopwatch]] instance that records total evaluation time inside\n    the derivative function\n  - `:counter` an atom containing a `Long` that increments every time derivative fn\n    is called.",(cljs.core.truth_(sicmutils.numerical.ode.integration_opts)?sicmutils.numerical.ode.integration_opts.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-integrator"),new cljs.core.Var(function(){return sicmutils.numerical.ode.make_integrator;},new cljs.core.Symbol("sicmutils.numerical.ode","make-integrator","sicmutils.numerical.ode/make-integrator",67991214,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"make-integrator","make-integrator",1359161389,null),"sicmutils/numerical/ode.cljc",22,1,169,169,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"derivative-args","derivative-args",1022399972,null)], null)),"make-integrator takes a state derivative function (which in this\n  system is assumed to be a map from a structure to a structure of the\n  same shape, as differentiating a function does not change its\n  shape), and returns an integrator, which is a function of several\n  arguments:\n\n  - the initial state\n  - an intermediate-state observation function\n  - the step size desired\n  - the final time to seek, and\n  - an error tolerance.\n\n\n  If the `observe` function is not nil, it will be invoked with the time as\n  first argument and integrated state as the second, at each intermediate step.",(cljs.core.truth_(sicmutils.numerical.ode.make_integrator)?sicmutils.numerical.ode.make_integrator.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("state-advancer"),new cljs.core.Var(function(){return sicmutils.numerical.ode.state_advancer;},new cljs.core.Symbol("sicmutils.numerical.ode","state-advancer","sicmutils.numerical.ode/state-advancer",-2077419894,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"state-advancer","state-advancer",1461667085,null),"sicmutils/numerical/ode.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,238,238,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null)], null)),"state-advancer takes a state derivative function constructor followed by the\n  arguments to construct it with. The state derivative function is constructed\n  and an integrator is produced which takes:\n\n  - initial state\n  - target time\n\n  as arguments. Optionally, supply an options map with these optional fields:\n\n  `:compile?`: If true, the ODE solver will compile your state function.\n\n  `:epsilon`: The maximum error tolerance allowed by the ODE solver, both\n  relative and absolute.\n\n  Returns the final state.\n\n  The state derivative is expected to map a structure to a structure of the same\n  shape, and is required to have the time parameter as the first element.",(cljs.core.truth_(sicmutils.numerical.ode.state_advancer)?sicmutils.numerical.ode.state_advancer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("evolve"),new cljs.core.Var(function(){return sicmutils.numerical.ode.evolve;},new cljs.core.Symbol("sicmutils.numerical.ode","evolve","sicmutils.numerical.ode/evolve",915589228,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"evolve","evolve",2074557427,null),"sicmutils/numerical/ode.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,265,265,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null)], null)),"evolve takes a state derivative function constructor and its arguments, and\n  returns an integrator via make-integrator.\n\n  In particular, the returned function accepts a callback function which will be\n  invoked at intermediate grid points of the integration.",(cljs.core.truth_(sicmutils.numerical.ode.evolve)?sicmutils.numerical.ode.evolve.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integrate-state-derivative"),new cljs.core.Var(function(){return sicmutils.numerical.ode.integrate_state_derivative;},new cljs.core.Symbol("sicmutils.numerical.ode","integrate-state-derivative","sicmutils.numerical.ode/integrate-state-derivative",-1812344604,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.ode","sicmutils.numerical.ode",-194681779,null),new cljs.core.Symbol(null,"integrate-state-derivative","integrate-state-derivative",1154163041,null),"sicmutils/numerical/ode.cljc",33,1,274,274,cljs.core.list(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"state-derivative","state-derivative",-1453255724,null),new cljs.core.Symbol(null,"state-derivative-args","state-derivative-args",-1910752878,null),new cljs.core.Symbol(null,"initial-state","initial-state",-381085279,null),new cljs.core.Symbol(null,"t1","t1",1665503971,null),new cljs.core.Symbol(null,"dt","dt",1272086768,null)], null)),"A wrapper for evolve, which is more convenient when you just\n  want a vector of (time, state) pairs over the integration interval\n  instead of having to deal with a callback. Integrates the supplied\n  state derivative (and its argument package) from [0 to t1] in steps\n  of size dt",(cljs.core.truth_(sicmutils.numerical.ode.integrate_state_derivative)?sicmutils.numerical.ode.integrate_state_derivative.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pass"),new cljs.core.Var(function(){return pattern.match.pass;},new cljs.core.Symbol("pattern.match","pass","pattern.match/pass",2013857515,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"pass","pass",-1080275776,null),"pattern/match.cljc",11,1,81,81,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"frame","frame",-70551061,null),new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"succeed","succeed",207632095,null)], null)),"Matcher that succeeds (with no new bindings) for any input, passing along its\n  input frame.",(cljs.core.truth_(pattern.match.pass)?pattern.match.pass.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sequence*"),new cljs.core.Var(function(){return pattern.match.sequence_STAR_;},new cljs.core.Symbol("pattern.match","sequence*","pattern.match/sequence*",594447512,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"sequence*","sequence*",-438978911,null),"pattern/match.cljc",16,1,358,358,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"patterns","patterns",-1490353745,null)], null)),"Version of [[sequence]] that takes an explicit sequence of `patterns`, vs the\n  multi-arity version. See [[sequence]] for documentation.",(cljs.core.truth_(pattern.match.sequence_STAR_)?pattern.match.sequence_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("predicate"),new cljs.core.Var(function(){return pattern.match.predicate;},new cljs.core.Symbol("pattern.match","predicate","pattern.match/predicate",1047709786,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"predicate","predicate",-101970333,null),"pattern/match.cljc",16,1,106,106,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Takes a predicate function `pred` and returns a matcher that succeeds (with no\n  new bindings) if its data input passes the predicate, fails otherwise.",(cljs.core.truth_(pattern.match.predicate)?pattern.match.predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("failed?"),new cljs.core.Var(function(){return pattern.match.failed_QMARK_;},new cljs.core.Symbol("pattern.match","failed?","pattern.match/failed?",1183516890,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"failed?","failed?",-2114702621,null),"pattern/match.cljc",14,1,471,471,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is equivalent to the failure sentinel [[failure]], false\n  otherwise.",(cljs.core.truth_(pattern.match.failed_QMARK_)?pattern.match.failed_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("match-if"),new cljs.core.Var(function(){return pattern.match.match_if;},new cljs.core.Symbol("pattern.match","match-if","pattern.match/match-if",1600378605,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"match-if","match-if",-2104618812,null),"pattern/match.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null),new cljs.core.Symbol(null,"fail-pattern","fail-pattern",-762279763,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null),new cljs.core.Symbol(null,"fail-pattern","fail-pattern",-762279763,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null),new cljs.core.Symbol(null,"fail-pattern","fail-pattern",-762279763,null)], null)),"Returns a matcher that passes its `frame` on to `success-pattern` if `pred`\n  succeeds on its data input, `fail-pattern` otherwise.\n\n  If no `fail-matcher` is supplied, the behavior is equivalent\n  to [[match-when]].",(cljs.core.truth_(pattern.match.match_if)?pattern.match.match_if.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("matcher"),new cljs.core.Var(function(){return pattern.match.matcher;},new cljs.core.Symbol("pattern.match","matcher","pattern.match/matcher",196908815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"matcher","matcher",1187762532,null),"pattern/match.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,477,477,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Takes a `pattern` or matcher combinator, and returns a function from a data\n  object to either:\n\n  - A successful map of bindings extracted by matching the supplied `pattern` or\n    combinator to the input data\n  - An explicit `failure` object\n\n  Check for failure with [[failed?]].\n\n  Optionally, you can supply a predicate `pred`. `pred` takes the map of\n  bindings from a successful match and returns either:\n\n  - `nil`, `false` or the explicit `failure` object to force a match failure,\n    potentially causing a backtrack back into the data\n  - a map of NEW bindings to merge into the binding map (and signal success)\n\n  Any other truthy value signals success with no new bindings.",(cljs.core.truth_(pattern.match.matcher)?pattern.match.matcher.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Failure"),new cljs.core.Var(function(){return pattern.match.__GT_Failure;},new cljs.core.Symbol("pattern.match","->Failure","pattern.match/->Failure",705775533,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"->Failure","->Failure",1824260484,null),"pattern/match.cljc",19,1,true,new cljs.core.Keyword(null,"positional","positional",-203580463),464,464,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Positional factory function for pattern.match/Failure.",(cljs.core.truth_(pattern.match.__GT_Failure)?pattern.match.__GT_Failure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("match"),new cljs.core.Var(function(){return pattern.match.match;},new cljs.core.Symbol("pattern.match","match","pattern.match/match",1748637964,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"match","match",-1434376219,null),"pattern/match.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,512,512,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),"Convenience function that creates a matcher from the supplied `pattern` (and\n  optional predicate `pred`) and immediately applies it to `data`.\n\n  Equivalent to:\n\n  ```clojure\n  ((matcher pattern pred) data)\n  ```",(cljs.core.truth_(pattern.match.match)?pattern.match.match.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bind"),new cljs.core.Var(function(){return pattern.match.bind;},new cljs.core.Symbol("pattern.match","bind","pattern.match/bind",430474401,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"bind","bind",1527103110,null),"pattern/match.cljc",11,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,133,133,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null),new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Takes a binding variable `sym` and an optional predicate `pred`, and returns a\n  matcher that binds its input to `sym` in the returned `frame`.\n\n  The returned matcher only succeeds if `input` passes `pred`.\n\n  If `sym` is already present in `frame`, the matcher only succeeds if the\n  values are equal, fails otherwise.\n\n  NOTE: If `sym` is the wildcard `_`, the returned matcher will not introduce a\n  new binding, but _will_ still check the predicate.",(cljs.core.truth_(pattern.match.bind)?pattern.match.bind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("all-results"),new cljs.core.Var(function(){return pattern.match.all_results;},new cljs.core.Symbol("pattern.match","all-results","pattern.match/all-results",1764796639,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"all-results","all-results",-1415580986,null),"pattern/match.cljc",18,1,585,585,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),"Convenience function that creates an [[all-results-matcher]] from the supplied\n  `pattern` and immediately applies it to `data`.\n\n  Equivalent to:\n\n  ```clojure\n  ((all-results-matcher pattern pred) data)\n  ```",(cljs.core.truth_(pattern.match.all_results)?pattern.match.all_results.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("update-frame"),new cljs.core.Var(function(){return pattern.match.update_frame;},new cljs.core.Symbol("pattern.match","update-frame","pattern.match/update-frame",618661484,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"update-frame","update-frame",-509780921,null),"pattern/match.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,95,95,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Takes a function from `frame` to a new frame (or false) and any number of\n  arguments `args`, and returns a matcher that will ignore its input and\n\n  - succeed with `(apply f frame args)` if that value is truthy,\n  - fail otherwise.",(cljs.core.truth_(pattern.match.update_frame)?pattern.match.update_frame.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pattern->combinators"),new cljs.core.Var(function(){return pattern.match.pattern__GT_combinators;},new cljs.core.Symbol("pattern.match","pattern->combinators","pattern.match/pattern->combinators",644125107,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"pattern->combinators","pattern->combinators",2073187402,null),"pattern/match.cljc",27,1,411,411,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Given a pattern (built using the syntax elements described in\n  `pattern.syntax`), returns a matcher combinator that will successfully match\n  data structures described by the input pattern, and fail otherwise.",(cljs.core.truth_(pattern.match.pattern__GT_combinators)?pattern.match.pattern__GT_combinators.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Failure"),new cljs.core.Var(function(){return pattern.match.Failure;},new cljs.core.Symbol("pattern.match","Failure","pattern.match/Failure",2101421859,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"pattern/match.cljc",new cljs.core.Keyword(null,"line","line",212345235),464,new cljs.core.Keyword(null,"column","column",2078222095),12,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Failure","Failure",1073376522,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(pattern.match.Failure)?pattern.match.Failure.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("eq"),new cljs.core.Var(function(){return pattern.match.eq;},new cljs.core.Symbol("pattern.match","eq","pattern.match/eq",2051084309,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"eq","eq",1021992460,null),"pattern/match.cljc",9,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"eq-fn","eq-fn",923311547,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"eq-fn","eq-fn",923311547,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,122,122,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null),new cljs.core.Symbol(null,"eq-fn","eq-fn",923311547,null)], null)),"Takes some input `x` and returns a matcher which succeeds if its data input is\n  equal to `x` (via `=` or the optional `eq-fn` argument). Fails otherwise.\n\n  The frame is not modified.",(cljs.core.truth_(pattern.match.eq)?pattern.match.eq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("failure"),new cljs.core.Var(function(){return pattern.match.failure;},new cljs.core.Symbol("pattern.match","failure","pattern.match/failure",1225525479,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"failure","failure",-1934019890,null),"pattern/match.cljc",10,1,466,468,cljs.core.List.EMPTY,"Singleton object representing the failure of a matcher to match its\n  input. Check for failure with [[failed?]]",(cljs.core.truth_(pattern.match.failure)?pattern.match.failure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("or"),new cljs.core.Var(function(){return pattern.match.or;},new cljs.core.Symbol("pattern.match","or","pattern.match/or",-1435857943,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"or","or",1876275696,null),"pattern/match.cljc",9,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,200,200,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Takes a sequence of patterns, and returns a matcher that will apply its\n  arguments to each matcher in turn. Returns the value of the first pattern that\n  succeeds.",(cljs.core.truth_(pattern.match.or)?pattern.match.or.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("match-when"),new cljs.core.Var(function(){return pattern.match.match_when;},new cljs.core.Symbol("pattern.match","match-when","pattern.match/match-when",-616993457,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"match-when","match-when",516405072,null),"pattern/match.cljc",17,1,175,175,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null),new cljs.core.Symbol(null,"success-pattern","success-pattern",-1825317762,null)], null)),"Returns a matcher that passes its `frame` on to `success-pattern` if `pred`\n  succeeds on its data input, fails otherwise.",(cljs.core.truth_(pattern.match.match_when)?pattern.match.match_when.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("not"),new cljs.core.Var(function(){return pattern.match.not;},new cljs.core.Symbol("pattern.match","not","pattern.match/not",-53092980,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"not","not",1044554643,null),"pattern/match.cljc",10,1,233,233,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Takes a `pattern` and returns a matcher that will apply its arguments to the\n  `pattern`. The returned pattern will succeed with the original frame if\n  `pattern` fails, and fail if `pattern` succeeds.",(cljs.core.truth_(pattern.match.not)?pattern.match.not.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("foreach-matcher"),new cljs.core.Var(function(){return pattern.match.foreach_matcher;},new cljs.core.Symbol("pattern.match","foreach-matcher","pattern.match/foreach-matcher",-1350133826,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"foreach-matcher","foreach-matcher",-233710187,null),"pattern/match.cljc",22,1,526,526,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Takes a `pattern` and side-effecting callback function `f`, and returns a\n  matcher that calls `f` with a map of bindings for every possible match of\n  `pattern` to its input data.\n\n  For a convenience function that applies the matcher to data immediately,\n  see [[foreach]].\n\n  NOTE: If you pass a segment matcher, `f` must accept two arguments - the\n  binding map, and the sequence of all remaining items that the segment\n  matcher rejected.",(cljs.core.truth_(pattern.match.foreach_matcher)?pattern.match.foreach_matcher.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fail"),new cljs.core.Var(function(){return pattern.match.fail;},new cljs.core.Symbol("pattern.match","fail","pattern.match/fail",167807552,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"fail","fail",-948220839,null),"pattern/match.cljc",11,1,77,77,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"_","_",-1201019570,null),new cljs.core.Symbol(null,"_","_",-1201019570,null)], null)),"Matcher which will fail for any input.",(cljs.core.truth_(pattern.match.fail)?pattern.match.fail.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("frame-predicate"),new cljs.core.Var(function(){return pattern.match.frame_predicate;},new cljs.core.Symbol("pattern.match","frame-predicate","pattern.match/frame-predicate",1641090080,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"frame-predicate","frame-predicate",-1552233927,null),"pattern/match.cljc",22,1,114,114,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pred","pred",-727012372,null)], null)),"Takes a predicate function `pred` and returns a matcher that succeeds (with no\n  new bindings) if its data input passes the predicate, fails otherwise.",(cljs.core.truth_(pattern.match.frame_predicate)?pattern.match.frame_predicate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("foreach"),new cljs.core.Var(function(){return pattern.match.foreach;},new cljs.core.Symbol("pattern.match","foreach","pattern.match/foreach",190335891,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"foreach","foreach",1221441146,null),"pattern/match.cljc",14,1,548,548,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"data","data",1407862150,null)], null)),"Convenience function that creates a [[foreach-matcher]] from the supplied\n  `pattern` and callback `f` and immediately applies it to `data`.\n\n  Equivalent to:\n\n  ```clojure\n  ((foreach-matcher pattern pred) data)\n  ```",(cljs.core.truth_(pattern.match.foreach)?pattern.match.foreach.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("segment"),new cljs.core.Var(function(){return pattern.match.segment;},new cljs.core.Symbol("pattern.match","segment","pattern.match/segment",-355354592,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"segment","segment",675610331,null),"pattern/match.cljc",14,1,278,278,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Takes a binding variable `sym` and returns a matcher that calls its success\n  continuation with successively longer prefixes of its (sequential) data input\n  bound to `sym` inside the frame.\n\n  If `sym` is already present in the frame, the returned matcher only succeeds\n  if the bound value is a prefix of the data argument `xs`.\n\n  If `sym` matches the wildcard symbol `_`, the behavior is the same, but no new\n  binding is introduced.\n\n  NOTE: the returned matcher will call its success continuation with TWO\n  arguments; the new frame and the remaining elements in `xs`. This is a\n  different contract than all other matchers, making `segment` appropriate for\n  use inside `sequence`.",(cljs.core.truth_(pattern.match.segment)?pattern.match.segment.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map->Failure"),new cljs.core.Var(function(){return pattern.match.map__GT_Failure;},new cljs.core.Symbol("pattern.match","map->Failure","pattern.match/map->Failure",-1176461870,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"internal-ctor","internal-ctor",937392560),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"map->Failure","map->Failure",-77899845,null),"pattern/match.cljc",19,1,true,new cljs.core.Keyword(null,"map","map",1371690461),464,464,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"G__98018","G__98018",-2084504419,null)], null)),"Factory function for pattern.match/Failure, taking a map of keywords to field values.",(cljs.core.truth_(pattern.match.map__GT_Failure)?pattern.match.map__GT_Failure.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("reverse-segment"),new cljs.core.Var(function(){return pattern.match.reverse_segment;},new cljs.core.Symbol("pattern.match","reverse-segment","pattern.match/reverse-segment",-1619400012,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"reverse-segment","reverse-segment",-571699043,null),"pattern/match.cljc",22,1,335,335,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"sym","sym",195671222,null)], null)),"Returns a matcher that takes a binding variable `sym`, and succeeds if it's\n  called with a sequential data argument with a prefix that is the REVERSE of\n  the sequence bound to `sym` in `frame`.\n\n  Fails if any of the following are true:\n\n  - `sym` is not bound in the frame\n  - `sym` is bound to something other than a vector prefix created by `segment`\n  - the data argument does not have a prefix matching the reverse of vector\n    bound to `sym`.",(cljs.core.truth_(pattern.match.reverse_segment)?pattern.match.reverse_segment.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sequence"),new cljs.core.Var(function(){return pattern.match.sequence;},new cljs.core.Symbol("pattern.match","sequence","pattern.match/sequence",-608358060,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"sequence","sequence",-1727628355,null),"pattern/match.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"patterns","patterns",-1490353745,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"patterns","patterns",-1490353745,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,391,391,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"patterns","patterns",-1490353745,null)], null)),"Takes a sequence of patterns and returns a matcher that accepts a sequential\n  data input, and attempts to match successive items (or segments) in the\n  sequence with the supplied patterns.\n\n  The returned matcher succeeds if `patterns` can consume all elements, fails\n  otherwise (or of any of the supplied patterns fails on its argument).\n\n  On success, the returned matcher calls its success continuation with a frame\n  processed by each pattern in sequence.",(cljs.core.truth_(pattern.match.sequence)?pattern.match.sequence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("all-results-matcher"),new cljs.core.Var(function(){return pattern.match.all_results_matcher;},new cljs.core.Symbol("pattern.match","all-results-matcher","pattern.match/all-results-matcher",-1111633959,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"all-results-matcher","all-results-matcher",-86570498,null),"pattern/match.cljc",26,1,560,560,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)),"Takes a `pattern` and callback function `f`, and returns a matcher that takes a\n  `data` argument and returns a sequence of every possible match of `pattern` to\n  the data.\n\n  For a convenience function that applies the matcher to data immediately,\n  see [[all-results]].\n\n  NOTE: If you pass a segment matcher, `f` must accept two arguments - the\n  binding map, and the sequence of all remaining items that the segment\n  matcher rejected.",(cljs.core.truth_(pattern.match.all_results_matcher)?pattern.match.all_results_matcher.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("and"),new cljs.core.Var(function(){return pattern.match.and;},new cljs.core.Symbol("pattern.match","and","pattern.match/and",1496697063,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"and","and",668631710,null),"pattern/match.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,212,212,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"pattern","pattern",1882666950,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Takes a sequence of patterns and returns a matcher that will apply its\n  arguments to the first pattern;\n\n  If that match succeeds, the next pattern will be called with the new, returned\n  frame (and the original data and success continuation).\n\n  The returned matcher succeeds only of all patterns succeed, and returns the\n  value of the final pattern.",(cljs.core.truth_(pattern.match.and)?pattern.match.and.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("as-segment-matcher"),new cljs.core.Var(function(){return pattern.match.as_segment_matcher;},new cljs.core.Symbol("pattern.match","as-segment-matcher","pattern.match/as-segment-matcher",463304135,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"as-segment-matcher","as-segment-matcher",1157084158,null),"pattern/match.cljc",25,1,266,266,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)),"Takes a matcher and returns `f` with its metadata modified such\n  that [[segment-matcher?]] will return `true` when applied to `f`.",(cljs.core.truth_(pattern.match.as_segment_matcher)?pattern.match.as_segment_matcher.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-frame"),new cljs.core.Var(function(){return pattern.match.with_frame;},new cljs.core.Symbol("pattern.match","with-frame","pattern.match/with-frame",880394166,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pattern.match","pattern.match",388648863,null),new cljs.core.Symbol(null,"with-frame","with-frame",1995405727,null),"pattern/match.cljc",17,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"new-frame","new-frame",-1748465223,null)], null)),"Takes a `new-frame` of bindings and returns a matcher that will ignore its\n  input and always succeed by replacing the current map of bindings with\n  `new-frame`.",(cljs.core.truth_(pattern.match.with_frame)?pattern.match.with_frame.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("stirling-first-kind"),new cljs.core.Var(function(){return sicmutils.special.factorial.stirling_first_kind;},new cljs.core.Symbol("sicmutils.special.factorial","stirling-first-kind","sicmutils.special.factorial/stirling-first-kind",1403108092,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"stirling-first-kind","stirling-first-kind",329338979,null),"sicmutils/special/factorial.cljc",28,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unsigned?","unsigned?",1137767373,null)], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unsigned?","unsigned?",1137767373,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),3,287,287,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"unsigned?","unsigned?",1137767373,null)], null)], null)], null)),"Given `n` and `k`, returns the number of permutations of `n` elements which\n  contain exactly `k` [permutation\n  cycles](https://mathworld.wolfram.com/PermutationCycle.html). This is called\n  the [Stirling number s(n, k) of the first\n  kind](https://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind).\n\n  By default, returns the [signed Stirling number of the first\n  kind](https://en.wikipedia.org/wiki/Stirling_numbers_of_the_first_kind#Signs).\n  Pass the `:unsigned? true` keyword option to retrieve the signed Stirling\n  number. (Or take the absolute value of the result...)\n\n  ```clj\n  (stirling-first-kind 13 2)\n  ;;=> -1486442880\n\n  (stirling-first-kind 13 2 :unsigned? true)\n  ;;=> 1486442880\n  ```",(cljs.core.truth_(sicmutils.special.factorial.stirling_first_kind)?sicmutils.special.factorial.stirling_first_kind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("falling-factorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.falling_factorial;},new cljs.core.Symbol("sicmutils.special.factorial","falling-factorial","sicmutils.special.factorial/falling-factorial",-1571939946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"falling-factorial","falling-factorial",1649395235,null),"sicmutils/special/factorial.cljc",30,1,44,44,cljs.core.List.EMPTY,"generic falling-factorial.\n\nReturns the [falling\n  factorial](https://en.wikipedia.org/wiki/Falling_and_rising_factorials), of\n  `a` to the `b`, defined as the polynomial\n\n  $$(a)_b = a^{\\underline{b}} = a(a - 1)(a - 2) \\cdots (a - b - 1)$$\n\n  Given a negative `b`, `([[falling-factorial]] a b)` is equivalent\n  to `(invert ([[rising-factorial]] (inc a) (- b)))`, or `##Inf` if the\n  denominator evaluates to 0.\n\n  The coefficients that appear in the expansions of [[falling-factorial]] called\n  with a symbolic first argument and positive integral second argument are the\n  Stirling numbers of the first kind (see [[stirling-first-kind]]).",(cljs.core.truth_(sicmutils.special.factorial.falling_factorial)?sicmutils.special.factorial.falling_factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("double-factorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.double_factorial;},new cljs.core.Symbol("sicmutils.special.factorial","double-factorial","sicmutils.special.factorial/double-factorial",-805937862,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"double-factorial","double-factorial",267781799,null),"sicmutils/special/factorial.cljc",23,1,189,189,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the product of all integers from 1 up to `n` that have the same\n  parity (odd or even) as `n`.\n\n  `([[double-factorial]] 0)` is defined as an empty product and equal to 1.\n\n  [[double-factorial]] with argument `n` is equivalent to `([[multi-factorial]]\n  n 2)`, but slightly more general in that it can handle negative values of\n  `n`.\n\n  If `n` is negative and even, returns `##Inf`.\n\n  If `n` is negative and odd, returns `(/ (double-factorial (+ n 2)) (+ n 2))`.\n\n  For justification, see the [Wikipedia page on the extension of double\n  factorial to negative\n  arguments](https://en.wikipedia.org/wiki/Double_factorial#Negative_arguments).",(cljs.core.truth_(sicmutils.special.factorial.double_factorial)?sicmutils.special.factorial.double_factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.factorial;},new cljs.core.Symbol("sicmutils.special.factorial","factorial","sicmutils.special.factorial/factorial",1201491644,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"factorial","factorial",127776047,null),"sicmutils/special/factorial.cljc",16,1,24,24,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the factorial of `n`, ie, the product of 1 to `n` (inclusive).\n\n  [[factorial]] will return a platform-specific [[sicmutils.util/bigint]] given\n  some `n` that causes integer overflow.",(cljs.core.truth_(sicmutils.special.factorial.factorial)?sicmutils.special.factorial.factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("stirling-second-kind"),new cljs.core.Var(function(){return sicmutils.special.factorial.stirling_second_kind;},new cljs.core.Symbol("sicmutils.special.factorial","stirling-second-kind","sicmutils.special.factorial/stirling-second-kind",1589058125,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"stirling-second-kind","stirling-second-kind",-1632116686,null),"sicmutils/special/factorial.cljc",29,3,327,327,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns $S(n,k)$, the number of ways to partition a set of `n` objects into `k`\n  non-empty subsets.\n\n  This is called a [Stirling number of the second\n  kind](https://en.wikipedia.org/wiki/Stirling_numbers_of_the_second_kind).",(cljs.core.truth_(sicmutils.special.factorial.stirling_second_kind)?sicmutils.special.factorial.stirling_second_kind.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("multi-factorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.multi_factorial;},new cljs.core.Symbol("sicmutils.special.factorial","multi-factorial","sicmutils.special.factorial/multi-factorial",-245060936,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"multi-factorial","multi-factorial",828671797,null),"sicmutils/special/factorial.cljc",22,1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns the product of the positive integers up to `n` that are congruent\n  to `(mod n k)`.\n\n  When `k` equals 1, equivalent to `([[factorial]] n)`.\n\n  See the [Wikipedia page on generalizations\n  of [[double-factorial]]](https://en.wikipedia.org/wiki/Double_factorial#Generalizations)\n  for more detail.\n\n  If you need to extend [[multi-factorial]] to negative `n` or `k`, that page\n  has suggestions for generalization.",(cljs.core.truth_(sicmutils.special.factorial.multi_factorial)?sicmutils.special.factorial.multi_factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->bigint"),new cljs.core.Var(function(){return sicmutils.special.factorial.__GT_bigint;},new cljs.core.Symbol("sicmutils.special.factorial","->bigint","sicmutils.special.factorial/->bigint",1937445946,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"->bigint","->bigint",863817399,null),"sicmutils/special/factorial.cljc",18,4,12,12,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"If `x` is a fixed-precision integer, returns a [[sicmutils.util/bigint]]\n     version of `x`. Else, acts as identity.\n\n     This is useful in cases where you may want to multiply `x` by other large\n     numbers, but don't want to try and convert something that can't overflow,\n     like a symbol, into `bigint`.",(cljs.core.truth_(sicmutils.special.factorial.__GT_bigint)?sicmutils.special.factorial.__GT_bigint.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rising-factorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.rising_factorial;},new cljs.core.Symbol("sicmutils.special.factorial","rising-factorial","sicmutils.special.factorial/rising-factorial",1775588170,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"rising-factorial","rising-factorial",-1445656103,null),"sicmutils/special/factorial.cljc",29,1,114,114,cljs.core.List.EMPTY,"generic rising-factorial.\n\nReturns the [rising\n  factorial](https://en.wikipedia.org/wiki/Falling_and_rising_factorials), of\n  `a` to the `b`, defined as the polynomial\n\n  $$(a)^b = a^{\\overline{b}} = a(a + 1)(a + 2) \\cdots (a + b - 1)$$\n\n  Given a negative `b`, `([[rising-factorial]] a b)` is equivalent\n  to `(invert ([[falling-factorial]] (dec a) (- b)))`, or `##Inf` if the\n  denominator evaluates to 0.",(cljs.core.truth_(sicmutils.special.factorial.rising_factorial)?sicmutils.special.factorial.rising_factorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("factorial-power"),new cljs.core.Var(function(){return sicmutils.special.factorial.factorial_power;},new cljs.core.Symbol("sicmutils.special.factorial","factorial-power","sicmutils.special.factorial/factorial-power",-244319735,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"factorial-power","factorial-power",-1318084454,null),"sicmutils/special/factorial.cljc",18,1,59,60,cljs.core.List.EMPTY,"Alias for [[falling-factorial]].",(cljs.core.truth_(sicmutils.special.factorial.factorial_power)?sicmutils.special.factorial.factorial_power.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("subfactorial"),new cljs.core.Var(function(){return sicmutils.special.factorial.subfactorial;},new cljs.core.Symbol("sicmutils.special.factorial","subfactorial","sicmutils.special.factorial/subfactorial",558627444,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"subfactorial","subfactorial",-515124997,null),"sicmutils/special/factorial.cljc",19,1,215,215,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the number of permutations of `n` objects in which no object appears in\n  its original position. (Each of these permutations is called\n  a ['derangement'](https://en.wikipedia.org/wiki/Derangement) of the set.)\n\n  ## References\n\n  - [Subfactorial page at Wolfram Mathworld](https://mathworld.wolfram.com/Subfactorial.html)\n  - John Cook, [Variations on Factorial](https://www.johndcook.com/blog/2010/09/21/variations-on-factorial/)\n  - John Cook, [Subfactorial](https://www.johndcook.com/blog/2010/04/06/subfactorial/)\n  - ['Derangement' on Wikipedia](https://en.wikipedia.org/wiki/Derangement)",(cljs.core.truth_(sicmutils.special.factorial.subfactorial)?sicmutils.special.factorial.subfactorial.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("binomial-coefficient"),new cljs.core.Var(function(){return sicmutils.special.factorial.binomial_coefficient;},new cljs.core.Symbol("sicmutils.special.factorial","binomial-coefficient","sicmutils.special.factorial/binomial-coefficient",1321067216,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"binomial-coefficient","binomial-coefficient",-1900165027,null),"sicmutils/special/factorial.cljc",29,3,235,235,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"k","k",-505765866,null)], null)),"Returns the [binomial\n  coefficient](https://en.wikipedia.org/wiki/Binomial_coefficient), ie, the\n  coefficient of the $x^k$ term in the polynomial expansion of the binomial\n  power $(1 + x)^n$.\n\n  This quantity is sometimes pronounced \"n choose k\".\n\n  For negative `n` or `k`, [[binomial-coefficient]] matches the behavior\n  provided by Mathematica, described at [this\n  page](https://mathworld.wolfram.com/BinomialCoefficient.html). Given negative\n  `n`, returns\n\n  ```clj\n  ;; for k >= 0\n  (* (expt -1 k)\n     (binomial-coefficient (+ (- n) k -1) k))\n\n  ;; for k >= 0\n  (* (expt -1 (- n k))\n     (binomial-coefficient (+ (- k) -1) (- n k)))\n\n  ;; otherwise:\n  0\n  ```",(cljs.core.truth_(sicmutils.special.factorial.binomial_coefficient)?sicmutils.special.factorial.binomial_coefficient.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bell"),new cljs.core.Var(function(){return sicmutils.special.factorial.bell;},new cljs.core.Symbol("sicmutils.special.factorial","bell","sicmutils.special.factorial/bell",-1161003058,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"bell","bell",2060210813,null),"sicmutils/special/factorial.cljc",13,3,352,352,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the `n`th [Bell number](https://en.wikipedia.org/wiki/Bell_number), ie,\n  the number of ways a set of `n` elements can be partitioned into nonempty\n  subsets.\n\n  The `n`th Bell number is denoted $B_n$.",(cljs.core.truth_(sicmutils.special.factorial.bell)?sicmutils.special.factorial.bell.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("pochhammer"),new cljs.core.Var(function(){return sicmutils.special.factorial.pochhammer;},new cljs.core.Symbol("sicmutils.special.factorial","pochhammer","sicmutils.special.factorial/pochhammer",-813313810,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.special.factorial","sicmutils.special.factorial",280994960,null),new cljs.core.Symbol(null,"pochhammer","pochhammer",-1887028579,null),"sicmutils/special/factorial.cljc",13,1,125,126,cljs.core.List.EMPTY,"Alias for [[falling-factorial]].",(cljs.core.truth_(sicmutils.special.factorial.pochhammer)?sicmutils.special.factorial.pochhammer.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->ModInt"),new cljs.core.Var(function(){return sicmutils.modint.__GT_ModInt;},new cljs.core.Symbol("sicmutils.modint","->ModInt","sicmutils.modint/->ModInt",-962241188,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"->ModInt","->ModInt",-1177394650,null),"sicmutils/modint.cljc",16,1,new cljs.core.Keyword(null,"positional","positional",-203580463),18,18,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null"], null), null),"Positional factory function for sicmutils.modint/ModInt.",(cljs.core.truth_(sicmutils.modint.__GT_ModInt)?sicmutils.modint.__GT_ModInt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("residue"),new cljs.core.Var(function(){return sicmutils.modint.residue;},new cljs.core.Symbol("sicmutils.modint","residue","sicmutils.modint/residue",-1930700692,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"residue","residue",-810505434,null),"sicmutils/modint.cljc",14,1,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.modint.residue)?sicmutils.modint.residue.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("chinese-remainder"),new cljs.core.Var(function(){return sicmutils.modint.chinese_remainder;},new cljs.core.Symbol("sicmutils.modint","chinese-remainder","sicmutils.modint/chinese-remainder",-1177901090,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"chinese-remainder","chinese-remainder",-54537496,null),"sicmutils/modint.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"modints","modints",-142681111,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"modints","modints",-142681111,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,123,123,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"modints","modints",-142681111,null)], null)),"[Chinese Remainder Algorithm](https://en.wikipedia.org/wiki/Chinese_remainder_theorem).\n\n  Accepts a sequence of [[ModInt]] instances (where the `modulus` of\n  all [[ModInt]] instances are relatively prime), and returns a [[ModInt]] `x`\n  such that `(residue input) == (mod x (modulus input))`.\n\n  For example:\n\n  ```clojure\n  (let [a1 (m/make 2 5)\n        a2 (m/make 3 13)]\n    [(= 42 (chinese-remainder a1 a2))\n     (= (residue a1) (mod cr (modulus a1)))\n     (= (residue a2) (mod cr (modulus a2)))])\n  ;;=> [true true true]\n  ```",(cljs.core.truth_(sicmutils.modint.chinese_remainder)?sicmutils.modint.chinese_remainder.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make"),new cljs.core.Var(function(){return sicmutils.modint.make;},new cljs.core.Symbol("sicmutils.modint","make","sicmutils.modint/make",1447594320,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"make","make",356488202,null),"sicmutils/modint.cljc",11,1,73,73,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"i","i",253690212,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),"Returns an instance of [[ModInt]] that represents integer `i` with integral\n  modulus `m`.",(cljs.core.truth_(sicmutils.modint.make)?sicmutils.modint.make.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("ModInt"),new cljs.core.Var(function(){return sicmutils.modint.ModInt;},new cljs.core.Symbol("sicmutils.modint","ModInt","sicmutils.modint/ModInt",-732526620,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/modint.cljc",new cljs.core.Keyword(null,"line","line",212345235),18,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"ModInt","ModInt",394499370,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.modint.ModInt)?sicmutils.modint.ModInt.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modint?"),new cljs.core.Var(function(){return sicmutils.modint.modint_QMARK_;},new cljs.core.Symbol("sicmutils.modint","modint?","sicmutils.modint/modint?",-1301906418,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"modint?","modint?",-46333612,null),"sicmutils/modint.cljc",14,1,49,49,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),"Returns true if `x` is an instance of [[ModInt]], false otherwise.",(cljs.core.truth_(sicmutils.modint.modint_QMARK_)?sicmutils.modint.modint_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("modulus"),new cljs.core.Var(function(){return sicmutils.modint.modulus;},new cljs.core.Symbol("sicmutils.modint","modulus","sicmutils.modint/modulus",2974292,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.modint","sicmutils.modint",1332364201,null),new cljs.core.Symbol(null,"modulus","modulus",-856269542,null),"sicmutils/modint.cljc",14,1,57,57,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"x","x",-555367584,null)], null)),null,(cljs.core.truth_(sicmutils.modint.modulus)?sicmutils.modint.modulus.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("nelder-mead"),new cljs.core.Var(function(){return sicmutils.numerical.multimin.nelder_mead.nelder_mead;},new cljs.core.Symbol("sicmutils.numerical.multimin.nelder-mead","nelder-mead","sicmutils.numerical.multimin.nelder-mead/nelder-mead",-1427322333,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.multimin.nelder-mead","sicmutils.numerical.multimin.nelder-mead",-52170042,null),new cljs.core.Symbol(null,"nelder-mead","nelder-mead",-737112619,null),"sicmutils/numerical/multimin/nelder_mead.cljc",18,1,221,221,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"func","func",1401825487,null),new cljs.core.Symbol(null,"x0","x0",2051374914,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"as","as",1148689641),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)], null)),"Find the minimum of the function f: R^n -> R, given an initial point q \u2208 R^n.\n  Supports the following optional keyword arguments:\n\n  `:callback` if supplied, the supplied fn will be invoked with iteration count,\n  the values of X and the value of f(X) at each intermediate point of\n  evaluation.\n\n  `:info?` if true, wraps the result with evaluation information.\n\n  `:adaptive?` if true, the Nelder-Mead parameters for contraction, expansion,\n  reflection and shrinking will be set adaptively, as functions of the number of\n  dimensions. If false they stay constant.\n\n  `:alpha` sets the reflection coefficient used for each step of Nelder-Mead.\n\n  `:beta` sets the expansion coefficient used for each step of Nelder-Mead.\n\n  `:gamma` sets the contraction coefficient used for each step of Nelder-Mead.\n\n  `:sigma` sets the shrink coefficient used for each step of Nelder-Mead.\n\n  `:maxiter` Maximum number of iterations allowed for the minimizer. Defaults to\n  200*dimension.\n\n  `:maxfun` Maximum number of times the function can be evaluated before exiting.\n  Defaults to 200*dimension.\n\n  `:simplex-tolerance` When the absolute value of the max difference between the\n  best point and any point in the simplex falls below this tolerance, the\n  minimizer stops. Defaults to 1e-4.\n\n  `:fn-tolerance` When the absolute value of the max difference between the best\n  point's function value and the fn value of any point in the simplex falls\n  below this tolerance, the minimizer stops. Defaults to 1e-4.\n\n  `:zero-delta` controls the value to which 0 entries in the initial vector are\n  set during initial simplex generation. Defaults to 0.00025.\n\n  `:nonzero-delta` factor by which entries in the initial vector are perturbed to\n  generate the initial simplex. Defaults to 0.05.\n\n  See Gao, F. and Han, L.\n      Implementing the Nelder-Mead simplex algorithm with adaptive\n      parameters. 2012. Computational Optimization and Applications.\n      51:1, pp. 259-277\n  I gratefully acknowledge the [Python implementation in\n  SciPy](https://github.com/scipy/scipy/blob/589c9afe41774ee96ec121f1867361146add8276/scipy/optimize/optimize.py#L556:5)\n  which I have imitated here.\n  ",(cljs.core.truth_(sicmutils.numerical.multimin.nelder_mead.nelder_mead)?sicmutils.numerical.multimin.nelder_mead.nelder_mead.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->infix"),new cljs.core.Var(function(){return sicmutils.expression.render.__GT_infix;},new cljs.core.Symbol("sicmutils.expression.render","->infix","sicmutils.expression.render/->infix",-1540790575,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"->infix","->infix",347316576,null),"sicmutils/expression/render.cljc",10,1,337,339,cljs.core.List.EMPTY,"Converts an S-expression to printable infix form. Numeric exponents\n  are written as superscripts. Partial derivatives get subscripts.",(cljs.core.truth_(sicmutils.expression.render.__GT_infix)?sicmutils.expression.render.__GT_infix.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->TeX*"),new cljs.core.Var(function(){return sicmutils.expression.render.__GT_TeX_STAR_;},new cljs.core.Symbol("sicmutils.expression.render","->TeX*","sicmutils.expression.render/->TeX*",-1471976703,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"->TeX*","->TeX*",-103927890,null),"sicmutils/expression/render.cljc",21,1,426,426,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.render.__GT_TeX_STAR_)?sicmutils.expression.render.__GT_TeX_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("infix-sym->unicode"),new cljs.core.Var(function(){return sicmutils.expression.render.infix_sym__GT_unicode;},new cljs.core.Symbol("sicmutils.expression.render","infix-sym->unicode","sicmutils.expression.render/infix-sym->unicode",-75478207,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"infix-sym->unicode","infix-sym->unicode",721754064,null),"sicmutils/expression/render.cljc",24,1,324,324,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.expression.render.infix_sym__GT_unicode)?sicmutils.expression.render.infix_sym__GT_unicode.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->TeX"),new cljs.core.Var(function(){return sicmutils.expression.render.__GT_TeX;},new cljs.core.Symbol("sicmutils.expression.render","->TeX","sicmutils.expression.render/->TeX",131066050,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"->TeX","->TeX",-682969935,null),"sicmutils/expression/render.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"equation","equation",1141003782,null)], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"equation","equation",1141003782,null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,567,567,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"equation","equation",1141003782,null)], null)], null)], null)),"Convert the given expression to TeX format, as a string.\n\n  If you set the `:equation` keyword argument to a truthy value, the result will\n  be wrapped in an equation environment. `:equation <string>` will insert a\n  `\\label{<string>}` entry inside the equation environment.\n\n  For example:\n\n  ```clojure\n  (let [expr (+ 'x 'xy)]\n    (println\n      (->TeX expr :equation \"label!\")))\n\n  \\begin{equation}\n  \\label{label!}\n  x + y\n  \\end{equation}\n  ```\n  ",(cljs.core.truth_(sicmutils.expression.render.__GT_TeX)?sicmutils.expression.render.__GT_TeX.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->JavaScript"),new cljs.core.Var(function(){return sicmutils.expression.render.__GT_JavaScript;},new cljs.core.Symbol("sicmutils.expression.render","->JavaScript","sicmutils.expression.render/->JavaScript",932738601,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"->JavaScript","->JavaScript",-417418602,null),"sicmutils/expression/render.cljc",15,1,599,622,cljs.core.List.EMPTY,"Convert the given expression to a string representation of a\n  JavaScript function.\n\n  Parameters to the function will be extracted from the symbols in the expression.\n  Common subexpression elimination will be performed and auxiliary variables\n  will be bound in the body of the function; the names of these symbols are\n  obtained from the nullary function option :symbol-generator, which defaults to\n  a function yielding `_1, ...`.\n\n  If `:parameter-order` is specified, it is used to determine function parameter\n  order in one of two ways:\n\n  If it is set to a function, that function will be called on the sequence of\n  parameters and is expected to return the parameters in the desired sequence.\n\n  Otherwise, it is interpreted as the sequence of parameters itself. If not\n  specified, the default behavior is `sort`.\n\n  If `:deterministic? true` is supplied, the function will assign variables by\n  sorting the string representations of each term before assignment. Otherwise,\n  the nondeterministic order of hash maps inside this function won't guarantee a\n  consistent variable naming convention in the returned function. For tests, set\n  `:deterministic? true`.",(cljs.core.truth_(sicmutils.expression.render.__GT_JavaScript)?sicmutils.expression.render.__GT_JavaScript.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*TeX-sans-serif-symbols*"),new cljs.core.Var(function(){return sicmutils.expression.render._STAR_TeX_sans_serif_symbols_STAR_;},new cljs.core.Symbol("sicmutils.expression.render","*TeX-sans-serif-symbols*","sicmutils.expression.render/*TeX-sans-serif-symbols*",2090713163,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"*TeX-sans-serif-symbols*","*TeX-sans-serif-symbols*",-854063910,null),"sicmutils/expression/render.cljc",27,1,true,418,421,cljs.core.List.EMPTY,"If true, [[->TeX]] will render symbols with more than 1 character\n  using a sans-serif typestyle via `\\mathsf`. Defaults to true.",(cljs.core.truth_(sicmutils.expression.render._STAR_TeX_sans_serif_symbols_STAR_)?sicmutils.expression.render._STAR_TeX_sans_serif_symbols_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*TeX-vertical-down-tuples*"),new cljs.core.Var(function(){return sicmutils.expression.render._STAR_TeX_vertical_down_tuples_STAR_;},new cljs.core.Symbol("sicmutils.expression.render","*TeX-vertical-down-tuples*","sicmutils.expression.render/*TeX-vertical-down-tuples*",-1829307573,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.expression.render","sicmutils.expression.render",-1660511449,null),new cljs.core.Symbol(null,"*TeX-vertical-down-tuples*","*TeX-vertical-down-tuples*",-1032771622,null),"sicmutils/expression/render.cljc",29,1,true,412,415,cljs.core.List.EMPTY,"If true, [[->TeX]] will render down tuples as vertical matrices\n  with square braces. Defaults to false.",(cljs.core.truth_(sicmutils.expression.render._STAR_TeX_vertical_down_tuples_STAR_)?sicmutils.expression.render._STAR_TeX_vertical_down_tuples_STAR_.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*poly-simplify*"),new cljs.core.Var(function(){return sicmutils.simplify._STAR_poly_simplify_STAR_;},new cljs.core.Symbol("sicmutils.simplify","*poly-simplify*","sicmutils.simplify/*poly-simplify*",1978189031,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"*poly-simplify*","*poly-simplify*",710366657,null),"sicmutils/simplify.cljc",31,1,true,42,42,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify._STAR_poly_simplify_STAR_)?sicmutils.simplify._STAR_poly_simplify_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("rational-function-analyzer"),new cljs.core.Var(function(){return sicmutils.simplify.rational_function_analyzer;},new cljs.core.Symbol("sicmutils.simplify","rational-function-analyzer","sicmutils.simplify/rational-function-analyzer",-893417750,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"rational-function-analyzer","rational-function-analyzer",827422660,null),"sicmutils/simplify.cljc",42,1,34,34,cljs.core.list(cljs.core.PersistentVector.EMPTY),"An analyzer capable of simplifying expressions built out of rational\n  functions.\n  NOTE: This is rcf:analyzer.",(cljs.core.truth_(sicmutils.simplify.rational_function_analyzer)?sicmutils.simplify.rational_function_analyzer.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("hermetic-simplify-fixture"),new cljs.core.Var(function(){return sicmutils.simplify.hermetic_simplify_fixture;},new cljs.core.Symbol("sicmutils.simplify","hermetic-simplify-fixture","sicmutils.simplify/hermetic-simplify-fixture",805421610,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"hermetic-simplify-fixture","hermetic-simplify-fixture",-1682214452,null),"sicmutils/simplify.cljc",32,1,53,53,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"thunk","thunk",74255732,null)], null)),"Returns the result of executing the supplied `thunk` in an environment where\n  the [[*rf-simplify*]] and [[*poly-simplify*]] are not memoized.",(cljs.core.truth_(sicmutils.simplify.hermetic_simplify_fixture)?sicmutils.simplify.hermetic_simplify_fixture.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("simplify-expression"),new cljs.core.Var(function(){return sicmutils.simplify.simplify_expression;},new cljs.core.Symbol("sicmutils.simplify","simplify-expression","sicmutils.simplify/simplify-expression",-298374290,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"simplify-expression","simplify-expression",1167243796,null),"sicmutils/simplify.cljc",28,3,110,110,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"expr","expr",-1908713478,null)], null)),"Simplifies an expression representing a complex number. TODO say more!",(cljs.core.truth_(sicmutils.simplify.simplify_expression)?sicmutils.simplify.simplify_expression.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*rf-simplify*"),new cljs.core.Var(function(){return sicmutils.simplify._STAR_rf_simplify_STAR_;},new cljs.core.Symbol("sicmutils.simplify","*rf-simplify*","sicmutils.simplify/*rf-simplify*",1471050518,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"*rf-simplify*","*rf-simplify*",-1292516740,null),"sicmutils/simplify.cljc",29,1,true,47,47,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.simplify._STAR_rf_simplify_STAR_)?sicmutils.simplify._STAR_rf_simplify_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("poly-analyzer"),new cljs.core.Var(function(){return sicmutils.simplify.poly_analyzer;},new cljs.core.Symbol("sicmutils.simplify","poly-analyzer","sicmutils.simplify/poly-analyzer",1782401761,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.simplify","sicmutils.simplify",643644234,null),new cljs.core.Symbol(null,"poly-analyzer","poly-analyzer",392625055,null),"sicmutils/simplify.cljc",29,1,26,26,cljs.core.list(cljs.core.PersistentVector.EMPTY),"An analyzer capable of simplifying sums and products, but unable to cancel\n  across the fraction bar.\n  NOTE: I think this is fpf:analyzer in the scheme code.",(cljs.core.truth_(sicmutils.simplify.poly_analyzer)?sicmutils.simplify.poly_analyzer.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Noether-integral"),new cljs.core.Var(function(){return sicmutils.mechanics.noether.Noether_integral;},new cljs.core.Symbol("sicmutils.mechanics.noether","Noether-integral","sicmutils.mechanics.noether/Noether-integral",1404125001,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.noether","sicmutils.mechanics.noether",1498111737,null),new cljs.core.Symbol(null,"Noether-integral","Noether-integral",-1527698590,null),"sicmutils/mechanics/noether.cljc",23,1,20,20,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"L","L",602224008,null),new cljs.core.Symbol(null,"F-tilde","F-tilde",996598782,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.noether.Noether_integral)?sicmutils.mechanics.noether.Noether_integral.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("shift-t"),new cljs.core.Var(function(){return sicmutils.mechanics.time_evolution.shift_t;},new cljs.core.Symbol("sicmutils.mechanics.time-evolution","shift-t","sicmutils.mechanics.time-evolution/shift-t",583941649,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.time-evolution","sicmutils.mechanics.time-evolution",-162436091,null),new cljs.core.Symbol(null,"shift-t","shift-t",-681669434,null),"sicmutils/mechanics/time_evolution.cljc",14,1,10,10,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"delta-t","delta-t",1769095452,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.time_evolution.shift_t)?sicmutils.mechanics.time_evolution.shift_t.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("C->Cp"),new cljs.core.Var(function(){return sicmutils.mechanics.time_evolution.C__GT_Cp;},new cljs.core.Symbol("sicmutils.mechanics.time-evolution","C->Cp","sicmutils.mechanics.time-evolution/C->Cp",1176880830,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.time-evolution","sicmutils.mechanics.time-evolution",-162436091,null),new cljs.core.Symbol(null,"C->Cp","C->Cp",-896239631,null),"sicmutils/mechanics/time_evolution.cljc",12,1,15,15,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"C","C",1466901940,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.time_evolution.C__GT_Cp)?sicmutils.mechanics.time_evolution.C__GT_Cp.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("H->Hp"),new cljs.core.Var(function(){return sicmutils.mechanics.time_evolution.H__GT_Hp;},new cljs.core.Symbol("sicmutils.mechanics.time-evolution","H->Hp","sicmutils.mechanics.time-evolution/H->Hp",-959843559,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.mechanics.time-evolution","sicmutils.mechanics.time-evolution",-162436091,null),new cljs.core.Symbol(null,"H->Hp","H->Hp",1522090576,null),"sicmutils/mechanics/time_evolution.cljc",12,1,21,21,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"delta-t","delta-t",1769095452,null)], null)),null,(cljs.core.truth_(sicmutils.mechanics.time_evolution.H__GT_Hp)?sicmutils.mechanics.time_evolution.H__GT_Hp.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Gram-Schmidt"),new cljs.core.Var(function(){return sicmutils.calculus.hodge_star.Gram_Schmidt;},new cljs.core.Symbol("sicmutils.calculus.hodge-star","Gram-Schmidt","sicmutils.calculus.hodge-star/Gram-Schmidt",-388643901,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.hodge-star","sicmutils.calculus.hodge-star",630082700,null),new cljs.core.Symbol(null,"Gram-Schmidt","Gram-Schmidt",-1549606410,null),"sicmutils/calculus/hodge_star.cljc",19,1,20,20,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"vector-basis","vector-basis",770571439,null),new cljs.core.Symbol(null,"metric","metric",2049329604,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.hodge_star.Gram_Schmidt)?sicmutils.calculus.hodge_star.Gram_Schmidt.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("orthonormalize"),new cljs.core.Var(function(){return sicmutils.calculus.hodge_star.orthonormalize;},new cljs.core.Symbol("sicmutils.calculus.hodge-star","orthonormalize","sicmutils.calculus.hodge-star/orthonormalize",-1853550824,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.hodge-star","sicmutils.calculus.hodge-star",630082700,null),new cljs.core.Symbol(null,"orthonormalize","orthonormalize",-931386057,null),"sicmutils/calculus/hodge_star.cljc",21,1,41,41,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"basis","basis",-788616430,null),new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"coordinate-system","coordinate-system",342184256,null)], null)),null,(cljs.core.truth_(sicmutils.calculus.hodge_star.orthonormalize)?sicmutils.calculus.hodge_star.orthonormalize.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Hodge-star"),new cljs.core.Var(function(){return sicmutils.calculus.hodge_star.Hodge_star;},new cljs.core.Symbol("sicmutils.calculus.hodge-star","Hodge-star","sicmutils.calculus.hodge-star/Hodge-star",1249658816,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.calculus.hodge-star","sicmutils.calculus.hodge-star",630082700,null),new cljs.core.Symbol(null,"Hodge-star","Hodge-star",219488309,null),"sicmutils/calculus/hodge_star.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null),false], null)], null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null),false], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,51,51,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"metric","metric",2049329604,null),new cljs.core.Symbol(null,"spec","spec",1988051928,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,"orthonormalize?","orthonormalize?",1628658775,null),false], null)], null)], null)),"Takes a `metric` and a `spec` and returns the [Hodge star\n  operator](https://en.wikipedia.org/wiki/Hodge_star_operator) (actually just a\n  function, but I suspect this should be a proper operator!)\n\n  `spec` may be:\n\n  - a coordinate system with an orthonormal basis\n  - an orthonormal basis\n  - a basis\n\n  if the spec is a basis that needs to be orthonormalized, the optional\n  `:orthonormalize?` keyword argument must be a coordinate system.",(cljs.core.truth_(sicmutils.calculus.hodge_star.Hodge_star)?sicmutils.calculus.hodge_star.Hodge_star.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tan-series"),new cljs.core.Var(function(){return sicmutils.series.tan_series;},new cljs.core.Symbol("sicmutils.series","tan-series","sicmutils.series/tan-series",-1326468820,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"tan-series","tan-series",-96331392,null),"sicmutils/series.cljc",16,1,654,654,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.tan_series)?sicmutils.series.tan_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("xpow"),new cljs.core.Var(function(){return sicmutils.series.xpow;},new cljs.core.Symbol("sicmutils.series","xpow","sicmutils.series/xpow",-1096360386,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"xpow","xpow",-133471806,null),"sicmutils/series.cljc",11,1,372,372,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns a [[PowerSeries]] instance representing $x^n$.",(cljs.core.truth_(sicmutils.series.xpow)?sicmutils.series.xpow.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("power-series*"),new cljs.core.Var(function(){return sicmutils.series.power_series_STAR_;},new cljs.core.Symbol("sicmutils.series","power-series*","sicmutils.series/power-series*",217071664,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"power-series*","power-series*",-882059100,null),"sicmutils/series.cljc",20,1,329,329,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Given a sequence, returns a new [[PowerSeries]] object that wraps that\n  sequence (potentially padding its tail with zeros if it's finite).",(cljs.core.truth_(sicmutils.series.power_series_STAR_)?sicmutils.series.power_series_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cos-series"),new cljs.core.Var(function(){return sicmutils.series.cos_series;},new cljs.core.Symbol("sicmutils.series","cos-series","sicmutils.series/cos-series",648167568,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"cos-series","cos-series",1863186724,null),"sicmutils/series.cljc",16,1,653,653,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.cos_series)?sicmutils.series.cos_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acos-series"),new cljs.core.Var(function(){return sicmutils.series.acos_series;},new cljs.core.Symbol("sicmutils.series","acos-series","sicmutils.series/acos-series",2122268624,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"acos-series","acos-series",-1542810012,null),"sicmutils/series.cljc",17,1,658,658,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.acos_series)?sicmutils.series.acos_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sum"),new cljs.core.Var(function(){return sicmutils.series.sum;},new cljs.core.Symbol("sicmutils.series","sum","sicmutils.series/sum",793194361,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"sum","sum",1777518341,null),"sicmutils/series.cljc",10,1,559,559,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Returns the sum of all elements in the input series `s` up to order\n  `n` (inclusive). For example:\n\n  ```clojure\n  (sum (series 1 1 1 1 1 1 1) 3)\n  ;; => 4\n  ```\n\n  NOTE that [[sum]] sums the first `n + 1` terms, since a series starts with an\n  order 0 term.",(cljs.core.truth_(sicmutils.series.sum)?sicmutils.series.sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log1-x-series"),new cljs.core.Var(function(){return sicmutils.series.log1_x_series;},new cljs.core.Symbol("sicmutils.series","log1-x-series","sicmutils.series/log1-x-series",-1921429647,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"log1-x-series","log1-x-series",-1278924827,null),"sicmutils/series.cljc",19,1,669,669,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.log1_x_series)?sicmutils.series.log1_x_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compose"),new cljs.core.Var(function(){return sicmutils.series.compose;},new cljs.core.Symbol("sicmutils.series","compose","sicmutils.series/compose",-1965623917,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"compose","compose",1144740903,null),"sicmutils/series.cljc",14,1,575,575,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null)),"Returns a new [[PowerSeries]] $U$ that represents the composition of the two\n  input power series $S$ and $T$, where $U$ evaluates like:\n\n  ```\n  $$U(x) = S(T(x))$$\n  ```",(cljs.core.truth_(sicmutils.series.compose)?sicmutils.series.compose.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one"),new cljs.core.Var(function(){return sicmutils.series.one;},new cljs.core.Symbol("sicmutils.series","one","sicmutils.series/one",-549518197,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"one","one",-1719427865,null),"sicmutils/series.cljc",6,1,356,357,cljs.core.List.EMPTY,"[[PowerSeries]] instance representing the constant 1.",(cljs.core.truth_(sicmutils.series.one)?sicmutils.series.one.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("zero"),new cljs.core.Var(function(){return sicmutils.series.zero;},new cljs.core.Symbol("sicmutils.series","zero","sicmutils.series/zero",-201245861,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"zero","zero",781566951,null),"sicmutils/series.cljc",7,1,352,353,cljs.core.List.EMPTY,"[[PowerSeries]] instance representing the constant 0.",(cljs.core.truth_(sicmutils.series.zero)?sicmutils.series.zero.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("acot-series"),new cljs.core.Var(function(){return sicmutils.series.acot_series;},new cljs.core.Symbol("sicmutils.series","acot-series","sicmutils.series/acot-series",660709508,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"acot-series","acot-series",2130004200,null),"sicmutils/series.cljc",17,1,660,660,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.acot_series)?sicmutils.series.acot_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sec-series"),new cljs.core.Var(function(){return sicmutils.series.sec_series;},new cljs.core.Symbol("sicmutils.series","sec-series","sicmutils.series/sec-series",844399812,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"sec-series","sec-series",1948327208,null),"sicmutils/series.cljc",16,1,655,655,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.sec_series)?sicmutils.series.sec_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("log1+x-series"),new cljs.core.Var(function(){return sicmutils.series.log1_PLUS_x_series;},new cljs.core.Symbol("sicmutils.series","log1+x-series","sicmutils.series/log1+x-series",1408193845,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"log1+x-series","log1+x-series",-1437348439,null),"sicmutils/series.cljc",19,1,668,668,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.log1_PLUS_x_series)?sicmutils.series.log1_PLUS_x_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tanh-series"),new cljs.core.Var(function(){return sicmutils.series.tanh_series;},new cljs.core.Symbol("sicmutils.series","tanh-series","sicmutils.series/tanh-series",-598264931,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"tanh-series","tanh-series",-1681700087,null),"sicmutils/series.cljc",17,1,664,664,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.tanh_series)?sicmutils.series.tanh_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("power-series?"),new cljs.core.Var(function(){return sicmutils.series.power_series_QMARK_;},new cljs.core.Symbol("sicmutils.series","power-series?","sicmutils.series/power-series?",-947271458,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"power-series?","power-series?",405041482,null),"sicmutils/series.cljc",20,1,292,292,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if `s` is specifically a [[PowerSeries]], false otherwise.",(cljs.core.truth_(sicmutils.series.power_series_QMARK_)?sicmutils.series.power_series_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-scale"),new cljs.core.Var(function(){return sicmutils.series.arg_scale;},new cljs.core.Symbol("sicmutils.series","arg-scale","sicmutils.series/arg-scale",150279390,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"arg-scale","arg-scale",-828801718,null),"sicmutils/series.cljc",16,1,613,613,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"factors","factors",-1546618389,null)], null)),"Given a univariate [[PowerSeries]] and a singleton sequence of `factors`,\n  returns a new [[PowerSeries]] that scales its argument by `(first factor)` on\n  application.\n\n  Given a [[Series]], recursively applies [[arg-scale]] to each element, making\n  this ONLY appropriate in its current form for a [[Series]] of [[PowerSeries]]\n  instances.",(cljs.core.truth_(sicmutils.series.arg_scale)?sicmutils.series.arg_scale.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("identity"),new cljs.core.Var(function(){return sicmutils.series.identity;},new cljs.core.Symbol("sicmutils.series","identity","sicmutils.series/identity",496329886,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"identity","identity",-1007039734,null),"sicmutils/series.cljc",11,1,360,361,cljs.core.List.EMPTY,"[[PowerSeries]] instance representing the identity function.",(cljs.core.truth_(sicmutils.series.identity)?sicmutils.series.identity.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("catalan-series"),new cljs.core.Var(function(){return sicmutils.series.catalan_series;},new cljs.core.Symbol("sicmutils.series","catalan-series","sicmutils.series/catalan-series",-404600417,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"catalan-series","catalan-series",695607563,null),"sicmutils/series.cljc",20,1,688,688,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.catalan_series)?sicmutils.series.catalan_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atan-series"),new cljs.core.Var(function(){return sicmutils.series.atan_series;},new cljs.core.Symbol("sicmutils.series","atan-series","sicmutils.series/atan-series",-345581193,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"atan-series","atan-series",755642859,null),"sicmutils/series.cljc",17,1,659,659,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.atan_series)?sicmutils.series.atan_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fib-series"),new cljs.core.Var(function(){return sicmutils.series.fib_series;},new cljs.core.Symbol("sicmutils.series","fib-series","sicmutils.series/fib-series",-924311969,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"fib-series","fib-series",41134027,null),"sicmutils/series.cljc",16,1,687,687,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.fib_series)?sicmutils.series.fib_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("series"),new cljs.core.Var(function(){return sicmutils.series.series;},new cljs.core.Symbol("sicmutils.series","series","sicmutils.series/series",1325554937,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"series","series",-2053725075,null),"sicmutils/series.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"prefix","prefix",1374623062,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,320,320,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Return a [[Series]] starting with the supplied values. The remainder of the\n  series will be filled with the zero-value corresponding to the first of the\n  given values.\n\n  If you have a sequence already, prefer [[series*]].",(cljs.core.truth_(sicmutils.series.series)?sicmutils.series.series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Series"),new cljs.core.Var(function(){return sicmutils.series.__GT_Series;},new cljs.core.Symbol("sicmutils.series","->Series","sicmutils.series/->Series",-1517250767,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"->Series","->Series",2145681101,null),"sicmutils/series.cljc",16,1,new cljs.core.Keyword(null,"positional","positional",-203580463),36,36,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.series/Series.",(cljs.core.truth_(sicmutils.series.__GT_Series)?sicmutils.series.__GT_Series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("arg-shift"),new cljs.core.Var(function(){return sicmutils.series.arg_shift;},new cljs.core.Symbol("sicmutils.series","arg-shift","sicmutils.series/arg-shift",-1329879879,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"arg-shift","arg-shift",-382841075,null),"sicmutils/series.cljc",16,1,627,627,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"shifts","shifts",-704758268,null)], null)),"Given a univariate [[PowerSeries]] and a singleton sequence of `shifts`,\n  returns a function that, when applied, returns a value equivalent to calling\n  the original `s` with its argument shifted by `(first shifts)`.\n\n  NOTE: [[arg-shift]] can't return a [[PowerSeries]] instance because the\n  implementation of [[compose]] does not currently allow a constant element in\n  the right-hand series.\n\n  Given a [[Series]], recursively applies [[arg-shift]] to each element, making\n  this ONLY appropriate in its current form for a [[Series]] of [[PowerSeries]]\n  instances. Returns a [[Series]] of functions.",(cljs.core.truth_(sicmutils.series.arg_shift)?sicmutils.series.arg_shift.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("series*"),new cljs.core.Var(function(){return sicmutils.series.series_STAR_;},new cljs.core.Symbol("sicmutils.series","series*","sicmutils.series/series*",-1102236510,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"series*","series*",-172585970,null),"sicmutils/series.cljc",14,1,314,314,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Given a sequence, returns a new [[Series]] object that wraps that\n  sequence (potentially padding its tail with zeros if it's finite).",(cljs.core.truth_(sicmutils.series.series_STAR_)?sicmutils.series.series_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("function->"),new cljs.core.Var(function(){return sicmutils.series.function__GT_;},new cljs.core.Symbol("sicmutils.series","function->","sicmutils.series/function->",1947160602,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"function->","function->",-1430532114,null),"sicmutils/series.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,400,400,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns a [[PowerSeries]] representing the [Taylor\n  series](https://en.wikipedia.org/wiki/Taylor_series) expansion of `f` at the\n  point specified by `xs`. Multiple arguments are allowed. If no arguments `xs`\n  are supplied, the expansion point defaults to 0.\n\n  The expansion at 0 is also called a 'Maclaurin series'.\n\n  NOTE: this function takes derivatives internally, so if you pass a function\n  make sure you require [[sicmutils.calculus.derivative]] to install the\n  derivative implementation for functions. If you pass some other callable,\n  differentiable function-like thing, like a polynomial, this is not necessary.\n\n  NOTE: The typical definition of a Taylor series of `f` expanded around some\n  point `x` is\n\n  $$T(p) = f(x) + \\frac{f'(x)}{1!}(p-x) + \\frac{f''(x)}{2!} (p-x)^2 + \\ldots,$$\n\n  where `p` is the evaluation point. When `(= p x)`, all derivatives of the\n  Taylor series expansion of `f` will exactly match the derivatives of `f`\n  itself.\n\n  The Taylor series returned here (call it $T'$) is actually a function of `dx`,\n  where\n\n  $$T'(dx) = T(x+dx) = f(x) + \\frac{f'(x)}{1!}(dx) + \\frac{f''(x)}{2!} (dx)^2 + \\ldots.$$",(cljs.core.truth_(sicmutils.series.function__GT_)?sicmutils.series.function__GT_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Series"),new cljs.core.Var(function(){return sicmutils.series.Series;},new cljs.core.Symbol("sicmutils.series","Series","sicmutils.series/Series",-334549477,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/series.cljc",new cljs.core.Keyword(null,"line","line",212345235),36,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Series","Series",-1761966097,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.series.Series)?sicmutils.series.Series.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("constant"),new cljs.core.Var(function(){return sicmutils.series.constant;},new cljs.core.Symbol("sicmutils.series","constant","sicmutils.series/constant",27024668,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null),"sicmutils/series.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,364,364,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"c","c",-122660552,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)),"Returns a [[PowerSeries]] representing the supplied constant term.\n\n  Optionally, pass `kind` of either `::series` or `::power-series` to specify\n  the type of series returned.",(cljs.core.truth_(sicmutils.series.constant)?sicmutils.series.constant.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("value"),new cljs.core.Var(function(){return sicmutils.series.value;},new cljs.core.Symbol("sicmutils.series","value","sicmutils.series/value",980523332,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"value","value",1946509744,null),"sicmutils/series.cljc",12,1,482,482,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"xs","xs",-2004992428,null)], null)),"Returns the value of the supplied [[Series]] or [[PowerSeries]] applied to `xs`.\n\n  If a [[PowerSeries]] is supplied, `xs` (despite its name) must be a single\n  value. Returns a [[Series]] generated by multiplying each `i`th term in `s` by\n  $x^i$, where $x$ is the `xs` argument.\n\n  If a [[Series]] `s` is supplied:\n\n  Assumes that `s` is a series of applicables of arity equal to the count of\n  `xs`. If, in fact, `s` is a series of series-valued applicables, then the\n  result will be a sort of layered sum of the values.\n\n  Concretely, suppose that `s` has the form:\n\n  ```\n  [x => [A1 A2 A3...], x => [B1 B2 B3...], x => [C1 C2 C3...], ...]\n  ```\n\n  Then, this series applied to x will yield the new series:\n\n  ```\n  [A1 (+ A2 B1) (+ A3 B2 C1) ...]\n  ```\n\n  The way to think about this is, that if a power series has some other series\n  as the coefficient of the $x^n$ term, the series must shift by $n$ positions\n  before being added into the final total.",(cljs.core.truth_(sicmutils.series.value)?sicmutils.series.value.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asin-series"),new cljs.core.Var(function(){return sicmutils.series.asin_series;},new cljs.core.Symbol("sicmutils.series","asin-series","sicmutils.series/asin-series",-886723644,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"asin-series","asin-series",-191286736,null),"sicmutils/series.cljc",17,1,657,657,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.asin_series)?sicmutils.series.asin_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->function"),new cljs.core.Var(function(){return sicmutils.series.__GT_function;},new cljs.core.Symbol("sicmutils.series","->function","sicmutils.series/->function",1903152764,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"->function","->function",267614160,null),"sicmutils/series.cljc",17,1,387,387,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Accepts a [[Series]] or [[PowerSeries]] and coerces the input to\n  a [[PowerSeries]] without any application. Returns the coerced [[PowerSeries]]\n  instance.\n\n  Supplying a non-series will throw.",(cljs.core.truth_(sicmutils.series.__GT_function)?sicmutils.series.__GT_function.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("generate"),new cljs.core.Var(function(){return sicmutils.series.generate;},new cljs.core.Symbol("sicmutils.series","generate","sicmutils.series/generate",598144557,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"generate","generate",1477078705,null),"sicmutils/series.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,378,378,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"kind","kind",923265724,null)], null)),"Returns a [[PowerSeries]] generated by `(f i)` for `i` in `0, 1, ...`\n\n  Optionally, pass `kind` of either `::series` or `::power-series` to specify\n  the type of series returned.",(cljs.core.truth_(sicmutils.series.generate)?sicmutils.series.generate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("series?"),new cljs.core.Var(function(){return sicmutils.series.series_QMARK_;},new cljs.core.Symbol("sicmutils.series","series?","sicmutils.series/series?",-517278553,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"series?","series?",733908051,null),"sicmutils/series.cljc",14,1,285,285,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns true if `s` is either a [[Series]] or a [[PowerSeries]], false\n  otherwise.",(cljs.core.truth_(sicmutils.series.series_QMARK_)?sicmutils.series.series_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("inflate"),new cljs.core.Var(function(){return sicmutils.series.inflate;},new cljs.core.Symbol("sicmutils.series","inflate","sicmutils.series/inflate",-456904512,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"inflate","inflate",577869908,null),"sicmutils/series.cljc",14,1,525,525,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)], null)),"Accepts an input series `s` and an exponent `n`, and expands the series in the\n  `n`th power of its argument. Every term `i` maps to position `i*n`, with zeros\n  padded in the new missing slots.\n\n  For example:\n\n  ```clojure\n  (inflate identity 3)\n  ;; => (series 0 0 0 1)\n\n  (take 6 (inflate (generate inc) 3))\n  ;; => (1 0 2 0 3 0)\n  ```\n\n  NOTE this operation makes sense as described for a [[PowerSeries]], where each\n  entry represents the coefficient of some power of `x`; functionally it still\n  works with [[Series]] objects.",(cljs.core.truth_(sicmutils.series.inflate)?sicmutils.series.inflate.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("harmonic-series"),new cljs.core.Var(function(){return sicmutils.series.harmonic_series;},new cljs.core.Symbol("sicmutils.series","harmonic-series","sicmutils.series/harmonic-series",-2085677752,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"harmonic-series","harmonic-series",-909996844,null),"sicmutils/series.cljc",21,1,689,689,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.harmonic_series)?sicmutils.series.harmonic_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->PowerSeries"),new cljs.core.Var(function(){return sicmutils.series.__GT_PowerSeries;},new cljs.core.Symbol("sicmutils.series","->PowerSeries","sicmutils.series/->PowerSeries",-434874112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol("sicmutils.function","IArity","sicmutils.function/IArity",-1445812254,null),"null",new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"->PowerSeries","->PowerSeries",-1598045772,null),"sicmutils/series.cljc",21,1,new cljs.core.Keyword(null,"positional","positional",-203580463),208,208,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"m","m",-1021758608,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol("cljs.core","IFn","cljs.core/IFn",-920223129,null),"null",new cljs.core.Symbol("cljs.core","ISeqable","cljs.core/ISeqable",137437203,null),"null",new cljs.core.Symbol("cljs.core","IMeta","cljs.core/IMeta",-1459057517,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","ISequential","cljs.core/ISequential",-950981796,null),"null",new cljs.core.Symbol("cljs.core","IWithMeta","cljs.core/IWithMeta",-1981666051,null),"null"], null), null),"Positional factory function for sicmutils.series/PowerSeries.",(cljs.core.truth_(sicmutils.series.__GT_PowerSeries)?sicmutils.series.__GT_PowerSeries.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("binomial-series"),new cljs.core.Var(function(){return sicmutils.series.binomial_series;},new cljs.core.Symbol("sicmutils.series","binomial-series","sicmutils.series/binomial-series",1670869368,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"binomial-series","binomial-series",-1526523436,null),"sicmutils/series.cljc",22,1,671,671,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"alpha","alpha",65549086,null)], null)),"Returns a [[PowerSeries]] instance representing a\n  [Binomial series](https://en.wikipedia.org/wiki/Binomial_series), ie, the\n  taylor series of the function $f$ given by\n\n  ```\n  $$f(x) = (1 + x)^\\alpha$$\n  ```",(cljs.core.truth_(sicmutils.series.binomial_series)?sicmutils.series.binomial_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("exp-series"),new cljs.core.Var(function(){return sicmutils.series.exp_series;},new cljs.core.Symbol("sicmutils.series","exp-series","sicmutils.series/exp-series",-403572309,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"exp-series","exp-series",965017655,null),"sicmutils/series.cljc",16,1,651,651,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.exp_series)?sicmutils.series.exp_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("cosh-series"),new cljs.core.Var(function(){return sicmutils.series.cosh_series;},new cljs.core.Symbol("sicmutils.series","cosh-series","sicmutils.series/cosh-series",687960779,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"cosh-series","cosh-series",1737878103,null),"sicmutils/series.cljc",17,1,663,663,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.cosh_series)?sicmutils.series.cosh_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("power-series"),new cljs.core.Var(function(){return sicmutils.series.power_series;},new cljs.core.Symbol("sicmutils.series","power-series","sicmutils.series/power-series",-466202130,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"power-series","power-series",-572905126,null),"sicmutils/series.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(0),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(0),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"prefix","prefix",1374623062,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,335,335,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"prefix","prefix",1374623062,null)], null)),"Return a [[PowerSeries]] starting with the supplied values. The remainder of\n  the series will be filled with the zero-value corresponding to the first of\n  the given values.\n\n  If you have a sequence already, prefer [[power-series*]].",(cljs.core.truth_(sicmutils.series.power_series)?sicmutils.series.power_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("atanh-series"),new cljs.core.Var(function(){return sicmutils.series.atanh_series;},new cljs.core.Symbol("sicmutils.series","atanh-series","sicmutils.series/atanh-series",-2053791114,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"atanh-series","atanh-series",-1138222374,null),"sicmutils/series.cljc",18,1,666,666,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.atanh_series)?sicmutils.series.atanh_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("revert"),new cljs.core.Var(function(){return sicmutils.series.revert;},new cljs.core.Symbol("sicmutils.series","revert","sicmutils.series/revert",-306741042,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"revert","revert",656545594,null),"sicmutils/series.cljc",13,1,588,588,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new [[PowerSeries]] $U$ that represents the compositional inverse (the\n  'reversion') of the input power series $S$, satisfying:\n\n  ```\n  $$S(U(x)) = x$$\n  ```",(cljs.core.truth_(sicmutils.series.revert)?sicmutils.series.revert.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("partial-sums"),new cljs.core.Var(function(){return sicmutils.series.partial_sums;},new cljs.core.Symbol("sicmutils.series","partial-sums","sicmutils.series/partial-sums",1428206502,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"partial-sums","partial-sums",-1831543974,null),"sicmutils/series.cljc",19,1,553,553,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a series (of the same type as the input) of partial sums of the terms\n  in the supplied series `s`.",(cljs.core.truth_(sicmutils.series.partial_sums)?sicmutils.series.partial_sums.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("PowerSeries"),new cljs.core.Var(function(){return sicmutils.series.PowerSeries;},new cljs.core.Symbol("sicmutils.series","PowerSeries","sicmutils.series/PowerSeries",-1362891673,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/series.cljc",new cljs.core.Keyword(null,"line","line",212345235),208,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"PowerSeries","PowerSeries",1958171675,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.series.PowerSeries)?sicmutils.series.PowerSeries.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sinh-series"),new cljs.core.Var(function(){return sicmutils.series.sinh_series;},new cljs.core.Symbol("sicmutils.series","sinh-series","sicmutils.series/sinh-series",-846619289,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"sinh-series","sinh-series",-143264485,null),"sicmutils/series.cljc",17,1,662,662,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.sinh_series)?sicmutils.series.sinh_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("asinh-series"),new cljs.core.Var(function(){return sicmutils.series.asinh_series;},new cljs.core.Symbol("sicmutils.series","asinh-series","sicmutils.series/asinh-series",1381581256,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"asinh-series","asinh-series",1808136764,null),"sicmutils/series.cljc",18,1,665,665,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.asinh_series)?sicmutils.series.asinh_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("integral"),new cljs.core.Var(function(){return sicmutils.series.integral;},new cljs.core.Symbol("sicmutils.series","integral","sicmutils.series/integral",-797358112,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"integral","integral",182791804,null),"sicmutils/series.cljc",15,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,600,600,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"s","s",-948495851,null),new cljs.core.Symbol(null,"constant","constant",1260922224,null)], null)),"Returns a [[PowerSeries]] $U$ that represents the definite integral of the\n  input power series $S$ with constant term $c$:\n\n  ```\n  $$U = c + \\int_0^{\\infty} S$$\n  ```",(cljs.core.truth_(sicmutils.series.integral)?sicmutils.series.integral.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fmap"),new cljs.core.Var(function(){return sicmutils.series.fmap;},new cljs.core.Symbol("sicmutils.series","fmap","sicmutils.series/fmap",-637653304,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"fmap","fmap",55293788,null),"sicmutils/series.cljc",11,1,516,516,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"s","s",-948495851,null)], null)),"Returns a new series generated by applying the supplied `f` to each element in\n  the input series `s`. The returned series will be the same type as the input\n  series, either [[Series]] or [[PowerSeries]].\n\n  NOTE scmutils calls this `series:elementwise`.",(cljs.core.truth_(sicmutils.series.fmap)?sicmutils.series.fmap.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bell-series"),new cljs.core.Var(function(){return sicmutils.series.bell_series;},new cljs.core.Symbol("sicmutils.series","bell-series","sicmutils.series/bell-series",1415442248,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"bell-series","bell-series",-1645672484,null),"sicmutils/series.cljc",17,1,690,690,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.bell_series)?sicmutils.series.bell_series.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("sin-series"),new cljs.core.Var(function(){return sicmutils.series.sin_series;},new cljs.core.Symbol("sicmutils.series","sin-series","sicmutils.series/sin-series",1738855314,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.series","sicmutils.series",-841160319,null),new cljs.core.Symbol(null,"sin-series","sin-series",-1391412354,null),"sicmutils/series.cljc",16,1,652,652,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.series.sin_series)?sicmutils.series.sin_series.cljs$lang$test:null)]))], null)], true)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("richardson-column"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.richardson_column;},new cljs.core.Symbol("sicmutils.polynomial.richardson","richardson-column","sicmutils.polynomial.richardson/richardson-column",-1444206997,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"richardson-column","richardson-column",1067781891,null),"sicmutils/polynomial/richardson.cljc",24,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),5,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),5,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-seq","p-seq",-1578923571,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-seq","p-seq",-1578923571,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,281,281,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-seq","p-seq",-1578923571,null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"col","col",-318831557,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Function with an identical interface to [[richardson-sequence]], except for an\n  additional second argument `col`.\n\n  `richardson-column` will return that _column_ offset the interpolation tableau\n  instead of the first row. This will give you a sequence of nth-order\n  Richardson accelerations taken between point `i` and the next `n` points.\n\n  As a reminder, this is the shape of the Richardson tableau:\n\n  ```\n  p0 p01 p012 p0123 p01234\n  p1 p12 p123 p1234 .\n  p2 p23 p234 .     .\n  p3 p34 .    .     .\n  p4 .   .    .     .\n  ```\n\n  So supplying a `column` of `1` gives a single acceleration by combining points\n  from column 0; `2` kills two terms from the error sequence, etc.\n\n  NOTE Given a better interface for [[richardson-sequence]] this function could\n  be merged with that function.",(cljs.core.truth_(sicmutils.polynomial.richardson.richardson_column)?sicmutils.polynomial.richardson.richardson_column.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("richardson-sum"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.richardson_sum;},new cljs.core.Symbol("sicmutils.polynomial.richardson","richardson-sum","sicmutils.polynomial.richardson/richardson-sum",1744628188,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"richardson-sum","richardson-sum",296554660,null),"sicmutils/polynomial/richardson.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,480,480,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `A(h), A(h/t), A(h/t^2),...` (where `t` is the `t` argument supplied here) and\n  returns the best approximation of `A(0)` using the algorithm described\n  in [[richardson-sequence]].\n\n  Equivalent to `(last ([[richardson-sequence]] t))`\n\n  See [[richardson-fold]] for all supported arities; all arguments are passed\n  through to [[richardson-fold]].",(cljs.core.truth_(sicmutils.polynomial.richardson.richardson_sum)?sicmutils.polynomial.richardson.richardson_sum.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("richardson-scan"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.richardson_scan;},new cljs.core.Symbol("sicmutils.polynomial.richardson","richardson-scan","sicmutils.polynomial.richardson/richardson-scan",-611011732,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"richardson-scan","richardson-scan",768006724,null),"sicmutils/polynomial/richardson.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null))], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null)], null),1,494,494,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"Returns a function that consumes an entire sequence `xs` of points of the form\n  `A(h), A(h/t), A(h/t^2),...` (where `t` is the `t` argument supplied here) and\n  returns a lazy sequence of successive approximations `A(0)` using the\n  algorithm described in [[richardson-sequence]].\n\n  Equivalent to `([[richardson-sequence]] t)`.\n\n  See [[richardson-fold]] for all supported arities; all arguments are passed\n  through to [[richardson-fold]].",(cljs.core.truth_(sicmutils.polynomial.richardson.richardson_scan)?sicmutils.polynomial.richardson.richardson_scan.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("archimedean-pi-sequence"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.archimedean_pi_sequence;},new cljs.core.Symbol("sicmutils.polynomial.richardson","archimedean-pi-sequence","sicmutils.polynomial.richardson/archimedean-pi-sequence",-777029424,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"no-doc","no-doc",1559921891),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"archimedean-pi-sequence","archimedean-pi-sequence",1868115720,null),"sicmutils/polynomial/richardson.cljc",38,1,64,64,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.polynomial.richardson.archimedean_pi_sequence)?sicmutils.polynomial.richardson.archimedean_pi_sequence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("richardson-sequence"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.richardson_sequence;},new cljs.core.Symbol("sicmutils.polynomial.richardson","richardson-sequence","sicmutils.polynomial.richardson/richardson-sequence",-117396516,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"richardson-sequence","richardson-sequence",1960734964,null),"sicmutils/polynomial/richardson.cljc",26,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-sequence","p-sequence",1101946304,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-sequence","p-sequence",1101946304,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,184,184,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p-sequence","p-sequence",1101946304,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xs","xs",-2004992428,null),new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"p","p",1791580836,null),new cljs.core.Symbol(null,"q","q",-1965434072,null)], null)),"Takes:\n\n  - `xs`: a (potentially lazy) sequence of points representing function values\n  generated by inputs continually decreasing by a factor of `t`. For example:\n  `[f(x), f(x/t), f(x/t^2), ...]`\n  - `t`: the ratio between successive inputs that generated `xs`.\n\n  And returns a new (lazy) sequence of 'accelerated' using [Richardson\n  extrapolation](https://en.wikipedia.org/wiki/Richardson_extrapolation) to\n  cancel out error terms in the taylor series expansion of `f(x)` around the\n  value the series to which the series is trying to converge.\n\n  Each term in the returned sequence cancels one of the error terms through a\n  linear combination of neighboring terms in the sequence.\n\n  ### Custom P Sequence\n\n  The three-arity version takes one more argument:\n\n  - `p-sequence`: the orders of the error terms in the taylor series expansion\n  of the function that `xs` is estimating. For example, if `xs` is generated\n  from some `f(x)` trying to approximate `A`, then `[p_1, p_2...]` etc are the\n  correction terms:\n\n  ```\n  $$f(x) = A + B x^{p_1} + C x^{p_2}...$$\n  ```\n\n  The two-arity version uses a default `p-sequence` of `[1, 2, 3, ...]`\n\n  ### Arithmetic Progression\n\n  The FOUR arity version takes `xs` and `t` as before, but instead of\n  `p-sequence` makes the assumption that `p-sequence` is an arithmetic\n  progression of the form `p + iq`, customized by:\n\n  - `p`: the exponent on the highest-order error term\n  - `q`: the step size on the error term exponent for each new seq element\n\n  ## Notes\n\n  Richardson extrapolation is a special case of polynomial extrapolation,\n  implemented in `polynomial.cljc`.\n\n  Instead of a sequence of `xs`, if you generate an explicit series of points of\n  the form `[x (f x)]` with successively smaller `x` values and\n  polynomial-extrapolate it forward to x == 0 (with,\n  say, `(polynomial/modified-neville xs 0)`) you'll get the exact same result.\n\n  Richardson extrapolation is more efficient since it can make assumptions about\n  the spacing between points and pre-calculate a few quantities. See the\n  namespace for more discussion.\n\n  References:\n\n  - Wikipedia, [\"Richardson Extrapolation\"](https://en.wikipedia.org/wiki/Richardson_extrapolation)\n  - GJS, ['Abstraction in Numerical Methods'](https://dspace.mit.edu/bitstream/handle/1721.1/6060/AIM-997.pdf?sequence=2)",(cljs.core.truth_(sicmutils.polynomial.richardson.richardson_sequence)?sicmutils.polynomial.richardson.richardson_sequence.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("richardson-fold"),new cljs.core.Var(function(){return sicmutils.polynomial.richardson.richardson_fold;},new cljs.core.Symbol("sicmutils.polynomial.richardson","richardson-fold","sicmutils.polynomial.richardson/richardson-fold",1483207649,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.polynomial.richardson","sicmutils.polynomial.richardson",1305547318,null),new cljs.core.Symbol(null,"richardson-fold","richardson-fold",-768238887,null),"sicmutils/polynomial/richardson.cljc",22,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"initial-p","initial-p",159948069,null),new cljs.core.Symbol(null,"next-p-fn","next-p-fn",1114419574,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"initial-p","initial-p",159948069,null),new cljs.core.Symbol(null,"next-p-fn","next-p-fn",1114419574,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,436,436,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"t","t",242699008,null),new cljs.core.Symbol(null,"initial-p","initial-p",159948069,null),new cljs.core.Symbol(null,"next-p-fn","next-p-fn",1114419574,null)], null)),"Returns a fold expected to process the outputs of some function `A` for inputs\n  of the form:\n\n  $$A(h), A(h/t), A(h/t^2) \\ldots$$\n\n  and generate (when present is called) successively tighter estimates of A(0)\n  using the algorithm described in [[richardson-sequence]].\n\n  Takes as a required argument:\n\n  - `t`: the ratio between the successive inputs that generated the\n    data to be processed by this fold (see above)\n\n\n  If `initial-p` and `next-p-fn` are not supplied, it's assumed that the order\n  of the error terms in the taylor series expansion of `A` start at 1 and\n  increase by 1 with each new term.\n\n  You can tune this by supplying:\n\n  - `initial-p`: The order of the first error term\n  - `next-p-fn`: a function that will generate the next term given the previous\n    term\n\n  For the geometrically increasing error series `[2, 4, 6, 8]`, for example,\n  try\n\n  ```clj\n  (richardson-fold <t> 2 #(+ % 2))\n  ```",(cljs.core.truth_(sicmutils.polynomial.richardson.richardson_fold)?sicmutils.polynomial.richardson.richardson_fold.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("brent-min"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.brent.brent_min;},new cljs.core.Symbol("sicmutils.numerical.unimin.brent","brent-min","sicmutils.numerical.unimin.brent/brent-min",-1976828524,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.brent","sicmutils.numerical.unimin.brent",1843521505,null),new cljs.core.Symbol(null,"brent-min","brent-min",477201418,null),"sicmutils/numerical/unimin/brent.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),4,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),4,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),cljs.core.list(new cljs.core.Symbol("g","sqrt","g/sqrt",370479495,null),new cljs.core.Symbol("v","machine-epsilon","v/machine-epsilon",437134230,null)),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),1.0E-11,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null)], null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),cljs.core.list(new cljs.core.Symbol("g","sqrt","g/sqrt",370479495,null),new cljs.core.Symbol("v","machine-epsilon","v/machine-epsilon",437134230,null)),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),1.0E-11,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null)], null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,151,151,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"keys","keys",1068423698),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),new cljs.core.Symbol(null,"maxfun","maxfun",1590229713,null),new cljs.core.Symbol(null,"callback","callback",935395299,null)], null),new cljs.core.Keyword(null,"or","or",235744169),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,"relative-threshold","relative-threshold",-225607443,null),cljs.core.list(new cljs.core.Symbol("g","sqrt","g/sqrt",370479495,null),new cljs.core.Symbol("v","machine-epsilon","v/machine-epsilon",437134230,null)),new cljs.core.Symbol(null,"absolute-threshold","absolute-threshold",-1812236055,null),1.0E-11,new cljs.core.Symbol(null,"maxiter","maxiter",-226692227,null),(1000),new cljs.core.Symbol(null,"callback","callback",935395299,null),cljs.core.list(new cljs.core.Symbol(null,"constantly","constantly",-271143939,null),null)], null)], null)], null)),"Find the minimum of the function f: R -> R in the interval [a,b] using Brent's\n  Method, described by Richard Brent in [Algorithms for Minimization without\n  Derivatives](https://books.google.com/books?id=AITCAgAAQBAJ&q=Brent%E2%80%99s#v=onepage&q=Parabolic&f=false).\n\n  Brent's method is a combination of a golden section search with a parabolic\n  interpolation step. Parabolic interpolation can go wild if the candidate point\n  is close to colinear with the search bounds, or of the points are too close\n  together.\n\n  Brent's method prevents this by applying an internal test that forces a golden\n  section step every so often. (If you want the details, see `parabola-valid?`\n  above.)\n\n  Supports the following optional keyword arguments:\n\n  `:callback` if supplied, the supplied fn will be invoked at each intermediate\n  point with the iteration count and the values of x and f(x) at each search\n  step.\n\n  `:relative-threshold` defaults to around 1.49e8, the sqrt of the machine\n  tolerance. You won't gain any benefit attempting to set the value less than\n  the default.\n\n  `:absolute-threshold` a smaller absolute threshold that applies when the\n  candidate minimum point is close to 0.\n\n  `:maxiter` Maximum number of iterations allowed for the minimizer. Defaults to\n  1000.\n\n  `:maxfun` Maximum number of times the function can be evaluated before\n  exiting. Defaults to `(inc maxiter)`.\n  ",(cljs.core.truth_(sicmutils.numerical.unimin.brent.brent_min)?sicmutils.numerical.unimin.brent.brent_min.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("brent-max"),new cljs.core.Var(function(){return sicmutils.numerical.unimin.brent.brent_max;},new cljs.core.Symbol("sicmutils.numerical.unimin.brent","brent-max","sicmutils.numerical.unimin.brent/brent-max",1234062178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.numerical.unimin.brent","sicmutils.numerical.unimin.brent",1843521505,null),new cljs.core.Symbol(null,"brent-max","brent-max",-942668348,null),"sicmutils/numerical/unimin/brent.cljc",16,1,271,271,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"opts","opts",1795607228,null)], null)),"For convenience, we also provide the sister-procedure for finding the maximum\n  of a unimodal function using Brent's method.\n\n  Negate the function, minimize, negate the result.",(cljs.core.truth_(sicmutils.numerical.unimin.brent.brent_max)?sicmutils.numerical.unimin.brent.brent_max.cljs$lang$test:null)]))], null)], null)),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.fromArray([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("replace-tag"),new cljs.core.Var(function(){return sicmutils.differential.replace_tag;},new cljs.core.Symbol("sicmutils.differential","replace-tag","sicmutils.differential/replace-tag",-513239400,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"replace-tag","replace-tag",1531237472,null),"sicmutils/differential.cljc",15,1,332,338,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"old-tag","old-tag",-1527675795,null),new cljs.core.Symbol(null,"new-tag","new-tag",-624938805,null)], null)),"If `this` is perturbed, Returns a similar object with the perturbation\n    modified by replacing any appearance of `old-tag` with `new-tag`. Else,\n    return `this`.",(cljs.core.truth_(sicmutils.differential.replace_tag)?sicmutils.differential.replace_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tag-active?"),new cljs.core.Var(function(){return sicmutils.differential.tag_active_QMARK_;},new cljs.core.Symbol("sicmutils.differential","tag-active?","sicmutils.differential/tag-active?",40827753,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"tag-active?","tag-active?",-1542800383,null),"sicmutils/differential.cljc",18,1,774,774,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"Returns true if `tag` is an element of [[*active-tags*]] (and therefore pending\n  for extraction by some nested derivative), false otherwise.",(cljs.core.truth_(sicmutils.differential.tag_active_QMARK_)?sicmutils.differential.tag_active_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("with-active-tag"),new cljs.core.Var(function(){return sicmutils.differential.with_active_tag;},new cljs.core.Symbol("sicmutils.differential","with-active-tag","sicmutils.differential/with-active-tag",659568105,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"with-active-tag","with-active-tag",-1658062207,null),"sicmutils/differential.cljc",22,1,765,765,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"args","args",-1338879193,null)], null)),"Like `apply`, but conj-es `tag` onto the dynamic variable [[*active-tags*]]\n  inside the scope of `f`.\n\n  Returns the result of applying `f` to `args`.",(cljs.core.truth_(sicmutils.differential.with_active_tag)?sicmutils.differential.with_active_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("Differential"),new cljs.core.Var(function(){return sicmutils.differential.Differential;},new cljs.core.Symbol("sicmutils.differential","Differential","sicmutils.differential/Differential",-1129567957,null),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Keyword(null,"doc","doc",1913296891),null,new cljs.core.Keyword(null,"file","file",-1269645878),"sicmutils/differential.cljc",new cljs.core.Keyword(null,"line","line",212345235),564,new cljs.core.Keyword(null,"column","column",2078222095),10,new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"Differential","Differential",1531570371,null),new cljs.core.Keyword(null,"test","test",577538877),(cljs.core.truth_(sicmutils.differential.Differential)?sicmutils.differential.Differential.cljs$lang$test:null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.List.EMPTY], null))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("perturbed?"),new cljs.core.Var(function(){return sicmutils.differential.perturbed_QMARK_;},new cljs.core.Symbol("sicmutils.differential","perturbed?","sicmutils.differential/perturbed?",-2075913252,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"perturbed?","perturbed?",597807780,null),"sicmutils/differential.cljc",14,1,332,333,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),"Returns true if the supplied object has some known non-zero tangent to be\n    extracted via [[extract-tangent]], false otherwise. (Return `false` by\n    default if you can't detect a perturbation.)",(cljs.core.truth_(sicmutils.differential.perturbed_QMARK_)?sicmutils.differential.perturbed_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("max-order-tag"),new cljs.core.Var(function(){return sicmutils.differential.max_order_tag;},new cljs.core.Symbol("sicmutils.differential","max-order-tag","sicmutils.differential/max-order-tag",1473427821,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"max-order-tag","max-order-tag",-33622459,null),"sicmutils/differential.cljc",20,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(1),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(1),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"dxs","dxs",-374683702,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,863,863,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"dxs","dxs",-374683702,null)], null)),"Given one or more well-formed [[Differential]] objects, returns the\n  maximum ('highest order') tag found in the highest-order term of any of\n  the [[Differential]] instances.\n\n  If there is NO maximal tag (ie, if you provide [[Differential]] instances with\n  no non-zero tangent parts, or all non-[[Differential]]s), returns nil.",(cljs.core.truth_(sicmutils.differential.max_order_tag)?sicmutils.differential.max_order_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lift-n"),new cljs.core.Var(function(){return sicmutils.differential.lift_n;},new cljs.core.Symbol("sicmutils.differential","lift-n","sicmutils.differential/lift-n",1551300366,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"lift-n","lift-n",-1235569114,null),"sicmutils/differential.cljc",13,1,1163,1163,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null),new cljs.core.Symbol(null,"df:dx1","df:dx1",-1700187738,null),new cljs.core.Symbol(null,"df:dx2","df:dx2",-1747867685,null)], null)),"Given:\n\n  - some function `f` that can handle 0, 1 or 2 arguments\n  - `df:dx`, a fn that returns the derivative wrt the single arg in the unary case\n  - `df:dx1` and `df:dx2`, fns that return the derivative with respect to the\n    first and second args in the binary case\n\n  Returns a new any-arity function that operates on both the original type of\n  `f` and [[Differential]] instances.\n\n  NOTE: The n-ary case of `f` is populated by nested calls to the binary case.\n  That means that this is NOT an appropriate lifting method for an n-ary\n  function that isn't built out of associative binary calls. If you need this\n  ability, please file an issue at the [sicmutils issue\n  tracker](https://github.com/sicmutils/sicmutils/issues).",(cljs.core.truth_(sicmutils.differential.lift_n)?sicmutils.differential.lift_n.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("fresh-tag"),new cljs.core.Var(function(){return sicmutils.differential.fresh_tag;},new cljs.core.Symbol("sicmutils.differential","fresh-tag","sicmutils.differential/fresh-tag",-1026768178,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"fresh-tag","fresh-tag",622887910,null),"sicmutils/differential.cljc",18,3,410,410,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Returns a new, unique tag for use inside of a [[Differential]] term list.",(cljs.core.truth_(sicmutils.differential.fresh_tag)?sicmutils.differential.fresh_tag.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compare-full"),new cljs.core.Var(function(){return sicmutils.differential.compare_full;},new cljs.core.Symbol("sicmutils.differential","compare-full","sicmutils.differential/compare-full",-676344000,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"compare-full","compare-full",-1384935832,null),"sicmutils/differential.cljc",19,1,1034,1034,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Comparator that compares [[Differential]] instances with each other or\n  non-differentials using all tangent terms each instance. Matches the response\n  of [[eq]].\n\n  Acts as [[clojure.core/compare]] for non-differentials.",(cljs.core.truth_(sicmutils.differential.compare_full)?sicmutils.differential.compare_full.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lift-2"),new cljs.core.Var(function(){return sicmutils.differential.lift_2;},new cljs.core.Symbol("sicmutils.differential","lift-2","sicmutils.differential/lift-2",-522485903,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"lift-2","lift-2",238075049,null),"sicmutils/differential.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null),new cljs.core.Symbol(null,"df:dy","df:dy",301569441,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null),new cljs.core.Symbol(null,"df:dy","df:dy",301569441,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1126,1126,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null),new cljs.core.Symbol(null,"df:dy","df:dy",301569441,null)], null)),"Given:\n\n  - some binary function `f`\n  - a function `df:dx` that computes the derivative of `f` with respect to its\n    single argument\n  - a function `df:dy`, similar to `df:dx` for the second arg\n\n  Returns a new binary function that operates on both the original type of `f`\n  and [[Differential]] instances.\n\n  NOTE: `df:dx` and `df:dy` have to ALREADY be able to handle [[Differential]]\n  instances. The best way to accomplish this is by building `df:dx` and `df:dy`\n  out of already-lifted functions, and declaring them by forward reference if\n  you need to.",(cljs.core.truth_(sicmutils.differential.lift_2)?sicmutils.differential.lift_2.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("d:+"),new cljs.core.Var(function(){return sicmutils.differential.d_COLON__PLUS_;},new cljs.core.Symbol("sicmutils.differential","d:+","sicmutils.differential/d:+",-1310821852,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"d:+","d:+",195182028,null),"sicmutils/differential.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null,null)], null),1,787,787,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Returns an object representing the sum of the two objects `dx` and `dy`. This\n  works by summing the coefficients of all terms with the same list of tags.\n\n    Works with non-[[Differential]] instances on either or both sides, and returns\n  a [[Differential]] only if it contains any non-zero tangent components.",(cljs.core.truth_(sicmutils.differential.d_COLON__PLUS_)?sicmutils.differential.d_COLON__PLUS_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("eq"),new cljs.core.Var(function(){return sicmutils.differential.eq;},new cljs.core.Symbol("sicmutils.differential","eq","sicmutils.differential/eq",-1766450716,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"eq","eq",1021992460,null),"sicmutils/differential.cljc",9,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1018,1018,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"For non-differentials, this is identical to [[clojure.core/=]].\n  For [[Differential]] instances, equality acts on tangent components too.\n\n  If you want to ignore the tangent components, use [[equiv]].",(cljs.core.truth_(sicmutils.differential.eq)?sicmutils.differential.eq.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("d:*"),new cljs.core.Var(function(){return sicmutils.differential.d_COLON__STAR_;},new cljs.core.Symbol("sicmutils.differential","d:*","sicmutils.differential/d:*",490545956,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"d:*","d:*",-418979252,null),"sicmutils/differential.cljc",10,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,805,805,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"dy","dy",-934888526,null)], null)),"Returns an object representing the product of the two objects `dx` and `dy`.\n\n  This works by multiplying out all terms:\n\n  $$(dx1 + dx2 + dx3 + ...)(dy1 + dy2 + dy3...)$$\n\n  and then collecting any duplicate terms by summing their coefficients.\n\n  Works with non-[[Differential]] instances on either or both sides, and returns\n  a [[Differential]] only if it contains any non-zero tangent components.",(cljs.core.truth_(sicmutils.differential.d_COLON__STAR_)?sicmutils.differential.d_COLON__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("primal-tangent-pair"),new cljs.core.Var(function(){return sicmutils.differential.primal_tangent_pair;},new cljs.core.Symbol("sicmutils.differential","primal-tangent-pair","sicmutils.differential/primal-tangent-pair",259298969,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"primal-tangent-pair","primal-tangent-pair",-514796111,null),"sicmutils/differential.cljc",26,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,936,936,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"Returns a pair of the primal and tangent components of the supplied `dx`, with\n  respect to the supplied `tag`. See the docs for [[primal-part]]\n  and [[tangent-part]] for more details.\n\n  [[primal-tangent-pair]] is equivalent to\n\n  `[([[primal-part]] dx tag) ([[tangent-part]] dx tag)]`\n\n  but slightly more efficient if you need both.",(cljs.core.truth_(sicmutils.differential.primal_tangent_pair)?sicmutils.differential.primal_tangent_pair.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("IPerturbed"),new cljs.core.Var(function(){return sicmutils.differential.IPerturbed;},new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol-symbol","protocol-symbol",1279552198),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"protocol-info","protocol-info",1471745843),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"sigs","sigs",-1653119622),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"jsdoc","jsdoc",1745183516),new cljs.core.Keyword(null,"test","test",577538877)],[true,new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"IPerturbed","IPerturbed",-1705959821,null),"sicmutils/differential.cljc",24,1,332,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"methods","methods",453930866),new cljs.core.PersistentArrayMap(null, 3, [cljs.core.with_meta(new cljs.core.Symbol(null,"perturbed?","perturbed?",597807780,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied object has some known non-zero tangent to be\n    extracted via [[extract-tangent]], false otherwise. (Return `false` by\n    default if you can't detect a perturbation.)"], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"replace-tag","replace-tag",1531237472,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"If `this` is perturbed, Returns a similar object with the perturbation\n    modified by replacing any appearance of `old-tag` with `new-tag`. Else,\n    return `this`."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"old-tag","old-tag",-1527675795,null),new cljs.core.Symbol(null,"new-tag","new-tag",-624938805,null)], null)], null),cljs.core.with_meta(new cljs.core.Symbol(null,"extract-tangent","extract-tangent",-1785612646,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"doc","doc",1913296891),"If `this` is perturbed, return the tangent component paired with the\n    supplied tag. Else, returns `([[sicmutils.value/zero-like]] this)`."], null)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)], null)], null)], null),332,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"perturbed?","perturbed?",-1042723747),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"perturbed?","perturbed?",597807780,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"Returns true if the supplied object has some known non-zero tangent to be\n    extracted via [[extract-tangent]], false otherwise. (Return `false` by\n    default if you can't detect a perturbation.)"], null),new cljs.core.Keyword(null,"replace-tag","replace-tag",-109294055),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"replace-tag","replace-tag",1531237472,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"old-tag","old-tag",-1527675795,null),new cljs.core.Symbol(null,"new-tag","new-tag",-624938805,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"If `this` is perturbed, Returns a similar object with the perturbation\n    modified by replacing any appearance of `old-tag` with `new-tag`. Else,\n    return `this`."], null),new cljs.core.Keyword(null,"extract-tangent","extract-tangent",868823123),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Symbol(null,"extract-tangent","extract-tangent",-1785612646,null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),new cljs.core.Keyword(null,"doc","doc",1913296891),"If `this` is perturbed, return the tangent component paired with the\n    supplied tag. Else, returns `([[sicmutils.value/zero-like]] this)`."], null)], null),cljs.core.List.EMPTY,null,cljs.core.list("@interface"),(cljs.core.truth_(sicmutils.differential.IPerturbed)?sicmutils.differential.IPerturbed.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("->Differential"),new cljs.core.Var(function(){return sicmutils.differential.__GT_Differential;},new cljs.core.Symbol("sicmutils.differential","->Differential","sicmutils.differential/->Differential",-412391876,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocols","protocols",-5615896),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"factory","factory",63933746),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"skip-protocol-flag","skip-protocol-flag",-1426798630),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","Object","cljs.core/Object",-345545431,null),"null",new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),"null",new cljs.core.Symbol("sicmutils.value","Value","sicmutils.value/Value",2035196050,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IComparable","cljs.core/IComparable",1166626940,null),"null",new cljs.core.Symbol("sicmutils.value","Numerical","sicmutils.value/Numerical",345532223,null),"null"], null), null),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"->Differential","->Differential",1494164756,null),"sicmutils/differential.cljc",22,1,new cljs.core.Keyword(null,"positional","positional",-203580463),564,564,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"terms","terms",83553549,null)], null)),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol("cljs.core","IEquiv","cljs.core/IEquiv",-1245752602,null),"null",new cljs.core.Symbol("cljs.core","IPrintWithWriter","cljs.core/IPrintWithWriter",1349251417,null),"null",new cljs.core.Symbol("cljs.core","IComparable","cljs.core/IComparable",1166626940,null),"null"], null), null),"Positional factory function for sicmutils.differential/Differential.",(cljs.core.truth_(sicmutils.differential.__GT_Differential)?sicmutils.differential.__GT_Differential.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("d:+*"),new cljs.core.Var(function(){return sicmutils.differential.d_COLON__PLUS__STAR_;},new cljs.core.Symbol("sicmutils.differential","d:+*","sicmutils.differential/d:+*",-1979670036,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"d:+*","d:+*",337961780,null),"sicmutils/differential.cljc",11,1,823,823,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"c","c",-122660552,null)], null)),"Identical to `(d:+ a) (d:* b c)`, but _slightly_ more efficient as the function\n  is able to skip creating a [[Differential]] instance during [[d:*]] and then\n  immediately tearing it down for [[d:+]].",(cljs.core.truth_(sicmutils.differential.d_COLON__PLUS__STAR_)?sicmutils.differential.d_COLON__PLUS__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("map-coefficients"),new cljs.core.Var(function(){return sicmutils.differential.map_coefficients;},new cljs.core.Symbol("sicmutils.differential","map-coefficients","sicmutils.differential/map-coefficients",-987762066,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"map-coefficients","map-coefficients",1799565654,null),"sicmutils/differential.cljc",23,1,739,739,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"d","d",-682293345,null)], null)),"Given a function `f` and [[Differential]] instance `d`, returns a\n  new [[Differential]] generated by transforming all coefficients `c` of `d`\n  to `(f c)`.\n\n  Any term in the returned instance with a `v/zero?` coefficient\n  will be filtered out.",(cljs.core.truth_(sicmutils.differential.map_coefficients)?sicmutils.differential.map_coefficients.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("make-term"),new cljs.core.Var(function(){return sicmutils.differential.make_term;},new cljs.core.Symbol("sicmutils.differential","make-term","sicmutils.differential/make-term",-2093166834,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"make-term","make-term",-371159306,null),"sicmutils/differential.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tags","tags",-883016792,null),new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tags","tags",-883016792,null),new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,398,398,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tags","tags",-883016792,null),new cljs.core.Symbol(null,"coef","coef",-1698285140,null)], null)),"Returns a [[Differential]] term with the supplied vector-set of `tags` paired\n  with coefficient `coef`.\n\n  `tags` defaults to [[uv/empty-set]]",(cljs.core.truth_(sicmutils.differential.make_term)?sicmutils.differential.make_term.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("one?"),new cljs.core.Var(function(){return sicmutils.differential.one_QMARK_;},new cljs.core.Symbol("sicmutils.differential","one?","sicmutils.differential/one?",-731297841,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"one?","one?",1787102903,null),"sicmutils/differential.cljc",11,1,1004,1004,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null)),"Returns true if the supplied instance has a [[finite-part]] that responds true\n  to [[sicmutils.value/one?]], and zero coefficients on any of its tangent\n  components; false otherwise.\n\n  NOTE: This means that [[one?]] will not do what you expect as a conditional\n  inside some function. If you want to branch inside some function you're taking\n  the derivative of, prefer `(= 1 dx)`. This will only look at\n  the [[finite-part]] and ignore the values of the tangent parts.",(cljs.core.truth_(sicmutils.differential.one_QMARK_)?sicmutils.differential.one_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("tangent-part"),new cljs.core.Var(function(){return sicmutils.differential.tangent_part;},new cljs.core.Symbol("sicmutils.differential","tangent-part","sicmutils.differential/tangent-part",-1960539457,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"tangent-part","tangent-part",762858391,null),"sicmutils/differential.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,911,911,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"Returns a [[Differential]] containing only the terms of `dx` that contain the\n  supplied `tag`, ie, the tangent component of `dx` with respect to `tag`.\n\n  If no tag is supplied, defaults to `([[max-order-tag]] dx)`.\n\n  NOTE: Every [[Differential]] can be factored into a dual number of the form\n\n      primal + (tangent * tag)\n\n  For each tag in any of its terms. [[tangent-part]] returns a [[Differential]]\n  representing `(tangent * tag)`, or 0 if `dx` contains no terms with the\n  supplied `tag`.\n\n  NOTE: the 2-arity case is similar to `([[extract-tangent]] dx tag)`; the only\n  difference is that [[extract-tangent]] drops the `dx` tag from all terms in\n  the returned value. Call [[extract-tangent]] if you want to drop `tag`.",(cljs.core.truth_(sicmutils.differential.tangent_part)?sicmutils.differential.tangent_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("differential?"),new cljs.core.Var(function(){return sicmutils.differential.differential_QMARK_;},new cljs.core.Symbol("sicmutils.differential","differential?","sicmutils.differential/differential?",-1569586560,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"differential?","differential?",945143928,null),"sicmutils/differential.cljc",20,1,674,674,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null)),"Returns true if the supplied object is an instance of [[Differential]], false\n  otherwise.",(cljs.core.truth_(sicmutils.differential.differential_QMARK_)?sicmutils.differential.differential_QMARK_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("primal-part"),new cljs.core.Var(function(){return sicmutils.differential.primal_part;},new cljs.core.Symbol("sicmutils.differential","primal-part","sicmutils.differential/primal-part",-243650944,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"primal-part","primal-part",1532907640,null),"sicmutils/differential.cljc",18,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,888,888,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"Returns a [[Differential]] containing only the terms of `dx` that do NOT\n  contain the supplied `tag`, ie, the primal component of `dx` with respect to\n  `tag`.\n\n  If no tag is supplied, defaults to `([[max-order-tag]] dx)`.\n\n  NOTE: every [[Differential]] can be factored into a dual number of the form\n\n      primal + (tangent * tag)\n\n  For each tag in any of its terms. [[primal-part]] returns this first piece,\n  potentially simplified into a non-[[Differential]] if the primal part contains\n  no other tags.",(cljs.core.truth_(sicmutils.differential.primal_part)?sicmutils.differential.primal_part.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("lift-1"),new cljs.core.Var(function(){return sicmutils.differential.lift_1;},new cljs.core.Symbol("sicmutils.differential","lift-1","sicmutils.differential/lift-1",91659648,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"lift-1","lift-1",-279755912,null),"sicmutils/differential.cljc",13,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),2,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),2,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null)], null),1,1096,1096,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null),new cljs.core.Symbol(null,"df:dx","df:dx",-1886792100,null)], null)),"Given:\n\n  - some unary function `f`\n  - a function `df:dx` that computes the derivative of `f` with respect to its\n    single argument\n\n  Returns a new unary function that operates on both the original type of `f`\n  and [[Differential]] instances.\n\n  If called without `df:dx`, `df:dx` defaults to `(f :dfdx)`; this will return\n  the derivative registered to a generic function defined with [[g/defgeneric]].\n\n  NOTE: `df:dx` has to ALREADY be able to handle [[Differential]] instances. The\n  best way to accomplish this is by building `df:dx` out of already-lifted\n  functions, and declaring them by forward reference if you need to.",(cljs.core.truth_(sicmutils.differential.lift_1)?sicmutils.differential.lift_1.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("finite-term"),new cljs.core.Var(function(){return sicmutils.differential.finite_term;},new cljs.core.Symbol("sicmutils.differential","finite-term","sicmutils.differential/finite-term",-1765858719,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"finite-term","finite-term",-326834855,null),"sicmutils/differential.cljc",18,1,956,956,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"dx","dx",1258734795,null)], null)),"Returns the term of the supplied [[Differential]] `dx` that has no tags\n  attached to it, `0` otherwise.\n\n  [[Differential]] instances with many can be decomposed many times\n  into [[primal-part]] and [[tangent-part]]. Repeated calls\n  to [[primal-part]] (with different tags!) will eventually yield a\n  non-[[Differential]] value. If you know you want this, [[finite-term]] will\n  get you there in one shot.\n\n  NOTE that this will only work with a well-formed [[Differential]], ie, an\n  instance with all terms sorted by their list of tags.",(cljs.core.truth_(sicmutils.differential.finite_term)?sicmutils.differential.finite_term.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("from-terms"),new cljs.core.Var(function(){return sicmutils.differential.from_terms;},new cljs.core.Symbol("sicmutils.differential","from-terms","sicmutils.differential/from-terms",-1484054815,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"from-terms","from-terms",225435097,null),"sicmutils/differential.cljc",17,1,725,725,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"tags->coefs","tags->coefs",-1560746525,null)], null)),"Accepts a sequence of terms (ie, pairs of `[tag-list, coefficient]`), and\n  returns:\n\n  - a well-formed [[Differential]] instance, if the terms resolve to a\n    differential with non-zero infinitesimal terms\n  - the original input otherwise\n\n  Duplicate (by tag list) terms are allowed; their coefficients will be summed\n  together and removed if they sum to zero.",(cljs.core.truth_(sicmutils.differential.from_terms)?sicmutils.differential.from_terms.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("bundle-element"),new cljs.core.Var(function(){return sicmutils.differential.bundle_element;},new cljs.core.Symbol("sicmutils.differential","bundle-element","sicmutils.differential/bundle-element",863495330,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"bundle-element","bundle-element",-1923897958,null),"sicmutils/differential.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),false,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),3,new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),3,new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tangent","tangent",-1933519948,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tangent","tangent",-1933519948,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,838,838,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"primal","primal",-27740015,null),new cljs.core.Symbol(null,"tangent","tangent",-1933519948,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"Generate a new [[Differential]] object with the supplied `primal` and `tangent`\n  components, and the supplied internal `tag` that this [[Differential]] will\n  carry around to prevent perturbation confusion.\n\n  If the `tangent` component is `0`, acts as identity on `primal`. `tangent`\n  defaults to 1.\n\n  `tag` defaults to a side-effecting call to [[fresh-tag]]; you can retrieve\n  this unknown tag by calling [[max-order-tag]].",(cljs.core.truth_(sicmutils.differential.bundle_element)?sicmutils.differential.bundle_element.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("extract-tangent"),new cljs.core.Var(function(){return sicmutils.differential.extract_tangent;},new cljs.core.Symbol("sicmutils.differential","extract-tangent","sicmutils.differential/extract-tangent",-202017374,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"protocol","protocol",652470118),new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol("sicmutils.differential","IPerturbed","sicmutils.differential/IPerturbed",1685937963,null),new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"extract-tangent","extract-tangent",-1785612646,null),"sicmutils/differential.cljc",19,1,332,343,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"this","this",1028897902,null),new cljs.core.Symbol(null,"tag","tag",350170304,null)], null)),"If `this` is perturbed, return the tangent component paired with the\n    supplied tag. Else, returns `([[sicmutils.value/zero-like]] this)`.",(cljs.core.truth_(sicmutils.differential.extract_tangent)?sicmutils.differential.extract_tangent.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("terms:*"),new cljs.core.Var(function(){return sicmutils.differential.terms_COLON__STAR_;},new cljs.core.Symbol("sicmutils.differential","terms:*","sicmutils.differential/terms:*",781518338,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"terms:*","terms:*",-2006333446,null),"sicmutils/differential.cljc",14,1,532,532,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"xlist","xlist",982469324,null),new cljs.core.Symbol(null,"ylist","ylist",-1909501200,null)], null)),"Returns a vector of non-zero [[Differential]] terms that represent the product\n  of the differential term lists `xs` and `ys`.\n\n  NOTE that this function doesn't need to call [[collect-terms]] internally\n  because grouping is accomplished by the internal [[terms:+]] calls.",(cljs.core.truth_(sicmutils.differential.terms_COLON__STAR_)?sicmutils.differential.terms_COLON__STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("equiv"),new cljs.core.Var(function(){return sicmutils.differential.equiv;},new cljs.core.Symbol("sicmutils.differential","equiv","sicmutils.differential/equiv",-988960189,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"top-fn","top-fn",-2056129173),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"equiv","equiv",992570171,null),"sicmutils/differential.cljc",12,new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"variadic?","variadic?",584179762),true,new cljs.core.Keyword(null,"fixed-arity","fixed-arity",1586445869),(2),new cljs.core.Keyword(null,"max-fixed-arity","max-fixed-arity",-690205543),(2),new cljs.core.Keyword(null,"method-params","method-params",-980792179),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)], null),new cljs.core.Keyword(null,"arglists","arglists",1661989754),cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),new cljs.core.Keyword(null,"arglists-meta","arglists-meta",1944829838),cljs.core.list(null,null,null)], null),1,1045,1045,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"_","_",-1201019570,null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null),new cljs.core.Symbol(null,"&","&",-2144855648,null),new cljs.core.Symbol(null,"more","more",-418290273,null)], null)),"Returns true if all of the supplied objects have equal [[finite-part]]s, false\n  otherwise.\n\n  Use [[equiv]] if you want to compare non-differentials with\n  [[Differential]]s and ignore all tangent components. If you _do_ want to take\n  the tangent components into account, prefer [[eq]].",(cljs.core.truth_(sicmutils.differential.equiv)?sicmutils.differential.equiv.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("*active-tags*"),new cljs.core.Var(function(){return sicmutils.differential._STAR_active_tags_STAR_;},new cljs.core.Symbol("sicmutils.differential","*active-tags*","sicmutils.differential/*active-tags*",191934691,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"dynamic","dynamic",704819571),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"*active-tags*","*active-tags*",-1386974245,null),"sicmutils/differential.cljc",29,1,true,763,763,cljs.core.List.EMPTY,null,(cljs.core.truth_(sicmutils.differential._STAR_active_tags_STAR_)?sicmutils.differential._STAR_active_tags_STAR_.cljs$lang$test:null)]))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1("compare"),new cljs.core.Var(function(){return sicmutils.differential.compare;},new cljs.core.Symbol("sicmutils.differential","compare","sicmutils.differential/compare",617334037,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"sicmutils.differential","sicmutils.differential",-387561022,null),new cljs.core.Symbol(null,"compare","compare",1109853757,null),"sicmutils/differential.cljc",14,1,1063,1063,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"a","a",-482876059,null),new cljs.core.Symbol(null,"b","b",-1172211299,null)], null)),"Comparator that compares [[Differential]] instances with each other or\n  non-differentials using only the [[finite-part]] of each instance. Matches the\n  response of [[equiv]].\n\n  Acts as [[clojure.core/compare]] for non-differentials.",(cljs.core.truth_(sicmutils.differential.compare)?sicmutils.differential.compare.cljs$lang$test:null)]))], null)], true))]);
/**
 * SCI namespace map generated from `ns->publics`. Consumers wishing
 *  to use a more minmal SCI environment, should can select interested namespaces
 *  from this map. Since in normal (not self-hosted) ClojureScript `ns-publics`
 *  does not include macros, they are added explicitly.
 */
sicmutils.env.sci.namespaces = (function (){var ns_map = sicmutils.util.map_vals(sicmutils.env.sci.sci_ns,sicmutils.env.sci.ns__GT_publics);
return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_map,sicmutils.env.sci.macros.ns_bindings], 0));
})();
/**
 * Default sci context options required (currently only `:namespace`
 *   bindings) required to evaluate SICMUtils forms from inside of an SCI
 *   context. Pass these to `sci/init` to generate an sci context.
 */
sicmutils.env.sci.context_opts = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"namespaces","namespaces",-1444157469),sicmutils.env.sci.namespaces,new cljs.core.Keyword(null,"classes","classes",2037804510),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,"js","js",-886355190,null),goog.global,new cljs.core.Keyword(null,"allow","allow",-1857325745),new cljs.core.Keyword(null,"all","all",892129742)], null)], null);
/**
 * sci context (currently only `:namespace` bindings) required to
 *   evaluate SICMUtils forms via SCI
 */
sicmutils.env.sci.context = sci.core.init(sicmutils.env.sci.context_opts);

//# sourceMappingURL=sicmutils.env.sci.js.map
