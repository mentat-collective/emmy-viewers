{
"version":3,
"file":"module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$edge_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,MAAQN,OAAA,CAAQ,qDAAR,CAEZ,OAAMO,WAAa,CACfC,MAAO,CADQ,CAEfC,OAAQ,EAFO,CAGfC,IAAK,CAHU,CA4CnBR,QAAQK,CAAAA,UAAR,CAAqBA,UACrBL,QAAQS,CAAAA,WAAR,CAxCAA,QAAoB,CAACC,IAAD,CAAOC,MAAP,CAAeC,KAAA,CAAQ,CAAvB,CAA0B,CAC1C,IAAIC,MAAQ,CAKaC,KAAAA,EAAzB,GAAIT,UAAA,CAAWK,IAAX,CAAJ,GACIA,IADJ,CACWL,UAAA,CAAWK,IAAX,CADX,CAMA,IAAIN,KAAMW,CAAAA,QAAN,CAAeL,IAAf,CAAJ,CAA0B,CACtB,MAAMM,SAAWC,UAAA,CAAWP,IAAX,CACbA,KAAKQ,CAAAA,QAAL,CAAc,IAAd,CAAJ;AACIL,KADJ,CACYG,QADZ,CAGSN,IAAKQ,CAAAA,QAAL,CAAc,GAAd,CAAJ,CACDR,IADC,CACMM,QADN,CACiB,GADjB,CAGIN,IAAKQ,CAAAA,QAAL,CAAc,IAAd,CAAJ,CACDL,KADC,CACQG,QADR,CACmB,GADnB,CAC0BG,QAASC,CAAAA,eAAgBC,CAAAA,WADnD,CAGIX,IAAKQ,CAAAA,QAAL,CAAc,IAAd,CAAJ,CACDL,KADC,CACQG,QADR,CACmB,GADnB,CAC0BG,QAASC,CAAAA,eAAgBE,CAAAA,YADnD,CAIDZ,IAJC,CAIMM,QAfW,CAqBtBZ,KAAMmB,CAAAA,QAAN,CAAeb,IAAf,CAAJ,GACIG,KADJ,CACYF,MADZ,CACqBD,IADrB,CAGA,OAAOE,MAAP,CAAeC,KApC2B,CAZuF;",
"sources":["node_modules/@motionone/dom/dist/gestures/scroll/offsets/edge.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$edge_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\n\nconst namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (namedEdges[edge] !== undefined) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (utils.isString(edge)) {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (utils.isNumber(edge)) {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexports.namedEdges = namedEdges;\nexports.resolveEdge = resolveEdge;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","namedEdges","start","center","end","resolveEdge","edge","length","inset","delta","undefined","isString","asNumber","parseFloat","endsWith","document","documentElement","clientWidth","clientHeight","isNumber"]
}
