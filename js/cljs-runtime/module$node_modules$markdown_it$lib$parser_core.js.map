{
"version":3,
"file":"module$node_modules$markdown_it$lib$parser_core.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0B5GC,QAASA,KAAI,EAAG,CAMd,IAAKC,CAAAA,KAAL,CAAa,IAAIC,KAEjB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,MAAOC,CAAAA,MAA3B,CAAmCF,CAAA,EAAnC,CACE,IAAKF,CAAAA,KAAMK,CAAAA,IAAX,CAAgBF,MAAA,CAAOD,CAAP,CAAA,CAAU,CAAV,CAAhB,CAA8BC,MAAA,CAAOD,CAAP,CAAA,CAAU,CAAV,CAA9B,CATY,CAhBhB,IAAID,MAASL,OAAA,CAAQ,2CAAR,CAAb,CAGIO,OAAS,CACX,CAAE,WAAF,CAAoBP,OAAA,CAAQ,0DAAR,CAApB,CADW,CAEX,CAAE,OAAF,CAAoBA,OAAA,CAAQ,sDAAR,CAApB,CAFW,CAGX,CAAE,QAAF,CAAoBA,OAAA,CAAQ,uDAAR,CAApB,CAHW;AAIX,CAAE,SAAF,CAAoBA,OAAA,CAAQ,wDAAR,CAApB,CAJW,CAKX,CAAE,cAAF,CAAoBA,OAAA,CAAQ,6DAAR,CAApB,CALW,CAMX,CAAE,aAAF,CAAoBA,OAAA,CAAQ,4DAAR,CAApB,CANW,CAgCbG,KAAKO,CAAAA,SAAUC,CAAAA,OAAf,CAAyBC,QAAS,CAACC,KAAD,CAAQ,CAAA,IACjCC,CAEP,KAAAC,MAAQ,IAAKX,CAAAA,KAAMY,CAAAA,QAAX,CAAoB,EAApB,CAEH,KAAAV,EAAI,CAAT,KAAYQ,CAAZ,CAAgBC,KAAMP,CAAAA,MAAtB,CAA8BF,CAA9B,CAAkCQ,CAAlC,CAAqCR,CAAA,EAArC,CACES,KAAA,CAAMT,CAAN,CAAA,CAASO,KAAT,CANsC,CAU1CV,KAAKO,CAAAA,SAAUO,CAAAA,KAAf,CAAuBjB,OAAA,CAAQ,2DAAR,CAGvBC,OAAOC,CAAAA,OAAP,CAAiBC,IA1D2F;",
"sources":["node_modules/markdown-it/lib/parser_core.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$parser_core\"] = function(global,require,module,exports) {\n/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Core","ruler","Ruler","i","_rules","length","push","prototype","process","Core.prototype.process","state","l","rules","getRules","State"]
}
