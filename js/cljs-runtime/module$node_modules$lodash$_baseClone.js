shadow$provide.module$node_modules$lodash$_baseClone=function(global,require,module,exports){function baseClone(value,bitmask,customizer,key$jscomp$0,object,stack){var result,isDeep=bitmask&1,isFlat=bitmask&2,isFull=bitmask&4;customizer&&(result=object?customizer(value,key$jscomp$0,object,stack):customizer(value));if(void 0!==result)return result;if(!isObject(value))return value;if(key$jscomp$0=isArray(value)){if(result=initCloneArray(value),!isDeep)return copyArray(value,result)}else{var tag=getTag(value),
isFunc="[object Function]"==tag||"[object GeneratorFunction]"==tag;if(isBuffer(value))return cloneBuffer(value,isDeep);if("[object Object]"==tag||"[object Arguments]"==tag||isFunc&&!object){if(result=isFlat||isFunc?{}:initCloneObject(value),!isDeep)return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value))}else{if(!cloneableTags[tag])return object?value:{};result=initCloneByTag(value,tag,isDeep)}}stack||(stack=new Stack);if(object=stack.get(value))return object;
stack.set(value,result);isSet(value)?value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack))}):isMap(value)&&value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack))});isFlat=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=key$jscomp$0?void 0:isFlat(value);arrayEach(props||value,function(subValue,key){props&&(key=subValue,subValue=value[key]);assignValue(result,key,baseClone(subValue,
bitmask,customizer,key,value,stack))});return result}var Stack=require("module$node_modules$lodash$_Stack"),arrayEach=require("module$node_modules$lodash$_arrayEach"),assignValue=require("module$node_modules$lodash$_assignValue"),baseAssign=require("module$node_modules$lodash$_baseAssign"),baseAssignIn=require("module$node_modules$lodash$_baseAssignIn"),cloneBuffer=require("module$node_modules$lodash$_cloneBuffer"),copyArray=require("module$node_modules$lodash$_copyArray"),copySymbols=require("module$node_modules$lodash$_copySymbols"),
copySymbolsIn=require("module$node_modules$lodash$_copySymbolsIn"),getAllKeys=require("module$node_modules$lodash$_getAllKeys"),getAllKeysIn=require("module$node_modules$lodash$_getAllKeysIn"),getTag=require("module$node_modules$lodash$_getTag"),initCloneArray=require("module$node_modules$lodash$_initCloneArray"),initCloneByTag=require("module$node_modules$lodash$_initCloneByTag"),initCloneObject=require("module$node_modules$lodash$_initCloneObject"),isArray=require("module$node_modules$lodash$isArray"),
isBuffer=require("module$node_modules$lodash$isBuffer"),isMap=require("module$node_modules$lodash$isMap"),isObject=require("module$node_modules$lodash$isObject"),isSet=require("module$node_modules$lodash$isSet"),keys=require("module$node_modules$lodash$keys"),keysIn=require("module$node_modules$lodash$keysIn"),cloneableTags={};cloneableTags["[object Arguments]"]=cloneableTags["[object Array]"]=cloneableTags["[object ArrayBuffer]"]=cloneableTags["[object DataView]"]=cloneableTags["[object Boolean]"]=
cloneableTags["[object Date]"]=cloneableTags["[object Float32Array]"]=cloneableTags["[object Float64Array]"]=cloneableTags["[object Int8Array]"]=cloneableTags["[object Int16Array]"]=cloneableTags["[object Int32Array]"]=cloneableTags["[object Map]"]=cloneableTags["[object Number]"]=cloneableTags["[object Object]"]=cloneableTags["[object RegExp]"]=cloneableTags["[object Set]"]=cloneableTags["[object String]"]=cloneableTags["[object Symbol]"]=cloneableTags["[object Uint8Array]"]=cloneableTags["[object Uint8ClampedArray]"]=
cloneableTags["[object Uint16Array]"]=cloneableTags["[object Uint32Array]"]=!0;cloneableTags["[object Error]"]=cloneableTags["[object Function]"]=cloneableTags["[object WeakMap]"]=!1;module.exports=baseClone}
//# sourceMappingURL=module$node_modules$lodash$_baseClone.js.map
