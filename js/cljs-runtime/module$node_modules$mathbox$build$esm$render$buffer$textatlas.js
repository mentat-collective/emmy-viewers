shadow$provide.module$node_modules$mathbox$build$esm$render$buffer$textatlas=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.TextAtlas=void 0;global=require("module$node_modules$mathbox$build$esm$render$buffer$atlas");var _constants=require("module$node_modules$three$src$constants");class TextAtlas extends global.Atlas{constructor(renderer,shaders,options){let left;options.width||(options.width=256);options.height||(options.height=256);options.type=
_constants.UnsignedByteType;options.channels=1;options.backed=!0;super(renderer,shaders,options,!1);this.font=null!=options.font?options.font:["sans-serif"];this.size=options.size||24;this.style=null!=options.style?options.style:"normal";this.variant=null!=options.variant?options.variant:"normal";this.weight=null!=options.weight?options.weight:"normal";this.outline=null!=(left=+(null!=options.outline?options.outline:5))?left:0;this.gamma=1;"undefined"!==typeof navigator&&(renderer=navigator.userAgent,
renderer.match(/Chrome/)&&renderer.match(/OS X/)&&(this.gamma=.5));this.scratchW=this.scratchH=0;this.build(options)}build(options){super.build(options);options=16;options=this.size;options+=4+2*Math.min(1,this.outline);const maxWidth=32*options,canvas=document.createElement("canvas");canvas.width=maxWidth;canvas.height=options;var font=this.font.map(str=>`${str.replace(/(['"\\])/g,"\\$1")}`).join(", ");const context=canvas.getContext("2d");context.font=`${this.style} ${this.variant} ${this.weight} ${this.size}px ${font}`;
context.fillStyle="#FF0000";context.textAlign="left";context.textBaseline="bottom";context.lineJoin="round";font=[];var dilate=3*this.outline;for(let i=0,end=dilate,asc=0<=end;asc?i<end:i>end;asc?i++:i--)dilate=("00"+Math.max(0,8*-i+128-8*!i).toString(16)).slice(-2),font.push("#"+dilate+dilate+dilate);dilate=new Uint8Array(maxWidth*options*2);this.canvas=canvas;this.context=context;this.lineHeight=options;this.maxWidth=maxWidth;this.colors=font;this.scratch=dilate;this._allocate=this.allocate.bind(this);
return this._write=this.write.bind(this)}reset(){super.reset();return this.mapped={}}begin(){return Array.from(this.rows).map(row=>row.alive=0)}end(){const {mapped}=this;for(const row of Array.from(this.rows.slice()))if(0===row.alive){for(const key of Array.from(row.keys))delete mapped[key];this.collapse(row)}}map(text,emit){const {mapped}=this;var c=mapped[text];if(null!=c)return c.row.alive++,emit(c.x,c.y,c.w,c.h);this.draw(text);const data=this.scratch,w=this.scratchW,h=this.scratchH;c=this._allocate;
const write=this._write;return c(text,w,h,function(row,x,y){mapped[text]={x,y,w,h,row};write(data,x,y,w,h);return emit(x,y,w,h)})}draw(text){const h=this.lineHeight;var i=this.outline;var ctx=this.context;const dst=this.scratch;var w=this.maxWidth;var {colors}=this,x=i+1,y=Math.round(1.05*h-1);var j=ctx.measureText(text);w=Math.min(w,Math.ceil(j.width+2*x+1));ctx.clearRect(0,0,w,h);if(0===this.outline)for(ctx.fillText(text,x,y),{data:text}=ctx.getImageData(0,0,w,h),j=3,i=0,colors=text.length/4,ctx=
0<=colors;ctx?i<colors:i>colors;ctx?i++:i--)dst[i]=text[j],j+=4;else{var asc1;ctx.globalCompositeOperation="source-over";i=j=i+1;for(asc1=1>=j;asc1?1>=i:1<=i;asc1?i++:i--)j=1<i?2*i-2:i,ctx.strokeStyle=colors[j-1],ctx.lineWidth=j,ctx.strokeText(text,x,y);ctx.globalCompositeOperation="multiply";ctx.fillText(text,x,y);({data:text}=ctx.getImageData(0,0,w,h));j=0;({gamma:x}=this);i=0;colors=text.length/4;for(ctx=0<=colors;ctx?i<colors:i>colors;ctx?i++:i--){asc1=(y=text[j])?text[j+1]/y:1;.5===x&&(asc1=
Math.sqrt(asc1));asc1=Math.min(1,Math.max(0,asc1));const b=256-y;dst[i]=Math.max(0,Math.min(255,b+(y-b)*asc1+2));j+=4}}this.scratchW=w;return this.scratchH=h}}exports.TextAtlas=TextAtlas}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$buffer$textatlas.js.map
