shadow$provide.module$node_modules$three$src$renderers$shaders$UniformsUtils=function(global,require,module,exports){function cloneUniforms(src){const dst={};for(const u in src){dst[u]={};for(const p in src[u]){const property=src[u][p];property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)?dst[u][p]=property.clone():Array.isArray(property)?dst[u][p]=property.slice():dst[u][p]=property}}return dst}
function mergeUniforms(uniforms){const merged={};for(let u=0;u<uniforms.length;u++){const tmp=cloneUniforms(uniforms[u]);for(const p in tmp)merged[p]=tmp[p]}return merged}Object.defineProperty(exports,"__esModule",{value:!0});exports.cloneUniforms=cloneUniforms;exports.mergeUniforms=mergeUniforms;exports.UniformsUtils=void 0;exports.UniformsUtils={clone:cloneUniforms,merge:mergeUniforms}}
//# sourceMappingURL=module$node_modules$three$src$renderers$shaders$UniformsUtils.js.map
