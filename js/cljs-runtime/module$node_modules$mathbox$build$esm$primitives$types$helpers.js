shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$helpers=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;
if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,
desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}function __guard__(value,transform){return"undefined"!==typeof value&&null!==value?transform(value):void 0}Object.defineProperty(exports,"__esModule",{value:!0});exports.Helpers=void 0;var UGLSL=_interopRequireWildcard(require("module$node_modules$mathbox$build$esm$util$glsl")),UTicks=_interopRequireWildcard(require("module$node_modules$mathbox$build$esm$util$ticks")),_constants=require("module$node_modules$three$src$constants"),
_Vector=require("module$node_modules$three$src$math$Vector2"),_Vector2=require("module$node_modules$three$src$math$Vector3");const helpers={bind:{make(slots){null==this.bind&&(this.bind={});null==this.bound&&(this.bound=[]);for(const slot of Array.from(slots)){({callback:slots}=slot);const {to,trait,optional,unique,multiple}=slot;null==slots&&(slots=this.rebuild);const name=to.split(/\./g).pop(),selector=this._get(to);let source=null;if(null!=selector){let start=this;for(var done=!1;!done;)start=
source=this._attach(selector,trait,slots,this,start,optional,multiple),done=unique&&(null==source||0>this.bound.indexOf(source)),done=multiple||optional||!unique||done}if(null!=source)if(null!=this.resize&&this._listen(source,"source.resize",this.resize),slots&&this._listen(source,"source.rebuild",slots),multiple)for(const s of Array.from(source))this.bound.push(s);else this.bound.push(source);this.bind[name]=source}return null},unmake(){if(this.bind)return delete this.bind,delete this.bound}},span:{make(){this.spanView=
this._inherit("view");return this._listen("view","view.range",()=>this.trigger({type:"span.range"}))},unmake(){return delete this.spanView},get:function(){const def=new _Vector.Vector2(-1,1);return function(prefix,dimension){let left;prefix=this._get(prefix+"span.range");return null!=prefix?prefix:null!=(left=null!=this.spanView?this.spanView.axis(dimension):void 0)?left:def}}()},scale:{divide(prefix){const divide=this._get(prefix+"scale.divide");prefix=this._get(prefix+"scale.factor");return Math.round(2.5*
divide/prefix)},generate(prefix,buffer,min,max){const mode=this._get(prefix+"scale.mode"),divide=this._get(prefix+"scale.divide"),unit=this._get(prefix+"scale.unit"),base=this._get(prefix+"scale.base"),factor=this._get(prefix+"scale.factor"),start=this._get(prefix+"scale.start"),end=this._get(prefix+"scale.end"),zero=this._get(prefix+"scale.zero");prefix=this._get(prefix+"scale.nice");min=UTicks.make(mode,min,max,divide,unit,base,factor,start,end,zero,prefix);buffer.copy(min);return min}},style:{uniforms(){return{styleColor:this.node.attributes["style.color"],
styleOpacity:this.node.attributes["style.opacity"],styleZBias:this.node.attributes["style.zBias"],styleZIndex:this.node.attributes["style.zIndex"]}}},arrow:{uniforms(){var {start}=this.props,{end}=this.props;const space=this._attributes.make(this._types.number(1.25/(start+end)));start=this._attributes.make(this._types.vec2(+start,+end));end=this.node.attributes["arrow.size"];return{clipStyle:start,clipRange:end,clipSpace:space,arrowSpace:space,arrowSize:end}}},point:{uniforms(){return{pointSize:this.node.attributes["point.size"],
pointDepth:this.node.attributes["point.depth"]}}},line:{uniforms(){return{lineWidth:this.node.attributes["line.width"],lineDepth:this.node.attributes["line.depth"],lineProximity:this.node.attributes["line.proximity"]}}},surface:{uniforms(){return{}}},shade:{pipeline(shader){if(!this._inherit("fragment"))return shader;null==shader&&(shader=this._shaders.shader());for(let pass=0;2>=pass;pass++)shader=__guard__(this._inherit("fragment"),x=>x.fragment(shader,pass));shader.pipe("fragment.map.rgba");return shader},
normal(shader){shader.pipe(UGLSL.swizzleVec4("xyz"));return shader},map(shader){return shader?this._shaders.shader().pipe("mesh.map.uvwo").pipe(shader):shader}},position:{pipeline(shader){if(!this._inherit("vertex"))return shader;null==shader&&(shader=this._shaders.shader());for(let pass=0;3>=pass;pass++)shader=__guard__(this._inherit("vertex"),x=>x.vertex(shader,pass));return shader},swizzle(shader,order){if(shader)return this._shaders.shader().pipe(UGLSL.swizzleVec4(order)).pipe(shader)},swizzle2(shader,
order1,order2){if(shader)return this._shaders.shader().split().pipe(UGLSL.swizzleVec4(order1)).next().pipe(UGLSL.swizzleVec4(order2)).join().pipe(shader)}},visible:{make(){const e={type:"visible.change"};let visible=null;this.setVisible=function(vis){null!=vis&&(visible=vis);return onVisible()};const onVisible=()=>{let left;const last=this.isVisible;let self=null!=(left=null!=visible?visible:this._get("object.visible"))?left:!0;null!=visibleParent&&self&&(self=visibleParent.isVisible);this.isVisible=
self;if(last!==this.isVisible)return this.trigger(e)},visibleParent=this._inherit("visible");visibleParent&&this._listen(visibleParent,"visible.change",onVisible);this.is("object")&&this._listen(this.node,"change:object",onVisible);return onVisible()},unmake(){return delete this.isVisible}},active:{make(){const e={type:"active.change"};let active=null;this.setActive=function(act){null!=act&&(active=act);return onActive()};const onActive=()=>{let left;const last=this.isActive;let self=null!=(left=
null!=active?active:this._get("entity.active"))?left:!0;null!=activeParent&&self&&(self=activeParent.isActive);this.isActive=self;if(last!==this.isActive)return this.trigger(e)},activeParent=this._inherit("active");activeParent&&this._listen(activeParent,"active.change",onActive);this.is("entity")&&this._listen(this.node,"change:entity",onActive);return onActive()},unmake(){return delete this.isActive}},object:{make(objects){let blending,zOrder;null==objects&&(objects=[]);this.objects=objects;this.renders=
this.objects.reduce((a,b)=>a.concat(b.renders),[]);objects=this._inherit("scene");let opacity=blending=zOrder=null;const hasStyle=Array.from(this.traits).includes("style");opacity=1;blending=_constants.NormalBlending;let zWrite=!0,zTest=!0;hasStyle&&({opacity}=this.props,{blending}=this.props,{zOrder}=this.props,{zWrite}=this.props,{zTest}=this.props);const onVisible=()=>{const order=null!=zOrder?-zOrder:this.node.order;return(null!=this.isVisible?this.isVisible:1)&&0<opacity?hasStyle?(()=>{const result=
[];for(const o of Array.from(this.objects))o.show(1>opacity,blending,order),result.push(o.depth(zWrite,zTest));return result})():(()=>{const result1=[];for(const o of Array.from(this.objects))result1.push(o.show(!0,blending,order));return result1})():(()=>{const result2=[];for(const o of Array.from(this.objects))result2.push(o.hide());return result2})()};this._listen(this.node,"change:style",event=>{({changed:event}=event);let refresh=null;event["style.opacity"]&&(refresh=opacity=this.props.opacity);
event["style.blending"]&&(refresh=blending=this.props.blending);event["style.zOrder"]&&(refresh=zOrder=this.props.zOrder);event["style.zWrite"]&&(refresh=zWrite=this.props.zWrite);event["style.zTest"]&&(refresh=zTest=this.props.zTest);if(null!=refresh)return onVisible()});this._listen(this.node,"reindex",onVisible);this._listen(this,"visible.change",onVisible);for(const object of Array.from(this.objects))objects.adopt(object);return onVisible()},unmake(dispose){let object;null==dispose&&(dispose=
!0);if(this.objects){var objectScene=this._inherit("scene");for(object of Array.from(this.objects))objectScene.unadopt(object);if(dispose)return(()=>{const result=[];for(object of Array.from(this.objects))result.push(object.dispose());return result})()}},mask(){let mask;if(mask=this._inherit("mask"))return mask.mask(void 0)}},unit:{make(){let focusDepth,pixelRatio,pixelUnit,renderAspect,renderHeight,renderOdd,renderScale,renderScaleInv,renderWidth,viewHeight,viewWidth,worldUnit,\u03c0=Math.PI;this.unitUniforms=
{renderScaleInv:renderScaleInv=this._attributes.make(this._types.number(1)),renderScale:renderScale=this._attributes.make(this._types.number(1)),renderAspect:renderAspect=this._attributes.make(this._types.number(1)),renderWidth:renderWidth=this._attributes.make(this._types.number(0)),renderHeight:renderHeight=this._attributes.make(this._types.number(0)),viewWidth:viewWidth=this._attributes.make(this._types.number(0)),viewHeight:viewHeight=this._attributes.make(this._types.number(0)),pixelRatio:pixelRatio=
this._attributes.make(this._types.number(1)),pixelUnit:pixelUnit=this._attributes.make(this._types.number(1)),worldUnit:worldUnit=this._attributes.make(this._types.number(1)),focusDepth:focusDepth=this._attributes.make(this._types.number(1)),renderOdd:renderOdd=this._attributes.make(this._types.vec2())};const top=new _Vector2.Vector3,bottom=new _Vector2.Vector3,handler=()=>{var camera;let size;if(null!=(size=null!=root?root.getSize():void 0)){\u03c0=Math.PI;var {scale}=this.props,{fov}=this.props,
focus=null!=this.props.focus?this.props.focus:this.inherit("unit").props.focus,isAbsolute=null===scale,measure=1;if(camera=null!=root?root.getCamera():void 0)measure=camera.projectionMatrix,top.set(0,-.5,1).applyMatrix4(measure),bottom.set(0,.5,1).applyMatrix4(measure),top.sub(bottom),measure=top.y;camera=size.renderHeight/size.viewHeight;fov=null!=fov?measure*Math.tan(fov*\u03c0/360):1;scale=isAbsolute?camera:size.renderHeight/scale*fov;isAbsolute=size.renderHeight*measure/2;viewWidth.value=size.viewWidth;
viewHeight.value=size.viewHeight;renderWidth.value=size.renderWidth;renderHeight.value=size.renderHeight;renderAspect.value=size.aspect;renderScale.value=isAbsolute;renderScaleInv.value=1/isAbsolute;pixelRatio.value=camera;pixelUnit.value=scale;worldUnit.value=scale/isAbsolute;focusDepth.value=focus;return renderOdd.value.set(size.renderWidth%2,size.renderHeight%2).multiplyScalar(.5)}},root=this.is("root")?this:this._inherit("root");this._listen(root,"root.update",handler);return handler()},unmake(){return delete this.unitUniforms},
get(){const u={};for(const k in this.unitUniforms)u[k]=this.unitUniforms[k].value;return u},uniforms(){return this.unitUniforms}}};exports.Helpers=function(object,traits){const h={};for(const trait of Array.from(traits))if(traits=helpers[trait]){h[trait]={};for(const key in traits)h[trait][key]=traits[key].bind(object)}return h}}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$helpers.js.map
