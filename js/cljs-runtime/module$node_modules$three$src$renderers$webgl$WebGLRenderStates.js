shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLRenderStates=function(global,require,module,exports){function WebGLRenderState(extensions,capabilities){const lights=new _WebGLLights.WebGLLights(extensions,capabilities),lightsArray=[],shadowsArray=[];return{init:function(){lightsArray.length=0;shadowsArray.length=0},state:{lightsArray,shadowsArray,lights},setupLights:function(physicallyCorrectLights){lights.setup(lightsArray,physicallyCorrectLights)},setupLightsView:function(camera){lights.setupView(lightsArray,
camera)},pushLight:function(light){lightsArray.push(light)},pushShadow:function(shadowLight){shadowsArray.push(shadowLight)}}}Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLRenderStates=function(extensions,capabilities){let renderStates=new WeakMap;return{get:function(scene,renderCallDepth=0){!1===renderStates.has(scene)?(renderCallDepth=new WebGLRenderState(extensions,capabilities),renderStates.set(scene,[renderCallDepth])):renderCallDepth>=renderStates.get(scene).length?(renderCallDepth=
new WebGLRenderState(extensions,capabilities),renderStates.get(scene).push(renderCallDepth)):renderCallDepth=renderStates.get(scene)[renderCallDepth];return renderCallDepth},dispose:function(){renderStates=new WeakMap}}};var _WebGLLights=require("module$node_modules$three$src$renderers$webgl$WebGLLights")}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLRenderStates.js.map
