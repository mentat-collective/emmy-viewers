{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$subdivide.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/subdivide.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$subdivide\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Subdivide = void 0;\n\nvar UGLSL = _interopRequireWildcard(require(\"../../../util/glsl.js\"));\n\nvar _operator = require(\"./operator.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Subdivide extends _operator.Operator {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"operator\", \"source\", \"index\", \"subdivide\"];\n  }\n\n  indexShader(shader) {\n    shader.pipe(this.indexer);\n    return super.indexShader(shader);\n  }\n\n  sourceShader(shader) {\n    return shader.pipe(this.operator);\n  }\n\n  getDimensions() {\n    return this._resample(this.bind.source.getDimensions());\n  }\n\n  getActiveDimensions() {\n    return this._resample(this.bind.source.getActiveDimensions());\n  }\n\n  getFutureDimensions() {\n    return this._resample(this.bind.source.getFutureDimensions());\n  }\n\n  getIndexDimensions() {\n    return this._resample(this.bind.source.getIndexDimensions());\n  }\n\n  _resample(dims) {\n    const r = this.resampled;\n    dims.items--;\n    dims.width--;\n    dims.height--;\n    dims.depth--;\n\n    if (r.items != null) {\n      dims.items *= r.items;\n    }\n\n    if (r.width != null) {\n      dims.width *= r.width;\n    }\n\n    if (r.height != null) {\n      dims.height *= r.height;\n    }\n\n    if (r.depth != null) {\n      dims.depth *= r.depth;\n    }\n\n    dims.items++;\n    dims.width++;\n    dims.height++;\n    dims.depth++;\n    return dims;\n  }\n\n  make() {\n    super.make();\n\n    if (this.bind.source == null) {\n      return;\n    } // Get resampled dimensions\n\n\n    let {\n      lerp\n    } = this.props;\n    const {\n      items,\n      width,\n      height,\n      depth\n    } = this.props;\n    this.resampled = {};\n\n    if (items != null) {\n      this.resampled.items = items;\n    }\n\n    if (width != null) {\n      this.resampled.width = width;\n    }\n\n    if (height != null) {\n      this.resampled.height = height;\n    }\n\n    if (depth != null) {\n      this.resampled.depth = depth;\n    } // Build shader to resample data\n\n\n    const operator = this._shaders.shader();\n\n    const indexer = this._shaders.shader(); // Uniforms\n\n\n    const uniforms = {\n      resampleFactor: this._attributes.make(this._types.vec4(0, 0, 0, 0)),\n      subdivideBevel: this.node.attributes[\"subdivide.bevel\"]\n    };\n    this.resampleFactor = uniforms.resampleFactor;\n    this.resampleBias = uniforms.resampleBias; // Has resize props?\n\n    const resize = items != null || width != null || height != null || depth != null; // Addressing relative to target\n\n    if (resize) {\n      operator.pipe(\"resample.relative\", uniforms);\n      indexer.pipe(\"resample.relative\", uniforms);\n    } else {\n      operator.pipe(UGLSL.identity(\"vec4\"));\n      indexer.pipe(UGLSL.identity(\"vec4\"));\n    } // Make sampler\n\n\n    let sampler = this.bind.source.sourceShader(this._shaders.shader());\n    lerp = lerp ? \".lerp\" : \"\"; // Iterate over dimensions (items, width, height, depth)\n\n    const iterable = [\"width\", \"height\", \"depth\", \"items\"];\n\n    for (let i = 0; i < iterable.length; i++) {\n      const key = iterable[i];\n      const id = `subdivide.${key}${lerp}`;\n\n      if (this.props[key] != null) {\n        sampler = this._shaders.shader().require(sampler);\n        sampler.pipe(id, uniforms);\n      }\n    } // Combine operator and composite lerp sampler\n\n\n    operator.pipe(sampler);\n    this.operator = operator;\n    return this.indexer = indexer;\n  }\n\n  unmake() {\n    super.unmake();\n    return this.operator = null;\n  }\n\n  resize() {\n    if (this.bind.source == null) {\n      return;\n    }\n\n    const dims = this.bind.source.getActiveDimensions();\n    const target = this.getActiveDimensions();\n\n    const axis = key => Math.max(1, dims[key] - 1) / Math.max(1, target[key] - 1);\n\n    const rw = axis(\"width\");\n    const rh = axis(\"height\");\n    const rd = axis(\"depth\");\n    const ri = axis(\"items\");\n    this.resampleFactor.value.set(rw, rh, rd, ri);\n    return super.resize();\n  }\n\n  change(changed, touched, _init) {\n    if (touched[\"operator\"] || touched[\"subdivide\"]) {\n      return this.rebuild();\n    }\n  }\n\n}\n\nexports.Subdivide = Subdivide;\nSubdivide.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Subdivide","UGLSL","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_operator","Operator","initClass","traits","indexShader","shader","pipe","indexer","sourceShader","operator","getDimensions","_resample","bind","source","getActiveDimensions","getFutureDimensions","getIndexDimensions","dims","r","resampled","items","width","height","depth","make","lerp","props","_shaders","uniforms","resampleFactor","_attributes","_types","vec4","subdivideBevel","node","attributes","resampleBias","identity","sampler","iterable","i","length","id","unmake","resize","target","axis","Math","max","rw","rh","rd","ri","change","changed","touched","_init","rebuild"]
}
