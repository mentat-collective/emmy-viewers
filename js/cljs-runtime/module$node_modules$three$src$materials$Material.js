shadow$provide.module$node_modules$three$src$materials$Material=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Material=void 0;global=require("module$node_modules$three$src$core$EventDispatcher");
var _constants=require("module$node_modules$three$src$constants"),MathUtils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,
key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$three$src$math$MathUtils"));let materialId=0;class Material extends global.EventDispatcher{constructor(){super();Object.defineProperty(this,"id",{value:materialId++});this.uuid=MathUtils.generateUUID();this.name="";this.type="Material";
this.fog=!0;this.blending=_constants.NormalBlending;this.side=_constants.FrontSide;this.vertexColors=!1;this.opacity=1;this.transparent=!1;this.blendSrc=_constants.SrcAlphaFactor;this.blendDst=_constants.OneMinusSrcAlphaFactor;this.blendEquation=_constants.AddEquation;this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null;this.depthFunc=_constants.LessEqualDepth;this.depthWrite=this.depthTest=!0;this.stencilWriteMask=255;this.stencilFunc=_constants.AlwaysStencilFunc;this.stencilRef=0;
this.stencilFuncMask=255;this.stencilZPass=this.stencilZFail=this.stencilFail=_constants.KeepStencilOp;this.stencilWrite=!1;this.clippingPlanes=null;this.clipShadows=this.clipIntersection=!1;this.shadowSide=null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.premultipliedAlpha=this.alphaToCoverage=this.dithering=!1;this.toneMapped=this.visible=!0;this.userData={};this._alphaTest=this.version=0}get alphaTest(){return this._alphaTest}set alphaTest(value){0<
this._alphaTest!==0<value&&this.version++;this._alphaTest=value}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(values){if(void 0!==values)for(const key in values){const newValue=values[key];if(void 0===newValue){console.warn("THREE.Material: '"+key+"' parameter is undefined.");continue}if("shading"===key){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.");this.flatShading=newValue===
_constants.FlatShading?!0:!1;continue}const currentValue=this[key];void 0===currentValue?console.warn("THREE."+this.type+": '"+key+"' is not a property of this material."):currentValue&&currentValue.isColor?currentValue.set(newValue):currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3?currentValue.copy(newValue):this[key]=newValue}}toJSON(meta){function extractFromCache(cache){const values=[];for(const key in cache){const data=cache[key];delete data.metadata;values.push(data)}return values}
var isRoot=void 0===meta||"string"===typeof meta;isRoot&&(meta={textures:{},images:{}});const data$jscomp$0={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};data$jscomp$0.uuid=this.uuid;data$jscomp$0.type=this.type;""!==this.name&&(data$jscomp$0.name=this.name);this.color&&this.color.isColor&&(data$jscomp$0.color=this.color.getHex());void 0!==this.roughness&&(data$jscomp$0.roughness=this.roughness);void 0!==this.metalness&&(data$jscomp$0.metalness=this.metalness);void 0!==this.sheen&&
(data$jscomp$0.sheen=this.sheen);this.sheenColor&&this.sheenColor.isColor&&(data$jscomp$0.sheenColor=this.sheenColor.getHex());void 0!==this.sheenRoughness&&(data$jscomp$0.sheenRoughness=this.sheenRoughness);this.emissive&&this.emissive.isColor&&(data$jscomp$0.emissive=this.emissive.getHex());this.emissiveIntensity&&1!==this.emissiveIntensity&&(data$jscomp$0.emissiveIntensity=this.emissiveIntensity);this.specular&&this.specular.isColor&&(data$jscomp$0.specular=this.specular.getHex());void 0!==this.specularIntensity&&
(data$jscomp$0.specularIntensity=this.specularIntensity);this.specularColor&&this.specularColor.isColor&&(data$jscomp$0.specularColor=this.specularColor.getHex());void 0!==this.shininess&&(data$jscomp$0.shininess=this.shininess);void 0!==this.clearcoat&&(data$jscomp$0.clearcoat=this.clearcoat);void 0!==this.clearcoatRoughness&&(data$jscomp$0.clearcoatRoughness=this.clearcoatRoughness);this.clearcoatMap&&this.clearcoatMap.isTexture&&(data$jscomp$0.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid);
this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(data$jscomp$0.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid);this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(data$jscomp$0.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid,data$jscomp$0.clearcoatNormalScale=this.clearcoatNormalScale.toArray());this.map&&this.map.isTexture&&(data$jscomp$0.map=this.map.toJSON(meta).uuid);this.matcap&&this.matcap.isTexture&&(data$jscomp$0.matcap=this.matcap.toJSON(meta).uuid);
this.alphaMap&&this.alphaMap.isTexture&&(data$jscomp$0.alphaMap=this.alphaMap.toJSON(meta).uuid);this.lightMap&&this.lightMap.isTexture&&(data$jscomp$0.lightMap=this.lightMap.toJSON(meta).uuid,data$jscomp$0.lightMapIntensity=this.lightMapIntensity);this.aoMap&&this.aoMap.isTexture&&(data$jscomp$0.aoMap=this.aoMap.toJSON(meta).uuid,data$jscomp$0.aoMapIntensity=this.aoMapIntensity);this.bumpMap&&this.bumpMap.isTexture&&(data$jscomp$0.bumpMap=this.bumpMap.toJSON(meta).uuid,data$jscomp$0.bumpScale=this.bumpScale);
this.normalMap&&this.normalMap.isTexture&&(data$jscomp$0.normalMap=this.normalMap.toJSON(meta).uuid,data$jscomp$0.normalMapType=this.normalMapType,data$jscomp$0.normalScale=this.normalScale.toArray());this.displacementMap&&this.displacementMap.isTexture&&(data$jscomp$0.displacementMap=this.displacementMap.toJSON(meta).uuid,data$jscomp$0.displacementScale=this.displacementScale,data$jscomp$0.displacementBias=this.displacementBias);this.roughnessMap&&this.roughnessMap.isTexture&&(data$jscomp$0.roughnessMap=
this.roughnessMap.toJSON(meta).uuid);this.metalnessMap&&this.metalnessMap.isTexture&&(data$jscomp$0.metalnessMap=this.metalnessMap.toJSON(meta).uuid);this.emissiveMap&&this.emissiveMap.isTexture&&(data$jscomp$0.emissiveMap=this.emissiveMap.toJSON(meta).uuid);this.specularMap&&this.specularMap.isTexture&&(data$jscomp$0.specularMap=this.specularMap.toJSON(meta).uuid);this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(data$jscomp$0.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid);
this.specularColorMap&&this.specularColorMap.isTexture&&(data$jscomp$0.specularColorMap=this.specularColorMap.toJSON(meta).uuid);this.envMap&&this.envMap.isTexture&&(data$jscomp$0.envMap=this.envMap.toJSON(meta).uuid,void 0!==this.combine&&(data$jscomp$0.combine=this.combine));void 0!==this.envMapIntensity&&(data$jscomp$0.envMapIntensity=this.envMapIntensity);void 0!==this.reflectivity&&(data$jscomp$0.reflectivity=this.reflectivity);void 0!==this.refractionRatio&&(data$jscomp$0.refractionRatio=this.refractionRatio);
this.gradientMap&&this.gradientMap.isTexture&&(data$jscomp$0.gradientMap=this.gradientMap.toJSON(meta).uuid);void 0!==this.transmission&&(data$jscomp$0.transmission=this.transmission);this.transmissionMap&&this.transmissionMap.isTexture&&(data$jscomp$0.transmissionMap=this.transmissionMap.toJSON(meta).uuid);void 0!==this.thickness&&(data$jscomp$0.thickness=this.thickness);this.thicknessMap&&this.thicknessMap.isTexture&&(data$jscomp$0.thicknessMap=this.thicknessMap.toJSON(meta).uuid);void 0!==this.attenuationDistance&&
(data$jscomp$0.attenuationDistance=this.attenuationDistance);void 0!==this.attenuationColor&&(data$jscomp$0.attenuationColor=this.attenuationColor.getHex());void 0!==this.size&&(data$jscomp$0.size=this.size);null!==this.shadowSide&&(data$jscomp$0.shadowSide=this.shadowSide);void 0!==this.sizeAttenuation&&(data$jscomp$0.sizeAttenuation=this.sizeAttenuation);this.blending!==_constants.NormalBlending&&(data$jscomp$0.blending=this.blending);this.side!==_constants.FrontSide&&(data$jscomp$0.side=this.side);
this.vertexColors&&(data$jscomp$0.vertexColors=!0);1>this.opacity&&(data$jscomp$0.opacity=this.opacity);!0===this.transparent&&(data$jscomp$0.transparent=this.transparent);data$jscomp$0.depthFunc=this.depthFunc;data$jscomp$0.depthTest=this.depthTest;data$jscomp$0.depthWrite=this.depthWrite;data$jscomp$0.colorWrite=this.colorWrite;data$jscomp$0.stencilWrite=this.stencilWrite;data$jscomp$0.stencilWriteMask=this.stencilWriteMask;data$jscomp$0.stencilFunc=this.stencilFunc;data$jscomp$0.stencilRef=this.stencilRef;
data$jscomp$0.stencilFuncMask=this.stencilFuncMask;data$jscomp$0.stencilFail=this.stencilFail;data$jscomp$0.stencilZFail=this.stencilZFail;data$jscomp$0.stencilZPass=this.stencilZPass;this.rotation&&0!==this.rotation&&(data$jscomp$0.rotation=this.rotation);!0===this.polygonOffset&&(data$jscomp$0.polygonOffset=!0);0!==this.polygonOffsetFactor&&(data$jscomp$0.polygonOffsetFactor=this.polygonOffsetFactor);0!==this.polygonOffsetUnits&&(data$jscomp$0.polygonOffsetUnits=this.polygonOffsetUnits);this.linewidth&&
1!==this.linewidth&&(data$jscomp$0.linewidth=this.linewidth);void 0!==this.dashSize&&(data$jscomp$0.dashSize=this.dashSize);void 0!==this.gapSize&&(data$jscomp$0.gapSize=this.gapSize);void 0!==this.scale&&(data$jscomp$0.scale=this.scale);!0===this.dithering&&(data$jscomp$0.dithering=!0);0<this.alphaTest&&(data$jscomp$0.alphaTest=this.alphaTest);!0===this.alphaToCoverage&&(data$jscomp$0.alphaToCoverage=this.alphaToCoverage);!0===this.premultipliedAlpha&&(data$jscomp$0.premultipliedAlpha=this.premultipliedAlpha);
!0===this.wireframe&&(data$jscomp$0.wireframe=this.wireframe);1<this.wireframeLinewidth&&(data$jscomp$0.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(data$jscomp$0.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(data$jscomp$0.wireframeLinejoin=this.wireframeLinejoin);!0===this.flatShading&&(data$jscomp$0.flatShading=this.flatShading);!1===this.visible&&(data$jscomp$0.visible=!1);!1===this.toneMapped&&(data$jscomp$0.toneMapped=!1);"{}"!==JSON.stringify(this.userData)&&
(data$jscomp$0.userData=this.userData);isRoot&&(isRoot=extractFromCache(meta.textures),meta=extractFromCache(meta.images),0<isRoot.length&&(data$jscomp$0.textures=isRoot),0<meta.length&&(data$jscomp$0.images=meta));return data$jscomp$0}clone(){return(new this.constructor).copy(this)}copy(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=
source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;
this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;const srcPlanes=source.clippingPlanes;let dstPlanes=null;if(null!==srcPlanes){const n=srcPlanes.length;dstPlanes=Array(n);for(let i=0;i!==n;++i)dstPlanes[i]=srcPlanes[i].clone()}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;
this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(value){!0===
value&&this.version++}}exports.Material=Material;Material.prototype.isMaterial=!0}
//# sourceMappingURL=module$node_modules$three$src$materials$Material.js.map
