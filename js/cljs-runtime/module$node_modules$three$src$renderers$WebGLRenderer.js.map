{
"version":3,
"file":"module$node_modules$three$src$renderers$WebGLRenderer.js",
"lineCount":84,
"mappings":"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",
"sources":["node_modules/three/src/renderers/WebGLRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$WebGLRenderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLRenderer = WebGLRenderer;\n\nvar _constants = require(\"../constants.js\");\n\nvar _Frustum = require(\"../math/Frustum.js\");\n\nvar _Matrix = require(\"../math/Matrix4.js\");\n\nvar _Vector = require(\"../math/Vector3.js\");\n\nvar _Vector2 = require(\"../math/Vector4.js\");\n\nvar _WebGLAnimation = require(\"./webgl/WebGLAnimation.js\");\n\nvar _WebGLAttributes = require(\"./webgl/WebGLAttributes.js\");\n\nvar _WebGLBackground = require(\"./webgl/WebGLBackground.js\");\n\nvar _WebGLBindingStates = require(\"./webgl/WebGLBindingStates.js\");\n\nvar _WebGLBufferRenderer = require(\"./webgl/WebGLBufferRenderer.js\");\n\nvar _WebGLCapabilities = require(\"./webgl/WebGLCapabilities.js\");\n\nvar _WebGLClipping = require(\"./webgl/WebGLClipping.js\");\n\nvar _WebGLCubeMaps = require(\"./webgl/WebGLCubeMaps.js\");\n\nvar _WebGLCubeUVMaps = require(\"./webgl/WebGLCubeUVMaps.js\");\n\nvar _WebGLExtensions = require(\"./webgl/WebGLExtensions.js\");\n\nvar _WebGLGeometries = require(\"./webgl/WebGLGeometries.js\");\n\nvar _WebGLIndexedBufferRenderer = require(\"./webgl/WebGLIndexedBufferRenderer.js\");\n\nvar _WebGLInfo = require(\"./webgl/WebGLInfo.js\");\n\nvar _WebGLMorphtargets = require(\"./webgl/WebGLMorphtargets.js\");\n\nvar _WebGLMultisampleRenderTarget = require(\"./WebGLMultisampleRenderTarget.js\");\n\nvar _WebGLObjects = require(\"./webgl/WebGLObjects.js\");\n\nvar _WebGLPrograms = require(\"./webgl/WebGLPrograms.js\");\n\nvar _WebGLProperties = require(\"./webgl/WebGLProperties.js\");\n\nvar _WebGLRenderLists = require(\"./webgl/WebGLRenderLists.js\");\n\nvar _WebGLRenderStates = require(\"./webgl/WebGLRenderStates.js\");\n\nvar _WebGLRenderTarget = require(\"./WebGLRenderTarget.js\");\n\nvar _WebGLShadowMap = require(\"./webgl/WebGLShadowMap.js\");\n\nvar _WebGLState = require(\"./webgl/WebGLState.js\");\n\nvar _WebGLTextures = require(\"./webgl/WebGLTextures.js\");\n\nvar _WebGLUniforms = require(\"./webgl/WebGLUniforms.js\");\n\nvar _WebGLUtils = require(\"./webgl/WebGLUtils.js\");\n\nvar _WebXRManager = require(\"./webxr/WebXRManager.js\");\n\nvar _WebGLMaterials = require(\"./webgl/WebGLMaterials.js\");\n\nvar _utils = require(\"../utils.js\");\n\nfunction createCanvasElement() {\n  const canvas = (0, _utils.createElementNS)('canvas');\n  canvas.style.display = 'block';\n  return canvas;\n}\n\nfunction WebGLRenderer(parameters = {}) {\n  const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n        _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n  let currentRenderList = null;\n  let currentRenderState = null; // render() can be called from within a callback triggered by another render.\n  // We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n  const renderListStack = [];\n  const renderStateStack = []; // public properties\n\n  this.domElement = _canvas; // Debug configuration container\n\n  this.debug = {\n    /**\n     * Enables error checking and reporting when shader programs are being compiled\n     * @type {boolean}\n     */\n    checkShaderErrors: true\n  }; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.outputEncoding = _constants.LinearEncoding; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = _constants.NoToneMapping;\n  this.toneMappingExposure = 1.0; // internal properties\n\n  const _this = this;\n\n  let _isContextLost = false; // internal state cache\n\n  let _currentActiveCubeFace = 0;\n  let _currentActiveMipmapLevel = 0;\n  let _currentRenderTarget = null;\n\n  let _currentMaterialId = -1;\n\n  let _currentCamera = null;\n\n  const _currentViewport = new _Vector2.Vector4();\n\n  const _currentScissor = new _Vector2.Vector4();\n\n  let _currentScissorTest = null; //\n\n  let _width = _canvas.width;\n  let _height = _canvas.height;\n  let _pixelRatio = 1;\n  let _opaqueSort = null;\n  let _transparentSort = null;\n\n  const _viewport = new _Vector2.Vector4(0, 0, _width, _height);\n\n  const _scissor = new _Vector2.Vector4(0, 0, _width, _height);\n\n  let _scissorTest = false; // frustum\n\n  const _frustum = new _Frustum.Frustum(); // clipping\n\n\n  let _clippingEnabled = false;\n  let _localClippingEnabled = false; // transmission\n\n  let _transmissionRenderTarget = null; // camera matrices cache\n\n  const _projScreenMatrix = new _Matrix.Matrix4();\n\n  const _vector3 = new _Vector.Vector3();\n\n  const _emptyScene = {\n    background: null,\n    fog: null,\n    environment: null,\n    overrideMaterial: null,\n    isScene: true\n  };\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  } // initialize\n\n\n  let _gl = _context;\n\n  function getContext(contextNames, contextAttributes) {\n    for (let i = 0; i < contextNames.length; i++) {\n      const contextName = contextNames[i];\n\n      const context = _canvas.getContext(contextName, contextAttributes);\n\n      if (context !== null) return context;\n    }\n\n    return null;\n  }\n\n  try {\n    const contextAttributes = {\n      alpha: true,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer,\n      powerPreference: _powerPreference,\n      failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n    }; // OffscreenCanvas does not have setAttribute, see #22811\n\n    if ('setAttribute' in _canvas) _canvas.setAttribute('data-engine', `three.js r${_constants.REVISION}`); // event listeners must be registered before WebGL context is created, see #12753\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n    if (_gl === null) {\n      const contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n      if (_this.isWebGL1Renderer === true) {\n        contextNames.shift();\n      }\n\n      _gl = getContext(contextNames, contextAttributes);\n\n      if (_gl === null) {\n        if (getContext(contextNames)) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error.message);\n    throw error;\n  }\n\n  let extensions, capabilities, state, info;\n  let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n  let programCache, materials, renderLists, renderStates, clipping, shadowMap;\n  let background, morphtargets, bufferRenderer, indexedBufferRenderer;\n  let utils, bindingStates;\n\n  function initGLContext() {\n    extensions = new _WebGLExtensions.WebGLExtensions(_gl);\n    capabilities = new _WebGLCapabilities.WebGLCapabilities(_gl, extensions, parameters);\n    extensions.init(capabilities);\n    utils = new _WebGLUtils.WebGLUtils(_gl, extensions, capabilities);\n    state = new _WebGLState.WebGLState(_gl, extensions, capabilities);\n    info = new _WebGLInfo.WebGLInfo(_gl);\n    properties = new _WebGLProperties.WebGLProperties();\n    textures = new _WebGLTextures.WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n    cubemaps = new _WebGLCubeMaps.WebGLCubeMaps(_this);\n    cubeuvmaps = new _WebGLCubeUVMaps.WebGLCubeUVMaps(_this);\n    attributes = new _WebGLAttributes.WebGLAttributes(_gl, capabilities);\n    bindingStates = new _WebGLBindingStates.WebGLBindingStates(_gl, extensions, attributes, capabilities);\n    geometries = new _WebGLGeometries.WebGLGeometries(_gl, attributes, info, bindingStates);\n    objects = new _WebGLObjects.WebGLObjects(_gl, geometries, attributes, info);\n    morphtargets = new _WebGLMorphtargets.WebGLMorphtargets(_gl, capabilities, textures);\n    clipping = new _WebGLClipping.WebGLClipping(properties);\n    programCache = new _WebGLPrograms.WebGLPrograms(_this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping);\n    materials = new _WebGLMaterials.WebGLMaterials(properties);\n    renderLists = new _WebGLRenderLists.WebGLRenderLists();\n    renderStates = new _WebGLRenderStates.WebGLRenderStates(extensions, capabilities);\n    background = new _WebGLBackground.WebGLBackground(_this, cubemaps, state, objects, _alpha, _premultipliedAlpha);\n    shadowMap = new _WebGLShadowMap.WebGLShadowMap(_this, objects, capabilities);\n    bufferRenderer = new _WebGLBufferRenderer.WebGLBufferRenderer(_gl, extensions, info, capabilities);\n    indexedBufferRenderer = new _WebGLIndexedBufferRenderer.WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n    info.programs = programCache.programs;\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.shadowMap = shadowMap;\n    _this.state = state;\n    _this.info = info;\n  }\n\n  initGLContext(); // xr\n\n  const xr = new _WebXRManager.WebXRManager(_this, _gl);\n  this.xr = xr; // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    const extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    const extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function (target) {\n    return target.set(_width, _height);\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    if (xr.isPresenting) {\n      console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n      return;\n    }\n\n    _width = width;\n    _height = height;\n    _canvas.width = Math.floor(width * _pixelRatio);\n    _canvas.height = Math.floor(height * _pixelRatio);\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function (target) {\n    return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n    _pixelRatio = pixelRatio;\n    _canvas.width = Math.floor(width * pixelRatio);\n    _canvas.height = Math.floor(height * pixelRatio);\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getCurrentViewport = function (target) {\n    return target.copy(_currentViewport);\n  };\n\n  this.getViewport = function (target) {\n    return target.copy(_viewport);\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    if (x.isVector4) {\n      _viewport.set(x.x, x.y, x.z, x.w);\n    } else {\n      _viewport.set(x, y, width, height);\n    }\n\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissor = function (target) {\n    return target.copy(_scissor);\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    if (x.isVector4) {\n      _scissor.set(x.x, x.y, x.z, x.w);\n    } else {\n      _scissor.set(x, y, width, height);\n    }\n\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n  };\n\n  this.getScissorTest = function () {\n    return _scissorTest;\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  };\n\n  this.setOpaqueSort = function (method) {\n    _opaqueSort = method;\n  };\n\n  this.setTransparentSort = function (method) {\n    _transparentSort = method;\n  }; // Clearing\n\n\n  this.getClearColor = function (target) {\n    return target.copy(background.getClearColor());\n  };\n\n  this.setClearColor = function () {\n    background.setClearColor.apply(background, arguments);\n  };\n\n  this.getClearAlpha = function () {\n    return background.getClearAlpha();\n  };\n\n  this.setClearAlpha = function () {\n    background.setClearAlpha.apply(background, arguments);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    let bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  }; //\n\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n    renderLists.dispose();\n    renderStates.dispose();\n    properties.dispose();\n    cubemaps.dispose();\n    cubeuvmaps.dispose();\n    objects.dispose();\n    bindingStates.dispose();\n    programCache.dispose();\n    xr.dispose();\n    xr.removeEventListener('sessionstart', onXRSessionStart);\n    xr.removeEventListener('sessionend', onXRSessionEnd);\n\n    if (_transmissionRenderTarget) {\n      _transmissionRenderTarget.dispose();\n\n      _transmissionRenderTarget = null;\n    }\n\n    animation.stop();\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    console.log('THREE.WebGLRenderer: Context Lost.');\n    _isContextLost = true;\n  }\n\n  function onContextRestore() {\n    console.log('THREE.WebGLRenderer: Context Restored.');\n    _isContextLost = false;\n    const infoAutoReset = info.autoReset;\n    const shadowMapEnabled = shadowMap.enabled;\n    const shadowMapAutoUpdate = shadowMap.autoUpdate;\n    const shadowMapNeedsUpdate = shadowMap.needsUpdate;\n    const shadowMapType = shadowMap.type;\n    initGLContext();\n    info.autoReset = infoAutoReset;\n    shadowMap.enabled = shadowMapEnabled;\n    shadowMap.autoUpdate = shadowMapAutoUpdate;\n    shadowMap.needsUpdate = shadowMapNeedsUpdate;\n    shadowMap.type = shadowMapType;\n  }\n\n  function onMaterialDispose(event) {\n    const material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReferences(material);\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReferences(material) {\n    const programs = properties.get(material).programs;\n\n    if (programs !== undefined) {\n      programs.forEach(function (program) {\n        programCache.releaseProgram(program);\n      });\n\n      if (material.isShaderMaterial) {\n        programCache.releaseShaderCache(material);\n      }\n    }\n  } // Buffer rendering\n\n\n  this.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n    if (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n    const frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n    const program = setProgram(camera, scene, geometry, material, object);\n    state.setMaterial(material, frontFaceCW); //\n\n    let index = geometry.index;\n    const position = geometry.attributes.position; //\n\n    if (index === null) {\n      if (position === undefined || position.count === 0) return;\n    } else if (index.count === 0) {\n      return;\n    } //\n\n\n    let rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n\n    bindingStates.setup(object, material, program, geometry, index);\n    let attribute;\n    let renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    } //\n\n\n    const dataCount = index !== null ? index.count : position.count;\n    const rangeStart = geometry.drawRange.start * rangeFactor;\n    const rangeCount = geometry.drawRange.count * rangeFactor;\n    const groupStart = group !== null ? group.start * rangeFactor : 0;\n    const groupCount = group !== null ? group.count * rangeFactor : Infinity;\n    const drawStart = Math.max(rangeStart, groupStart);\n    const drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    const drawCount = Math.max(0, drawEnd - drawStart + 1);\n    if (drawCount === 0) return; //\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        renderer.setMode(_gl.TRIANGLES);\n      }\n    } else if (object.isLine) {\n      let lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else if (object.isLineLoop) {\n        renderer.setMode(_gl.LINE_LOOP);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(_gl.POINTS);\n    } else if (object.isSprite) {\n      renderer.setMode(_gl.TRIANGLES);\n    }\n\n    if (object.isInstancedMesh) {\n      renderer.renderInstances(drawStart, drawCount, object.count);\n    } else if (geometry.isInstancedBufferGeometry) {\n      const instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n      renderer.renderInstances(drawStart, drawCount, instanceCount);\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  }; // Compile\n\n\n  this.compile = function (scene, camera) {\n    currentRenderState = renderStates.get(scene);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n    scene.traverseVisible(function (object) {\n      if (object.isLight && object.layers.test(camera.layers)) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      }\n    });\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n    scene.traverse(function (object) {\n      const material = object.material;\n\n      if (material) {\n        if (Array.isArray(material)) {\n          for (let i = 0; i < material.length; i++) {\n            const material2 = material[i];\n            getProgram(material2, scene, object);\n          }\n        } else {\n          getProgram(material, scene, object);\n        }\n      }\n    });\n    renderStateStack.pop();\n    currentRenderState = null;\n  }; // Animation Loop\n\n\n  let onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time) {\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  function onXRSessionStart() {\n    animation.stop();\n  }\n\n  function onXRSessionEnd() {\n    animation.start();\n  }\n\n  const animation = new _WebGLAnimation.WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n  if (typeof window !== 'undefined') animation.setContext(window);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n    xr.setAnimationLoop(callback);\n    callback === null ? animation.stop() : animation.start();\n  };\n\n  xr.addEventListener('sessionstart', onXRSessionStart);\n  xr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n  this.render = function (scene, camera) {\n    if (camera !== undefined && camera.isCamera !== true) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    if (_isContextLost === true) return; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    if (xr.enabled === true && xr.isPresenting === true) {\n      if (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n      camera = xr.getCamera(); // use XR camera for rendering\n    } //\n\n\n    if (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n    currentRenderState = renderStates.get(scene, renderStateStack.length);\n    currentRenderState.init();\n    renderStateStack.push(currentRenderState);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    currentRenderList = renderLists.get(scene, renderListStack.length);\n    currentRenderList.init();\n    renderListStack.push(currentRenderList);\n    projectObject(scene, camera, 0, _this.sortObjects);\n    currentRenderList.finish();\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort(_opaqueSort, _transparentSort);\n    } //\n\n\n    if (_clippingEnabled === true) clipping.beginShadows();\n    const shadowsArray = currentRenderState.state.shadowsArray;\n    shadowMap.render(shadowsArray, scene, camera);\n    if (_clippingEnabled === true) clipping.endShadows(); //\n\n    if (this.info.autoReset === true) this.info.reset(); //\n\n    background.render(currentRenderList, scene); // render scene\n\n    currentRenderState.setupLights(_this.physicallyCorrectLights);\n\n    if (camera.isArrayCamera) {\n      const cameras = camera.cameras;\n\n      for (let i = 0, l = cameras.length; i < l; i++) {\n        const camera2 = cameras[i];\n        renderScene(currentRenderList, scene, camera2, camera2.viewport);\n      }\n    } else {\n      renderScene(currentRenderList, scene, camera);\n    } //\n\n\n    if (_currentRenderTarget !== null) {\n      // resolve multisample renderbuffers to a single-sample texture if necessary\n      textures.updateMultisampleRenderTarget(_currentRenderTarget); // Generate mipmap if we're using any kind of mipmap filtering\n\n      textures.updateRenderTargetMipmap(_currentRenderTarget);\n    } //\n\n\n    if (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n    state.setPolygonOffset(false); // _gl.finish();\n\n    bindingStates.resetDefaultState();\n    _currentMaterialId = -1;\n    _currentCamera = null;\n    renderStateStack.pop();\n\n    if (renderStateStack.length > 0) {\n      currentRenderState = renderStateStack[renderStateStack.length - 1];\n    } else {\n      currentRenderState = null;\n    }\n\n    renderListStack.pop();\n\n    if (renderListStack.length > 0) {\n      currentRenderList = renderListStack[renderListStack.length - 1];\n    } else {\n      currentRenderList = null;\n    }\n  };\n\n  function projectObject(object, camera, groupOrder, sortObjects) {\n    if (object.visible === false) return;\n    const visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isGroup) {\n        groupOrder = object.renderOrder;\n      } else if (object.isLOD) {\n        if (object.autoUpdate === true) object.update(camera);\n      } else if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (material.visible) {\n            currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n          }\n        }\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          // update skeleton only once in a frame\n          if (object.skeleton.frame !== info.render.frame) {\n            object.skeleton.update();\n            object.skeleton.frame = info.render.frame;\n          }\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          const geometry = objects.update(object);\n          const material = object.material;\n\n          if (Array.isArray(material)) {\n            const groups = geometry.groups;\n\n            for (let i = 0, l = groups.length; i < l; i++) {\n              const group = groups[i];\n              const groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n              }\n            }\n          } else if (material.visible) {\n            currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n          }\n        }\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, groupOrder, sortObjects);\n    }\n  }\n\n  function renderScene(currentRenderList, scene, camera, viewport) {\n    const opaqueObjects = currentRenderList.opaque;\n    const transmissiveObjects = currentRenderList.transmissive;\n    const transparentObjects = currentRenderList.transparent;\n    currentRenderState.setupLightsView(camera);\n    if (transmissiveObjects.length > 0) renderTransmissionPass(opaqueObjects, scene, camera);\n    if (viewport) state.viewport(_currentViewport.copy(viewport));\n    if (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n    if (transmissiveObjects.length > 0) renderObjects(transmissiveObjects, scene, camera);\n    if (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera);\n  }\n\n  function renderTransmissionPass(opaqueObjects, scene, camera) {\n    if (_transmissionRenderTarget === null) {\n      const needsAntialias = _antialias === true && capabilities.isWebGL2 === true;\n      const renderTargetType = needsAntialias ? _WebGLMultisampleRenderTarget.WebGLMultisampleRenderTarget : _WebGLRenderTarget.WebGLRenderTarget;\n      _transmissionRenderTarget = new renderTargetType(1024, 1024, {\n        generateMipmaps: true,\n        type: utils.convert(_constants.HalfFloatType) !== null ? _constants.HalfFloatType : _constants.UnsignedByteType,\n        minFilter: _constants.LinearMipmapLinearFilter,\n        magFilter: _constants.NearestFilter,\n        wrapS: _constants.ClampToEdgeWrapping,\n        wrapT: _constants.ClampToEdgeWrapping,\n        useRenderToTexture: extensions.has('WEBGL_multisampled_render_to_texture')\n      });\n    }\n\n    const currentRenderTarget = _this.getRenderTarget();\n\n    _this.setRenderTarget(_transmissionRenderTarget);\n\n    _this.clear(); // Turn off the features which can affect the frag color for opaque objects pass.\n    // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\n\n    const currentToneMapping = _this.toneMapping;\n    _this.toneMapping = _constants.NoToneMapping;\n    renderObjects(opaqueObjects, scene, camera);\n    _this.toneMapping = currentToneMapping;\n    textures.updateMultisampleRenderTarget(_transmissionRenderTarget);\n    textures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n    _this.setRenderTarget(currentRenderTarget);\n  }\n\n  function renderObjects(renderList, scene, camera) {\n    const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n    for (let i = 0, l = renderList.length; i < l; i++) {\n      const renderItem = renderList[i];\n      const object = renderItem.object;\n      const geometry = renderItem.geometry;\n      const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n      const group = renderItem.group;\n\n      if (object.layers.test(camera.layers)) {\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n    object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n    material.onBeforeRender(_this, scene, camera, geometry, object, group);\n\n    if (material.transparent === true && material.side === _constants.DoubleSide) {\n      material.side = _constants.BackSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = _constants.FrontSide;\n      material.needsUpdate = true;\n\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\n      material.side = _constants.DoubleSide;\n    } else {\n      _this.renderBufferDirect(camera, scene, geometry, material, object, group);\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n  }\n\n  function getProgram(material, scene, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    const materialProperties = properties.get(material);\n    const lights = currentRenderState.state.lights;\n    const shadowsArray = currentRenderState.state.shadowsArray;\n    const lightsStateVersion = lights.state.version;\n    const parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n    const programCacheKey = programCache.getProgramCacheKey(parameters);\n    let programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n    materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n    materialProperties.fog = scene.fog;\n    materialProperties.envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || materialProperties.environment);\n\n    if (programs === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n      programs = new Map();\n      materialProperties.programs = programs;\n    }\n\n    let program = programs.get(programCacheKey);\n\n    if (program !== undefined) {\n      // early out if program and light state is identical\n      if (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n        updateCommonMaterialProperties(material, parameters);\n        return program;\n      }\n    } else {\n      parameters.uniforms = programCache.getUniforms(material);\n      material.onBuild(object, parameters, _this);\n      material.onBeforeCompile(parameters, _this);\n      program = programCache.acquireProgram(parameters, programCacheKey);\n      programs.set(programCacheKey, program);\n      materialProperties.uniforms = parameters.uniforms;\n    }\n\n    const uniforms = materialProperties.uniforms;\n\n    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n      uniforms.clippingPlanes = clipping.uniform;\n    }\n\n    updateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n    materialProperties.needsLights = materialNeedsLights(material);\n    materialProperties.lightsStateVersion = lightsStateVersion;\n\n    if (materialProperties.needsLights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.lightProbe.value = lights.state.probe;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.directionalLightShadows.value = lights.state.directionalShadow;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.spotLightShadows.value = lights.state.spotShadow;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.ltc_1.value = lights.state.rectAreaLTC1;\n      uniforms.ltc_2.value = lights.state.rectAreaLTC2;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.pointLightShadows.value = lights.state.pointShadow;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    const progUniforms = program.getUniforms();\n\n    const uniformsList = _WebGLUniforms.WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\n    materialProperties.currentProgram = program;\n    materialProperties.uniformsList = uniformsList;\n    return program;\n  }\n\n  function updateCommonMaterialProperties(material, parameters) {\n    const materialProperties = properties.get(material);\n    materialProperties.outputEncoding = parameters.outputEncoding;\n    materialProperties.instancing = parameters.instancing;\n    materialProperties.skinning = parameters.skinning;\n    materialProperties.morphTargets = parameters.morphTargets;\n    materialProperties.morphNormals = parameters.morphNormals;\n    materialProperties.morphTargetsCount = parameters.morphTargetsCount;\n    materialProperties.numClippingPlanes = parameters.numClippingPlanes;\n    materialProperties.numIntersection = parameters.numClipIntersection;\n    materialProperties.vertexAlphas = parameters.vertexAlphas;\n    materialProperties.vertexTangents = parameters.vertexTangents;\n    materialProperties.toneMapping = parameters.toneMapping;\n  }\n\n  function setProgram(camera, scene, geometry, material, object) {\n    if (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n    textures.resetTextureUnits();\n    const fog = scene.fog;\n    const environment = material.isMeshStandardMaterial ? scene.environment : null;\n    const encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : _constants.LinearEncoding;\n    const envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n    const vertexAlphas = material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n    const vertexTangents = !!material.normalMap && !!geometry.attributes.tangent;\n    const morphTargets = !!geometry.morphAttributes.position;\n    const morphNormals = !!geometry.morphAttributes.normal;\n    const morphTargetsCount = !!geometry.morphAttributes.position ? geometry.morphAttributes.position.length : 0;\n    const toneMapping = material.toneMapped ? _this.toneMapping : _constants.NoToneMapping;\n    const materialProperties = properties.get(material);\n    const lights = currentRenderState.state.lights;\n\n    if (_clippingEnabled === true) {\n      if (_localClippingEnabled === true || camera !== _currentCamera) {\n        const useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        clipping.setState(material, camera, useCache);\n      }\n    } //\n\n\n    let needsProgramChange = false;\n\n    if (material.version === materialProperties.__version) {\n      if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n        needsProgramChange = true;\n      } else if (materialProperties.outputEncoding !== encoding) {\n        needsProgramChange = true;\n      } else if (object.isInstancedMesh && materialProperties.instancing === false) {\n        needsProgramChange = true;\n      } else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n        needsProgramChange = true;\n      } else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n        needsProgramChange = true;\n      } else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n        needsProgramChange = true;\n      } else if (materialProperties.envMap !== envMap) {\n        needsProgramChange = true;\n      } else if (material.fog && materialProperties.fog !== fog) {\n        needsProgramChange = true;\n      } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexAlphas !== vertexAlphas) {\n        needsProgramChange = true;\n      } else if (materialProperties.vertexTangents !== vertexTangents) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphTargets !== morphTargets) {\n        needsProgramChange = true;\n      } else if (materialProperties.morphNormals !== morphNormals) {\n        needsProgramChange = true;\n      } else if (materialProperties.toneMapping !== toneMapping) {\n        needsProgramChange = true;\n      } else if (capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount) {\n        needsProgramChange = true;\n      }\n    } else {\n      needsProgramChange = true;\n      materialProperties.__version = material.version;\n    } //\n\n\n    let program = materialProperties.currentProgram;\n\n    if (needsProgramChange === true) {\n      program = getProgram(material, scene, object);\n    }\n\n    let refreshProgram = false;\n    let refreshMaterial = false;\n    let refreshLights = false;\n    const p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || _currentCamera !== camera) {\n      p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      }\n\n      if (_currentCamera !== camera) {\n        _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n        const uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n        p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n    } // skinning and morph target uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone and morph texture must go before other textures\n    // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\n    if (object.isSkinnedMesh) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      const skeleton = object.skeleton;\n\n      if (skeleton) {\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n          p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n          p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n\n    if (!!geometry && (geometry.morphAttributes.position !== undefined || geometry.morphAttributes.normal !== undefined)) {\n      morphtargets.update(object, geometry, material, program);\n    }\n\n    if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n      materialProperties.receiveShadow = object.receiveShadow;\n      p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n      if (materialProperties.needsLights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        materials.refreshFogUniforms(m_uniforms, fog);\n      }\n\n      materials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\n      _WebGLUniforms.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n    }\n\n    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n      _WebGLUniforms.WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\n      material.uniformsNeedUpdate = false;\n    }\n\n    if (material.isSpriteMaterial) {\n      p_uniforms.setValue(_gl, 'center', object.center);\n    } // common matrices\n\n\n    p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n    p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n    return program;\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.lightProbe.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.directionalLightShadows.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.pointLightShadows.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.spotLightShadows.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  }\n\n  function materialNeedsLights(material) {\n    return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n  }\n\n  this.getActiveCubeFace = function () {\n    return _currentActiveCubeFace;\n  };\n\n  this.getActiveMipmapLevel = function () {\n    return _currentActiveMipmapLevel;\n  };\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTargetTextures = function (renderTarget, colorTexture, depthTexture) {\n    properties.get(renderTarget.texture).__webglTexture = colorTexture;\n    properties.get(renderTarget.depthTexture).__webglTexture = depthTexture;\n    const renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__hasExternalTextures = true;\n\n    if (renderTargetProperties.__hasExternalTextures) {\n      renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n      if (!renderTargetProperties.__autoAllocateDepthBuffer) {\n        // The multisample_render_to_texture extension doesn't work properly if there\n        // are midframe flushes and an external depth buffer. Disable use of the extension.\n        if (renderTarget.useRenderToTexture) {\n          console.warn('render-to-texture extension was disabled because an external texture was provided');\n          renderTarget.useRenderToTexture = false;\n          renderTarget.useRenderbuffer = true;\n        }\n      }\n    }\n  };\n\n  this.setRenderTargetFramebuffer = function (renderTarget, defaultFramebuffer) {\n    const renderTargetProperties = properties.get(renderTarget);\n    renderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n    renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n  };\n\n  this.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n    _currentRenderTarget = renderTarget;\n    _currentActiveCubeFace = activeCubeFace;\n    _currentActiveMipmapLevel = activeMipmapLevel;\n    let useDefaultFramebuffer = true;\n\n    if (renderTarget) {\n      const renderTargetProperties = properties.get(renderTarget);\n\n      if (renderTargetProperties.__useDefaultFramebuffer !== undefined) {\n        // We need to make sure to rebind the framebuffer.\n        state.bindFramebuffer(_gl.FRAMEBUFFER, null);\n        useDefaultFramebuffer = false;\n      } else if (renderTargetProperties.__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      } else if (renderTargetProperties.__hasExternalTextures) {\n        // Color and depth texture must be rebound in order for the swapchain to update.\n        textures.rebindTextures(renderTarget, properties.get(renderTarget.texture).__webglTexture, properties.get(renderTarget.depthTexture).__webglTexture);\n      }\n    }\n\n    let framebuffer = null;\n    let isCube = false;\n    let isRenderTarget3D = false;\n\n    if (renderTarget) {\n      const texture = renderTarget.texture;\n\n      if (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n        isRenderTarget3D = true;\n      }\n\n      const __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLCubeRenderTarget) {\n        framebuffer = __webglFramebuffer[activeCubeFace];\n        isCube = true;\n      } else if (renderTarget.useRenderbuffer) {\n        framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n      _currentScissorTest = _scissorTest;\n    }\n\n    const framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer) {\n      state.drawBuffers(renderTarget, framebuffer);\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      const textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n    } else if (isRenderTarget3D) {\n      const textureProperties = properties.get(renderTarget.texture);\n      const layer = activeCubeFace || 0;\n\n      _gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n    }\n\n    _currentMaterialId = -1; // reset current material to ensure correct uniform bindings\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    let framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n      framebuffer = framebuffer[activeCubeFaceIndex];\n    }\n\n    if (framebuffer) {\n      state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      try {\n        const texture = renderTarget.texture;\n        const textureFormat = texture.format;\n        const textureType = texture.type;\n\n        if (textureFormat !== _constants.RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        const halfFloatSupportedByExt = textureType === _constants.HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n        if (textureType !== _constants.UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n        !(textureType === _constants.FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n        !halfFloatSupportedByExt) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n            _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        // restore framebuffer of current render target if necessary\n        const framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n        state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n      }\n    }\n  };\n\n  this.copyFramebufferToTexture = function (position, texture, level = 0) {\n    if (texture.isFramebufferTexture !== true) {\n      console.error('THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.');\n      return;\n    }\n\n    const levelScale = Math.pow(2, -level);\n    const width = Math.floor(texture.image.width * levelScale);\n    const height = Math.floor(texture.image.height * levelScale);\n    textures.setTexture2D(texture, 0);\n\n    _gl.copyTexSubImage2D(_gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height);\n\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n    const width = srcTexture.image.width;\n    const height = srcTexture.image.height;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n    textures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n    // parameters, make sure they are correct for the dstTexture\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n    if (srcTexture.isDataTexture) {\n      _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        _gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n      } else {\n        _gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n    } // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n    state.unbindTexture();\n  };\n\n  this.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n    if (_this.isWebGL1Renderer) {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n      return;\n    }\n\n    const width = sourceBox.max.x - sourceBox.min.x + 1;\n    const height = sourceBox.max.y - sourceBox.min.y + 1;\n    const depth = sourceBox.max.z - sourceBox.min.z + 1;\n    const glFormat = utils.convert(dstTexture.format);\n    const glType = utils.convert(dstTexture.type);\n    let glTarget;\n\n    if (dstTexture.isDataTexture3D) {\n      textures.setTexture3D(dstTexture, 0);\n      glTarget = _gl.TEXTURE_3D;\n    } else if (dstTexture.isDataTexture2DArray) {\n      textures.setTexture2DArray(dstTexture, 0);\n      glTarget = _gl.TEXTURE_2D_ARRAY;\n    } else {\n      console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n      return;\n    }\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n    const unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n    const unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n    const unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n    const unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n    const unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n    const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[0] : srcTexture.image;\n\n    _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, image.width);\n\n    _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, image.height);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n    if (srcTexture.isDataTexture || srcTexture.isDataTexture3D) {\n      _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data);\n    } else {\n      if (srcTexture.isCompressedTexture) {\n        console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');\n\n        _gl.compressedTexSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data);\n      } else {\n        _gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image);\n      }\n    }\n\n    _gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n    _gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n    _gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n    if (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n    state.unbindTexture();\n  };\n\n  this.initTexture = function (texture) {\n    textures.setTexture2D(texture, 0);\n    state.unbindTexture();\n  };\n\n  this.resetState = function () {\n    _currentActiveCubeFace = 0;\n    _currentActiveMipmapLevel = 0;\n    _currentRenderTarget = null;\n    state.reset();\n    bindingStates.reset();\n  };\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n      detail: this\n    }));\n  }\n}\n\nWebGLRenderer.prototype.isWebGLRenderer = true;\n};"],
"names":["shadow$provide","global","require","module","exports","createCanvasElement","canvas","_utils","createElementNS","style","display","WebGLRenderer","parameters","getContext","contextNames","contextAttributes","i","length","context","_canvas","contextName","initGLContext","extensions","_WebGLExtensions","WebGLExtensions","_gl","capabilities","_WebGLCapabilities","WebGLCapabilities","init","utils","_WebGLUtils","WebGLUtils","state","_WebGLState","WebGLState","info","_WebGLInfo","WebGLInfo","properties","_WebGLProperties","WebGLProperties","textures","_WebGLTextures","WebGLTextures","cubemaps","_WebGLCubeMaps","WebGLCubeMaps","_this","cubeuvmaps","_WebGLCubeUVMaps","WebGLCubeUVMaps","attributes","_WebGLAttributes","WebGLAttributes","bindingStates","_WebGLBindingStates","WebGLBindingStates","geometries","_WebGLGeometries","WebGLGeometries","objects","_WebGLObjects","WebGLObjects","morphtargets","_WebGLMorphtargets","WebGLMorphtargets","clipping","_WebGLClipping","WebGLClipping","programCache","_WebGLPrograms","WebGLPrograms","materials","_WebGLMaterials","WebGLMaterials","renderLists","_WebGLRenderLists","WebGLRenderLists","renderStates","_WebGLRenderStates","WebGLRenderStates","background","_WebGLBackground","WebGLBackground","_alpha","_premultipliedAlpha","shadowMap","_WebGLShadowMap","WebGLShadowMap","bufferRenderer","_WebGLBufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","_WebGLIndexedBufferRenderer","WebGLIndexedBufferRenderer","programs","onContextLost","event","preventDefault","console","log","_isContextLost","onContextRestore","infoAutoReset","autoReset","shadowMapEnabled","enabled","shadowMapAutoUpdate","autoUpdate","shadowMapNeedsUpdate","needsUpdate","shadowMapType","type","onMaterialDispose","material","target","removeEventListener","releaseMaterialProgramReferences","remove","get","undefined","forEach","program","releaseProgram","isShaderMaterial","releaseShaderCache","onXRSessionStart","animation","stop","onXRSessionEnd","start","projectObject","object","camera","groupOrder","sortObjects","visible","layers","test","isGroup","renderOrder","isLOD","update","isLight","currentRenderState","pushLight","castShadow","pushShadow","isSprite","frustumCulled","_frustum","intersectsSprite","_vector3","setFromMatrixPosition","matrixWorld","applyMatrix4","_projScreenMatrix","geometry","currentRenderList","push","z","isMesh","isLine","isPoints","isSkinnedMesh","skeleton","frame","render","intersectsObject","Array","isArray","groups","l","group","groupMaterial","materialIndex","children","renderScene","scene","viewport","opaqueObjects","opaque","transmissiveObjects","transmissive","transparentObjects","transparent","setupLightsView","_transmissionRenderTarget","renderTargetType","_antialias","isWebGL2","_WebGLMultisampleRenderTarget","WebGLMultisampleRenderTarget","_WebGLRenderTarget","WebGLRenderTarget","generateMipmaps","convert","_constants","HalfFloatType","UnsignedByteType","minFilter","LinearMipmapLinearFilter","magFilter","NearestFilter","wrapS","ClampToEdgeWrapping","wrapT","useRenderToTexture","has","currentRenderTarget","getRenderTarget","setRenderTarget","clear","currentToneMapping","toneMapping","NoToneMapping","renderObjects","updateMultisampleRenderTarget","updateRenderTargetMipmap","_currentViewport","copy","renderList","overrideMaterial","isScene","renderItem","onBeforeRender","modelViewMatrix","multiplyMatrices","matrixWorldInverse","normalMatrix","getNormalMatrix","side","DoubleSide","BackSide","renderBufferDirect","FrontSide","onAfterRender","getProgram","_emptyScene","materialProperties","lights","lightsStateVersion","version","getParameters","shadowsArray","programCacheKey","getProgramCacheKey","environment","isMeshStandardMaterial","fog","envMap","addEventListener","Map","currentProgram","updateCommonMaterialProperties","uniforms","getUniforms","onBuild","onBeforeCompile","acquireProgram","set","isRawShaderMaterial","clippingPlanes","uniform","needsLights","isMeshLambertMaterial","isMeshToonMaterial","isMeshPhongMaterial","isShadowMaterial","ambientLightColor","value","ambient","lightProbe","probe","directionalLights","directional","directionalLightShadows","directionalShadow","spotLights","spot","spotLightShadows","spotShadow","rectAreaLights","rectArea","ltc_1","rectAreaLTC1","ltc_2","rectAreaLTC2","pointLights","point","pointLightShadows","pointShadow","hemisphereLights","hemi","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","_WebGLUniforms","WebGLUniforms","seqWithValue","seq","outputEncoding","instancing","skinning","morphTargets","morphNormals","morphTargetsCount","numClippingPlanes","numIntersection","numClipIntersection","vertexAlphas","vertexTangents","_context","alpha","_depth","depth","_stencil","stencil","antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","renderListStack","renderStateStack","domElement","debug","checkShaderErrors","autoClearStencil","autoClearDepth","autoClearColor","autoClear","localClippingEnabled","LinearEncoding","physicallyCorrectLights","toneMappingExposure","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_Vector2","Vector4","_currentScissor","_currentScissorTest","_width","width","_height","height","_pixelRatio","_opaqueSort","_transparentSort","_viewport","_scissor","_scissorTest","_Frustum","Frustum","_clippingEnabled","_localClippingEnabled","_Matrix","Matrix4","_Vector","Vector3","setAttribute","REVISION","isWebGL1Renderer","shift","Error","getShaderPrecisionFormat","_gl.getShaderPrecisionFormat","error","message","xr","_WebXRManager","WebXRManager","this.getContext","getContextAttributes","this.getContextAttributes","forceContextLoss","this.forceContextLoss","extension","loseContext","forceContextRestore","this.forceContextRestore","restoreContext","getPixelRatio","this.getPixelRatio","setPixelRatio","this.setPixelRatio","setSize","getSize","this.getSize","this.setSize","updateStyle","isPresenting","warn","Math","floor","setViewport","getDrawingBufferSize","this.getDrawingBufferSize","setDrawingBufferSize","this.setDrawingBufferSize","pixelRatio","getCurrentViewport","this.getCurrentViewport","getViewport","this.getViewport","this.setViewport","x","y","isVector4","w","multiplyScalar","getScissor","this.getScissor","setScissor","this.setScissor","scissor","getScissorTest","this.getScissorTest","setScissorTest","this.setScissorTest","boolean","setOpaqueSort","this.setOpaqueSort","method","setTransparentSort","this.setTransparentSort","getClearColor","this.getClearColor","setClearColor","this.setClearColor","apply","arguments","getClearAlpha","this.getClearAlpha","setClearAlpha","this.setClearAlpha","this.clear","color","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearColor","this.clearColor","clearDepth","this.clearDepth","clearStencil","this.clearStencil","dispose","this.dispose","this.renderBufferDirect","frontFaceCW","determinant","resetTextureUnits","encoding","isXRRenderTarget","texture","vertexColors","itemSize","normalMap","tangent","morphAttributes","position","normal","toneMapped","setState","id","needsProgramChange","__version","isInstancedMesh","numPlanes","refreshLights","refreshMaterial","refreshProgram","p_uniforms","m_uniforms","useProgram","setValue","projectionMatrix","logarithmicDepthBuffer","far","LN2","uCamPos","map","cameraPosition","isMeshBasicMaterial","isOrthographicCamera","setOptional","floatVertexTextures","boneTexture","computeBoneTexture","boneTextureSize","receiveShadow","refreshFogUniforms","refreshMaterialUniforms","upload","uniformsNeedUpdate","isSpriteMaterial","center","setMaterial","index","count","rangeFactor","wireframe","getWireframeAttribute","setup","renderer","attribute","setIndex","rangeStart","drawRange","groupStart","drawStart","max","drawCount","min","dataCount","groupCount","Infinity","setLineWidth","wireframeLinewidth","setMode","LINES","TRIANGLES","lineWidth","linewidth","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","POINTS","renderInstances","isInstancedBufferGeometry","instanceCount","_maxInstanceCount","compile","this.compile","traverseVisible","setupLights","traverse","material2","pop","onAnimationFrameCallback","_WebGLAnimation","WebGLAnimation","setAnimationLoop","onAnimationFrame","time","window","setContext","this.setAnimationLoop","callback","this.render","isCamera","updateMatrixWorld","parent","cameraAutoUpdate","updateCamera","getCamera","setFromProjectionMatrix","finish","sort","beginShadows","endShadows","reset","isArrayCamera","cameras","camera2","buffers","setTest","setMask","setPolygonOffset","resetDefaultState","getActiveCubeFace","this.getActiveCubeFace","getActiveMipmapLevel","this.getActiveMipmapLevel","this.getRenderTarget","setRenderTargetTextures","this.setRenderTargetTextures","renderTarget","colorTexture","depthTexture","__webglTexture","renderTargetProperties","__hasExternalTextures","__autoAllocateDepthBuffer","useRenderbuffer","setRenderTargetFramebuffer","this.setRenderTargetFramebuffer","defaultFramebuffer","__webglFramebuffer","__useDefaultFramebuffer","this.setRenderTarget","activeCubeFace","activeMipmapLevel","useDefaultFramebuffer","bindFramebuffer","FRAMEBUFFER","setupRenderTarget","rebindTextures","framebuffer","isRenderTarget3D","isCube","isDataTexture3D","isDataTexture2DArray","isWebGLCubeRenderTarget","__webglMultisampledFramebuffer","scissorTest","framebufferBound","drawBuffers","textureProperties","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_CUBE_MAP_POSITIVE_X","framebufferTextureLayer","readRenderTargetPixels","this.readRenderTargetPixels","buffer","activeCubeFaceIndex","isWebGLRenderTarget","textureFormat","format","textureType","RGBAFormat","getParameter","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","FloatType","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","this.copyFramebufferToTexture","level","isFramebufferTexture","levelScale","pow","image","setTexture2D","copyTexSubImage2D","TEXTURE_2D","unbindTexture","copyTextureToTexture","this.copyTextureToTexture","srcTexture","dstTexture","glFormat","glType","pixelStorei","UNPACK_FLIP_Y_WEBGL","flipY","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","unpackAlignment","isDataTexture","texSubImage2D","data","isCompressedTexture","compressedTexSubImage2D","mipmaps","generateMipmap","copyTextureToTexture3D","this.copyTextureToTexture3D","sourceBox","setTexture3D","glTarget","TEXTURE_3D","setTexture2DArray","TEXTURE_2D_ARRAY","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","compressedTexSubImage3D","initTexture","this.initTexture","resetState","this.resetState","__THREE_DEVTOOLS__","dispatchEvent","CustomEvent","detail","Object","defineProperty","prototype","isWebGLRenderer"]
}
