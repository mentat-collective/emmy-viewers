shadow$provide.module$node_modules$mathbox$build$esm$util$pretty=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.format=exports.print=exports.number=exports.markup=exports.JSX=void 0;const checkFactor=(v,f)=>1E-4>Math.abs(v/f-Math.round(v/f)),formatMultiple=function(v,f,k,compact){v=Math.round(v/f);return 1===v?`${k}`:-1===v?`-${k}`:"1"===k?`${v}`:compact?`${v}${k}`:`${v}*${k}`},formatFraction=function(v,f,k,compact){v=Math.round(v*f);1===Math.abs(v)?
v=(0>v?"-":"")+k:"1"!==k&&(v+=compact?`${k}`:`*${k}`);return`${v}/${f}`},formatFactors=[{1:1},{1:1,"τ":2*Math.PI},{1:1,"π":Math.PI},{1:1,"τ":2*Math.PI,"π":Math.PI},{1:1,e:Math.E},{1:1,"τ":2*Math.PI,e:Math.E},{1:1,"π":Math.PI,e:Math.E},{1:1,"τ":2*Math.PI,"π":Math.PI,e:Math.E}],formatPrimes=[[420,[2,3,5,7]],[88200,[2,3,5,7]],[60060,[2,3,5,7,11,13]],[861764,[2,17,19,23,29]],[65536,[2]],[1E6,[2,5]]],prettyNumber=function(options){let cache,compact,e,pi,tau;options&&({cache,compact,tau,pi,e}=options);
compact=+!(null!=compact&&!compact);const formatIndex=+!(null!=tau&&!tau)+2*+!(null!=pi&&!pi)+4*+!(null!=e&&!e),numberCache=+!(null!=cache&&!cache)?{}:null;return function(v){if(null!=numberCache){var cached;if(null!=(cached=numberCache[v]))return cached;if(v===Math.round(v))return numberCache[v]=`${v}`}let out=`${v}`,best=out.length+out.indexOf(".")+2;cached=function(x){const d=x.length;if(d<=best)return out=`${x}`,best=d};for(const k in formatFactors[formatIndex]){const f=formatFactors[formatIndex][k];
if(checkFactor(v/f,1))cached(`${formatMultiple(v/f,1,k,compact)}`);else for(let [denom,list]of Array.from(formatPrimes)){let numer=v/f*denom;if(checkFactor(numer,1)){for(const p of Array.from(list)){let d,n;for(;checkFactor(n=numer/p,1)&&checkFactor(d=denom/p,1);)numer=n,denom=d}cached(`${formatFraction(v/f,denom,k,compact)}`);break}}}5<`${v}`.length&&cached(`${v.toPrecision(5)}`);null!=numberCache&&(numberCache[v]=out);return out}};exports.number=prettyNumber;exports.print=function(markup,level){null==
level&&(level="info");markup=prettyMarkup(markup);return console[level].apply(console,markup)};const prettyMarkup=function(markup){let quoted=!1,nested=0;const args=[];markup=markup.replace(/(\\[<={}> "'])|(=>|[<={}> "'])/g,function(_,escape,char){return null!=escape&&escape.length?escape:quoted&&!['"',"'"].includes(char)||nested&&!['"',"'","{","}"].includes(char)?char:(()=>{switch(char){case "\x3c":return args.push("color:rgb(128,0,128)"),"%c\x3c";case "\x3e":return args.push("color:rgb(128,0,128)"),
args.push("color:inherit"),"%c\x3e%c";case " ":return args.push("color:rgb(144,64,0)")," %c";case "\x3d":case "\x3d\x3e":return args.push("color:rgb(128,0,128)"),`%c${char}`;case '"':case "'":if(quoted=!quoted)return args.push(nested?"color:rgb(144,64,0)":"color:rgb(0,0,192)"),`${char}%c`;args.push(nested?"color:rgb(0,70,156)":"color:rgb(128,0,128)");return`%c${char}`;case "{":return 0===nested++?(args.push("color:rgb(0,70,156)"),`%c${char}`):char;case "}":return 0===--nested?(args.push("color:rgb(128,0,128)"),
`${char}%c`):char;default:return char}})()});return[markup].concat(args)};exports.markup=prettyMarkup;const prettyJSXPair=function(){const formatNumber=prettyNumber({compact:!1});return function(k,v$jscomp$1,op){const value=function(v$jscomp$0){if(v$jscomp$0 instanceof Array)return`[${v$jscomp$0.map(value).join(", ")}]`;switch(typeof v$jscomp$0){case "string":return v$jscomp$0.match("\n")?`"\n${v$jscomp$0}"\n`:`"${v$jscomp$0}"`;case "function":return v$jscomp$0=`${v$jscomp$0}`,v$jscomp$0.match("\n")?
`\n${v$jscomp$0}\n`:`${v$jscomp$0}`,v$jscomp$0=v$jscomp$0.replace(/^function (\([^)]*\))/,"$1 \x3d\x3e"),v$jscomp$0=v$jscomp$0.replace(/^(\([^)]*\)) =>\s*{\s*return\s*([^}]+)\s*;\s*}/,"$1 \x3d\x3e $2");case "number":return formatNumber(v$jscomp$0);default:return null!=v$jscomp$0&&v$jscomp$0!==!!v$jscomp$0?null!=v$jscomp$0._up?value(v$jscomp$0.map(v=>v)):v$jscomp$0.toMarkup?v$jscomp$0.toString():"{"+(()=>{const result=[];for(const kk in v$jscomp$0){const vv=v$jscomp$0[kk];if(Object.prototype.hasOwnProperty.call(v$jscomp$0,
kk)){var JSCompiler_temp_const=result,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.push;var JSCompiler_inline_result=kk;JSCompiler_inline_result=JSCompiler_inline_result===""+ +JSCompiler_inline_result||JSCompiler_inline_result.match(/^[A-Za-z_][A-Za-z0-9]*$/)?JSCompiler_inline_result:JSON.stringify(JSCompiler_inline_result);JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,`${JSCompiler_inline_result}: ${value(vv)}`)}}return result})().join(", ")+"}":`${JSON.stringify(v$jscomp$0)}`}};
return[k,op,function(v){return v.match('\n*"')?v:`{${v}}`}(value(v$jscomp$1))].join("")}}(),escapeHTML=function(str){str=str.replace(/&/g,"\x26amp;");str=str.replace(/</g,"\x26lt;");return str.replace(/"/g,"\x26quot;")};exports.format=function(str){const args=[].slice.call(arguments);args.shift();let out="\x3cspan\x3e";str=escapeHTML(str);for(const _arg of Array.from(args))str=str.replace(/%([a-z])/,function(_,f){_=args.shift();switch(f){case "c":return`</span><span style="${escapeHTML(_)}">`;default:return escapeHTML(_)}});
out+=str;return out+="\x3c/span\x3e"};exports.JSX={prop:(k,v)=>prettyJSXPair(k,v,"\x3d"),bind:(k,v)=>prettyJSXPair(k,v,"\x3d\x3e")}}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$util$pretty.js.map
