{
"version":3,
"file":"module$node_modules$$sicmutils$glsl_parser$lib$expr.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/@sicmutils/glsl-parser/lib/expr.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$sicmutils$glsl_parser$lib$expr\"] = function(global,require,module,exports) {\nlet state, token, tokens, idx;\n\nconst original_symbol = {\n  nud: function () {\n    return this.children && this.children.length ? this : fail(\"unexpected\")();\n  },\n  led: fail(\"missing operator\"),\n};\n\nconst symbol_table = {};\n\nfunction itself() {\n  return this;\n}\n\nsymbol(\"(ident)\").nud = itself;\nsymbol(\"(keyword)\").nud = itself;\nsymbol(\"(builtin)\").nud = itself;\nsymbol(\"(literal)\").nud = itself;\nsymbol(\"(end)\");\n\nsymbol(\":\");\nsymbol(\";\");\nsymbol(\",\");\nsymbol(\")\");\nsymbol(\"]\");\nsymbol(\"}\");\n\ninfixr(\"&&\", 30);\ninfixr(\"||\", 30);\ninfix(\"|\", 43);\ninfix(\"^\", 44);\ninfix(\"&\", 45);\ninfix(\"==\", 46);\ninfix(\"!=\", 46);\ninfix(\"<\", 47);\ninfix(\"<=\", 47);\ninfix(\">\", 47);\ninfix(\">=\", 47);\ninfix(\">>\", 48);\ninfix(\"<<\", 48);\ninfix(\"+\", 50);\ninfix(\"-\", 50);\ninfix(\"*\", 60);\ninfix(\"/\", 60);\ninfix(\"%\", 60);\ninfix(\"?\", 20, function (left) {\n  this.children = [left, expression(0), (advance(\":\"), expression(0))];\n  this.type = \"ternary\";\n  return this;\n});\ninfix(\".\", 80, function (left) {\n  token.type = \"literal\";\n  state.fake(token);\n  this.children = [left, token];\n  advance();\n  return this;\n});\ninfix(\"[\", 80, function (left) {\n  this.children = [left, expression(0)];\n  this.type = \"binary\";\n  advance(\"]\");\n  return this;\n});\ninfix(\"(\", 80, function (left) {\n  this.children = [left];\n  this.type = \"call\";\n\n  if (token.data !== \")\")\n    while (1) {\n      this.children.push(expression(0));\n      if (token.data !== \",\") break;\n      advance(\",\");\n    }\n  advance(\")\");\n  return this;\n});\n\nprefix(\"-\");\nprefix(\"+\");\nprefix(\"!\");\nprefix(\"~\");\nprefix(\"defined\");\nprefix(\"(\", function () {\n  this.type = \"group\";\n  this.children = [expression(0)];\n  advance(\")\");\n  return this;\n});\nprefix(\"++\");\nprefix(\"--\");\nsuffix(\"++\");\nsuffix(\"--\");\n\nassignment(\"=\");\nassignment(\"+=\");\nassignment(\"-=\");\nassignment(\"*=\");\nassignment(\"/=\");\nassignment(\"%=\");\nassignment(\"&=\");\nassignment(\"|=\");\nassignment(\"^=\");\nassignment(\">>=\");\nassignment(\"<<=\");\n\nmodule.exports = function (incoming_state, incoming_tokens) {\n  state = incoming_state;\n  tokens = incoming_tokens;\n  idx = 0;\n  let result;\n\n  if (!tokens.length) return;\n\n  advance();\n  result = expression(0);\n  result.parent = state[0];\n  emit(result);\n\n  if (idx < tokens.length) {\n    throw new Error(\"did not use all tokens\");\n  }\n\n  result.parent.children = [result];\n\n  function emit(node) {\n    state.unshift(node, false);\n    for (let i = 0, len = node.children.length; i < len; ++i) {\n      emit(node.children[i]);\n    }\n    state.shift();\n  }\n};\n\nfunction symbol(id, binding_power) {\n  let sym = symbol_table[id];\n  binding_power = binding_power || 0;\n  if (sym) {\n    if (binding_power > sym.lbp) {\n      sym.lbp = binding_power;\n    }\n  } else {\n    sym = Object.create(original_symbol);\n    sym.id = id;\n    sym.lbp = binding_power;\n    symbol_table[id] = sym;\n  }\n  return sym;\n}\n\nfunction expression(rbp) {\n  let left,\n    t = token;\n  advance();\n\n  left = t.nud();\n  while (rbp < token.lbp) {\n    t = token;\n    advance();\n    left = t.led(left);\n  }\n  return left;\n}\n\nfunction infix(id, bp, led) {\n  const sym = symbol(id, bp);\n  sym.led =\n    led ||\n    function (left) {\n      this.children = [left, expression(bp)];\n      this.type = \"binary\";\n      return this;\n    };\n}\n\nfunction infixr(id, bp, led) {\n  const sym = symbol(id, bp);\n  sym.led =\n    led ||\n    function (left) {\n      this.children = [left, expression(bp - 1)];\n      this.type = \"binary\";\n      return this;\n    };\n  return sym;\n}\n\nfunction prefix(id, nud) {\n  const sym = symbol(id);\n  sym.nud =\n    nud ||\n    function () {\n      this.children = [expression(70)];\n      this.type = \"unary\";\n      return this;\n    };\n  return sym;\n}\n\nfunction suffix(id) {\n  const sym = symbol(id, 150);\n  sym.led = function (left) {\n    this.children = [left];\n    this.type = \"suffix\";\n    return this;\n  };\n}\n\nfunction assignment(id) {\n  return infixr(id, 10, function (left) {\n    this.children = [left, expression(9)];\n    this.assignment = true;\n    this.type = \"assign\";\n    return this;\n  });\n}\n\nfunction advance(id) {\n  let next, value, type, output;\n\n  if (id && token.data !== id) {\n    return state.unexpected(\"expected `\" + id + \"`, got `\" + token.data + \"`\");\n  }\n\n  if (idx >= tokens.length) {\n    token = symbol_table[\"(end)\"];\n    return;\n  }\n\n  next = tokens[idx++];\n  value = next.data;\n  type = next.type;\n\n  if (type === \"ident\") {\n    output = state.scope.find(value) || state.create_node();\n    type = output.type;\n  } else if (type === \"builtin\") {\n    output = symbol_table[\"(builtin)\"];\n  } else if (type === \"keyword\") {\n    output = symbol_table[\"(keyword)\"];\n  } else if (type === \"operator\") {\n    output = symbol_table[value];\n    if (!output) {\n      return state.unexpected(\"unknown operator `\" + value + \"`\");\n    }\n  } else if (type === \"float\" || type === \"integer\") {\n    type = \"literal\";\n    output = symbol_table[\"(literal)\"];\n  } else {\n    return state.unexpected(\"unexpected token.\");\n  }\n\n  if (output) {\n    if (!output.nud) {\n      output.nud = itself;\n    }\n    if (!output.children) {\n      output.children = [];\n    }\n  }\n\n  output = Object.create(output);\n  output.token = next;\n  output.type = type;\n  if (!output.data) output.data = value;\n\n  return (token = output);\n}\n\nfunction fail(message) {\n  return function () {\n    return state.unexpected(message);\n  };\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","itself","symbol","id","binding_power","sym","symbol_table","lbp","Object","create","original_symbol","expression","rbp","left","t","token","advance","nud","led","infix","bp","children","type","infixr","prefix","suffix","sym.led","assignment","value","output","data","state","unexpected","idx","tokens","length","next","scope","find","create_node","fail","message","fake","push","module.exports","incoming_state","incoming_tokens","emit","node","unshift","i","len","shift","result","parent","Error"]
}
