shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$operator$readback=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Readback=void 0;global=require("module$node_modules$mathbox$build$esm$primitives$primitive");class Readback extends global.Primitive{static initClass(){this.traits="node bind operator readback entity active".split(" ");this.finals={channels:4}}init(){this.emitter=this.root=null;return this.active={}}make(){super.make();
this._compute("readback.data",()=>null!=this.readback?this.readback.data:void 0);this._compute("readback.items",()=>null!=this.readback?this.readback.items:void 0);this._compute("readback.width",()=>null!=this.readback?this.readback.width:void 0);this._compute("readback.height",()=>null!=this.readback?this.readback.height:void 0);this._compute("readback.depth",()=>null!=this.readback?this.readback.depth:void 0);this._helpers.bind.make([{to:"operator.source",trait:"source"}]);if(null!=this.bind.source){var {type,
channels,expr}=this.props;this.root=this._inherit("root");this._listen("root","root.update",this.update);var {items,width,height,depth}=this.bind.source.getDimensions(),sampler=this.bind.source.sourceShader(this._shaders.shader());this.readback=this._renderables.make("readback",{map:sampler,items,width,height,depth,channels,type});null!=expr&&this.readback.setCallback(expr);this._helpers.active.make()}}unmake(){null!=this.readback&&(this.readback.dispose(),this.emitter=this.root=this.readback=null,
this.active={});this._helpers.active.unmake();return this._helpers.bind.unmake()}update(){null!=this.readback&&this.isActive&&(this.readback.update(null!=this.root?this.root.getCamera():void 0),this.readback.post(),null!=this.props.expr&&this.readback.iterate())}resize(){let sJ;if(null!=this.readback){var {items,width,height,depth}=this.bind.source.getActiveDimensions();this.readback.setActive(items,width,height,depth);this.strideI=items;this.strideJ=sJ=items*width;return this.strideK=sJ*height}}change(changed,
_touched,_init){if(changed["readback.type"])return this.rebuild();if(changed["readback.expr"]&&this.readback)return this.readback.setCallback(this.props.expr)}}exports.Readback=Readback;Readback.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$operator$readback.js.map
