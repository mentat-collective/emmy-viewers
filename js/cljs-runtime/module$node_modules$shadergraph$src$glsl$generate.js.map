{
"version":3,
"file":"module$node_modules$shadergraph$src$glsl$generate.js",
"lineCount":13,
"mappings":"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",
"sources":["node_modules/shadergraph/src/glsl/generate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$glsl$generate\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unshadow = unshadow;\nexports.lines = lines;\nexports.list = list;\nexports.statements = statements;\nexports.body = body;\nexports.define = define;\nexports.fn = fn;\nexports.invoke = invoke;\nexports.same = same;\nexports.call = call;\nexports.build = build;\nexports.links = links;\nexports.defuse = defuse;\nexports.dedupe = dedupe;\nexports.hoist = hoist;\nexports.link = void 0;\n\nvar Graph = _interopRequireWildcard(require(\"../graph\"));\n\nvar $ = _interopRequireWildcard(require(\"./constants\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\n  GLSL code generator for compiler and linker stubs\n*/\n// Check if shadow outlet\nfunction unshadow(name) {\n  const real = name.replace($.SHADOW_ARG, \"\");\n\n  if (real !== name) {\n    return real;\n  } else {\n    return null;\n  }\n} // Line joiners\n\n\nfunction lines(lines) {\n  return lines.join(\"\\n\");\n}\n\nfunction list(lines) {\n  return lines.join(\", \");\n}\n\nfunction statements(lines) {\n  return lines.join(\";\\n\");\n} // Function body\n\n\nfunction body(entry) {\n  return {\n    entry,\n    type: \"void\",\n    params: [],\n    signature: [],\n    return: \"\",\n    vars: {},\n    calls: [],\n    post: [],\n    chain: {}\n  };\n} // Symbol define\n\n\nfunction define(a, b) {\n  return `#define ${a} ${b}`;\n} // Function define\n\n\nfunction fn(type, entry, params, vars, calls) {\n  return `${type} ${entry}(${params}) {\\n${vars}${calls}}`;\n} // Function invocation\n\n\nfunction invoke(ret, entry, args) {\n  ret = ret ? `${ret} = ` : \"\";\n  args = list(args);\n  return `  ${ret}${entry}(${args})`;\n} // Compare two signatures\n\n\nfunction same(a, b) {\n  for (let i = 0; i < a.length; i++) {\n    const A = a[i];\n    const B = b[i];\n\n    if (!B) {\n      return false;\n    }\n\n    if (A.type !== B.type) {\n      return false;\n    }\n\n    if (A.name === $.RETURN_ARG !== (B.name === $.RETURN_ARG)) {\n      return false;\n    }\n  }\n\n  return true;\n} // Generate call signature for module invocation\n\n\nfunction call(lookup, dangling, entry, signature, body) {\n  const args = [];\n  let ret = \"\";\n\n  for (let arg of Array.from(signature)) {\n    let id, shadow;\n    const {\n      name\n    } = arg;\n    let copy = id = lookup(name);\n    let other = null;\n    let meta = null;\n    let omit = false;\n    const isReturn = name === $.RETURN_ARG; // Shadowed inout: input side\n\n    if (shadow = arg.meta != null ? arg.meta.shadowed : undefined) {\n      other = lookup(shadow);\n\n      if (other) {\n        body.vars[other] = \"  \" + arg.param(other);\n        body.calls.push(`  ${other} = ${id}`);\n\n        if (!dangling(shadow)) {\n          arg = arg.split();\n        } else {\n          meta = {\n            shadowed: other\n          };\n        }\n      }\n    } // Shadowed inout: output side\n\n\n    if (shadow = arg.meta != null ? arg.meta.shadow : undefined) {\n      other = lookup(shadow);\n\n      if (other) {\n        if (!dangling(shadow)) {\n          arg = arg.split();\n          omit = true;\n        } else {\n          meta = {\n            shadow: other\n          };\n          continue;\n        }\n      }\n    }\n\n    if (isReturn) {\n      // Capture return value\n      ret = id;\n    } else if (!omit) {\n      // Pass all non return, non shadow args in\n      args.push(other != null ? other : id);\n    } // Export argument if unconnected\n\n\n    if (dangling(name)) {\n      let op = \"push\";\n\n      if (isReturn) {\n        if (body.return === \"\") {\n          op = \"unshift\"; // Preserve 'return' arg name\n\n          copy = name;\n          body.type = arg.spec;\n          body.return = `  return ${id}`;\n          body.vars[id] = \"  \" + arg.param(id);\n        } else {\n          body.vars[id] = \"  \" + arg.param(id);\n          body.params.push(arg.param(id, true));\n        }\n      } else {\n        body.params.push(arg.param(id, true));\n      } // Copy argument into new signature\n\n\n      arg = arg.copy(copy, meta);\n      body.signature[op](arg);\n    } else {\n      body.vars[id] = \"  \" + arg.param(id);\n    }\n  }\n\n  return body.calls.push(invoke(ret, entry, args));\n} // Assemble main() function from body and call reference\n\n\nfunction build(body, calls) {\n  const {\n    entry\n  } = body;\n  let code = null; // Check if we're only calling one snippet with identical signature\n  // and not building void main();\n\n  if (calls && calls.length === 1 && entry !== \"main\") {\n    const b = calls[0].module;\n\n    if (same(body.signature, b.main.signature)) {\n      code = define(entry, b.entry);\n    }\n  } // Otherwise build function body\n\n\n  if (code == null) {\n    let vars = (() => {\n      const result = [];\n\n      for (const v in body.vars) {\n        const decl = body.vars[v];\n        result.push(decl);\n      }\n\n      return result;\n    })();\n\n    ({\n      calls\n    } = body);\n    const {\n      post\n    } = body;\n    let {\n      params\n    } = body;\n    const {\n      type\n    } = body;\n    const ret = body.return;\n    calls = calls.concat(post);\n\n    if (ret !== \"\") {\n      calls.push(ret);\n    }\n\n    calls.push(\"\");\n\n    if (vars.length) {\n      vars.push(\"\");\n      vars = statements(vars) + \"\\n\";\n    } else {\n      vars = \"\";\n    }\n\n    calls = statements(calls);\n    params = list(params);\n    code = fn(type, entry, params, vars, calls);\n  }\n\n  return {\n    signature: body.signature,\n    code,\n    name: entry\n  };\n} // Build links to other callbacks\n\n\nfunction links(links) {\n  const out = {\n    defs: [],\n    bodies: []\n  };\n\n  for (const l of Array.from(links)) {\n    link(l, out);\n  }\n\n  out.defs = lines(out.defs);\n  out.bodies = statements(out.bodies);\n\n  if (out.defs === \"\") {\n    delete out.defs;\n  }\n\n  if (out.bodies === \"\") {\n    delete out.bodies;\n  }\n\n  return out;\n} // Link a module's entry point as a callback\n\n\nconst link = (link, out) => {\n  let arg, list;\n  const {\n    module,\n    name,\n    external\n  } = link;\n  const {\n    main\n  } = module;\n  const {\n    entry\n  } = module; // If signatures match, #define alias for the symbol\n\n  if (same(main.signature, external.signature)) {\n    return out.defs.push(define(name, entry));\n  } // Signatures differ, build one-line callback to match defined prototype\n  // Map names to names\n\n\n  const ins = [];\n  const outs = [];\n  let map = {};\n  const returnVar = [module.namespace, $.RETURN_ARG].join(\"\");\n\n  for (arg of Array.from(external.signature)) {\n    list = arg.inout === Graph.IN ? ins : outs;\n    list.push(arg);\n  }\n\n  for (arg of Array.from(main.signature)) {\n    list = arg.inout === Graph.IN ? ins : outs;\n    const other = list.shift();\n    let _name = other.name; // Avoid 'return' keyword\n\n    if (_name === $.RETURN_ARG) {\n      _name = returnVar;\n    }\n\n    map[arg.name] = _name;\n  } // Build function prototype to invoke the other side\n\n\n  let _lookup = name => map[name];\n\n  const _dangling = () => true;\n\n  const inner = body();\n  call(_lookup, _dangling, entry, main.signature, inner);\n  inner.entry = entry; // Avoid 'return' keyword\n\n  map = {\n    return: returnVar\n  };\n\n  _lookup = name => map[name] != null ? map[name] : name; // Build wrapper function for the calling side\n\n\n  const outer = body();\n  call(_lookup, _dangling, entry, external.signature, outer);\n  outer.calls = inner.calls;\n  outer.entry = name;\n  out.bodies.push(build(inner).code.split(\" {\")[0]);\n  return out.bodies.push(build(outer).code);\n}; // Remove all function prototypes to avoid redefinition errors\n\n\nexports.link = link;\n\nfunction defuse(code) {\n  // Don't try this at home kids\n  const re = /([A-Za-z0-9_]+\\s+)?[A-Za-z0-9_]+\\s+[A-Za-z0-9_]+\\s*\\([^)]*\\)\\s*;\\s*/gm;\n\n  const strip = code => code.replace(re, _m => \"\"); // Split into scopes by braces\n\n\n  const blocks = code.split(/(?=[{}])/g);\n  let level = 0;\n\n  for (let i = 0; i < blocks.length; i++) {\n    const b = blocks[i];\n\n    switch (b[0]) {\n      case \"{\":\n        level++;\n        break;\n\n      case \"}\":\n        level--;\n        break;\n    } // Only mess with top level scope\n\n\n    if (level === 0) {\n      // Preprocessor lines will fuck us up. Split on them.\n      const hash = b.split(/^[ \\t]*#/m);\n\n      for (let j = 0; j < hash.length; j++) {\n        let line = hash[j];\n\n        if (j > 0) {\n          // Trim off preprocessor directive\n          line = line.split(/\\n/);\n          const head = line.shift();\n          const rest = line.join(\"\\n\"); // Process rest\n\n          hash[j] = [head, strip(rest)].join(\"\\n\");\n        } else {\n          // Process entire line\n          hash[j] = strip(line);\n        }\n      } // Reassemble\n\n\n      blocks[i] = hash.join(\"#\");\n    }\n  }\n\n  return code = blocks.join(\"\");\n} // Remove duplicate uniforms / varyings / attributes\n\n\nfunction dedupe(code) {\n  const map = {};\n  const re = /((attribute|uniform|varying)\\s+)[A-Za-z0-9_]+\\s+([A-Za-z0-9_]+)\\s*(\\[[^\\]]*\\]\\s*)?;\\s*/gm;\n  return code.replace(re, function (m, qual, type, name, _struct) {\n    if (map[name]) {\n      return \"\";\n    }\n\n    map[name] = true;\n    return m;\n  });\n} // Move definitions to top so they compile properly\n\n\nfunction hoist(code) {\n  const filter = function (lines, re) {\n    const defs = [];\n    const out = [];\n\n    for (const line of Array.from(lines)) {\n      const list = line.match(re) ? defs : out;\n      list.push(line);\n    }\n\n    return defs.concat(out);\n  };\n\n  let lines = code.split(\"\\n\"); // Hoist symbol defines to the top so (re)definitions use the right alias\n\n  lines = filter(lines, /^#define ([^ ]+ _pg_[0-9]+_|_pg_[0-9]+_ [^ ]+)$/); // Hoist extensions\n\n  lines = filter(lines, /^#extension/);\n  return lines.join(\"\\n\");\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","lines","join","list","statements","body","entry","type","params","signature","return","vars","calls","post","chain","define","a","b","fn","invoke","ret","args","same","i","length","A","B","name","$","RETURN_ARG","lookup","dangling","arg","Array","from","shadow","copy","id","other","meta","omit","isReturn","shadowed","undefined","param","push","split","op","spec","build","code","main","result","v","decl","concat","value","unshadow","real","replace","SHADOW_ARG","links","out","defs","bodies","l","link","defuse","re","strip","_m","blocks","level","hash","j","line","head","shift","rest","dedupe","map","m","qual","_struct","hoist","filter","match","Graph","external","ins","outs","returnVar","namespace","inout","IN","_name","_lookup","_dangling","inner","outer"]
}
