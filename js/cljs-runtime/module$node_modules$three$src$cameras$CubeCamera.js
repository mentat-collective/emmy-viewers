shadow$provide.module$node_modules$three$src$cameras$CubeCamera=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.CubeCamera=void 0;global=require("module$node_modules$three$src$core$Object3D");var _Vector=require("module$node_modules$three$src$math$Vector3"),_PerspectiveCamera=require("module$node_modules$three$src$cameras$PerspectiveCamera");class CubeCamera extends global.Object3D{constructor(near,far,renderTarget){super();this.type="CubeCamera";
!0!==renderTarget.isWebGLCubeRenderTarget?console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."):(this.renderTarget=renderTarget,renderTarget=new _PerspectiveCamera.PerspectiveCamera(90,1,near,far),renderTarget.layers=this.layers,renderTarget.up.set(0,-1,0),renderTarget.lookAt(new _Vector.Vector3(1,0,0)),this.add(renderTarget),renderTarget=new _PerspectiveCamera.PerspectiveCamera(90,1,near,far),renderTarget.layers=this.layers,renderTarget.up.set(0,
-1,0),renderTarget.lookAt(new _Vector.Vector3(-1,0,0)),this.add(renderTarget),renderTarget=new _PerspectiveCamera.PerspectiveCamera(90,1,near,far),renderTarget.layers=this.layers,renderTarget.up.set(0,0,1),renderTarget.lookAt(new _Vector.Vector3(0,1,0)),this.add(renderTarget),renderTarget=new _PerspectiveCamera.PerspectiveCamera(90,1,near,far),renderTarget.layers=this.layers,renderTarget.up.set(0,0,-1),renderTarget.lookAt(new _Vector.Vector3(0,-1,0)),this.add(renderTarget),renderTarget=new _PerspectiveCamera.PerspectiveCamera(90,
1,near,far),renderTarget.layers=this.layers,renderTarget.up.set(0,-1,0),renderTarget.lookAt(new _Vector.Vector3(0,0,1)),this.add(renderTarget),near=new _PerspectiveCamera.PerspectiveCamera(90,1,near,far),near.layers=this.layers,near.up.set(0,-1,0),near.lookAt(new _Vector.Vector3(0,0,-1)),this.add(near))}update(renderer,scene){null===this.parent&&this.updateMatrixWorld();const renderTarget=this.renderTarget,[cameraPX,cameraNX,cameraPY,cameraNY,cameraPZ,cameraNZ]=this.children,currentXrEnabled=renderer.xr.enabled,
currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=!1;const generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=!1;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);
renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;renderTarget.texture.needsPMREMUpdate=!0}}exports.CubeCamera=CubeCamera}
//# sourceMappingURL=module$node_modules$three$src$cameras$CubeCamera.js.map
