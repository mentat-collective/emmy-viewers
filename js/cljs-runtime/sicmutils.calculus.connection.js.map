{"version":3,"sources":["sicmutils/calculus/connection.cljc"],"mappings":";AAeA;;;;mDAAA,nDAAMA,8GAGHC,QAAQC;AAHX,AAAA,kDAAA,qDAAA,gIAAA,gEAAA,RAKYD,+DACFC;;AAEV,yDAAA,zDAAME,0HAAuBC,OAAOH;AAApC,AAAA,GACS,AAACI,iDAAoBJ;AAD9B;AAAA,AAAA,MAAA,KAAAC,MAAA;;;AAEE,IAAMI,eAAa,AAACC,gDAAsBN;IACpCO,OAAK,wDAAA,IAAA,5DAACC;AADZ,AAEE,OAACV,iDACA,AAACW,8DACA,WAAKC;AAAL,AACE,OAACD,8DACA,WAAKE;AAAL,AACE,OAACF,8DACA,WAAKG;AAAL,AACE,OAACC,uDAAIN,KACA,AAACO,kDAAI,AAACC,uDAAI,iBAAAC,YAAK,CAACb,uCAAAA,gDAAAA,XAAOS,4BAAAA,xBAAID,4BAAAA;AAAjB,AAAA,8EAAAK,2BAAAA,jGAACN,oCAAAA,+CAAAA;KACD,iBAAAO,YAAK,CAACd,uCAAAA,gDAAAA,XAAOS,4BAAAA,xBAAIF,4BAAAA;AAAjB,AAAA,8EAAAO,2BAAAA,jGAACN,oCAAAA,+CAAAA;MACN,iBAAAO,YAAK,CAACf,uCAAAA,gDAAAA,XAAOQ,4BAAAA,xBAAID,4BAAAA;AAAjB,AAAA,8EAAAQ,2BAAAA,jGAACN,oCAAAA,+CAAAA;;qDACbP;qDACHA;qDACHA,mBACDL;;AAEL,yDAAA,zDAAMmB,0HAAuBhB,OAAOH;AAApC,AAAA,GACS,AAACI,iDAAoBJ;AAD9B;AAAA,AAAA,MAAA,KAAAC,MAAA;;;AAEE,IAAME,aAAO,AAACiB,4BACA,AAACC,6CAAKD,4BAAUjB;IACxBmB,KAAG,AAACC,iCAAcpB,WAAOH;IACzBK,eAAa,AAACC,gDAAsBN;IACpCwB,gBAAc,AAACC,iDAAuBzB;IACtCO,OAAK,wDAAA,IAAA,5DAACC;AALZ,AAME,OAACkB,8CACA,AAACjB,8DACA,WAAKC;AAAL,AACE,OAACD,8DACA,WAAKE;AAAL,AACE,OAACF,8DACA,WAAKkB;AAAL,AACE,OAACC,kCACA,WAAKC,IAAIC;AAAT,AACE,OAACjB,uDAAI,CAACS,mCAAAA,4CAAAA,XAAGK,wBAAAA,pBAAIG,wBAAAA,MACR,AAACjB,uDAAIN,KACA,AAACO,kDAAI,AAACC,uDAAI,iBAAAgB,YAAK,CAAC5B,2CAAAA,oDAAAA,XAAO0B,gCAAAA,5BAAIlB,gCAAAA;AAAjB,AAAA,8EAAAoB,2BAAAA,jGAACrB,oCAAAA,+CAAAA;KACD,iBAAAsB,YAAK,CAAC7B,2CAAAA,oDAAAA,XAAO0B,gCAAAA,5BAAInB,gCAAAA;AAAjB,AAAA,8EAAAsB,2BAAAA,jGAACrB,oCAAAA,+CAAAA;MACN,iBAAAsB,YAAK,CAAC9B,2CAAAA,oDAAAA,XAAOQ,gCAAAA,5BAAID,gCAAAA;AAAjB,AAAA,8EAAAuB,2BAAAA,jGAACJ,oCAAAA,+CAAAA;;GAClB7B;qDACHwB;qDACHnB;qDACHA,mBACDL;;AAEL,0DAAA,uEAAAkC,jIAAOG,4HACJC,eAA4BK;AAD/B,AAAA,IAAAR,cAAAD;SAAA,AAAAE,4CAAAD,YAAA,IAAA,jEACSI;SADT,AAAAH,4CAAAD,YAAA,IAAA,jEACYK;SADZ,AAAAJ,4CAAAD,YAAA,IAAA,jEACeM;cADfN,VACsBO;AADtB,AAAA,GAES,AAACE,6CAAEL,GAAGC;AAFf;AAAA,AAAA,MAAA,KAAAvC,MAAA;;;AAGE,UAAA,wEAAc4C;AAAd,AACU,IAAAC,mBAAI,CAACC,8EAAAA,iFAAAA,LAAyBF,6DAAAA;AAA9B,AAAA,oBAAAC;AAAAA;;AACI,OAACE,uBAAU,CAAA,4DAAqBN;;;WAF9C,yEAGeO,EAAEC,EAAEC;AAHnB,AAIU,OAACC,+CACA,6CAAKd,kDAAK,AAACe,IAAId,iDAAIU,+CAAEC,+CAAE,AAACG,IAAIZ,iDAAIU;;AAL3C,AAME,OAACG,6BACAX,EAAEJ,GACF,WAAKU;AAAL,AACE,OAACK,6BACAX,EAAEH,GACF,WAAKU;AAAL,AACE,OAACI,6BACAX,EAAEF,GACF,WAAKU;AAAL,AACE,OAACI,KAAKN,EAAEC,EAAEC;;;;;AAEvB,sDAAA,tDAAMK,oHAAuBlB,KAAKmB;AAAlC,AACE,IAAMd,IAAE,AAAA,4FAAY,AAACe,qCAAWD;AAAhC,AACE,OAAC3D,iDACA,AAACW,8DAAO,WAAK6B;AAAL,AACE,OAACqB,sDAA4BrB,SAAKmB;qDACpC,6DAAA,mFAAA,2FAAA,2FAAA,tUAACpB,wDACAC,iXAAkCK,SAC3C,AAACiB,qDAA2BH;;AAEjC,sDAAA,tDAAMI,oHAAuBvB,KAAKmB;AAAlC,AACE,IAAMd,IAAE,AAAA,4FAAY,AAACe,qCAAWD;AAAhC,AACE,OAAC/B,8CACA,AAACjB,8DAAO,WAAK6B;AAAL,AACE,OAACqB,sDAA4BrB,SAAKmB;qDACpC,6DAAA,mFAAA,2FAAA,2FAAA,tUAACpB,wDACAC,6WAAgCK,SACzC,AAACiB,qDAA2BH;;AAEjC,+CAAA,/CAAMK,sGAAgBxB,KAAKmB;AAA3B,AACE,OAACM,oDACA,AAACF,oDAAsBvB,KAAKmB;;AAM/B,mDAAA,nDAAMO,8GAAoBpD,IAAID,IAAID,IAAIV,MAAMG;AAA5C,AACE,OAACyB,kCACA,WAAKqC,IAAIC;AAAT,AACE,OAACrD,uDAAI,CAACV,uCAAAA,gDAAAA,XAAOO,4BAAAA,xBAAIuD,4BAAAA,MACZ,iBAAAE,YAAK,AAACC,8BAAaxD,IAAID;AAAvB,AAAA,8EAAAwD,2BAAAA,jGAACD,oCAAAA,+CAAAA;;GACRlE;;AAEH,wDAAA,xDAAMqE,wHAAsBlE,OAAOH;AAAnC,AACE,IAAMK,eAAa,AAACC,gDAAsBN;IACpCO,OAAK,wDAAA,IAAA,5DAACC;AADZ,AAEE,OAACkB,8CACA,AAACjB,8DACA,WAAKC;AAAL,AACE,OAACD,8DACA,WAAKE;AAAL,AACE,OAACF,8DACA,WAAKG;AAAL,AACE,OAACC,uDAAIN,KACA,AAACQ,uDAAI,AAACD,kDAAI,AAACC,uDAAI,iBAAAuD,YAAK,CAACnE,uCAAAA,gDAAAA,XAAOS,4BAAAA,xBAAID,4BAAAA;AAAjB,AAAA,8EAAA2D,2BAAAA,jGAAC5D,oCAAAA,+CAAAA;KACD,iBAAA6D,YAAK,CAACpE,uCAAAA,gDAAAA,XAAOS,4BAAAA,xBAAIF,4BAAAA;AAAjB,AAAA,8EAAA6D,2BAAAA,jGAAC5D,oCAAAA,+CAAAA;MACN,iBAAA6D,YAAK,CAACrE,uCAAAA,gDAAAA,XAAOQ,4BAAAA,xBAAID,4BAAAA;AAAjB,AAAA,8EAAA8D,2BAAAA,jGAAC5D,oCAAAA,+CAAAA;MACN,AAACE,kDAAI,AAACC,uDAAI,AAACiD,iDACApD,IAAID,IAAID,IAAIV,MAAMG,QACnB,AAAC6D,iDACApD,IAAIF,IAAIC,IAAIX,MAAMG,SACxB,AAAC6D,iDACArD,IAAID,IAAIE,IAAIZ,MAAMG;qDACpCE;qDACHA;qDACHA,mBACDL;;AAEL,wDAAA,xDAAMyE,wHAAsBtE,OAAOH;AAAnC,AACE,IAAMK,eAAa,AAACC,gDAAsBN;IACpCwB,gBAAc,AAACC,iDAAuBzB;IACtC0E,iBAAe,AAACnD,iCAAcpB,OAAOH;IACrCO,OAAK,wDAAA,IAAA,5DAACC;AAHZ,AAIE,OAACkB,8CACA,AAACjB,8DACA,WAAKC;AAAL,AACE,OAACD,8DACA,WAAKE;AAAL,AACE,OAACF,8DACA,WAAKkB;AAAL,AACE,OAACC,kCACA,WAAKC,IAAIC;AAAT,AACE,OAACjB,uDAAI,CAAC6D,+CAAAA,wDAAAA,XAAe/C,oCAAAA,hCAAIG,oCAAAA,MACpB,AAACjB,uDACAN,KACA,AAACQ,uDAAI,AAACD,kDAAI,AAACC,uDAAI,iBAAA4D,YAAK,CAACxE,uCAAAA,gDAAAA,XAAO0B,4BAAAA,xBAAIlB,4BAAAA;AAAjB,AAAA,8EAAAgE,2BAAAA,jGAACjE,oCAAAA,+CAAAA;KACD,iBAAAkE,YAAK,CAACzE,uCAAAA,gDAAAA,XAAO0B,4BAAAA,xBAAInB,4BAAAA;AAAjB,AAAA,8EAAAkE,2BAAAA,jGAACjE,oCAAAA,+CAAAA;MACN,iBAAAkE,YAAK,CAAC1E,uCAAAA,gDAAAA,XAAOQ,4BAAAA,xBAAID,4BAAAA;AAAjB,AAAA,8EAAAmE,2BAAAA,jGAAChD,oCAAAA,+CAAAA;MACN,AAACf,kDAAI,AAACC,uDAAI,AAACiD,iDACAnC,IAAIlB,IAAID,IAAIV,MAAMG,QACnB,AAAC6D,iDACAnC,IAAInB,IAAIC,IAAIX,MAAMG,SACxB,AAAC6D,iDACArD,IAAID,IAAImB,IAAI7B,MAAMG;GACrCH;qDACHwB;qDACHnB;qDACHA,mBACDL","names":["sicmutils.calculus.connection/make-Christoffel-1","symbols","basis","js/Error","sicmutils.calculus.connection/metric->Christoffel-1","metric","sicmutils.calculus.basis/coordinate-basis?","vector-basis","sicmutils.calculus.basis/basis->vector-basis","half","sicmutils.generic._SLASH_","sicmutils.structure.mapr","e_k","e_j","e_i","sicmutils.generic._STAR_","sicmutils.generic._","sicmutils.generic._PLUS_","G__101750","G__101751","G__101752","sicmutils.calculus.connection/metric->Christoffel-2","sicmutils.function/memoize","cljs.core.comp","gi","sicmutils.calculus.metric/invert","oneform-basis","sicmutils.calculus.basis/basis->oneform-basis","sicmutils.calculus.covariant/make-Christoffel","w_i","sicmutils.calculus.basis/contract","e_m","w_m","G__101754","G__101755","G__101756","p__101760","vec__101761","cljs.core.nth","sicmutils.calculus.connection/literal-Christoffel-names","name","s0","s1","s2","scripts","n","cljs.core._EQ_","s","or__4253__auto__","sicmutils.structure/orientation->separator","sicmutils.util/illegal","i","j","k","cljs.core.symbol","tex","sicmutils.structure/generate","Gijk","sicmutils.calculus.connection/literal-Christoffel-1","coordsys","sicmutils.calculus.manifold/manifold","sicmutils.calculus.manifold/literal-manifold-function","sicmutils.calculus.basis/coordinate-system->basis","sicmutils.calculus.connection/literal-Christoffel-2","sicmutils.calculus.connection/literal-Cartan","sicmutils.calculus.covariant/Christoffel->Cartan","sicmutils.calculus.connection/structure-constant","e_l","w_l","G__101770","sicmutils.operator/commutator","sicmutils.calculus.connection/metric->connection-1","G__101777","G__101778","G__101779","sicmutils.calculus.connection/metric->connection-2","inverse-metric","G__101780","G__101781","G__101782"],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.calculus.connection\n  (:require [sicmutils.calculus.basis :as b]\n            [sicmutils.calculus.covariant :as cov]\n            [sicmutils.calculus.manifold :as m]\n            [sicmutils.calculus.metric :as metric]\n            [sicmutils.function :as f]\n            [sicmutils.generic :as g]\n            [sicmutils.operator :as o]\n            [sicmutils.structure :as s]\n            [sicmutils.util :as u]))\n\n;; A metric induces a torsion-free connection.\n\n(defn make-Christoffel-1\n  \"Returns a data structure representing [Christoffel symbols of the first\n  kind](https://en.wikipedia.org/wiki/Christoffel_symbols#Christoffel_symbols_of_the_first_kind).\"\n  [symbols basis]\n  {:type ::Christoffel-1\n   :symbols symbols\n   :basis basis})\n\n(defn metric->Christoffel-1 [metric basis]\n  {:pre [(b/coordinate-basis? basis)]}\n  (let [vector-basis (b/basis->vector-basis basis)\n        half (g// 1 2)]\n    (make-Christoffel-1\n     (s/mapr\n      (fn [e_k]\n        (s/mapr\n         (fn [e_j]\n           (s/mapr\n            (fn [e_i]\n              (g/* half\n                   (g/- (g/+ (e_k (metric e_i e_j))\n                             (e_j (metric e_i e_k)))\n                        (e_i (metric e_j e_k)))))\n            vector-basis))\n         vector-basis))\n      vector-basis)\n     basis)))\n\n(defn metric->Christoffel-2 [metric basis]\n  {:pre [(b/coordinate-basis? basis)]}\n  (let [metric (f/memoize\n                (comp f/memoize metric))\n        gi (metric/invert metric basis)\n        vector-basis (b/basis->vector-basis basis)\n        oneform-basis (b/basis->oneform-basis basis)\n        half (g// 1 2)]\n    (cov/make-Christoffel\n     (s/mapr\n      (fn [e_k]\n        (s/mapr\n         (fn [e_j]\n           (s/mapr\n            (fn [w_i]\n              (b/contract\n               (fn [e_m w_m]\n                 (g/* (gi w_i w_m)\n                      (g/* half\n                           (g/- (g/+ (e_k (metric e_m e_j))\n                                     (e_j (metric e_m e_k)))\n                                (e_m (metric e_j e_k))))))\n               basis))\n            oneform-basis))\n         vector-basis))\n      vector-basis)\n     basis)))\n\n(defn- literal-Christoffel-names\n  [name [s0 s1 s2 :as scripts] n]\n  {:pre [(= s0 s1)]}\n  (letfn [(tex [s]\n            (or (s/orientation->separator s)\n                (u/illegal (str \"Bad scripts: \" scripts))))\n          (Gijk [i j k]\n            (symbol\n             (str name (tex s0) i j (tex s2) k)))]\n    (s/generate\n     n s0\n     (fn [i]\n       (s/generate\n        n s1\n        (fn [j]\n          (s/generate\n           n s2\n           (fn [k]\n             (Gijk i j k)))))))))\n\n(defn literal-Christoffel-1 [name coordsys]\n  (let [n (:dimension (m/manifold coordsys))]\n    (make-Christoffel-1\n     (s/mapr (fn [name]\n               (m/literal-manifold-function name coordsys))\n             (literal-Christoffel-names\n              name [::s/down ::s/down ::s/down] n))\n     (b/coordinate-system->basis coordsys))))\n\n(defn literal-Christoffel-2 [name coordsys]\n  (let [n (:dimension (m/manifold coordsys))]\n    (cov/make-Christoffel\n     (s/mapr (fn [name]\n               (m/literal-manifold-function name coordsys))\n             (literal-Christoffel-names\n              name [::s/down ::s/down ::s/up] n))\n     (b/coordinate-system->basis coordsys))))\n\n(defn literal-Cartan [name coordsys]\n  (cov/Christoffel->Cartan\n   (literal-Christoffel-2 name coordsys)))\n\n;; Connections for non-coordinate basis -- MTW p.210\n\n;; c_ijk = g_kl c_ij^l = g_kl e^l([e_i, e_j])\n\n(defn structure-constant [e_i e_j e_k basis metric]\n  (b/contract\n   (fn [e_l w_l]\n     (g/* (metric e_k e_l)\n          (w_l (o/commutator e_i e_j))))\n   basis))\n\n(defn metric->connection-1 [metric basis]\n  (let [vector-basis (b/basis->vector-basis basis)\n        half (g// 1 2)]\n    (cov/make-Christoffel\n     (s/mapr\n      (fn [e_k]\n        (s/mapr\n         (fn [e_j]\n           (s/mapr\n            (fn [e_i]\n              (g/* half\n                   (g/+ (g/- (g/+ (e_k (metric e_i e_j))\n                                  (e_j (metric e_i e_k)))\n                             (e_i (metric e_j e_k)))\n                        (g/- (g/+ (structure-constant\n                                   e_i e_j e_k basis metric)\n                                  (structure-constant\n                                   e_i e_k e_j basis metric))\n                             (structure-constant\n                              e_j e_k e_i basis metric)))))\n            vector-basis))\n         vector-basis))\n      vector-basis)\n     basis)))\n\n(defn metric->connection-2 [metric basis]\n  (let [vector-basis (b/basis->vector-basis basis)\n        oneform-basis (b/basis->oneform-basis basis)\n        inverse-metric (metric/invert metric basis)\n        half (g// 1 2)]\n    (cov/make-Christoffel\n     (s/mapr\n      (fn [e_k]\n        (s/mapr\n         (fn [e_j]\n           (s/mapr\n            (fn [w_i]\n              (b/contract\n               (fn [e_m w_m]\n                 (g/* (inverse-metric w_i w_m)\n                      (g/*\n                       half\n                       (g/+ (g/- (g/+ (e_k (metric e_m e_j))\n                                      (e_j (metric e_m e_k)))\n                                 (e_m (metric e_j e_k)))\n                            (g/- (g/+ (structure-constant\n                                       e_m e_j e_k basis metric)\n                                      (structure-constant\n                                       e_m e_k e_j basis metric))\n                                 (structure-constant\n                                  e_j e_k e_m basis metric))))))\n               basis))\n            oneform-basis))\n         vector-basis))\n      vector-basis)\n     basis)))\n"]}