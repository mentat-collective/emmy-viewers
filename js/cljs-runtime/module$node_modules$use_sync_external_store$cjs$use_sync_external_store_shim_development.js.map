{
"version":3,
"file":"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim_development.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$use_sync_external_store$cjs$use_sync_external_store_shim_development\"] = function(global,require,module,exports) {\n/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","error","format","_len2","arguments","length","args","Array","_key2","printWarning","level","stack","ReactSharedInternals","ReactDebugCurrentFrame","getStackAddendum","concat","argsWithFormat","map","item","String","unshift","Function","prototype","apply","call","console","is","x","y","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","didWarnOld18Alpha","undefined","React","startTransition","value","didWarnUncachedGetSnapshot","cachedValue","objectIs","_useState","useState","inst","forceUpdate","useLayoutEffect","checkIfSnapshotChanged","useEffect","handleStoreChange","useDebugValue","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","__REACT_DEVTOOLS_GLOBAL_HOOK__","registerInternalModuleStart","Error","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Object","shim","window","document","createElement","useSyncExternalStore$2","registerInternalModuleStop"]
}
