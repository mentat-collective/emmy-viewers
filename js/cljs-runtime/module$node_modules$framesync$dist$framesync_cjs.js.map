{
"version":3,
"file":"module$node_modules$framesync$dist$framesync_cjs.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/framesync/dist/framesync.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$framesync$dist$framesync_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nfunction createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexports.cancelSync = cancelSync;\nexports.default = sync;\nexports.flushSync = flushSync;\nexports.getFrameData = getFrameData;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","buffer","addToCurrentFrame","add","indexOf","push","length","cancel","index","splice","delete","process","frameData","i","has","Object","defineProperty","value","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","frame","delta","timestamp","stepsOrder","steps","reduce","acc","key","sync","processFrame","cancelSync","flushSync","processStep","stepId","Math","max","min","maxElapsed","forEach","default","getFrameData"]
}
