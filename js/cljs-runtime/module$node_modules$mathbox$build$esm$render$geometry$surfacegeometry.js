shadow$provide.module$node_modules$mathbox$build$esm$render$geometry$surfacegeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.SurfaceGeometry=void 0;var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute");global=require("module$node_modules$mathbox$build$esm$render$geometry$clipgeometry");class SurfaceGeometry extends global.ClipGeometry{constructor(options,build){null==build&&(build=!0);super();build&&this.construct(options)}construct(options){var closedX,
closedY;let segmentsX,segmentsY,surfaces;this._clipUniforms();this.closedX=closedX=options.closedX||!1;this.closedY=closedY=options.closedY||!1;this.width=closedX=(+options.width||2)+(closedX?1:0);this.height=closedY=(+options.height||2)+(closedY?1:0);this.surfaces=surfaces=+options.surfaces||1;this.layers=options=+options.layers||1;this.segmentsX=segmentsX=Math.max(0,closedX-1);this.segmentsY=segmentsY=Math.max(0,closedY-1);var points=closedX*closedY*surfaces*options;this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(segmentsX*
segmentsY*surfaces*options*6),1));this.setAttribute("position4",new _BufferAttribute.BufferAttribute(new Float32Array(4*points),4));this.setAttribute("surface",new _BufferAttribute.BufferAttribute(new Float32Array(2*points),2));points=this._emitter("index");const position=this._emitter("position4");let base=0;for(let i=0,end=surfaces*options,asc=0<=end;asc?i<end:i>end;asc?i++:i--){for(let j=0,end1=segmentsY,asc1=0<=end1;asc1?j<end1:j>end1;asc1?j++:j--){for(let k=0,end2=segmentsX,asc2=0<=end2;asc2?
k<end2:k>end2;asc2?k++:k--)points(base),points(base+1),points(base+closedX),points(base+closedX),points(base+1),points(base+closedX+1),base++;base++}base+=closedX}for(let l=0,end3=options,asc3=0<=end3;asc3?l<end3:l>end3;asc3?l++:l--)for(let z=0,end4=surfaces,asc4=0<=end4;asc4?z<end4:z>end4;asc4?z++:z--)for(let i1=0,y=i1,end5=closedY,asc5=0<=end5;asc5?i1<end5:i1>end5;asc5?i1++:i1--,y=i1)for(let j1=0,x=j1,end6=closedX,asc6=0<=end6;asc6?j1<end6:j1>end6;asc6?j1++:j1--,x=j1)position(x,y,z,l);this._finalize();
this.clip()}clip(width,height,surfaces,layers){null==width&&(width=this.width-this.closedX);null==height&&(height=this.height-this.closedY);null==surfaces&&({surfaces}=this);null==layers&&({layers}=this);width+=this.closedX;height+=this.closedY;const segmentsX=Math.max(0,width-1),segmentsY=Math.max(0,height-1);this._clipGeometry(width,height,surfaces,layers);return this._clipOffsets(6,segmentsX,segmentsY,surfaces,layers,this.segmentsX,this.segmentsY,this.surfaces,this.layers)}map(width,height,surfaces,
layers){null==width&&({width}=this);null==height&&({height}=this);null==surfaces&&({surfaces}=this);null==layers&&({layers}=this);return this._clipMap(width,height,surfaces,layers)}}exports.SurfaceGeometry=SurfaceGeometry}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$geometry$surfacegeometry.js.map
