shadow$provide.module$node_modules$three$src$textures$Texture=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function serializeImage(image){if("undefined"!==typeof HTMLImageElement&&image instanceof HTMLImageElement||
"undefined"!==typeof HTMLCanvasElement&&image instanceof HTMLCanvasElement||"undefined"!==typeof ImageBitmap&&image instanceof ImageBitmap)return _ImageUtils.ImageUtils.getDataURL(image);if(image.data)return{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};console.warn("THREE.Texture: Unable to serialize Texture.");return{}}Object.defineProperty(exports,"__esModule",{value:!0});exports.Texture=void 0;global=require("module$node_modules$three$src$core$EventDispatcher");
var _constants=require("module$node_modules$three$src$constants"),MathUtils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,
key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$three$src$math$MathUtils")),_Vector=require("module$node_modules$three$src$math$Vector2"),_Matrix=require("module$node_modules$three$src$math$Matrix3"),_ImageUtils=require("module$node_modules$three$src$extras$ImageUtils");let textureId=
0;class Texture extends global.EventDispatcher{constructor(image=Texture.DEFAULT_IMAGE,mapping=Texture.DEFAULT_MAPPING,wrapS=_constants.ClampToEdgeWrapping,wrapT=_constants.ClampToEdgeWrapping,magFilter=_constants.LinearFilter,minFilter=_constants.LinearMipmapLinearFilter,format=_constants.RGBAFormat,type=_constants.UnsignedByteType,anisotropy=1,encoding=_constants.LinearEncoding){super();Object.defineProperty(this,"id",{value:textureId++});this.uuid=MathUtils.generateUUID();this.name="";this.image=
image;this.mipmaps=[];this.mapping=mapping;this.wrapS=wrapS;this.wrapT=wrapT;this.magFilter=magFilter;this.minFilter=minFilter;this.anisotropy=anisotropy;this.format=format;this.internalFormat=null;this.type=type;this.offset=new _Vector.Vector2(0,0);this.repeat=new _Vector.Vector2(1,1);this.center=new _Vector.Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new _Matrix.Matrix3;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.encoding=encoding;
this.userData={};this.version=0;this.onUpdate=null;this.needsPMREMUpdate=this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=
source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;
this.encoding=source.encoding;this.userData=JSON.parse(JSON.stringify(source.userData));return this}toJSON(meta){const isRootObject=void 0===meta||"string"===typeof meta;if(!isRootObject&&void 0!==meta.textures[this.uuid])return meta.textures[this.uuid];const output={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,
wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const image=this.image;void 0===image.uuid&&(image.uuid=MathUtils.generateUUID());if(!isRootObject&&void 0===meta.images[image.uuid]){let url;if(Array.isArray(image)){url=[];for(let i=0,l=image.length;i<l;i++)image[i].isDataTexture?
url.push(serializeImage(image[i].image)):url.push(serializeImage(image[i]))}else url=serializeImage(image);meta.images[image.uuid]={uuid:image.uuid,url}}output.image=image.uuid}"{}"!==JSON.stringify(this.userData)&&(output.userData=this.userData);isRootObject||(meta.textures[this.uuid]=output);return output}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(uv){if(this.mapping!==_constants.UVMapping)return uv;uv.applyMatrix3(this.matrix);if(0>uv.x||1<uv.x)switch(this.wrapS){case _constants.RepeatWrapping:uv.x-=
Math.floor(uv.x);break;case _constants.ClampToEdgeWrapping:uv.x=0>uv.x?0:1;break;case _constants.MirroredRepeatWrapping:uv.x=1===Math.abs(Math.floor(uv.x)%2)?Math.ceil(uv.x)-uv.x:uv.x-Math.floor(uv.x)}if(0>uv.y||1<uv.y)switch(this.wrapT){case _constants.RepeatWrapping:uv.y-=Math.floor(uv.y);break;case _constants.ClampToEdgeWrapping:uv.y=0>uv.y?0:1;break;case _constants.MirroredRepeatWrapping:uv.y=1===Math.abs(Math.floor(uv.y)%2)?Math.ceil(uv.y)-uv.y:uv.y-Math.floor(uv.y)}this.flipY&&(uv.y=1-uv.y);
return uv}set needsUpdate(value){!0===value&&this.version++}}exports.Texture=Texture;Texture.DEFAULT_IMAGE=void 0;Texture.DEFAULT_MAPPING=_constants.UVMapping;Texture.prototype.isTexture=!0}
//# sourceMappingURL=module$node_modules$three$src$textures$Texture.js.map
