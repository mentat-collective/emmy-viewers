{"version":3,"sources":["sicmutils/generic.cljc"],"mappings":"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","names":["js/sicmutils","js/sicmutils.generic","js/sicmutils.generic.add","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__95392","cljs.core/MultiFn","cljs.core.symbol","sicmutils.value/argument-kind","sicmutils.generic/add","cljs.core/Keyword","k__14627__auto__","fexpr__95397","_","var_args","G__95402","sicmutils.generic/+","args-arr__4885__auto__","len__4864__auto__","i__4865__auto__","argseq__4886__auto__","cljs.core/IndexedSeq","seq95399","G__95400","cljs.core/first","cljs.core/next","G__95401","self__4851__auto__","x","y","sicmutils.value/numeric-zero?","more","cljs.core.reduce","sicmutils.generic._PLUS_","js/sicmutils.generic.negate","fexpr__95403","sicmutils.generic/negate","fexpr__95404","js/sicmutils.generic.sub","fexpr__95405","sicmutils.generic/sub","fexpr__95406","a","b","G__95411","sicmutils.generic/-","seq95408","G__95409","G__95410","sicmutils.generic._","cljs.core.apply","js/sicmutils.generic.mul","fexpr__95439","sicmutils.generic/mul","fexpr__95440","G__95445","sicmutils.generic/*","seq95442","G__95443","G__95444","numx?","sicmutils.value/numerical?","numy?","sicmutils.value/zero?","sicmutils.value/zero-like","sicmutils.value/one?","sicmutils.generic._STAR_","js/sicmutils.generic.invert","fexpr__95449","sicmutils.generic/invert","fexpr__95452","G__95453","G__95454","sicmutils.generic/div","sicmutils.generic/square","sicmutils.generic/*in-default-invert*","*in-default-invert*-orig-val__95455","*in-default-invert*-temp-val__95456","js/sicmutils.generic.div","fexpr__95457","fexpr__95458","cljs.core.ex_info","sicmutils.generic//","G__95463","seq95460","G__95461","G__95462","sicmutils.value/number?","sicmutils.generic._SLASH_","sicmutils.generic/divide","js/sicmutils.generic.exact-divide","fexpr__95464","sicmutils.generic/exact-divide","fexpr__95465","js/sicmutils.generic.exp","fexpr__95466","sicmutils.generic/exp","fexpr__95467","js/sicmutils.generic.exp2","fexpr__95468","sicmutils.generic/exp2","fexpr__95469","sicmutils.generic/expt","js/sicmutils.generic.exp10","fexpr__95470","sicmutils.generic/exp10","fexpr__95471","js/sicmutils.generic.log","fexpr__95472","sicmutils.generic/log","fexpr__95473","js/sicmutils.generic.log2","fexpr__95474","sicmutils.generic/log2","fexpr__95475","l2","Math/log","js/sicmutils.generic.log10","fexpr__95476","sicmutils.generic/log10","fexpr__95477","l10","js/sicmutils.generic.expt","fexpr__95478","fexpr__95479","cljs.core/not","sicmutils.generic/negative?","sicmutils.util/illegal","js/Error","sicmutils.generic/default-expt","s","e","sicmutils.value/native-integral?","kind","sicmutils.value/kind","temp__5751__auto__","mul'","cljs.core/get-method","base","pow","n","sicmutils.value/one-like","z","t","cljs.core/even?","cljs.core/quot","expt'","js/sicmutils.generic.square","fexpr__95480","fexpr__95481","js/sicmutils.generic.cube","fexpr__95482","sicmutils.generic/cube","fexpr__95483","js/sicmutils.generic.sqrt","fexpr__95484","sicmutils.generic/sqrt","fexpr__95485","js/sicmutils.generic.negative?","fexpr__95486","fexpr__95487","js/sicmutils.generic.infinite?","fexpr__95488","sicmutils.generic/infinite?","fexpr__95489","js/sicmutils.generic.abs","fexpr__95490","sicmutils.generic/abs","fexpr__95491","js/sicmutils.generic.floor","fexpr__95492","sicmutils.generic/floor","fexpr__95493","sicmutils.generic/integer-part","js/sicmutils.generic.ceiling","fexpr__95494","sicmutils.generic/ceiling","fexpr__95495","js/sicmutils.generic.integer-part","fexpr__95496","fexpr__95497","js/sicmutils.generic.fractional-part","fexpr__95498","sicmutils.generic/fractional-part","fexpr__95499","js/sicmutils.generic.quotient","fexpr__95500","sicmutils.generic/quotient","fexpr__95501","sicmutils.generic/modulo-default","js/sicmutils.generic.modulo","fexpr__95502","sicmutils.generic/modulo","fexpr__95503","sicmutils.generic/remainder-default","d","divnd","cljs.core._EQ_","js/sicmutils.generic.remainder","fexpr__95504","sicmutils.generic/remainder","fexpr__95505","js/sicmutils.generic.gcd","fexpr__95506","sicmutils.generic/gcd","fexpr__95507","js/sicmutils.generic.lcm","fexpr__95508","sicmutils.generic/lcm","fexpr__95509","g","js/sicmutils.generic.cos","fexpr__95510","sicmutils.generic/cos","fexpr__95511","sicmutils.generic/sin","js/sicmutils.generic.sin","fexpr__95512","fexpr__95513","js/sicmutils.generic.tan","fexpr__95514","sicmutils.generic/tan","fexpr__95515","js/sicmutils.generic.cot","fexpr__95516","sicmutils.generic/cot","fexpr__95517","sicmutils.generic/csc","js/sicmutils.generic.sec","fexpr__95518","sicmutils.generic/sec","fexpr__95519","js/sicmutils.generic.csc","fexpr__95520","fexpr__95521","js/sicmutils.generic.atan","fexpr__95522","sicmutils.generic/atan","fexpr__95523","js/sicmutils.generic.asin","fexpr__95524","sicmutils.generic/asin","fexpr__95525","js/sicmutils.generic.acos","fexpr__95526","sicmutils.generic/acos","fexpr__95527","js/sicmutils.generic.acot","fexpr__95528","sicmutils.generic/acot","fexpr__95529","Math/PI","js/sicmutils.generic.asec","fexpr__95530","sicmutils.generic/asec","fexpr__95531","js/sicmutils.generic.acsc","fexpr__95532","sicmutils.generic/acsc","fexpr__95533","js/sicmutils.generic.cosh","fexpr__95534","sicmutils.generic/cosh","fexpr__95535","sicmutils.generic/sinh","js/sicmutils.generic.sinh","fexpr__95536","fexpr__95537","js/sicmutils.generic.tanh","fexpr__95538","sicmutils.generic/tanh","fexpr__95539","exp2x","js/sicmutils.generic.sech","fexpr__95540","sicmutils.generic/sech","fexpr__95541","js/sicmutils.generic.coth","fexpr__95542","sicmutils.generic/coth","fexpr__95543","sicmutils.generic/csch","js/sicmutils.generic.csch","fexpr__95544","fexpr__95545","js/sicmutils.generic.acosh","fexpr__95546","sicmutils.generic/acosh","fexpr__95547","js/sicmutils.generic.asinh","fexpr__95548","sicmutils.generic/asinh","fexpr__95549","js/sicmutils.generic.atanh","fexpr__95550","sicmutils.generic/atanh","fexpr__95551","js/sicmutils.generic.acoth","fexpr__95552","sicmutils.generic/acoth","fexpr__95553","js/sicmutils.generic.asech","fexpr__95554","sicmutils.generic/asech","fexpr__95555","x+1","js/sicmutils.generic.acsch","fexpr__95556","sicmutils.generic/acsch","fexpr__95557","js/sicmutils.generic.sinc","fexpr__95558","sicmutils.generic/sinc","fexpr__95559","js/sicmutils.generic.tanc","fexpr__95560","sicmutils.generic/tanc","fexpr__95561","sx","js/sicmutils.generic.sinhc","fexpr__95562","sicmutils.generic/sinhc","fexpr__95563","js/sicmutils.generic.tanhc","fexpr__95564","sicmutils.generic/tanhc","fexpr__95565","js/sicmutils.generic.make-rectangular","fexpr__95566","sicmutils.generic/make-rectangular","fexpr__95567","js/sicmutils.generic.make-polar","fexpr__95568","sicmutils.generic/make-polar","fexpr__95569","js/sicmutils.generic.real-part","fexpr__95570","sicmutils.generic/real-part","fexpr__95571","js/sicmutils.generic.imag-part","fexpr__95572","sicmutils.generic/imag-part","fexpr__95573","js/sicmutils.generic.magnitude","fexpr__95574","sicmutils.generic/magnitude","fexpr__95575","js/sicmutils.generic.angle","fexpr__95576","sicmutils.generic/angle","fexpr__95577","js/sicmutils.generic.conjugate","fexpr__95578","sicmutils.generic/conjugate","fexpr__95579","js/sicmutils.generic.transpose","fexpr__95580","sicmutils.generic/transpose","fexpr__95581","js/sicmutils.generic.trace","fexpr__95582","sicmutils.generic/trace","fexpr__95583","js/sicmutils.generic.determinant","fexpr__95584","sicmutils.generic/determinant","fexpr__95585","js/sicmutils.generic.dimension","fexpr__95586","sicmutils.generic/dimension","fexpr__95587","js/sicmutils.generic.dot-product","fexpr__95588","sicmutils.generic/dot-product","fexpr__95589","js/sicmutils.generic.inner-product","fexpr__95590","sicmutils.generic/inner-product","fexpr__95591","js/sicmutils.generic.outer-product","fexpr__95592","sicmutils.generic/outer-product","fexpr__95593","js/sicmutils.generic.cross-product","fexpr__95594","sicmutils.generic/cross-product","fexpr__95595","l","r","js/sicmutils.generic.solve-linear","fexpr__95596","sicmutils.generic/solve-linear","fexpr__95597","js/sicmutils.generic.solve-linear-right","fexpr__95598","sicmutils.generic/solve-linear-right","fexpr__95599","sicmutils.generic/solve-linear-left","sicmutils.generic/derivative-symbol","js/sicmutils.generic.partial-derivative","fexpr__95600","sicmutils.generic/partial-derivative","fexpr__95601","js/sicmutils.generic.Lie-derivative","fexpr__95602","sicmutils.generic/Lie-derivative","fexpr__95603","js/sicmutils.generic.simplify","fexpr__95604","sicmutils.generic/simplify","fexpr__95605","sicmutils.value/add-object-symbols!","cljs.core/+","cljs.core/*","cljs.core/-","cljs.core//","cljs.core/mod","cljs.core/rem","cljs.core/neg?","cljs.core/infinite?","cljs.core/<","cljs.core/<=","cljs.core/>","cljs.core/>=","cljs.core/="],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.generic\n  \"The home of most of the SICMUtils extensible generic operations. The bulk of\n  the others live in [[sicmutils.value]].\n\n  See [the `Generics`\n  cljdocs](https://cljdoc.org/d/sicmutils/sicmutils/CURRENT/doc/basics/generics)\n  for a detailed discussion of how to use and extend the generic operations\n  defined in [[sicmutils.generic]] and [[sicmutils.value]].\"\n  (:refer-clojure :exclude [/ + - * divide infinite? abs])\n  (:require [sicmutils.util :as u]\n            [sicmutils.util.def :refer [defgeneric] :include-macros true]\n            [sicmutils.value :as v]))\n\n;; ## Generic Numerics\n;;\n;; The first section introduces generic versions of\n;; Clojure's [[+]], [[-]], [[*]] and [[/]] operations. Any type that can\n;; implement all four of these operations forms a\n;; mathematical [Field](https://en.wikipedia.org/wiki/Field_(mathematics)).\n;;\n;; There are, of course, other technical names for types that can only implement\n;; a subset of these operations, and more specializations of those names\n;; depending on whether or not the implementation of these binary operations is\n;; commutative or\n;; associative. (See [Semigroup](https://en.wikipedia.org/wiki/Semigroup)\n;; and [Monoid](https://en.wikipedia.org/wiki/Monoid) first, and start exploring\n;; the realm of abstract algebra from there.)\n;;\n;; This library takes a permissive stance on extensibility. Types extend the\n;; arithmetic operators by extending their unary or binary cases:\n;;\n;; - [[add]] for [[+]]\n;; - [[sub]] and [[negate]] for [[-]]\n;; - [[mul]] for [[*]]\n;; - [[invert]] and [[div]] for [[/]]\n;;\n;; And the higher arity version reduces its list of arguments using this binary\n;; operation. This makes it possible and easy to make the arithmetic operators\n;; combine different types! It's up to you to do this in a mathematically\n;; responsible way.\n;;\n;; Dispatch occurs via [[value/argument-kind]]. Documentation on how to extend\n;; each generic operation to some new type is sparse. Have a look\n;; at [[sicmutils.complex]] for an example of how to do this.\n\n(defgeneric ^:no-doc add 2\n  \"Returns the sum of arguments `a` and `b`.\n\n  See [[+]] for a variadic version of [[add]].\"\n  {:name '+\n   :dfdx (fn [_ _] 1)\n   :dfdy (fn [_ _] 1)})\n\n(defn +\n  \"Generic implementation of `+`. Returns the sum of all supplied arguments. `(+)`\n  returns 0, the additive identity.\n\n  When applied between numbers, acts like `clojure.core/+`. Dispatch is open,\n  however, making it possible to 'add' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (+ [1 2 3] [2 3 4])\n  ;;=> (up 3 5 7)\n  ```\"\n  ([] 0)\n  ([x] x)\n  ([x y]\n   (cond (v/numeric-zero? x) y\n         (v/numeric-zero? y) x\n         :else (add x y)))\n  ([x y & more]\n   (reduce + (+ x y) more)))\n\n(defgeneric negate 1\n  \"Returns the negation of `a`.\n\n  Equivalent to `(- (v/zero-like a) a)`.\"\n  {:name '-\n   :dfdx (fn [_] -1)})\n\n(defgeneric ^:no-doc sub 2\n  \"Returns the difference of `a` and `b`.\n\n  Equivalent to `(+ a (negate b))`.\n\n  See [[-]] for a variadic version of [[sub]].\"\n  {:name '-\n   :dfdx (fn [_ _] 1)\n   :dfdy (fn [_ _] -1)})\n\n(defmethod sub :default [a b]\n  (add a (negate b)))\n\n(defn -\n  \"Generic implementation of `-`.\n\n  If one argument is supplied, returns the negation of `a`. Else returns the\n  difference of the first argument `a` and the sum of all remaining\n  arguments. `(-)` returns 0.\n\n  When applied between numbers, acts like `clojure.core/-`. Dispatch is open,\n  however, making it possible to 'subtract' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (- [1 2 3] [2 3 4])\n  ;;=> (up -1 -1 -1)\n\n  (- [1 10])\n  ;;=> (up -1 -10)\n  ```\"\n  ([] 0)\n  ([x] (negate x))\n  ([x y]\n   (cond (v/numeric-zero? y) x\n         (v/numeric-zero? x) (negate y)\n         :else (sub x y)))\n  ([x y & more]\n   (- x (apply + y more))))\n\n(defgeneric ^:no-doc mul 2\n  \"Returns the product of `a` and `b`.\n\n  See [[*]] for a variadic version of [[mul]].\"\n  {:name '*\n   :dfdx (fn [_ y] y)\n   :dfdy (fn [x _] x)})\n\n;;; In the binary arity of [[*]] we test for exact (numerical) zero because it\n;;; is possible to produce a wrong-type zero here, as follows:\n;;;\n;;;               |0|             |0|\n;;;       |a b c| |0|   |0|       |0|\n;;;       |d e f| |0| = |0|, not  |0|\n;;;\n;;; We are less worried about the v/zero? below,\n;;; because any invertible matrix is square.\n\n(defn *\n  \"Generic implementation of `*`. Returns the product of all supplied\n  arguments. `(*)` returns 1, the multiplicative identity.\n\n  When applied between numbers, acts like `clojure.core/*`. Dispatch is open,\n  however, making it possible to 'multiply' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (* 2 #sicm/complex \\\"3 + 1i\\\")\n  ;;=> #sicm/complex \\\"6 + 2i\\\"\n  ```\"\n  ([] 1)\n  ([x] x)\n  ([x y]\n   (let [numx? (v/numerical? x)\n         numy? (v/numerical? y)]\n     (cond (and numx? (v/zero? x)) (v/zero-like y)\n           (and numy? (v/zero? y)) (v/zero-like x)\n           (and numx? (v/one? x)) y\n           (and numy? (v/one? y)) x\n           :else (mul x y))))\n  ([x y & more]\n   (reduce * (* x y) more)))\n\n(declare div square)\n\n(defgeneric invert 1\n  \"Returns the multiplicative inverse of `a`.\n\n  Equivalent to `(/ 1 a)`.\"\n  {:name '/\n   :dfdx (fn [x] (div -1 (square x)))})\n\n(def ^{:dynamic true\n       :no-doc true}\n  *in-default-invert*\n  false)\n\n(defmethod invert :default [a]\n  (binding [*in-default-invert* true]\n    (div 1 a)))\n\n(defgeneric div 2\n  \"Returns the result of dividing `a` and `b`.\n\n  Equivalent to `(* a (negate b))`.\n\n  See [[/]] for a variadic version of [[div]].\"\n  {:name '/\n   :dfdx (fn [_ y] (div 1 y))\n   :dfdy (fn [x y] (div (negate x)\n                       (square y)))})\n\n(defmethod div :default [a b]\n  (if *in-default-invert*\n    (throw\n     (ex-info \"No implementation of [[invert]] or [[div]].\"\n              {:method 'div :args [a b]}))\n    (mul a (invert b))))\n\n(defn /\n  \"Generic implementation of `/`.\n\n  If one argument is supplied, returns the multiplicative inverse of `a`. Else\n  returns the result of dividing first argument `a` by the product of all\n  remaining arguments. `(/)` returns 1, the multiplicative identity.\n\n  When applied between numbers, acts like `clojure.core//`. Dispatch is open,\n  however, making it possible to 'divide' types wherever the behavior is\n  mathematically sound.\n\n  For example:\n\n  ```clojure\n  (/ [2 4 6] 2)\n  ;;=> (up 1 2 3)\n  ```\"\n  ([] 1)\n  ([x] (invert x))\n  ([x y]\n   (if (and (v/number? y) (v/one? y))\n     x\n     (div x y)))\n  ([x y & more]\n   (/ x (apply * y more))))\n\n(def ^{:doc \"Alias for [[/]].\"}\n  divide\n  /)\n\n(defgeneric exact-divide 2\n  \"Similar to the binary case of [[/]], but throws if `(v/exact? <result>)`\n  returns false.\")\n\n;; ### Exponentiation, Log, Roots\n;;\n;; This next batch of generics covers various forms of exponentation and its\n;; inverse.\n\n(defgeneric exp 1\n  \"Returns the base-e exponential of `x`. Equivalent to `(expt e x)`, given\n  some properly-defined `e` symbol.\"\n  {:dfdx exp})\n\n(defgeneric exp2 1\n  \"Returns the base-2 exponential of `x`. Equivalent to `(expt 2 x)`.\")\n\n(declare expt)\n\n(defmethod exp2 :default [x] (expt 2 x))\n\n(defgeneric exp10 1\n  \"Returns the base-10 exponential of `x`. Equivalent to `(expt 10 x)`.\")\n\n(defmethod exp10 :default [x] (expt 10 x))\n\n(defgeneric log 1\n  \"Returns the natural logarithm of `x`.\"\n  {:dfdx invert})\n\n(defgeneric log2 1\n  \"Returns the base-2 logarithm of `x`, ie, $log_2(x)$.\")\n\n(let [l2 (Math/log 2)]\n  (defmethod log2 :default [x] (div (log x) l2)))\n\n(defgeneric log10 1\n  \"Returns the base-10 logarithm of `x`, ie, $log_10(x)$.\")\n\n(let [l10 (Math/log 10)]\n  (defmethod log10 :default [x] (div (log x) l10)))\n\n(declare negative?)\n\n(defgeneric expt 2\n  {:dfdx (fn [x y]\n           (mul y (expt x (sub y 1))))\n   :dfdy (fn [x y]\n           (if (and (v/number? x) (v/zero? x))\n             (if (v/number? y)\n               (if (not (negative? y))\n                 0\n                 (u/illegal \"Derivative undefined: expt\"))\n               0)\n             (mul (log x) (expt x y))))})\n\n(defn ^:no-doc default-expt\n  \"Default implementation of exponentiation for integral exponents `e`.\n\n  This implementation uses ['Exponentation by\n  Squaring'](https://en.wikipedia.org/wiki/Exponentiation_by_squaring), and will\n  work for any type that implements `g/mul`.\n\n  The multiplication operation is looked up once and cached at the beginning of\n  computation.\"\n  [s e]\n  {:pre [(v/native-integral? e)]}\n  (let [kind (v/kind s)]\n    (if-let [mul' (get-method mul [kind kind])]\n      (letfn [(expt' [base pow]\n                (loop [n pow\n                       y (v/one-like base)\n                       z base]\n                  (let [t (even? n)\n                        n (quot n 2)]\n                    (cond\n                      t (recur n y (mul' z z))\n                      (zero? n) (mul' z y)\n                      :else (recur n (mul' z y) (mul' z z))))))]\n        (cond (pos? e)  (expt' s e)\n              (zero? e) (v/one-like e)\n              :else (invert (expt' s (negate e)))))\n      (u/illegal (str \"No g/mul implementation registered for kind \" kind)))))\n\n;; [[expt]] can be defined (as a default) in terms of repeated multiplication,\n;; if the exponent is a (native) integer. The native requirement is simply due\n;; to the [[default-expt]] implementation above, which uses functions like\n;; `quot` and `even?` that are not generic.\n;;\n;; For all other arguments, default [[expt]] requires that [[exp]], [[mul]]\n;; and [[log]] be defined already on the type.\n\n(defmethod expt :default [s e]\n  (if (v/native-integral? e)\n    (default-expt s e)\n    (exp (mul e (log s)))))\n\n(defgeneric square 1\n  {:dfdx (fn [x] (mul 2 x))})\n(defmethod square :default [x] (expt x 2))\n\n(defgeneric cube 1\n  {:dfdx (fn [x] (mul 3 (square x)))})\n(defmethod cube :default [x] (expt x 3))\n\n(defgeneric sqrt 1\n  {:dfdx (fn [x]\n           (invert\n            (mul (sqrt x) 2)))})\n\n(defmethod sqrt :default [x]\n  (exp (mul (div 1 2)\n            (log x))))\n\n;; ## More Generics\n\n(defgeneric negative? 1\n  \"Returns true if the argument `a` is less than `(v/zero-like a)`,\n  false otherwise. The default implementation depends on a proper Comparable\n  implementation on the type.`\")\n\n(defmethod negative? :default [a]\n  (< a (v/zero-like a)))\n\n(defgeneric infinite? 1\n  \"Returns true if `a` is either numerically infinite (ie, equal to `##Inf`) or\n  a compound number (complex or quaterion, for example) with some infinite\n  component.\")\n\n(defmethod infinite? :default [_] false)\n\n(defgeneric abs 1)\n\n(declare integer-part)\n\n(defgeneric floor 1\n  \"Returns the largest integer less than or equal to `a`.\n\n  Extensions beyond real numbers may behave differently; see the [Documentation\n  site](https://cljdoc.org/d/sicmutils/sicmutils/CURRENT/doc/basics/generics)\n  for more detail.\")\n\n(defmethod floor :default [a]\n  (if (negative? a)\n    (sub (integer-part a) 1)\n    (integer-part a)))\n\n(defgeneric ceiling 1\n  \"Returns the result of rounding `a` up to the next largest integer.\n\n  Extensions beyond real numbers may behave differently; see the [Documentation\n  site](https://cljdoc.org/d/sicmutils/sicmutils/CURRENT/doc/basics/generics)\n  for more detail.\")\n\n(defmethod ceiling :default [a]\n  (negate (floor (negate a))))\n\n(defgeneric integer-part 1\n  \"Returns the integer part of `a` by removing any fractional digits.\")\n\n(defgeneric fractional-part 1\n  \"Returns the fractional part of the given value, defined as `x - \u230ax\u230b`.\n\n  For positive numbers, this is identical to `(- a (integer-part a))`. For\n  negative `a`, because [[floor]] truncates toward negative infinity, you might\n  be surprised to find that [[fractional-part]] returns the distance between `a`\n  and the next-lowest integer:\n\n```clojure\n(= 0.6 (fractional-part -0.4))\n```\")\n\n(defmethod fractional-part :default [a]\n  (sub a (floor a)))\n\n(defgeneric quotient 2)\n\n(defn ^:no-doc modulo-default\n  \"The default implementation for [[modulo]] depends on the identity:\n\n  x mod y == x - y \u230ax/y\u230b\n\n  This is the Knuth definition described\n  by [Wikipedia](https://en.wikipedia.org/wiki/Modulo_operation).\"\n  [a b]\n  (sub a (mul b (floor (div a b)))))\n\n(defgeneric modulo 2\n  \"Returns the result of the\n  mathematical [Modulo](https://en.wikipedia.org/wiki/Modulo_operation)\n  operation between `a` and `b` (using the Knuth definition listed).\n\n The contract satisfied by [[modulo]] is:\n\n```clojure\n(= a (+ (* b (floor (/ a b)))\n        (modulo a b)))\n```\n\n For numbers, this differs from the contract offered by [[remainder]]\n because `(floor (/ a b))` rounds toward negative infinity, while\n the [[quotient]] operation in the contract for [[remainder]] rounds toward 0.\n\n The result will be either `0` or of the same sign as the divisor `b`.\")\n\n(defmethod modulo :default [a b]\n  (modulo-default a b))\n\n(defn ^:no-doc remainder-default [n d]\n  (let [divnd (div n d)]\n    (if (= (negative? n) (negative? d))\n      (mul d (sub divnd (floor divnd)))\n      (mul d (sub divnd (ceiling divnd))))))\n\n(defgeneric remainder 2\n  \"Returns the remainder of dividing the dividend `a` by divisor `b`.\n\n The contract satisfied by [[remainder]] is:\n\n```clojure\n(= a (+ (* b (quotient a b))\n        (remainder a b)))\n```\n\n For numbers, this differs from the contract offered by [[modulo]]\n because [[quotient]] rounds toward 0, while `(floor (/ a b))` rounds toward\n negative infinity.\n\n The result will be either `0` or of the same sign as the dividend `a`.\")\n\n(defmethod remainder :default [n d]\n  (remainder-default n d))\n\n(defgeneric gcd 2\n  \"Returns the [greatest common\n  divisor](https://en.wikipedia.org/wiki/Greatest_common_divisor) of the two\n  inputs `a` and `b`.\")\n\n(defgeneric lcm 2\n  \"Returns the [least common\n  multiple](https://en.wikipedia.org/wiki/Least_common_multiple) of the two\n  inputs `a` and `b`.\")\n\n(defmethod lcm :default [a b]\n  (let [g (gcd a b)]\n    (if (v/zero? g)\n      g\n      (abs\n       (* (exact-divide a g) b)))))\n\n;; ### Trigonometric functions\n;;\n;; Thanks to John D Cook's post ['Bootstrapping a minimal math\n;; library'](https://www.johndcook.com/blog/2021/01/05/bootstrapping-math-library/)\n;; for his inspiration on the defaults and order of functions in the following\n;; sections.\n\n(declare sin)\n\n(defgeneric cos 1\n  \"Returns the [cosine](https://en.wikipedia.org/wiki/Sine_and_cosine) of the\n  supplied argument `a`.\"\n  {:dfdx (fn [x] (negate (sin x)))})\n\n(defgeneric sin 1\n  \"Returns the [sine](https://en.wikipedia.org/wiki/Sine_and_cosine) of the\n  supplied argument `a`.\"\n  {:dfdx cos})\n\n;; Given [[sin]] and [[cos]] implementations, it's possible to define the rest\n;; of the trigonometric functions with proper defaults.\n\n(defgeneric tan 1\n  \"Computes the trigonometric tangent function of the supplied argument `a`.\n\nEquivalent to `(/ (sin a) (cos a))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (square (cos x))))})\n\n(defmethod tan :default [x]\n  (div (sin x) (cos x)))\n\n(declare csc)\n\n(defgeneric cot 1\n  \"Computes the trigonometric cotangent function of the supplied argument `a`.\n\nEquivalent to `(invert (tan a))`, or `(/ (cos a) (sin a))`.\"\n  {:dfdx (fn [x]\n           (negate\n            (square (csc x))))})\n\n(defmethod cot :default [x]\n  (div (cos x) (sin x)))\n\n(defgeneric sec 1\n  \"Computes the secant of the supplied argument `a`.\n\nEquivalent to `(invert (cos a))`.\"\n  {:dfdx (fn [x]\n           (mul (sec x)\n                (tan x)))})\n\n(defmethod sec :default [x]\n  (invert (cos x)))\n\n(defgeneric csc 1\n  \"Computes the cosecant of the supplied argument `a`.\n\nEquivalent to `(invert (sin a))`.\"\n  {:dfdx (fn [x]\n           (negate\n            (mul (cot x)\n                 (csc x))))})\n\n(defmethod csc :default [x]\n  (invert (sin x)))\n\n;; ### Inverse Trig Functions\n\n(defgeneric atan [1 2]\n  \"Computes the inverse tangent of the supplied argument `a`. Given two\n  arguments `a` and `a`, returns the inverse tangent of the angle formed by the\n  point `(a, b)` in a 2-dimensional euclidean plane.\n\n  The two-argument version is sometimes\n  called [Atan2](https://en.wikipedia.org/wiki/Atan2).\"\n  {:dfdx (fn\n           ([x]\n            (invert (add 1 (square x))))\n           ([y x]\n            (div x (add (square x)\n                        (square y)))))\n   :dfdy (fn [y x]\n           (div (negate y)\n                (add (square x)\n                     (square y))))})\n\n;; Given an [[atan]] implementation, types automatically gain default methods\n;; for the rest of the inverse trig functions.\n\n(defgeneric asin 1\n  \"Computes the inverse sine of the supplied argument `a`.\n\nDefaults to `atan(x/sqrt(1-x^2))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (sqrt (sub 1 (square x)))))})\n\n(defmethod asin :default [x]\n  (atan (div x (sqrt (sub 1 (square x))))))\n\n(defgeneric acos 1\n  \"Computes the inverse cosine of the supplied argument `a`.\n\nDefaults to `atan(sqrt(1-x^2)/x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (invert\n             (sqrt (sub 1 (square x))))))})\n\n(defmethod acos :default [x]\n  (atan (div (sqrt (sub 1 (square x))) x)))\n\n(defgeneric acot 1\n  \"Computes the [inverse\n cotangent](https://mathworld.wolfram.com/InverseCotangent.html) of the supplied\n argument `a`.\n\ndefaults to `pi/2 - atan(x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (invert\n             (add 1 (square x)))))})\n\n(defmethod acot :default [x]\n  (sub (/ Math/PI 2) (atan x)))\n\n(defgeneric asec 1\n  \"Computes the [inverse\n secant](https://mathworld.wolfram.com/InverseSecant.html) of the supplied\n argument `a`.\n\ndefaults to `atan(sqrt(x^2 - 1))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (mul x (sqrt (sub (square x) 1)))))})\n\n(defmethod asec :default [x]\n  (atan (sqrt (sub (square x) 1))))\n\n(defgeneric acsc 1\n  \"Computes the [inverse\n cosecant](https://mathworld.wolfram.com/InverseCosecant.html) of the supplied\n argument `a`.\n\ndefaults to `atan(1 / sqrt(x^2 - 1))`.\"\n  {:dfdx (fn [x]\n           (negate\n            (invert\n             (mul x (sqrt (sub (square x) 1))))))})\n\n(defmethod acsc :default [x]\n  (atan (invert\n         (sqrt (sub (square x) 1)))))\n\n;; ### Hyperbolic Trig\n\n(declare sinh)\n\n(defgeneric cosh 1\n  \"Computes the [hyperbolic\n cosine](https://mathworld.wolfram.com/HyperbolicCosine.html) of the supplied\n argument `a`.\n\ndefaults to `(e^x + e^{-x}) / 2`.\"\n  {:dfdx sinh})\n\n(defmethod cosh :default [x]\n  (div (add (exp x)\n            (exp (negate x)))\n       2))\n\n(defgeneric sinh 1\n  \"Computes the [hyperbolic\n sine](https://mathworld.wolfram.com/HyperbolicSine.html) of the supplied\n argument `a`.\n\ndefaults to `(e^x - e^{-x}) / 2`.\"\n  {:dfdx cosh})\n\n(defmethod sinh :default [x]\n  (div (sub (exp x)\n            (exp (negate x)))\n       2))\n\n(defgeneric tanh 1\n  \"Computes the [hyperbolic\n tangent](https://mathworld.wolfram.com/HyperbolicTangent.html) of the supplied\n argument `a`.\n\ndefaults to `sinh(x) / cosh(x)`.\"\n  {:dfdx (fn [x]\n           (sub 1 (square (tanh x))))})\n\n(defmethod tanh :default [x]\n  (let [exp2x (exp (add x x))]\n    (div (sub exp2x 1)\n         (add exp2x 1))))\n\n(defgeneric sech 1\n  \"Computes the [hyperbolic\n secant](https://mathworld.wolfram.com/HyperbolicSecant.html) of the supplied\n argument `a`.\n\ndefaults to `1 / cosh(x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (mul (sech x)\n                 (tanh x))))})\n\n(defmethod sech :default [x]\n  (div 2 (add (exp x)\n              (exp (negate x)))))\n\n(declare csch)\n\n(defgeneric coth 1\n  \"Computes the [hyperbolic\n cotangent](https://mathworld.wolfram.com/HyperbolicCotangent.html) of the supplied\n argument `a`.\n\ndefaults to `cosh(x) / sinh(x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (square (csch x))))})\n\n(defmethod coth :default [x]\n  (let [exp2x (exp (add x x))]\n    (div (add exp2x 1)\n         (sub exp2x 1))))\n\n(defgeneric csch 1\n  \"Computes the [hyperbolic\n cosecant](https://mathworld.wolfram.com/HyperbolicCosecant.html) of the supplied\n argument `a`.\n\ndefaults to `1 / sinh(x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (mul (coth x)\n                 (csch x))))})\n\n(defmethod csch :default [x]\n  (div 2 (sub (exp x)\n              (exp (negate x)))))\n\n;; ### Inverse Hyperbolic Functions\n\n(defgeneric acosh 1\n  \"Computes the [inverse hyperbolic\n cosine](https://mathworld.wolfram.com/InverseHyperbolicCosine.html) of the supplied\n argument `a`.\n\ndefaults to `2 ln(sqrt((x+1)/2) + sqrt((x-1)/2))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (mul (sqrt (sub x 1))\n                 (sqrt (add x 1)))))})\n\n(defmethod acosh :default [x]\n  (mul 2 (log (add\n               (sqrt (div (add x 1) 2))\n               (sqrt (div (sub x 1) 2))))))\n\n(defgeneric asinh 1\n  \"Computes the [inverse hyperbolic\n sine](https://mathworld.wolfram.com/InverseHyperbolicSine.html) of the\n supplied argument `a`.\n\ndefaults to `ln(x + sqrt(1 + x^2))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (sqrt\n             (add 1 (square x)))))})\n\n(defmethod asinh :default [x]\n  (log\n   (add x (sqrt (add 1 (square x))))))\n\n(defgeneric atanh 1\n  \"Computes the [inverse hyperbolic\n tangent](https://mathworld.wolfram.com/InverseHyperbolicTangent.html) of the\n supplied argument `a`.\n\ndefaults to `1/2 ln((1+x)/(1-x))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (sub 1 (square x))))})\n\n(defmethod atanh :default [x]\n  (div (sub (log (add 1 x))\n            (log (sub 1 x)))\n       2))\n\n(defgeneric acoth 1\n  \"Computes the [inverse hyperbolic\n cotangent](https://mathworld.wolfram.com/InverseHyperbolicCotangent.html) of\n the supplied argument `a`.\n\ndefaults to `1/2 ln((x+1)/(x-1))`.\"\n  {:dfdx (fn [x]\n           (invert\n            (sub 1 (square x))))})\n\n(defmethod acoth :default [x]\n  (div (sub (log (add x 1))\n            (log (sub x 1)))\n       2))\n\n(defgeneric asech 1\n  \"Computes the [inverse hyperbolic\n secant](https://mathworld.wolfram.com/InverseHyperbolicSecant.html) of the\n supplied argument `a`.\n\ndefaults to `ln((1 + sqrt(1-x^2)) / x)`.\"\n  {:dfdx (fn [x]\n           (let [x+1 (add x 1)]\n             (negate\n              (invert\n               (mul (mul x x+1)\n                    (sqrt (div (sub 1 x)\n                               x+1)))))))})\n\n(defmethod asech :default [x]\n  (log\n   (div (add 1 (sqrt (sub 1 (square x))))\n        x)))\n\n(defgeneric acsch 1\n  \"Computes the [inverse hyperbolic\n cosecant](https://mathworld.wolfram.com/InverseHyperbolicCosecant.html) of the\n supplied argument `a`.\n\ndefaults to `ln((1 + sqrt(1+x^2)) / x)`.\"\n  {:dfdx (fn [x]\n           (negate\n            (invert\n             (mul x (sqrt (add (square x) 1))))))})\n\n(defmethod acsch :default [x]\n  (log\n   (div (add 1 (sqrt (add 1 (square x))))\n        x)))\n\n;; ## Sinc and friends\n;;\n;; This section defines [[sinc]] and [[tanc]], and the hyperbolic\n;; variants [[sinhc]] and [[tanhc]].\n\n(defgeneric sinc 1\n  \"The unnormalized [sinc\n  function](https://en.wikipedia.org/wiki/Sinc_function), equivalent to\n  $\\\\frac{\\\\sin x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Sinc_function)\n   - [Mathworld page on Sinc](https://mathworld.wolfram.com/SincFunction.html)\n   - [Boost notes on [[sinc]]\n     and [[sinch]]](https://www.boost.org/doc/libs/1_65_0/libs/math/doc/html/math_toolkit/sinc/sinc_overview.html)\"\n  {:dfdx (fn [x]\n           (if (v/zero? x)\n             x\n             (sub (div (cos x) x)\n                  (div (sin x) (square x)))))})\n\n(defmethod sinc :default [x]\n  (if (v/zero? x)\n    (v/one-like x)\n    (div (sin x) x)))\n\n;; NOTE that we don't define `cosc`. [This StackExchange\n;; post](https://math.stackexchange.com/a/2137104) has a nice explanation of why\n;; the analogous `cosc` doesn't belong: \"The motivation for functions such as\n;; $\\sinc x$, $\\sinch x$, $\\tanc x$, $\\tanch x$ is to consider the behaviour of\n;; a ratio with limit 1 as $x \\to 0$. There is no such motivation for\n;; $\\frac{\\cos x}{x}$, since $\\cos 0 = 1 \\neq 0$.\"\n;;\n;; The Julia language does define a `cosc`, but strangely makes it equal to the\n;; derivative of `sinc`, by analogy with `cos` being the derivative of `sin`.\n;; This felt to me to be a step too far. Here's the [Julia manual page for\n;; `cosc`](https://web.mit.edu/julia_v0.6.2/julia/share/doc/julia/html/en/stdlib/math.html#Base.Math.cosc).\n;;\n;; Wikipedia does have [a page on\n;; `coshc`](https://en.wikipedia.org/wiki/Coshc_function), defined as\n;; $\\frac{\\cosh x}{x}$.\n\n(defgeneric tanc 1\n  \"`tanc` is defined, by analogy with [[sinc]], to be equal to $\\\\frac{\\\\tan\n  x}{x}$ for nonzero $x$ and equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Tanc_function)\n   - [Mathworld page on Sinc](https://mathworld.wolfram.com/TancFunction.html)\"\n  {:dfdx (fn [x]\n           (if (v/zero? x)\n             x\n             (let [sx (sec x)]\n               (sub (div (* sx sx) x)\n                    (div (tan x) (square x))))))})\n\n(defmethod tanc :default [x]\n  (if (v/zero? x)\n    (v/one-like x)\n    (div (tan x) x)))\n\n;; ### Hyperbolic Variants\n\n(defgeneric sinhc 1\n  \"The [sinhc function](https://en.wikipedia.org/wiki/Sinhc_function),\n  equivalent to $\\\\frac{\\\\sinh x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Sinhc_function)\n   - [Mathworld page on Sinhc](https://mathworld.wolfram.com/SinhcFunction.html)\"\n  {:dfdx (fn [x]\n           (if (v/zero? x)\n             x\n             (sub (div (cosh x) x)\n                  (div (sinh x) (square x)))))})\n\n(defmethod sinhc :default [x]\n  (if (v/zero? x)\n    (v/one-like x)\n    (div (sinh x) x)))\n\n(defgeneric tanhc 1\n  \"The [tanhc function](https://en.wikipedia.org/wiki/Tanhc_function),\n  equivalent to $\\\\frac{\\\\tanh x}{x}$ but defined to be equal to 1 at $x = 0$.\n\n  ### References\n\n   - [Wikipedia page](https://en.wikipedia.org/wiki/Tanhc_function)\n   - [Mathworld page on Tanhc](https://mathworld.wolfram.com/TanhcFunction.html)\"\n  {:dfdx (fn [x]\n           (if (v/zero? x)\n             x\n             (let [sx (sech x)]\n               (sub (div (* sx sx) x)\n                    (div (tanh x) (square x))))))})\n\n(defmethod tanhc :default [x]\n  (if (v/zero? x)\n    (v/one-like x)\n    (div (tanh x) x)))\n\n;; ## Complex Operators\n\n(defgeneric make-rectangular 2)\n(defgeneric make-polar 2)\n(defgeneric real-part 1)\n(defgeneric imag-part 1)\n(defgeneric magnitude 1)\n(defgeneric angle 1)\n(defgeneric conjugate 1)\n\n;; ## Operations on structures\n\n(defgeneric transpose 1)\n(defgeneric trace 1)\n(defgeneric determinant 1)\n(defgeneric dimension 1)\n(defgeneric dot-product 2)\n(defgeneric inner-product 2)\n(defgeneric outer-product 2)\n(defgeneric cross-product 2)\n\n;; ## Structure Defaults\n\n(defmethod transpose [::v/scalar] [a] a)\n(defmethod trace [::v/scalar] [a] a)\n(defmethod determinant [::v/scalar] [a] a)\n(defmethod dimension [::v/scalar] [_] 1)\n(defmethod dot-product [::v/scalar ::v/scalar] [l r] (mul l r))\n\n;; Scalars include complex numbers, but for the purposes of dot/inner-products\n;; these are interpreted as pairs of real numbers, where conjugate is identity.\n;; So this seems to be a sane default.\n(defmethod inner-product [::v/scalar ::v/scalar] [l r]\n  (dot-product l r))\n\n;; ## Solvers\n\n(defgeneric solve-linear 2\n  \"For a given `a` and `b`, returns `x` such that `a*x = b`.\n\n  See[[solve-linear-right]] for a similar function that solves for `a = x*b`.\")\n\n(defgeneric solve-linear-right 2\n  \"For a given `a` and `b`, returns `x` such that `a = x*b`.\n\n  See[[solve-linear]] for a similar function that solves for `a*x = b`.\")\n\n(defn solve-linear-left\n  \"Alias for [[solve-linear]]; present for compatibility with the original\n  `scmutils` codebase.\n\n  NOTE: In `scmutils`, `solve-linear-left` and `solve-linear` act identically in\n  all cases except matrices. `solve-linear-left` only accepted a column\n  matrix (or up structure) in the `b` position, while `solve-linear` accepted\n  either a column or row (up or down structure).\n\n  In SICMUtils, both functions accept either type.\"\n  [a b]\n  (solve-linear a b))\n\n;; ### Solver Defaults\n\n(defmethod solve-linear [::v/scalar ::v/scalar] [x y] (div y x))\n(defmethod solve-linear-right [::v/scalar ::v/scalar] [x y] (div x y))\n\n;; ## More advanced generic operations\n\n(def ^:no-doc derivative-symbol 'D)\n\n(defgeneric partial-derivative 2)\n(defgeneric Lie-derivative 1)\n\n(defgeneric simplify 1)\n(defmethod simplify :default [a] a)\n\n;; This call registers a symbol for any non-multimethod we care about. These\n;; will be returned instead of the actual function body when the user\n;; calls `(v/freeze fn)`, for example.\n\n(v/add-object-symbols!\n {+ '+\n  * '*\n  - '-\n  / '/\n  clojure.core/+ '+\n  clojure.core/* '*\n  clojure.core/- '-\n  clojure.core// '/\n  clojure.core/mod 'modulo\n  clojure.core/quot 'quotient\n  clojure.core/rem 'remainder\n  clojure.core/neg? 'negative?\n  #?@(:cljs [cljs.core/infinite? 'infinite?])\n  clojure.core/< '<\n  clojure.core/<= '<=\n  clojure.core/> '>\n  clojure.core/>= '>=\n  clojure.core/= '=})\n"]}