{
"version":3,
"file":"module$node_modules$mathbox$build$esm$model$model.js",
"lineCount":9,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAAgB,IAAK,EAErB,KAAIC,kBAAoBP,OAAA,CAAQ,gEAAR,CAcxB,OAAMQ,KAAO,gBAWb,MAAMF,MAAN,CACEG,WAAW,CAACC,IAAD,CAAO,CAChB,IAAKA,CAAAA,IAAL,CAAYA,IACZ,KAAKA,CAAAA,IAAKC,CAAAA,KAAV,CAAkB,IAClB,KAAKD,CAAAA,IAAKA,CAAAA,IAAV,CAAiB,IAAKA,CAAAA,IACtB,KAAKE,CAAAA,GAAL,CAAW,EACX,KAAKC,CAAAA,OAAL,CAAe,EACf,KAAKC,CAAAA,MAAL,CAAc,EACd,KAAKC,CAAAA,KAAL,CAAa,EACb,KAAKC,CAAAA,KAAL,CAAa,EACb,KAAKC,CAAAA,QAAL,CAAgB,EAChB,KAAKC,CAAAA,IAAL,CAAY,CAAA,CACZ,KAAKC,CAAAA,QAAL;AAAgB,IAChB,KAAKC,CAAAA,KAAL,CAAa,CACXC,KAAM,QADK,CAQb,KAAKX,CAAAA,IAAKY,CAAAA,EAAV,CAAa,KAAb,CAJYF,KAAAG,EAASC,KAAA,CAAMJ,KAAMK,CAAAA,IAAZ,CAIrB,CACA,KAAKf,CAAAA,IAAKY,CAAAA,EAAV,CAAa,QAAb,CAHeF,KAAAM,EAAS,CAAcD,KAAAA,CAANL,KAAMK,CAAAA,IAepCE,WAAA,CAAWF,KAAX,CACAG,WAAA,CAAWH,KAAX,CACAI,aAAA,CAAaJ,KAAb,CACAK,SAAA,CAASL,KAAKM,CAAAA,EAAd,CAAkBN,KAAlB,CACAO,cAAA,CAAcP,KAAKZ,CAAAA,OAAnB,CAA4BY,KAA5B,CACAA,MAAKQ,CAAAA,GAAL,CAAS,aAAT,CAAwBC,MAAxB,CApBsB,OAqBfC,MAAA,CAAMV,KAAN,CArBe,CAGxB,CAEA,OAAMD,MAAQC,IAAAD,EAAQ,CACpBY,OAAA,CAAQX,IAAR,CACAY,QAAA,CAAQZ,IAAR,CACAa,UAAA,CAAUb,IAAV,CACAA,KAAKH,CAAAA,EAAL,CAAQ,aAAR,CAAuBY,MAAvB,CACAA,OAAA,CAAO,IAAP,CAAaT,IAAb,CAAmB,CAAA,CAAnB,CACA,OAAOU,MAAA,CAAMV,IAAN,CANa,CAAtB,CAoBMc,MAAQd,IAAAc,EAAQ,CACpB,IAAK,MAAMC,OAAX,GAAsBC,MAAMC,CAAAA,IAAN,CAAW,IAAKzB,CAAAA,QAAhB,CAAtB,CACEuB,OAAQG,CAAAA,KAAR;AAAgBH,OAAQI,CAAAA,OAAR,CAAgBnB,IAAhB,CAGlB,OAAO,KALa,CApBtB,CA4BMoB,MAAQpB,IAAAoB,EAAQ,CACpB,IAAK,MAAML,OAAX,GAAsBC,MAAMC,CAAAA,IAAN,CAAW,IAAKzB,CAAAA,QAAhB,CAAtB,CAAiD,CAC/C,MAAMC,KAAOsB,OAAQtB,CAAAA,IAAfA,GAAwBsB,OAAQtB,CAAAA,IAAhCA,CAAuCsB,OAAQG,CAAAA,KAA/CzB,GAAyDsB,OAAQI,CAAAA,OAAR,CAAgBnB,IAAhB,CAAzDP,CAEFA,KAAJ,GACE,IAAKC,CAAAA,QADP,CACkBM,IADlB,CAIK,KAAKP,CAAAA,IAAV,GACE,IAAKA,CAAAA,IADP,CACcA,IADd,CAP+C,CAYjD,MAAO,KAba,CA5BtB,CA4CMiB,MAAQV,IAAAU,EAAQ,CACpB,IAAK,MAAMK,OAAX,GAAsBC,MAAMC,CAAAA,IAAN,CAAW,IAAKzB,CAAAA,QAAhB,CAAtB,CAAiD,CAC/C,MAAMC,KAAOsB,OAAQtB,CAAAA,IAAfA,GAAwBsB,OAAQtB,CAAAA,IAAhCA,CAAuCsB,OAAQI,CAAAA,OAAR,CAAgBnB,IAAhB,CAAvCP,CAEFA,KAAJ,GACE,IAAKC,CAAAA,QADP,CACkBM,IADlB,CAIK,KAAKP,CAAAA,IAAV,GACE,IAAKA,CAAAA,IADP,CACcA,IADd,CAP+C,CAYjD,MAAO,KAba,CAgBtB,KAAK4B,CAAAA,MAAL,CAAc,EAAAC,EAAM,CAClB,GAAI,CAAC,IAAK7B,CAAAA,IAAV,CACE,MAAO,CAAA,CAGT,KAAK,MAAMsB,OAAX,GAAsBC,MAAMC,CAAAA,IAAN,CAAW,IAAKzB,CAAAA,QAAS+B,CAAAA,KAAd,EAAX,CAAtB,CACMR,OAAQtB,CAAAA,IAAZ;CACEsB,OAAQtB,CAAAA,IACR,CADe,CAAA,CACf,CAAAsB,OAAQS,CAAAA,OAAR,EAFF,CAMF,KAAK/B,CAAAA,IAAL,CAAY,CAAA,CACZ,OAAO,CAAA,CAbW,CAiBpB,OAAMgB,OAAS,CAACd,KAAD,CAAQK,IAAR,CAAcyB,IAAd,CAAAhB,EAAuB,CAGpC,IAAMiB,OAASD,IAATC,EAAiB/B,KAAMgC,CAAAA,OAAN,CAAc,cAAd,CAEvB,KAAIC,OAAS,CAAA,CAEb,IANYH,IAMZ,EANoB9B,KAAMgC,CAAAA,OAAN,CAAc,SAAd,CAMpB,CACQrB,KAEN,CAFWN,IAAK6B,CAAAA,GAAL,CAAS,SAAT,CAEX,CAAIvB,KAAJ,GAAWN,IAAKM,CAAAA,EAAhB,GACOmB,IAUL,EATEX,KAAA,CAAMd,IAAN,CASF,CANA4B,MAMA,CANS,CAAA,CAMT,CAJe,IAIf,EAJI5B,IAAKM,CAAAA,EAIT,EAHED,QAAA,CAASL,IAAKM,CAAAA,EAAd,CAAkBN,IAAlB,CAGF,CAAA8B,KAAA,CAAMxB,KAAN,CAAUN,IAAV,CAXF,CAeF,IAAI0B,MAAJ,CAAY,CACV,IAAIK,IACA3C,OAAAA,CAA+C,IAArC,GAAC2C,IAAD,CAAQ/B,IAAK6B,CAAAA,GAAL,CAAS,cAAT,CAAR,EAA4CE,IAA5C,CAAmD,EAC3DC,KAAAA,CAAQ5C,MAAQ6C,CAAAA,IAAR,CAAa,GAAb,CAEVD,KAAJ,IAA+B,IAAhB,EAAAhC,IAAKZ,CAAAA,OAAL,CAAuBY,IAAKZ,CAAAA,OAAQ4C,CAAAA,KAApC,CAA4CE,IAAAA,EAA3D,IACE9C,MAcA,CAdUA,MAAQmC,CAAAA,KAAR,EAcV,CAZKE,IAYL,EAZcG,MAYd;AAXEd,KAAA,CAAMd,IAAN,CAWF,CARA4B,MAQA,CARS,CAAA,CAQT,CANoB,IAMpB,EANI5B,IAAKZ,CAAAA,OAMT,EALEmB,aAAA,CAAcP,IAAKZ,CAAAA,OAAnB,CAA4BY,IAA5B,CAKF,CAFAmC,UAAA,CAAW/C,MAAX,CAAoBY,IAApB,CAEA,CADAA,IAAKZ,CAAAA,OACL,CADeA,MACf,CAAAY,IAAKZ,CAAAA,OAAQ4C,CAAAA,KAAb,CAAqBA,IAfvB,CALU,CAwBR,CAACP,IAAL,EAAaG,MAAb,EACER,KAAA,CAAMpB,IAAN,CAGF,OAAO,KArD6B,CAAtC,CAyDMoC,QAAUA,QAAS,CAACC,IAAD,CAAOC,IAAP,CAAatC,IAAb,CAAmB,CAC1C,GAAY,IAAZ,EAAIsC,IAAJ,CAAA,CAIA,IAAK,MAAMC,CAAX,GAAgBvB,MAAMC,CAAAA,IAAN,CAAWqB,IAAX,CAAhB,CACQE,IAEN,CAFwB,IAAX,EAAAH,IAAA,CAAKE,CAAL,CAAA,CAAkBF,IAAA,CAAKE,CAAL,CAAlB,CAA4B,EAEzC,CADAC,IAAKC,CAAAA,IAAL,CAAUzC,IAAV,CACA,CAAAqC,IAAA,CAAKE,CAAL,CAAA,CAAUC,IAGZ,OAAO,KAVP,CAD0C,CAzD5C,CAuEME,WAAaA,QAAS,CAACL,IAAD,CAAOC,IAAP,CAAatC,IAAb,CAAmB,CAC7C,GAAY,IAAZ,EAAIsC,IAAJ,CAAA,CAIA,IAAK,MAAMC,CAAX,GAAgBvB,MAAMC,CAAAA,IAAN,CAAWqB,IAAX,CAAhB,CAAkC,CAC1BE,IAAAA,CAAOH,IAAA,CAAKE,CAAL,CACb,OAAMI,MAAQH,IAAKI,CAAAA,OAAL,CAAa5C,IAAb,CAED,EAAb,EAAI2C,KAAJ,EACEH,IAAKK,CAAAA,MAAL,CAAYF,KAAZ,CAAmB,CAAnB,CAGkB,EAApB,GAAIH,IAAKM,CAAAA,MAAT;AACE,OAAOT,IAAA,CAAKE,CAAL,CATuB,CAalC,MAAO,KAjBP,CAD6C,CAvE/C,CA6FMQ,SAAWA,QAAS,CAACC,KAAD,CAAQ,CAChC,GAAqB,CAArB,CAAMA,KAAMF,CAAAA,MAAZ,CAAA,CAIA,IAAMG,KAAOD,KAAMC,CAAAA,IAAbA,CAAoB,EAC1B,OAAOjC,MAAMC,CAAAA,IAAN,CAAW+B,KAAX,CAAkBE,CAAAA,GAAlB,CAAsBlB,KAAA,EAASiB,IAAA,CAAKjB,KAAL,CAAT,CAAuB,CAAA,CAA7C,CALP,CADgC,CA7FlC,CAyGMF,MAAQ,CAACxB,EAAD,CAAKN,IAAL,CAAA8B,EAAc,CAC1B,GAAI,IAAK3C,CAAAA,GAAL,CAASmB,EAAT,CAAJ,CACE,KAAU6C,MAAJ,CAAU,uBAAuB7C,EAAvB,IAAV,CAAN,CAGQ,IAAV,EAAIA,EAAJ,GACE,IAAKnB,CAAAA,GAAL,CAASmB,EAAT,CADF,CACiB,CAACN,IAAD,CADjB,CAIA,OAAOA,KAAKM,CAAAA,EAAZ,CAAuB,IAAN,EAAAA,EAAA,CAAaA,EAAb,CAAkBN,IAAKoD,CAAAA,GATd,CAzG5B,CAqHM/C,SAAW,CAACC,EAAD,CAAKN,IAAL,CAAAK,EAAc,CACnB,IAAV,EAAIC,EAAJ,EACE,OAAO,IAAKnB,CAAAA,GAAL,CAASmB,EAAT,CAGT,OAAON,KAAKM,CAAAA,EAAZ,CAAiBN,IAAKoD,CAAAA,GALO,CArH/B,CA8HMjB,WAAa,CAAC/C,OAAD,CAAUY,IAAV,CAAAmC,EAAmB,CACpCC,OAAA,CAAQ,IAAKhD,CAAAA,OAAb,CAAsBA,OAAtB,CAA+BY,IAA/B,CAEA,IAAe,IAAf,EAAIZ,OAAJ,CACE,MAAO2D,SAAA,CAAS3D,OAAT,CAJ2B,CA9HtC,CAsIMmB,cAAgB,CAACnB,OAAD;AAAUY,IAAV,CAAAO,EAAmB,CACvCmC,UAAA,CAAW,IAAKtD,CAAAA,OAAhB,CAAyBA,OAAzB,CAAkCY,IAAlC,CAEA,IAAe,IAAf,EAAIZ,OAAJ,CACE,MApCwB,QAoCNA,OApCmB6D,CAAAA,IAgCA,CAtIzC,CA+IMtC,QAAUX,IAAAW,EAAQ,IAAKpB,CAAAA,KAAMkD,CAAAA,IAAX,CAAgBzC,IAAhB,CA/IxB,CAiJME,WAAaF,IAAAE,EAAQ,IAAKX,CAAAA,KAAMsD,CAAAA,MAAX,CAAkB,IAAKtD,CAAAA,KAAMqD,CAAAA,OAAX,CAAmB5C,IAAnB,CAAlB,CAA4C,CAA5C,CAjJ3B,CAoJMY,QAAUZ,IAAAY,EAAQwB,OAAA,CAAQ,IAAK9C,CAAAA,KAAb,CAAoB,CAACU,IAAKJ,CAAAA,IAAN,CAApB,CAAiCI,IAAjC,CApJxB,CAsJMG,WAAaH,IAAAG,EAAQuC,UAAA,CAAW,IAAKpD,CAAAA,KAAhB,CAAuB,CAACU,IAAKJ,CAAAA,IAAN,CAAvB,CAAoCI,IAApC,CAtJ3B,CAyJMa,UAAYb,IAAAa,EAAQ,CACxBuB,OAAA,CAAQ,IAAK/C,CAAAA,MAAb,CAAqBW,IAAKX,CAAAA,MAA1B,CAAkCW,IAAlC,CACA,OAAO+C,SAAA,CAAS/C,IAAKX,CAAAA,MAAd,CAFiB,CAzJ1B,CA8JMe,aAAeJ,IAAAI,EAAQ,CAC3BsC,UAAA,CAAW,IAAKrD,CAAAA,MAAhB,CAAwBW,IAAKX,CAAAA,MAA7B,CAAqCW,IAArC,CACA,OA1D0B,QA0DRA,IAAKX,CAAAA,MA1DgB4D,CAAAA,IAwDZ,CAK7BlD,MAAA,CAAM,IAAKd,CAAAA,IAAX,CACA,KAAKA,CAAAA,IAAKoE,CAAAA,OAAV,CAAkB,CAChBzD,KAAM,OADU,CAAlB,CAxQgB,CA6QlB0D,MAAM,CAACC,KAAD;AAAQC,OAAR,CAAiB,CACrB,MAAO,GAAI1E,iBAAkB2E,CAAAA,SAAtB,EAAiCF,KAAjC,CAAwCC,OAAxC,EAAmD,IAAKE,CAAAA,OAAL,EAAnD,CADc,CAKvBC,KAAK,CAACC,QAAD,CAAWpC,OAAX,CAAoB,CACvB,IAAIT,OAEJS,QAAQqC,CAAAA,OAAR,CAAkB,EAAAC,EAAM,IAAKD,CAAAA,OAAL,CAAarC,OAAb,CAExBA,QAAQT,CAAAA,OAAR,CAAkBA,OAAlB,CAA4B,CAC1B6C,QAD0B,CAE1BpC,OAF0B,CAG1BL,QAAS,IAAK4C,CAAAA,QAAL,CAAcH,QAAd,CAHiB,CAI1B1C,MAAO,CAAA,CAJmB,CAK1BzB,KAAM,CAAA,CALoB,CAO5B,KAAKD,CAAAA,QAASiD,CAAAA,IAAd,CAAmB1B,OAAnB,CACA,OAAO,KAAKuC,CAAAA,MAAL,CAAYM,QAAZ,CAbgB,CAiBzBC,OAAO,CAACrC,OAAD,CAAU,CACf,MAAM,CACJT,OADI,CAAA,CAEFS,OAEJ,IAAe,IAAf,EAAIT,OAAJ,CAMA,MAFA,KAAKvB,CAAAA,QAASqD,CAAAA,MAAd,CAAqB,IAAKrD,CAAAA,QAASoD,CAAAA,OAAd,CAAsB7B,OAAtB,CAArB,CAAqD,CAArD,CAEO,CADP,OAAOS,OAAQqC,CAAAA,OACR,CAAA,OAAOrC,OAAQT,CAAAA,OAXP,CAejBgD,QAAQ,CAACR,KAAD,CAAQ,CACd,GAAIxE,IAAKiF,CAAAA,IAAL,CAAUT,KAAV,CAAJ,CACE,KAAUJ,MAAJ,CAAU,+BAAV,CAAN;AAGF,MAAO,GAAIrE,iBAAkBmF,CAAAA,OAAtB,EAA+BV,KAA/B,CALO,CAQhBG,OAAO,EAAG,CACR,MAAO,KAAKzE,CAAAA,IADJ,CAIViF,cAAc,EAAG,CACf,MAAO,KAAKxE,CAAAA,QAASyE,CAAAA,QAAd,EADQ,CA/TnB,CAqUA1F,OAAQI,CAAAA,KAAR,CAAgBA,KAtW8F;",
"sources":["node_modules/mathbox/build/esm/model/model.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$model$model\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Model = void 0;\n\nvar _cssSelectAdapted = require(\"./css-select-adapted\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst AUTO = /^<([0-9]+|<*)$/;\n/*\n  Model that wraps a root node and its children.\n\n  Monitors adds, removals and ID/class changes.\n  Enables CSS selectors, both querying and watching.\n\n  Watchers are primed differentially as changes come in,\n  and fired with digest().\n*/\n\nclass Model {\n  constructor(root) {\n    this.root = root;\n    this.root.model = this;\n    this.root.root = this.root;\n    this.ids = {};\n    this.classes = {};\n    this.traits = {};\n    this.types = {};\n    this.nodes = [];\n    this.watchers = [];\n    this.fire = false;\n    this.lastNode = null;\n    this.event = {\n      type: \"update\"\n    }; // Triggered by child addition/removal\n\n    const add = event => adopt(event.node);\n\n    const remove = event => dispose(event.node);\n\n    this.root.on(\"add\", add);\n    this.root.on(\"remove\", remove); // Track node lifecycle\n\n    const adopt = node => {\n      addNode(node);\n      addType(node);\n      addTraits(node);\n      node.on(\"change:node\", update);\n      update(null, node, true);\n      return force(node);\n    };\n\n    const dispose = node => {\n      removeNode(node);\n      removeType(node);\n      removeTraits(node);\n      removeID(node.id, node);\n      removeClasses(node.classes, node);\n      node.off(\"change:node\", update);\n      return force(node);\n    }; // Watcher cycle for catching changes in id/classes\n\n\n    const prime = node => {\n      for (const watcher of Array.from(this.watchers)) {\n        watcher.match = watcher.matcher(node);\n      }\n\n      return null;\n    };\n\n    const check = node => {\n      for (const watcher of Array.from(this.watchers)) {\n        const fire = watcher.fire || (watcher.fire = watcher.match !== watcher.matcher(node));\n\n        if (fire) {\n          this.lastNode = node;\n        }\n\n        if (!this.fire) {\n          this.fire = fire;\n        }\n      }\n\n      return null;\n    };\n\n    const force = node => {\n      for (const watcher of Array.from(this.watchers)) {\n        const fire = watcher.fire || (watcher.fire = watcher.matcher(node));\n\n        if (fire) {\n          this.lastNode = node;\n        }\n\n        if (!this.fire) {\n          this.fire = fire;\n        }\n      }\n\n      return null;\n    };\n\n    this.digest = () => {\n      if (!this.fire) {\n        return false;\n      }\n\n      for (const watcher of Array.from(this.watchers.slice())) {\n        if (watcher.fire) {\n          watcher.fire = false;\n          watcher.handler();\n        }\n      }\n\n      this.fire = false;\n      return true;\n    }; // Track id/class changes\n\n\n    const update = (event, node, init) => {\n      const _id = init || event.changed[\"node.id\"];\n\n      const _klass = init || event.changed[\"node.classes\"];\n\n      let primed = false;\n\n      if (_id) {\n        const id = node.get(\"node.id\");\n\n        if (id !== node.id) {\n          if (!init) {\n            prime(node);\n          }\n\n          primed = true;\n\n          if (node.id != null) {\n            removeID(node.id, node);\n          }\n\n          addID(id, node);\n        }\n      }\n\n      if (_klass) {\n        let left;\n        let classes = (left = node.get(\"node.classes\")) != null ? left : [];\n        const klass = classes.join(\",\");\n\n        if (klass !== (node.classes != null ? node.classes.klass : undefined)) {\n          classes = classes.slice();\n\n          if (!init && !primed) {\n            prime(node);\n          }\n\n          primed = true;\n\n          if (node.classes != null) {\n            removeClasses(node.classes, node);\n          }\n\n          addClasses(classes, node);\n          node.classes = classes;\n          node.classes.klass = klass;\n        }\n      }\n\n      if (!init && primed) {\n        check(node);\n      }\n\n      return null;\n    }; // Manage lookup tables for types/classes/traits\n\n\n    const addTags = function (sets, tags, node) {\n      if (tags == null) {\n        return;\n      }\n\n      for (const k of Array.from(tags)) {\n        const list = sets[k] != null ? sets[k] : [];\n        list.push(node);\n        sets[k] = list;\n      }\n\n      return null;\n    };\n\n    const removeTags = function (sets, tags, node) {\n      if (tags == null) {\n        return;\n      }\n\n      for (const k of Array.from(tags)) {\n        const list = sets[k];\n        const index = list.indexOf(node);\n\n        if (index >= 0) {\n          list.splice(index, 1);\n        }\n\n        if (list.length === 0) {\n          delete sets[k];\n        }\n      }\n\n      return null;\n    }; // Build a hash for an array of tags for quick lookups\n\n\n    const hashTags = function (array) {\n      if (!(array.length > 0)) {\n        return;\n      }\n\n      const hash = array.hash = {};\n      return Array.from(array).map(klass => hash[klass] = true);\n    };\n\n    const unhashTags = array => delete array.hash; // Track IDs (live)\n\n\n    const addID = (id, node) => {\n      if (this.ids[id]) {\n        throw new Error(`Duplicate node id \\`${id}\\``);\n      }\n\n      if (id != null) {\n        this.ids[id] = [node];\n      }\n\n      return node.id = id != null ? id : node._id;\n    };\n\n    const removeID = (id, node) => {\n      if (id != null) {\n        delete this.ids[id];\n      }\n\n      return node.id = node._id;\n    }; // Track classes (live)\n\n\n    const addClasses = (classes, node) => {\n      addTags(this.classes, classes, node);\n\n      if (classes != null) {\n        return hashTags(classes);\n      }\n    };\n\n    const removeClasses = (classes, node) => {\n      removeTags(this.classes, classes, node);\n\n      if (classes != null) {\n        return unhashTags(classes);\n      }\n    }; // Track nodes\n\n\n    const addNode = node => this.nodes.push(node);\n\n    const removeNode = node => this.nodes.splice(this.nodes.indexOf(node), 1); // Track nodes by type\n\n\n    const addType = node => addTags(this.types, [node.type], node);\n\n    const removeType = node => removeTags(this.types, [node.type], node); // Track nodes by trait\n\n\n    const addTraits = node => {\n      addTags(this.traits, node.traits, node);\n      return hashTags(node.traits);\n    };\n\n    const removeTraits = node => {\n      removeTags(this.traits, node.traits, node);\n      return unhashTags(node.traits);\n    };\n\n    adopt(this.root);\n    this.root.trigger({\n      type: \"added\"\n    });\n  }\n\n  select(query, context) {\n    return (0, _cssSelectAdapted.selectAll)(query, context || this.getRoot());\n  } // Watch selector with handler\n\n\n  watch(selector, handler) {\n    let watcher;\n\n    handler.unwatch = () => this.unwatch(handler);\n\n    handler.watcher = watcher = {\n      selector,\n      handler,\n      matcher: this._matcher(selector),\n      match: false,\n      fire: false\n    };\n    this.watchers.push(watcher);\n    return this.select(selector);\n  } // Unwatch a handler\n\n\n  unwatch(handler) {\n    const {\n      watcher\n    } = handler;\n\n    if (watcher == null) {\n      return;\n    }\n\n    this.watchers.splice(this.watchers.indexOf(watcher), 1);\n    delete handler.unwatch;\n    return delete handler.watcher;\n  } // Make a matcher for a single selector\n\n\n  _matcher(query) {\n    if (AUTO.test(query)) {\n      throw new Error(\"Auto-link matcher unsupported\");\n    }\n\n    return (0, _cssSelectAdapted.compile)(query);\n  }\n\n  getRoot() {\n    return this.root;\n  }\n\n  getLastTrigger() {\n    return this.lastNode.toString();\n  }\n\n}\n\nexports.Model = Model;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Model","_cssSelectAdapted","AUTO","constructor","root","model","ids","classes","traits","types","nodes","watchers","fire","lastNode","event","type","on","add","adopt","node","remove","removeNode","removeType","removeTraits","removeID","id","removeClasses","off","update","force","addNode","addType","addTraits","prime","watcher","Array","from","match","matcher","check","digest","this.digest","slice","handler","init","_klass","changed","primed","get","addID","left","klass","join","undefined","addClasses","addTags","sets","tags","k","list","push","removeTags","index","indexOf","splice","length","hashTags","array","hash","map","Error","_id","trigger","select","query","context","selectAll","getRoot","watch","selector","unwatch","handler.unwatch","_matcher","test","compile","getLastTrigger","toString"]
}
