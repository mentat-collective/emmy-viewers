shadow$provide.module$node_modules$markdown_it$lib$rules_core$smartquotes=function(global,require,module,exports){function replaceAt(str,index,ch){return str.substr(0,index)+ch+str.substr(index+1)}var isWhiteSpace=require("module$node_modules$markdown_it$lib$common$utils").isWhiteSpace,isPunctChar=require("module$node_modules$markdown_it$lib$common$utils").isPunctChar,isMdAsciiPunct=require("module$node_modules$markdown_it$lib$common$utils").isMdAsciiPunct,QUOTE_TEST_RE=/['"]/,QUOTE_RE=/['"]/g;module.exports=
function(state$jscomp$0){var blkIdx;if(state$jscomp$0.md.options.typographer)for(blkIdx=state$jscomp$0.tokens.length-1;0<=blkIdx;blkIdx--)if("inline"===state$jscomp$0.tokens[blkIdx].type&&QUOTE_TEST_RE.test(state$jscomp$0.tokens[blkIdx].content)){var openQuote,j,i,tokens=state$jscomp$0.tokens[blkIdx].children,state=state$jscomp$0;var stack=[];for(i=0;i<tokens.length;i++){var token=tokens[i];var thisLevel=tokens[i].level;for(j=stack.length-1;0<=j&&!(stack[j].level<=thisLevel);j--);stack.length=j+1;
if("text"===token.type){var text=token.content;var pos=0;var max=text.length;a:for(;pos<max;){QUOTE_RE.lastIndex=pos;var t=QUOTE_RE.exec(text);if(!t)break;var canOpen=openQuote=!0;pos=t.index+1;var closeQuote="'"===t[0];var lastChar=32;if(0<=t.index-1)lastChar=text.charCodeAt(t.index-1);else for(j=i-1;0<=j&&"softbreak"!==tokens[j].type&&"hardbreak"!==tokens[j].type;j--)if(tokens[j].content){lastChar=tokens[j].content.charCodeAt(tokens[j].content.length-1);break}var nextChar=32;if(pos<max)nextChar=
text.charCodeAt(pos);else for(j=i+1;j<tokens.length&&"softbreak"!==tokens[j].type&&"hardbreak"!==tokens[j].type;j++)if(tokens[j].content){nextChar=tokens[j].content.charCodeAt(0);break}var isLastPunctChar=isMdAsciiPunct(lastChar)||isPunctChar(String.fromCharCode(lastChar));var isNextPunctChar=isMdAsciiPunct(nextChar)||isPunctChar(String.fromCharCode(nextChar));var isLastWhiteSpace=isWhiteSpace(lastChar);(j=isWhiteSpace(nextChar))?canOpen=!1:isNextPunctChar&&(isLastWhiteSpace||isLastPunctChar||(canOpen=
!1));isLastWhiteSpace?openQuote=!1:isLastPunctChar&&(j||isNextPunctChar||(openQuote=!1));34===nextChar&&'"'===t[0]&&48<=lastChar&&57>=lastChar&&(openQuote=canOpen=!1);canOpen&&openQuote&&(canOpen=isLastPunctChar,openQuote=isNextPunctChar);if(canOpen||openQuote){if(openQuote)for(j=stack.length-1;0<=j;j--){nextChar=stack[j];if(stack[j].level<thisLevel)break;if(nextChar.single===closeQuote&&stack[j].level===thisLevel){nextChar=stack[j];closeQuote?(openQuote=state.md.options.quotes[2],closeQuote=state.md.options.quotes[3]):
(openQuote=state.md.options.quotes[0],closeQuote=state.md.options.quotes[1]);token.content=replaceAt(token.content,t.index,closeQuote);tokens[nextChar.token].content=replaceAt(tokens[nextChar.token].content,nextChar.pos,openQuote);pos+=closeQuote.length-1;nextChar.token===i&&(pos+=openQuote.length-1);text=token.content;max=text.length;stack.length=j;continue a}}canOpen?stack.push({token:i,pos:t.index,single:closeQuote,level:thisLevel}):openQuote&&closeQuote&&(token.content=replaceAt(token.content,
t.index,"’"))}else closeQuote&&(token.content=replaceAt(token.content,t.index,"’"))}}}}}}
//# sourceMappingURL=module$node_modules$markdown_it$lib$rules_core$smartquotes.js.map
