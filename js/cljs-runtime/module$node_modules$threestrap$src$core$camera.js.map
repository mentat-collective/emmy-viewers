{
"version":3,
"file":"module$node_modules$threestrap$src$core$camera.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/threestrap/src/core/camera.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$threestrap$src$core$camera\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _Camera = require(\"three/src/cameras/Camera.js\");\n\nvar _OrthographicCamera = require(\"three/src/cameras/OrthographicCamera.js\");\n\nvar _PerspectiveCamera = require(\"three/src/cameras/PerspectiveCamera.js\");\n\nvar _bootstrap = require(\"../bootstrap\");\n\n_bootstrap.Bootstrap.registerPlugin(\"camera\", {\n  defaults: {\n    near: 0.01,\n    far: 10000,\n    type: \"perspective\",\n    fov: 60,\n    aspect: null,\n    // type: 'orthographic',\n    left: -1,\n    right: 1,\n    bottom: -1,\n    top: 1,\n    klass: null,\n    parameters: null\n  },\n  listen: [\"resize\", \"this.change\"],\n  install: function (three) {\n    three.Camera = this.api();\n    three.camera = null;\n    this.aspect = 1;\n    this.change({}, three);\n  },\n  uninstall: function (three) {\n    delete three.Camera;\n    delete three.camera;\n  },\n  change: function (event, three) {\n    const o = this.options;\n    const old = three.camera;\n\n    if (!three.camera || event.changes.type || event.changes.klass) {\n      const klass = o.klass || {\n        perspective: _PerspectiveCamera.PerspectiveCamera,\n        orthographic: _OrthographicCamera.OrthographicCamera\n      }[o.type] || _Camera.Camera;\n      three.camera = o.parameters ? new klass(o.parameters) : new klass();\n    }\n\n    Object.entries(o).forEach(function ([key]) {\n      if (Object.prototype.hasOwnProperty.call(three.camera, key)) three.camera[key] = o[key];\n    }.bind(this));\n    this.update(three);\n    old === three.camera || three.trigger({\n      type: \"camera\",\n      camera: three.camera\n    });\n  },\n  resize: function (event, three) {\n    this.aspect = event.viewWidth / Math.max(1, event.viewHeight);\n    this.update(three);\n  },\n  update: function (three) {\n    three.camera.aspect = this.options.aspect || this.aspect;\n    three.camera.updateProjectionMatrix();\n  }\n});\n};"],
"names":["shadow$provide","global","require","module","exports","_Camera","_OrthographicCamera","_PerspectiveCamera","_bootstrap","Bootstrap","registerPlugin","defaults","near","far","type","fov","aspect","left","right","bottom","top","klass","parameters","listen","install","three","Camera","api","camera","change","uninstall","event","o","options","old","changes","perspective","PerspectiveCamera","orthographic","OrthographicCamera","Object","entries","forEach","key","prototype","hasOwnProperty","call","bind","update","trigger","resize","viewWidth","Math","max","viewHeight","updateProjectionMatrix"]
}
