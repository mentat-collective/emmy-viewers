{"version":3,"sources":["applied_science/js_interop/impl.cljs"],"mappings":"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","names":["applied-science.js-interop.impl/wrap-key","k","G__84216","cljs.core/Keyword","cljs.core/name","applied-science.js-interop.impl/in?*","k*","obj","applied-science.js-interop.impl/contains?*","applied-science.js-interop.impl/get+!","o","temp__5755__auto__","child-obj","applied-science.js-interop.impl/get-value-by-keys","ks*","end","cljs.core/count","i","cljs.core._EQ_","cljs.core.nth","var_args","G__84222","applied-science.js-interop.impl/get-in*","js/Error","not-found","last-obj","cljs.core/butlast","cljs.core/peek","applied-science.js-interop.impl/select-keys*","cljs.core.reduce","m","G__84223","G__84224","applied-science.js-interop.impl/assoc-in*","v","inner-obj","applied-science.js-interop.impl/update-in*","f","args","last-k*","old-val","cljs.core.apply","applied-science.js-interop.impl/apply-in*","arg-array","parent","applied_science.js_interop.impl.get_in_STAR_","cljs.core/pop"],"sourcesContent":["(ns applied-science.js-interop.impl\n  (:require-macros [applied-science.js-interop :as j]))\n\n(defn wrap-key\n  \"Returns `k` or, if it is a keyword, its name.\"\n  [k]\n  (cond-> k\n          (keyword? k) (name)))\n\n(defn ^boolean in?* [k* obj]\n  (js-in k* obj))\n\n(defn ^boolean contains?* [obj k*]\n  (and (some? obj)\n       (in?* k* obj)))\n\n(defn- get+! [o k*]\n  (if-some [child-obj (unchecked-get o k*)]\n    child-obj\n    (unchecked-set o k* #js{})))\n\n(defn- get-value-by-keys\n  \"Look up `ks` in `obj`, stopping at any nil\"\n  [obj ks*]\n  (when obj\n    (let [end (count ks*)]\n      (loop [i 0\n             obj obj]\n        (if (or (= i end)\n                (nil? obj))\n          obj\n          (recur (inc i)\n                 (unchecked-get obj (nth ks* i))))))))\n\n(defn get-in*\n  ([obj ks*]\n   (get-value-by-keys obj ks*))\n  ([obj ks* not-found]\n   (if-some [last-obj (get-value-by-keys obj (butlast ks*))]\n     (let [k (peek ks*)]\n       (if (js-in k last-obj)\n         (j/unchecked-get last-obj k)\n         not-found))\n     not-found)))\n\n(defn select-keys*\n  \"Returns an object containing only those entries in `o` whose key is in `ks`\"\n  [obj ks*]\n  (->> ks*\n       (reduce (fn [m k]\n                 (cond-> m\n                         ^boolean (contains?* obj k)\n                         (doto\n                           (unchecked-set k\n                                          (unchecked-get obj k))))) #js {})))\n(defn assoc-in*\n  [obj ks* v]\n  (let [obj (j/some-or obj #js{})\n        inner-obj (reduce get+! obj (butlast ks*))]\n    (unchecked-set inner-obj (peek ks*) v)\n    obj))\n\n(defn update-in*\n  [obj ks* f args]\n  (let [obj (j/some-or obj #js{})\n        last-k* (peek ks*)\n        inner-obj (reduce get+! obj (butlast ks*))\n        old-val (unchecked-get inner-obj last-k*)]\n    (unchecked-set inner-obj\n                   last-k*\n                   (apply f old-val args))\n    obj))\n\n(defn apply-in*\n  [obj ks* arg-array]\n  (let [parent (get-in* obj (pop ks*))\n        f (unchecked-get parent (peek ks*))]\n    (.apply f parent arg-array)))\n\n\n"]}