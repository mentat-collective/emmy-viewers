shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$data$scale=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Scale=void 0;var UAxis=
function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$axis"));global=require("module$node_modules$mathbox$build$esm$primitives$types$base$source");class Scale extends global.Source{static initClass(){this.traits="node source index interval span scale raw origin".split(" ")}init(){return this.used=this.space=this.scaleAxis=this.sampler=
null}rawBuffer(){return this.buffer}sourceShader(shader){return shader.pipe(this.sampler)}getDimensions(){return{items:1,width:this.space,height:1,depth:1}}getActiveDimensions(){return{items:1,width:this.used,height:this.buffer.getFilled(),depth:1}}getRawDimensions(){return this.getDimensions()}make(){var samples;this.space=samples=this._helpers.scale.divide("");this.buffer=this._renderables.make("dataBuffer",{width:samples,channels:1,items:1});samples={scaleAxis:this._attributes.make(this._types.vec4()),
scaleOffset:this._attributes.make(this._types.vec4())};this.scaleAxis=samples.scaleAxis.value;this.scaleOffset=samples.scaleOffset.value;const p=this.sampler=this._shaders.shader();p.require(this.buffer.shader(this._shaders.shader(),1));p.pipe("scale.position",samples);this._helpers.span.make();return this._listen(this,"span.range",this.updateRanges)}unmake(){this.scaleAxis=null;return this._helpers.span.unmake()}change(changed,touched,init){if(changed["scale.divide"])return this.rebuild();if(touched.view||
touched.interval||touched.span||touched.scale||touched.origin||init)return this.updateRanges()}updateRanges(){const {used}=this,{axis,origin}=this.props;var range=this._helpers.span.get("",axis);range=this._helpers.scale.generate("",this.buffer,range.x,range.y);UAxis.setDimension(this.scaleAxis,axis);UAxis.setOrigin(this.scaleOffset,axis,origin);this.used=range.length;if(this.used!==used)return this.trigger({type:"source.resize"})}}exports.Scale=Scale;Scale.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$data$scale.js.map
