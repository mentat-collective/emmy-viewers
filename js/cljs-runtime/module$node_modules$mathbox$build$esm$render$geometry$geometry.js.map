{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$geometry.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,QAAR,CAAmB,IAAK,EAExB,KAAIC,gBAAkBP,OAAA,CAAQ,mDAAR,CAatB,MAAMM,SAAN,QAAuBC,gBAAgBC,CAAAA,cAAvC,CACEC,WAAW,EAAG,CACZ,KAAA,EACA,KAAIF,eAAgBC,CAAAA,cAApB,CAAmC,IAAnC,CAEqB,KAArB,EAAI,IAAKE,CAAAA,QAAT,GACE,IAAKA,CAAAA,QADP,CACkB,EADlB,CAImB,KAAnB,EAAI,IAAKC,CAAAA,MAAT,GACE,IAAKA,CAAAA,MADP,CACgB,EADhB,CARY,CAadC,OAAO,CAACC,IAAD,CAAOC,IAAP,CAAa,CAClB,IAAIC;AAAW,CAAA,CAEf,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBH,IAAKI,CAAAA,MAAzB,CAAiCD,CAAA,EAAjC,CAAsC,CACpC,MAAME,IAAML,IAAA,CAAKG,CAAL,CAAZ,CACMG,IAAML,IAAA,CAAKE,CAAL,CAERD,SAAJ,GACEF,IAAA,CAAKG,CAAL,CADF,CACYG,GADZ,CAIU,EAAV,CAAID,GAAJ,GACEH,QADF,CACa,CAAA,CADb,CARoC,CAatC,MAAOF,KAAKO,CAAAA,MAAL,CAAY,CAACC,CAAD,CAAIC,CAAJ,CAAA,EAAUD,CAAV,CAAcC,CAA1B,CAhBW,CAmBpBC,QAAQ,CAACC,IAAD,CAAO,CACPC,IAAAA,CAAoB,OAAR,EAAAD,IAAA,CAAkB,IAAKE,CAAAA,QAAL,EAAlB,CAAoC,IAAKC,CAAAA,YAAL,CAAkBH,IAAlB,CACtD,OAAMI,WAAaH,IAAUI,CAAAA,QAA7B,CACM,CACJC,KADI,CAAA,CAEFL,IACJ,KAAIM,OAAS,CAwBb,OAAO,CAAC,IAAD,CAtBKC,QAAS,CAACX,CAAD,CAAI,CACvBS,KAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBV,CADK,CAsBlB,CAlBKY,QAAS,CAACZ,CAAD,CAAIC,CAAJ,CAAO,CAC1BQ,KAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBV,CAClBS,MAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBT,CAFQ,CAkBrB,CAbOY,QAAS,CAACb,CAAD,CAAIC,CAAJ,CAAOa,CAAP,CAAU,CAC/BL,KAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBV,CAClBS,MAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBT,CAClBQ,MAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBI,CAHa,CAa1B,CAPMC,QAAS,CAACf,CAAD,CAAIC,CAAJ,CAAOa,CAAP,CAAUE,CAAV,CAAa,CACjCP,KAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBV,CAClBS,MAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBT,CAClBQ,MAAA,CAAMC,MAAA,EAAN,CAAA;AAAkBI,CAClBL,MAAA,CAAMC,MAAA,EAAN,CAAA,CAAkBM,CAJe,CAO5B,CAAA,CAA8BT,UAA9B,CA9BM,CAiCfU,SAAS,EAAG,EAIZC,QAAQ,CAACC,OAAD,CAAU,CAChB,IAAK7B,CAAAA,MAAL,CAAc6B,OADE,CAtEpB,CA4EAtC,OAAQI,CAAAA,QAAR,CAAmBA,QAjGwG;",
"sources":["node_modules/mathbox/build/esm/render/geometry/geometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$geometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Geometry = void 0;\n\nvar _BufferGeometry = require(\"three/src/core/BufferGeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Geometry extends _BufferGeometry.BufferGeometry {\n  constructor() {\n    super();\n    new _BufferGeometry.BufferGeometry(this);\n\n    if (this.uniforms == null) {\n      this.uniforms = {};\n    }\n\n    if (this.groups == null) {\n      this.groups = [];\n    }\n  }\n\n  _reduce(dims, maxs) {\n    let multiple = false;\n\n    for (let i = 0; i < dims.length; i++) {\n      const dim = dims[i];\n      const max = maxs[i];\n\n      if (multiple) {\n        dims[i] = max;\n      }\n\n      if (dim > 1) {\n        multiple = true;\n      }\n    }\n\n    return dims.reduce((a, b) => a * b);\n  }\n\n  _emitter(name) {\n    const attribute = name == \"index\" ? this.getIndex() : this.getAttribute(name);\n    const dimensions = attribute.itemSize;\n    const {\n      array\n    } = attribute;\n    let offset = 0;\n\n    const one = function (a) {\n      array[offset++] = a;\n    };\n\n    const two = function (a, b) {\n      array[offset++] = a;\n      array[offset++] = b;\n    };\n\n    const three = function (a, b, c) {\n      array[offset++] = a;\n      array[offset++] = b;\n      array[offset++] = c;\n    };\n\n    const four = function (a, b, c, d) {\n      array[offset++] = a;\n      array[offset++] = b;\n      array[offset++] = c;\n      array[offset++] = d;\n    };\n\n    return [null, one, two, three, four][dimensions];\n  }\n\n  _finalize() {\n    return;\n  }\n\n  _offsets(offsets) {\n    this.groups = offsets;\n  }\n\n}\n\nexports.Geometry = Geometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Geometry","_BufferGeometry","BufferGeometry","constructor","uniforms","groups","_reduce","dims","maxs","multiple","i","length","dim","max","reduce","a","b","_emitter","name","attribute","getIndex","getAttribute","dimensions","itemSize","array","offset","one","two","three","c","four","d","_finalize","_offsets","offsets"]
}
