{
"version":3,
"file":"module$node_modules$lodash$_baseClone.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/lodash/_baseClone.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseClone\"] = function(global,require,module,exports) {\nvar Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseClone","value","bitmask","customizer","key","object","stack","result","isDeep","CLONE_DEEP_FLAG","isFlat","CLONE_FLAT_FLAG","isFull","CLONE_SYMBOLS_FLAG","undefined","isObject","isArr","isArray","initCloneArray","copyArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbolsIn","baseAssignIn","copySymbols","baseAssign","cloneableTags","initCloneByTag","Stack","stacked","get","set","isSet","forEach","subValue","add","isMap","keysFunc","getAllKeysIn","getAllKeys","keysIn","keys","props","arrayEach","assignValue","arrayTag","arrayBufferTag","dataViewTag","boolTag","dateTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","errorTag","weakMapTag"]
}
