{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$memo.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/memo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$memo\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Memo = void 0;\n\nvar _operator = require(\"./operator\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Memo extends _operator.Operator {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"active\", \"operator\", \"source\", \"index\", \"texture\", \"memo\"];\n  }\n\n  sourceShader(shader) {\n    return this.memo.shaderAbsolute(shader, 1);\n  }\n\n  make() {\n    super.make();\n\n    if (this.bind.source == null) {\n      return;\n    } // Listen for updates\n\n\n    this._helpers.active.make();\n\n    this._listen(\"root\", \"root.update\", () => {\n      if (this.isActive) {\n        return this.update();\n      }\n    }); // Read sampling parameters\n\n\n    const {\n      minFilter,\n      magFilter,\n      type\n    } = this.props; // Fetch geometry dimensions\n\n    const dims = this.bind.source.getDimensions();\n    const {\n      items,\n      width,\n      height,\n      depth\n    } = dims; // Prepare memoization RTT\n\n    this.memo = this._renderables.make(\"memo\", {\n      items,\n      width,\n      height,\n      depth,\n      minFilter,\n      magFilter,\n      type\n    }); // Build shader to remap data (do it after RTT creation to allow feedback)\n\n    const operator = this._shaders.shader();\n\n    this.bind.source.sourceShader(operator); // Make screen renderable inside RTT scene\n\n    this.compose = this._renderables.make(\"memoScreen\", {\n      map: operator,\n      items,\n      width,\n      height,\n      depth\n    });\n    this.memo.adopt(this.compose);\n    this.objects = [this.compose];\n    return this.renders = this.compose.renders;\n  }\n\n  unmake() {\n    this._helpers.active.unmake();\n\n    if (this.bind.source != null) {\n      this.memo.unadopt(this.compose);\n      this.memo.dispose();\n      this.memo = this.compose = null;\n      super.unmake();\n    }\n  }\n\n  update() {\n    return this.memo != null ? this.memo.render() : undefined;\n  }\n\n  resize() {\n    if (this.bind.source == null) {\n      return;\n    } // Fetch geometry dimensions\n\n\n    const dims = this.bind.source.getActiveDimensions();\n    const {\n      width,\n      height,\n      depth\n    } = dims; // Cover only part of the RTT viewport\n\n    this.compose.cover(width, height, depth);\n    return super.resize();\n  }\n\n  change(changed, touched, _init) {\n    if (touched[\"texture\"] || touched[\"operator\"]) {\n      return this.rebuild();\n    }\n  }\n\n}\n\nexports.Memo = Memo;\nMemo.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Memo","_operator","Operator","initClass","traits","sourceShader","shader","memo","shaderAbsolute","make","bind","source","_helpers","active","_listen","isActive","update","minFilter","magFilter","type","props","dims","getDimensions","items","width","height","depth","_renderables","operator","_shaders","compose","map","adopt","objects","renders","unmake","unadopt","dispose","render","undefined","resize","getActiveDimensions","cover","change","changed","touched","_init","rebuild"]
}
