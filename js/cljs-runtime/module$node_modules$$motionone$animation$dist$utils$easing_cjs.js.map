{
"version":3,
"file":"module$node_modules$$motionone$animation$dist$utils$easing_cjs.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,OAASN,OAAA,CAAQ,sDAAR,CAAb,CACIO,MAAQP,OAAA,CAAQ,qDAAR,CAEZ,OAAMQ,aAAe,CACjBC,KAAMH,MAAOI,CAAAA,WAAP,CAAmB,GAAnB,CAAyB,EAAzB,CAA8B,GAA9B,CAAoC,CAApC,CADW,CAEjB,UAAWJ,MAAOI,CAAAA,WAAP,CAAmB,GAAnB,CAAyB,CAAzB,CAA8B,CAA9B,CAAmC,CAAnC,CAFM,CAGjB,cAAeJ,MAAOI,CAAAA,WAAP,CAAmB,GAAnB,CAAyB,CAAzB,CAA8B,GAA9B,CAAoC,CAApC,CAHE,CAIjB,WAAYJ,MAAOI,CAAAA,WAAP,CAAmB,CAAnB,CAAwB,CAAxB,CAA6B,GAA7B,CAAmC,CAAnC,CAJK,CAArB;AAMMC,kBAAoB,WAsB1BT,QAAQU,CAAAA,iBAAR,CArBAA,QAA0B,CAACC,UAAD,CAAa,CAEnC,MAAIN,MAAMO,CAAAA,UAAN,CAAiBD,UAAjB,CAAJ,CACWA,UADX,CAGIN,KAAMQ,CAAAA,aAAN,CAAoBF,UAApB,CAAJ,CACWP,MAAOI,CAAAA,WAAP,CAAmB,GAAGG,UAAtB,CADX,CAGIL,YAAA,CAAaK,UAAb,CAAJ,CACWL,YAAA,CAAaK,UAAb,CADX,CAGIA,UAAWG,CAAAA,UAAX,CAAsB,OAAtB,CAAJ,GACUC,UADV,CACiBN,iBAAkBO,CAAAA,IAAlB,CAAuBL,UAAvB,CADjB,GAGcM,UACC,CADWF,UAAA,CAAK,CAAL,CAAQG,CAAAA,KAAR,CAAc,GAAd,CACX,CAAAd,MAAOe,CAAAA,KAAP,CAAaC,UAAA,CAAWH,UAAA,CAAU,CAAV,CAAX,CAAb,CAAuCA,UAAA,CAAU,CAAV,CAAaI,CAAAA,IAAb,EAAvC,CAJf,EAOOhB,KAAMiB,CAAAA,UAlBsB,CAfoF;",
"sources":["node_modules/@motionone/animation/dist/utils/easing.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$animation$dist$utils$easing_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar easing = require('@motionone/easing');\nvar utils = require('@motionone/utils');\n\nconst namedEasings = {\n    ease: easing.cubicBezier(0.25, 0.1, 0.25, 1.0),\n    \"ease-in\": easing.cubicBezier(0.42, 0.0, 1.0, 1.0),\n    \"ease-in-out\": easing.cubicBezier(0.42, 0.0, 0.58, 1.0),\n    \"ease-out\": easing.cubicBezier(0.0, 0.0, 0.58, 1.0),\n};\nconst functionArgsRegex = /\\((.*?)\\)/;\nfunction getEasingFunction(definition) {\n    // If already an easing function, return\n    if (utils.isFunction(definition))\n        return definition;\n    // If an easing curve definition, return bezier function\n    if (utils.isCubicBezier(definition))\n        return easing.cubicBezier(...definition);\n    // If we have a predefined easing function, return\n    if (namedEasings[definition])\n        return namedEasings[definition];\n    // If this is a steps function, attempt to create easing curve\n    if (definition.startsWith(\"steps\")) {\n        const args = functionArgsRegex.exec(definition);\n        if (args) {\n            const argsArray = args[1].split(\",\");\n            return easing.steps(parseFloat(argsArray[0]), argsArray[1].trim());\n        }\n    }\n    return utils.noopReturn;\n}\n\nexports.getEasingFunction = getEasingFunction;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","easing","utils","namedEasings","ease","cubicBezier","functionArgsRegex","getEasingFunction","definition","isFunction","isCubicBezier","startsWith","args","exec","argsArray","split","steps","parseFloat","trim","noopReturn"]
}
