{
"version":3,
"file":"module$node_modules$markdown_it$lib$rules_inline$html_inline.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAMzH,IAAIC,YAAcH,OAAA,CAAQ,oDAAR,CAA6BG,CAAAA,WAU/CF,OAAOC,CAAAA,OAAP,CAAiBE,QAAoB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAAA,IAE/CC,IAAMF,KAAME,CAAAA,GAEhB,IAAI,CAACF,KAAMG,CAAAA,EAAGC,CAAAA,OAAQC,CAAAA,IAAtB,CAA8B,MAAO,CAAA,CAGrC,KAAAC,GAAMN,KAAMO,CAAAA,MACZ,IAAkC,EAAlC,GAAIP,KAAMQ,CAAAA,GAAIC,CAAAA,UAAV,CAAqBP,GAArB,CAAJ,EACIA,GADJ,CACU,CADV,EACeI,EADf,CAEE,MAAO,CAAA,CAITI,GAAA,CAAKV,KAAMQ,CAAAA,GAAIC,CAAAA,UAAV,CAAqBP,GAArB,CAA2B,CAA3B,CACD,KAAA,eAAA,IAAA,eAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAGAQ,EAAA,EAvBU,EAuBV,CAAA,eAAA,CAAA,EAtBU,EAsBV,EAtBIC,EAsBJ,EAtBiC,GAsBjC;AAtB2BA,EAsB3B,CAHJ,IAAI,eAAJ,CAIE,MAAO,CAAA,CAGTC,GAAA,CAAQZ,KAAMQ,CAAAA,GAAIK,CAAAA,KAAV,CAAgBX,GAAhB,CAAqBU,CAAAA,KAArB,CAA2Bd,WAA3B,CACR,IAAI,CAACc,EAAL,CAAc,MAAO,CAAA,CAEhBX,OAAL,GACEa,MACA,CADgBd,KAAMe,CAAAA,IAAN,CAAW,aAAX,CAA0B,EAA1B,CAA8B,CAA9B,CAChB,CAAAD,MAAME,CAAAA,OAAN,CAAgBhB,KAAMQ,CAAAA,GAAIK,CAAAA,KAAV,CAAgBX,GAAhB,CAAqBA,GAArB,CAA2BU,EAAA,CAAM,CAAN,CAASK,CAAAA,MAApC,CAFlB,CAIAjB,MAAME,CAAAA,GAAN,EAAaU,EAAA,CAAM,CAAN,CAASK,CAAAA,MACtB,OAAO,CAAA,CA9B4C,CAhBoE;",
"sources":["node_modules/markdown-it/lib/rules_inline/html_inline.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$rules_inline$html_inline\"] = function(global,require,module,exports) {\n// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","HTML_TAG_RE","module.exports","state","silent","pos","md","options","html","max","posMax","src","charCodeAt","ch","lc","match","slice","token","push","content","length"]
}
