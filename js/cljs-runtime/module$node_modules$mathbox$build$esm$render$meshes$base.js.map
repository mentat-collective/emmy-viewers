{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$meshes$base.js",
"lineCount":24,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/meshes/base.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$meshes$base\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Base = void 0;\n\nvar UGLSL = _interopRequireWildcard(require(\"../../util/glsl.js\"));\n\nvar _RawShaderMaterial = require(\"three/src/materials/RawShaderMaterial.js\");\n\nvar _renderable = require(\"../renderable.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Base extends _renderable.Renderable {\n  constructor(renderer, shaders, options) {\n    super(renderer, shaders, options);\n    this.zUnits = options.zUnits != null ? options.zUnits : 0;\n  }\n\n  raw() {\n    for (const object of Array.from(this.renders)) {\n      this._raw(object);\n    }\n\n    return null;\n  }\n\n  depth(write, test) {\n    for (const object of Array.from(this.renders)) {\n      this._depth(object, write, test);\n    }\n\n    return null;\n  }\n\n  polygonOffset(factor, units) {\n    for (const object of Array.from(this.renders)) {\n      this._polygonOffset(object, factor, units);\n    }\n\n    return null;\n  }\n\n  show(transparent, blending, order) {\n    return Array.from(this.renders).map(object => this._show(object, transparent, blending, order));\n  }\n\n  hide() {\n    for (const object of Array.from(this.renders)) {\n      this._hide(object);\n    }\n\n    return null;\n  }\n\n  _injectPreamble(preamble, code) {\n    const program = preamble + \"\\n\" + code;\n\n    if (code.match(/#extension/)) {\n      return this._hoist(program);\n    } else {\n      return program;\n    }\n  }\n\n  _hoist(code) {\n    const lines = code.split(\"\\n\");\n    const out = [];\n\n    for (const line of Array.from(lines)) {\n      if (line.match(/^\\s*#extension/)) {\n        out.unshift(line);\n      } else {\n        out.push(line);\n      }\n    }\n\n    return out.join(\"\\n\");\n  }\n\n  _material(options) {\n    const precision = this.renderer.capabilities.precision;\n    const vertexPrefix = `\\\n    precision ${precision} float;\n    precision ${precision} int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\\\n`;\n    const fragmentPrefix = `\\\n    precision ${precision} float;\n    precision ${precision} int;\nuniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\\\n`;\n    const shaderOptions = {};\n    Object.assign(shaderOptions, options);\n    delete shaderOptions.attributes;\n    delete shaderOptions.varyings;\n    delete shaderOptions.inspect;\n    delete shaderOptions.vertexGraph;\n    delete shaderOptions.fragmentGraph;\n    const material = new _RawShaderMaterial.RawShaderMaterial(shaderOptions);\n    [\"vertexGraph\", \"fragmentGraph\", \"inspect\"].forEach(key => material[key] = options[key]);\n    material.vertexShader = this._injectPreamble(vertexPrefix, material.vertexShader);\n    material.fragmentShader = this._injectPreamble(fragmentPrefix, material.fragmentShader);\n    return material;\n  }\n\n  _raw(object) {\n    object.rotationAutoUpdate = false;\n    object.frustumCulled = false;\n    object.matrixAutoUpdate = false;\n    object.material.defaultAttributeValues = undefined;\n  }\n\n  _depth(object, write, test) {\n    const m = object.material;\n    m.depthWrite = write;\n    return m.depthTest = test;\n  }\n\n  _polygonOffset(object, factor, units) {\n    units -= this.zUnits;\n    const enabled = units !== 0;\n    const m = object.material;\n    m.polygonOffset = enabled;\n\n    if (enabled) {\n      m.polygonOffsetFactor = factor;\n      return m.polygonOffsetUnits = units;\n    }\n  }\n\n  _show(object, transparent, blending, order) {\n    // Force transparent to true to ensure all renderables drawn in order\n    transparent = true;\n    const m = object.material;\n    object.renderOrder = -order;\n    object.visible = true;\n    m.transparent = transparent;\n    m.blending = blending;\n    return null;\n  }\n\n  _hide(object) {\n    return object.visible = false;\n  }\n\n  _vertexColor(color, mask) {\n    if (!color && !mask) {\n      return;\n    }\n\n    const v = this.shaders.shader();\n\n    if (color) {\n      v.require(color);\n\n      v.pipe(\"mesh.vertex.color\", this.uniforms);\n    }\n\n    if (mask) {\n      v.require(mask);\n\n      v.pipe(\"mesh.vertex.mask\", this.uniforms);\n    }\n\n    return v;\n  }\n\n  _vertexPosition(position, material, map, channels, stpq) {\n    let defs;\n    const v = this.shaders.shader();\n\n    if (map || material && material !== true) {\n      defs = {};\n\n      if (channels > 0 || stpq) {\n        defs.POSITION_MAP = \"\";\n      }\n\n      if (channels > 0) {\n        defs[[\"POSITION_U\", \"POSITION_UV\", \"POSITION_UVW\", \"POSITION_UVWO\"][channels - 1]] = \"\";\n      }\n\n      if (stpq) {\n        defs.POSITION_STPQ = \"\";\n      }\n    }\n\n    v.require(position);\n\n    return v.pipe(\"mesh.vertex.position\", this.uniforms, defs);\n  }\n\n  _fragmentColor(hasStyle, material, color, mask, map, channels, stpq, combine, linear) {\n    const f = this.shaders.shader(); // metacode is terrible\n\n    let join = false;\n    let gamma = false;\n    const defs = {};\n\n    if (channels > 0) {\n      defs[[\"POSITION_U\", \"POSITION_UV\", \"POSITION_UVW\", \"POSITION_UVWO\"][channels - 1]] = \"\";\n    }\n\n    if (stpq) {\n      defs.POSITION_STPQ = \"\";\n    }\n\n    if (hasStyle) {\n      f.pipe(\"style.color\", this.uniforms);\n      join = true;\n\n      if (color || map || material) {\n        if (!linear || color) {\n          f.pipe(\"mesh.gamma.in\");\n        }\n\n        gamma = true;\n      }\n    }\n\n    if (color) {\n      f.isolate();\n      f.pipe(\"mesh.fragment.color\", this.uniforms);\n\n      if (!linear || join) {\n        f.pipe(\"mesh.gamma.in\");\n      }\n\n      f.end();\n\n      if (join) {\n        f.pipe(UGLSL.binaryOperator(\"vec4\", \"*\"));\n      }\n\n      if (linear && join) {\n        f.pipe(\"mesh.gamma.out\");\n      }\n\n      join = true;\n      gamma = true;\n    }\n\n    if (map) {\n      if (!join && combine) {\n        f.pipe(UGLSL.constant(\"vec4\", \"vec4(1.0)\"));\n      }\n\n      f.isolate();\n\n      f.require(map);\n\n      f.pipe(\"mesh.fragment.map\", this.uniforms, defs);\n\n      if (!linear) {\n        f.pipe(\"mesh.gamma.in\");\n      }\n\n      f.end();\n\n      if (combine) {\n        f.pipe(combine);\n      } else {\n        if (join) {\n          f.pipe(UGLSL.binaryOperator(\"vec4\", \"*\"));\n        }\n      }\n\n      join = true;\n      gamma = true;\n    }\n\n    if (material) {\n      if (!join) {\n        f.pipe(UGLSL.constant(\"vec4\", \"vec4(1.0)\"));\n      }\n\n      if (material === true) {\n        f.pipe(\"mesh.fragment.shaded\", this.uniforms);\n      } else {\n        f.require(material);\n\n        f.pipe(\"mesh.fragment.material\", this.uniforms, defs);\n      }\n\n      gamma = true;\n    }\n\n    if (gamma && !linear) {\n      f.pipe(\"mesh.gamma.out\");\n    }\n\n    if (mask) {\n      f.pipe(\"mesh.fragment.mask\", this.uniforms);\n\n      if (join) {\n        f.pipe(UGLSL.binaryOperator(\"vec4\", \"*\"));\n      }\n    }\n\n    return f;\n  }\n\n}\n\nexports.Base = Base;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Base","UGLSL","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_RawShaderMaterial","_renderable","Renderable","constructor","renderer","shaders","options","zUnits","raw","object","Array","from","renders","_raw","depth","write","test","_depth","polygonOffset","factor","units","_polygonOffset","show","transparent","blending","order","map","_show","hide","_hide","_injectPreamble","preamble","code","program","match","_hoist","lines","split","out","line","unshift","push","join","_material","precision","capabilities","vertexPrefix","fragmentPrefix","shaderOptions","assign","attributes","varyings","inspect","vertexGraph","fragmentGraph","material","RawShaderMaterial","forEach","vertexShader","fragmentShader","rotationAutoUpdate","frustumCulled","matrixAutoUpdate","defaultAttributeValues","undefined","m","depthWrite","depthTest","enabled","polygonOffsetFactor","polygonOffsetUnits","renderOrder","visible","_vertexColor","color","mask","v","shader","pipe","uniforms","_vertexPosition","position","channels","stpq","defs","POSITION_MAP","POSITION_STPQ","_fragmentColor","hasStyle","combine","linear","f","gamma","isolate","end","binaryOperator","constant"]
}
