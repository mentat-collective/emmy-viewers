shadow$provide.module$node_modules$canvas$lib$parse_font=function(global,require,module,exports){const weightRe=RegExp("(bold|bolder|lighter|[1-9]00) +","i"),styleRe=RegExp("(italic|oblique) +","i"),variantRe=RegExp("(small-caps) +","i"),stretchRe=RegExp("(ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded) +","i"),sizeFamilyRe=RegExp("([\\d\\.]+)(px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q) *((?:'([^']+)'|\"([^\"]+)\"|[\\w\\s-]+)( *, *(?:'([^']+)'|\"([^\"]+)\"|[\\w\\s-]+))*)"),
cache={};module.exports=str=>{if(cache[str])return cache[str];var sizeFamily=sizeFamilyRe.exec(str);if(sizeFamily){var font={weight:"normal",style:"normal",stretch:"normal",variant:"normal",size:parseFloat(sizeFamily[1]),unit:sizeFamily[2],family:sizeFamily[3].replace(/["']/g,"").replace(/ *, */g,",")},weight;sizeFamily=str.substring(0,sizeFamily.index);if(weight=weightRe.exec(sizeFamily))font.weight=weight[1];if(weight=styleRe.exec(sizeFamily))font.style=weight[1];if(weight=variantRe.exec(sizeFamily))font.variant=
weight[1];if(sizeFamily=stretchRe.exec(sizeFamily))font.stretch=sizeFamily[1];switch(font.unit){case "pt":font.size/=.75;break;case "pc":font.size*=16;break;case "in":font.size*=96;break;case "cm":font.size*=96/2.54;break;case "mm":font.size*=96/25.4;break;case "em":case "rem":font.size*=16/.75;break;case "q":font.size*=96/25.4/4}return cache[str]=font}}}
//# sourceMappingURL=module$node_modules$canvas$lib$parse_font.js.map
