{
"version":3,
"file":"module$node_modules$markdown_it$lib$rules_inline$autolink.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/markdown-it/lib/rules_inline/autolink.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$rules_inline$autolink\"] = function(global,require,module,exports) {\n// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","EMAIL_RE","AUTOLINK_RE","module.exports","state","silent","max","pos","src","charCodeAt","start","posMax","ch","url","slice","test","fullUrl","md","normalizeLink","validateLink","token","push","attrs","markup","info","content","normalizeLinkText","length"]
}
