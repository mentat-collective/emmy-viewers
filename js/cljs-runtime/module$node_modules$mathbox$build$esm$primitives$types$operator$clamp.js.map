{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$clamp.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,qEAAA,CAA0F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGlIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,KAAR,CAAgB,IAAK,EAEjBC,OAAAA,CAAYP,OAAA,CAAQ,0EAAR,CAYhB,MAAMM,MAAN,QAAoBC,OAAUC,CAAAA,QAA9B,CACSC,gBAAS,EAAG,CACjB,IAAKC,CAAAA,MAAL,CAAc,uCAAA,CAAA,KAAA,CAAA,GAAA,CADG,CAInBC,WAAW,CAACC,MAAD,CAAS,CAClBA,MAAOC,CAAAA,IAAP,CAAY,IAAKC,CAAAA,QAAjB,CACA,OAAO,MAAMH,CAAAA,WAAN,CAAkBC,MAAlB,CAFW,CAKpBG,YAAY,CAACH,MAAD,CAAS,CACnBA,MAAOC,CAAAA,IAAP,CAAY,IAAKC,CAAAA,QAAjB,CACA;MAAO,MAAMC,CAAAA,YAAN,CAAmBH,MAAnB,CAFY,CAKrBI,IAAI,EAAG,CACL,KAAMA,CAAAA,IAAN,EAEA,IAAwB,IAAxB,EAAI,IAAKC,CAAAA,IAAKC,CAAAA,MAAd,CAAA,CAKA,IAAMC,SAAW,CACfC,WAAY,IAAKC,CAAAA,WAAYL,CAAAA,IAAjB,CAAsB,IAAKM,CAAAA,MAAOC,CAAAA,IAAZ,EAAtB,CADG,CAGjB,KAAKH,CAAAA,UAAL,CAAkBD,QAASC,CAAAA,UAE3B,KAAMI,UAAY,IAAKC,CAAAA,QAASb,CAAAA,MAAd,EAElBY,UAAUX,CAAAA,IAAV,CAAe,gBAAf,CAAiCM,QAAjC,CACA,OAAO,KAAKL,CAAAA,QAAZ,CAAuBU,SAbvB,CAHK,CAmBPE,MAAM,EAAG,CACP,MAAO,MAAMA,CAAAA,MAAN,EADA,CAITC,MAAM,EAAG,CACP,GAAwB,IAAxB,EAAI,IAAKV,CAAAA,IAAKC,CAAAA,MAAd,CAA8B,CAC5B,MAAMU,KAAO,IAAKX,CAAAA,IAAKC,CAAAA,MAAOW,CAAAA,mBAAjB,EACb,KAAKT,CAAAA,UAAWf,CAAAA,KAAMyB,CAAAA,GAAtB,CAA0BF,IAAKG,CAAAA,KAA/B,CAAuC,CAAvC,CAA0CH,IAAKI,CAAAA,MAA/C,CAAwD,CAAxD,CAA2DJ,IAAKK,CAAAA,KAAhE,CAAwE,CAAxE,CAA2EL,IAAKM,CAAAA,KAAhF,CAAwF,CAAxF,CAF4B,CAK9B,MAAO,MAAMP,CAAAA,MAAN,EANA,CASTQ,MAAM,CAACC,OAAD;AAAUC,OAAV,CAAmBC,KAAnB,CAA0B,CAC9B,GAAID,OAAA,CAAA,QAAJ,EAA2BA,OAAA,CAAA,KAA3B,CACE,MAAO,KAAKE,CAAAA,OAAL,EAFqB,CA/ClC,CAuDArC,OAAQI,CAAAA,KAAR,CAAgBA,KAChBA,MAAMG,CAAAA,SAAN,EA5EkI;",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/clamp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$clamp\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Clamp = void 0;\n\nvar _operator = require(\"./operator.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Clamp extends _operator.Operator {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"operator\", \"source\", \"index\", \"clamp\"];\n  }\n\n  indexShader(shader) {\n    shader.pipe(this.operator);\n    return super.indexShader(shader);\n  }\n\n  sourceShader(shader) {\n    shader.pipe(this.operator);\n    return super.sourceShader(shader);\n  }\n\n  make() {\n    super.make();\n\n    if (this.bind.source == null) {\n      return;\n    } // Max index on all 4 dimensions\n\n\n    const uniforms = {\n      clampLimit: this._attributes.make(this._types.vec4())\n    };\n    this.clampLimit = uniforms.clampLimit; // Build shader to clamp along all dimensions\n\n    const transform = this._shaders.shader();\n\n    transform.pipe(\"clamp.position\", uniforms);\n    return this.operator = transform;\n  }\n\n  unmake() {\n    return super.unmake();\n  }\n\n  resize() {\n    if (this.bind.source != null) {\n      const dims = this.bind.source.getActiveDimensions();\n      this.clampLimit.value.set(dims.width - 1, dims.height - 1, dims.depth - 1, dims.items - 1);\n    }\n\n    return super.resize();\n  }\n\n  change(changed, touched, _init) {\n    if (touched[\"operator\"] || touched[\"clamp\"]) {\n      return this.rebuild();\n    }\n  }\n\n}\n\nexports.Clamp = Clamp;\nClamp.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Clamp","_operator","Operator","initClass","traits","indexShader","shader","pipe","operator","sourceShader","make","bind","source","uniforms","clampLimit","_attributes","_types","vec4","transform","_shaders","unmake","resize","dims","getActiveDimensions","set","width","height","depth","items","change","changed","touched","_init","rebuild"]
}
