{"version":3,"sources":["mathbox/primitives/view/cartesian.cljs"],"mappings":";;AAIA;;;;;;;;;;;;;;AAYEA,8CACA,AAACC,+BAAoBC","names":["mathbox.primitives.view.cartesian/Cartesian","reagent.core/adapt-react-class","js/module$node_modules$mathbox_react$build$cjs$index.Cartesian"],"sourcesContent":["(ns mathbox.primitives.view.cartesian\n  (:require [\"mathbox-react\" :as box]\n            [reagent.core :as r]))\n\n(def ^{:doc \"*Apply cartesian view*\n\n* *classes* = `[]` (string array) - Custom classes, e.g. `[\\\"big\\\"]`\n* *eulerOrder* = `xyz` (swizzle) - Euler order\n* *id* = `null` (nullable string) - Unique ID, e.g. `\\\"sampler\\\"`\n* *pass* = `\\\"view\\\"` (vertexPass) - Vertex pass (data, view, world, eye)\n* *position* = `[0, 0, 0]` (vec3) - 3D Position\n* *quaternion* = `[0, 0, 0, 1]` (quat) - 3D Quaternion\n* *range* = `[[-1, 1], [-1, 1], [-1, 1], [-1, 1]]` (array vec2) - 4D range in view\n* *rotation* = `[0, 0, 0]` (vec3) - 3D Euler rotation\n* *scale* = `[1, 1, 1]` (vec3) - 3D Scale\n* *visible* = `true` (bool) - Visibility for rendering\"}\n  Cartesian\n  (r/adapt-react-class box/Cartesian))\n"]}