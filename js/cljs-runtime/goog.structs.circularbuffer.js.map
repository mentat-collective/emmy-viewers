{
"version":3,
"file":"goog.structs.circularbuffer.js",
"lineCount":78,
"mappings":"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",
"sources":["goog/structs/circularbuffer.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Datastructure: Circular Buffer.\n *\n * Implements a buffer with a maximum size. New entries override the oldest\n * entries when the maximum size has been reached.\n */\n\n\ngoog.provide('goog.structs.CircularBuffer');\n\n\n\n/**\n * Class for CircularBuffer.\n * @param {number=} opt_maxSize The maximum size of the buffer.\n * @constructor\n * @template T\n */\ngoog.structs.CircularBuffer = function(opt_maxSize) {\n  'use strict';\n  /**\n   * Index of the next element in the circular array structure.\n   * @private {number}\n   */\n  this.nextPtr_ = 0;\n\n  /**\n   * Maximum size of the circular array structure.\n   * @private {number}\n   */\n  this.maxSize_ = opt_maxSize || 100;\n\n  /**\n   * Underlying array for the CircularBuffer.\n   * @private {!Array<T>}\n   */\n  this.buff_ = [];\n};\n\n\n/**\n * Adds an item to the buffer. May remove the oldest item if the buffer is at\n * max size.\n * @param {T} item The item to add.\n * @return {T|undefined} The removed old item, if the buffer is at max size.\n *     Return undefined, otherwise.\n */\ngoog.structs.CircularBuffer.prototype.add = function(item) {\n  'use strict';\n  const previousItem = this.buff_[this.nextPtr_];\n  this.buff_[this.nextPtr_] = item;\n  this.nextPtr_ = (this.nextPtr_ + 1) % this.maxSize_;\n  return previousItem;\n};\n\n\n/**\n * Returns the item at the specified index.\n * @param {number} index The index of the item. The index of an item can change\n *     after calls to `add()` if the buffer is at maximum size.\n * @return {T} The item at the specified index.\n */\ngoog.structs.CircularBuffer.prototype.get = function(index) {\n  'use strict';\n  index = this.normalizeIndex_(index);\n  return this.buff_[index];\n};\n\n\n/**\n * Sets the item at the specified index.\n * @param {number} index The index of the item. The index of an item can change\n *     after calls to `add()` if the buffer is at maximum size.\n * @param {T} item The item to add.\n */\ngoog.structs.CircularBuffer.prototype.set = function(index, item) {\n  'use strict';\n  index = this.normalizeIndex_(index);\n  this.buff_[index] = item;\n};\n\n\n/**\n * Returns the current number of items in the buffer.\n * @return {number} The current number of items in the buffer.\n */\ngoog.structs.CircularBuffer.prototype.getCount = function() {\n  'use strict';\n  return this.buff_.length;\n};\n\n\n/**\n * @return {boolean} Whether the buffer is empty.\n */\ngoog.structs.CircularBuffer.prototype.isEmpty = function() {\n  'use strict';\n  return this.buff_.length == 0;\n};\n\n\n/**\n * Empties the current buffer.\n */\ngoog.structs.CircularBuffer.prototype.clear = function() {\n  'use strict';\n  this.buff_.length = 0;\n  this.nextPtr_ = 0;\n};\n\n\n/**\n * @return {!Array<T>} The values in the buffer ordered from oldest to newest.\n */\ngoog.structs.CircularBuffer.prototype.getValues = function() {\n  'use strict';\n  // getNewestValues returns all the values if the maxCount parameter is the\n  // count\n  return this.getNewestValues(this.getCount());\n};\n\n\n/**\n * Returns the newest values in the buffer up to `count`.\n * @param {number} maxCount The maximum number of values to get. Should be a\n *     positive number.\n * @return {!Array<T>} The newest values in the buffer up to `count`. The\n *     values are ordered from oldest to newest.\n */\ngoog.structs.CircularBuffer.prototype.getNewestValues = function(maxCount) {\n  'use strict';\n  const l = this.getCount();\n  const start = this.getCount() - maxCount;\n  const rv = [];\n  for (let i = start; i < l; i++) {\n    rv.push(this.get(i));\n  }\n  return rv;\n};\n\n\n/** @return {!Array<number>} The indexes in the buffer. */\ngoog.structs.CircularBuffer.prototype.getKeys = function() {\n  'use strict';\n  const rv = [];\n  const l = this.getCount();\n  for (let i = 0; i < l; i++) {\n    rv[i] = i;\n  }\n  return rv;\n};\n\n\n/**\n * Whether the buffer contains the key/index.\n * @param {number} key The key/index to check for.\n * @return {boolean} Whether the buffer contains the key/index.\n */\ngoog.structs.CircularBuffer.prototype.containsKey = function(key) {\n  'use strict';\n  return key < this.getCount();\n};\n\n\n/**\n * Whether the buffer contains the given value.\n * @param {T} value The value to check for.\n * @return {boolean} Whether the buffer contains the given value.\n */\ngoog.structs.CircularBuffer.prototype.containsValue = function(value) {\n  'use strict';\n  const l = this.getCount();\n  for (let i = 0; i < l; i++) {\n    if (this.get(i) == value) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Returns the last item inserted into the buffer.\n * @return {T|null} The last item inserted into the buffer,\n *     or null if the buffer is empty.\n */\ngoog.structs.CircularBuffer.prototype.getLast = function() {\n  'use strict';\n  if (this.getCount() == 0) {\n    return null;\n  }\n  return this.get(this.getCount() - 1);\n};\n\n\n/**\n * Helper function to convert an index in the number space of oldest to\n * newest items in the array to the position that the element will be at in the\n * underlying array.\n * @param {number} index The index of the item in a list ordered from oldest to\n *     newest.\n * @return {number} The index of the item in the CircularBuffer's underlying\n *     array.\n * @private\n */\ngoog.structs.CircularBuffer.prototype.normalizeIndex_ = function(index) {\n  'use strict';\n  if (index >= this.buff_.length) {\n    throw new Error('Out of bounds exception');\n  }\n\n  if (this.buff_.length < this.maxSize_) {\n    return index;\n  }\n\n  return (this.nextPtr_ + Number(index)) % this.maxSize_;\n};\n"],
"names":["goog","provide","structs","CircularBuffer","goog.structs.CircularBuffer","opt_maxSize","nextPtr_","maxSize_","buff_","prototype","add","goog.structs.CircularBuffer.prototype.add","item","previousItem","get","goog.structs.CircularBuffer.prototype.get","index","normalizeIndex_","set","goog.structs.CircularBuffer.prototype.set","getCount","goog.structs.CircularBuffer.prototype.getCount","length","isEmpty","goog.structs.CircularBuffer.prototype.isEmpty","clear","goog.structs.CircularBuffer.prototype.clear","getValues","goog.structs.CircularBuffer.prototype.getValues","getNewestValues","goog.structs.CircularBuffer.prototype.getNewestValues","maxCount","l","start","rv","i","push","getKeys","goog.structs.CircularBuffer.prototype.getKeys","containsKey","goog.structs.CircularBuffer.prototype.containsKey","key","containsValue","goog.structs.CircularBuffer.prototype.containsValue","value","getLast","goog.structs.CircularBuffer.prototype.getLast","goog.structs.CircularBuffer.prototype.normalizeIndex_","Error","Number"]
}
