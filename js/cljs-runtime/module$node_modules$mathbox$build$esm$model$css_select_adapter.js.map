{
"version":3,
"file":"module$node_modules$mathbox$build$esm$model$css_select_adapter.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/model/css-select-adapter.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$model$css_select_adapter\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * This file contains an *adapter* for css-select. css-select is a CSS selection\n * engine for HTML that can be used with other data structures (XML, etc) via\n * adapters. Here we define an adapter for MathBox's vdom.\n *\n * The adapter interface is described here:\n *    https://github.com/fb55/css-select/blob/1aa44bdd64aaf2ebdfd7f338e2e76bed36521957/src/types.ts#L6-L96\n *\n * Nodes vs Elements:\n * In general, CSS Selectors act on a document tree built from nodes, which can\n * include element nodes and non-element nodes. For example, in HTML, tags are\n * element nodes but lines of text are non-element node. Non-element text nodes\n * can influence css selection, e.g., via :first-line pseudoclass, but these\n * non-element nodes are never returned by selectors.\n *\n * Mathbox only has element nodes.\n */\n\n/**\n * Is this node an element node? Yes. Mathbox only has element nodes.\n */\nfunction isTag(_elem) {\n  return true;\n}\n\nfunction getChildren(elem) {\n  return elem.children || [];\n}\n\nfunction getParent(elem) {\n  return elem.parent;\n}\n/**\n * Takes an array of nodes, and removes any duplicates, as well as any\n * nodes whose ancestors are also in the array.\n */\n\n\nfunction removeSubsets(nodes) {\n  const deduped = new Set(nodes);\n  deduped.forEach(node => {\n    let ancestor = node.parent;\n\n    while (ancestor) {\n      if (deduped.has(ancestor)) {\n        deduped.delete(node);\n        return;\n      }\n\n      ancestor = ancestor.parent;\n    }\n  });\n  return Array.from(deduped);\n}\n\nconst adapter = {\n  isTag,\n\n  /**\n   * Does at least one of passed element nodes pass the test predicate?\n   */\n  existsOne(test, elems) {\n    return elems.some(elem => isTag(elem) ? test(elem) || adapter.existsOne(test, getChildren(elem)) : false);\n  },\n\n  /**\n   * Get the siblings of the node. Note that unlike jQuery's `siblings` method,\n   * this is expected to include the current node as well\n   */\n  getSiblings(elem) {\n    const parent = getParent(elem);\n    return parent ? getChildren(parent) : [elem];\n  },\n\n  getChildren,\n  getParent,\n\n  getAttributeValue(elem, name) {\n    if (name === \"class\") return elem.props.classes.join(\" \");\n    if (name === \"id\") return elem.id;\n    return \"\";\n  },\n\n  hasAttrib(elem, name) {\n    if (name === \"id\") return !!elem.id;\n    if (name === \"class\") return elem.props.classes.length > 0;\n    if (!elem.traits.hash) return false;\n    return Object.prototype.hasOwnProperty.call(elem.traits.hash, name);\n  },\n\n  removeSubsets,\n\n  getName(elem) {\n    var _a;\n\n    return (_a = elem.type) !== null && _a !== void 0 ? _a : \"\";\n  },\n\n  /**\n   * Finds the first node in the array that matches the test predicate, or one\n   * of its children.\n   */\n  findOne: function findOne(test, elems) {\n    for (const node of elems) {\n      if (test(node)) {\n        return node;\n      } else {\n        const match = findOne(test, getChildren(node));\n        if (match) return match;\n      }\n    }\n\n    return null;\n  },\n  findAll: function findAll(test, elems) {\n    const result = [];\n\n    for (const elem of elems) {\n      if (!isTag(elem)) continue;\n\n      if (test(elem)) {\n        result.push(elem);\n      }\n\n      result.push(...findAll(test, getChildren(elem)));\n    }\n\n    return result;\n  },\n  getText: function getText(_elem) {\n    return \"\";\n  }\n};\nvar _default = adapter;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","getChildren","elem","children","Object","defineProperty","value","default","adapter","isTag","_elem","existsOne","test","elems","some","getSiblings","parent","getParent","getAttributeValue","name","props","classes","join","id","hasAttrib","length","traits","hash","prototype","hasOwnProperty","call","removeSubsets","nodes","deduped","Set","forEach","node","ancestor","has","delete","Array","from","getName","_a","type","findOne","match","findAll","result","push","getText"]
}
