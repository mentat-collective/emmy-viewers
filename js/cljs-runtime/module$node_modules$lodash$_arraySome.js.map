{
"version":3,
"file":"module$node_modules$lodash$_arraySome.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,qCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuBlGD,MAAOC,CAAAA,OAAP,CAZAC,QAAkB,CAACC,KAAD,CAAQC,SAAR,CAAmB,CAInC,IAJmC,IAC/BC,MAAQ,CAAC,CADsB,CAE/BC,OAAkB,IAAT,EAAAH,KAAA,CAAgB,CAAhB,CAAoBA,KAAMG,CAAAA,MAEvC,CAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CACE,GAAIF,SAAA,CAAUD,KAAA,CAAME,KAAN,CAAV,CAAwBA,KAAxB,CAA+BF,KAA/B,CAAJ,CACE,MAAO,CAAA,CAGX,OAAO,CAAA,CAT4B,CAX6D;",
"sources":["node_modules/lodash/_arraySome.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_arraySome\"] = function(global,require,module,exports) {\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n};"],
"names":["shadow$provide","global","require","module","exports","arraySome","array","predicate","index","length"]
}
