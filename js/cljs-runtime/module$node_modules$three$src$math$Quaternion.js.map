{
"version":3,
"file":"module$node_modules$three$src$math$Quaternion.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/three/src/math/Quaternion.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$math$Quaternion\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Quaternion = void 0;\n\nvar MathUtils = _interopRequireWildcard(require(\"./MathUtils.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nclass Quaternion {\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n  }\n\n  static slerp(qa, qb, qm, t) {\n    console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n    return qm.slerpQuaternions(qa, qb, t);\n  }\n\n  static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    let x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3];\n    const x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n    if (t === 0) {\n      dst[dstOffset + 0] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n      return;\n    }\n\n    if (t === 1) {\n      dst[dstOffset + 0] = x1;\n      dst[dstOffset + 1] = y1;\n      dst[dstOffset + 2] = z1;\n      dst[dstOffset + 3] = w1;\n      return;\n    }\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      let s = 1 - t;\n      const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        const sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      const tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n\n  static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n    const x0 = src0[srcOffset0];\n    const y0 = src0[srcOffset0 + 1];\n    const z0 = src0[srcOffset0 + 2];\n    const w0 = src0[srcOffset0 + 3];\n    const x1 = src1[srcOffset1];\n    const y1 = src1[srcOffset1 + 1];\n    const z1 = src1[srcOffset1 + 2];\n    const w1 = src1[srcOffset1 + 3];\n    dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n    dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n    dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n    dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n    return dst;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  set x(value) {\n    this._x = value;\n\n    this._onChangeCallback();\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  set y(value) {\n    this._y = value;\n\n    this._onChangeCallback();\n  }\n\n  get z() {\n    return this._z;\n  }\n\n  set z(value) {\n    this._z = value;\n\n    this._onChangeCallback();\n  }\n\n  get w() {\n    return this._w;\n  }\n\n  set w(value) {\n    this._w = value;\n\n    this._onChangeCallback();\n  }\n\n  set(x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  clone() {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  }\n\n  copy(quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromEuler(euler, update) {\n    if (!(euler && euler.isEuler)) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n    }\n\n    const x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n    const cos = Math.cos;\n    const sin = Math.sin;\n    const c1 = cos(x / 2);\n    const c2 = cos(y / 2);\n    const c3 = cos(z / 2);\n    const s1 = sin(x / 2);\n    const s2 = sin(y / 2);\n    const s3 = sin(z / 2);\n\n    switch (order) {\n      case 'XYZ':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case 'YXZ':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      case 'ZXY':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case 'ZYX':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      case 'YZX':\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n        break;\n\n      case 'XZY':\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n        break;\n\n      default:\n        console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n    }\n\n    if (update !== false) this._onChangeCallback();\n    return this;\n  }\n\n  setFromAxisAngle(axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    const halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33;\n\n    if (trace > 0) {\n      const s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      const s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      const s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  setFromUnitVectors(vFrom, vTo) {\n    // assumes direction vectors vFrom and vTo are normalized\n    let r = vFrom.dot(vTo) + 1;\n\n    if (r < Number.EPSILON) {\n      // vFrom and vTo point in opposite directions\n      r = 0;\n\n      if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n        this._x = -vFrom.y;\n        this._y = vFrom.x;\n        this._z = 0;\n        this._w = r;\n      } else {\n        this._x = 0;\n        this._y = -vFrom.z;\n        this._z = vFrom.y;\n        this._w = r;\n      }\n    } else {\n      // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n      this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n      this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n      this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n      this._w = r;\n    }\n\n    return this.normalize();\n  }\n\n  angleTo(q) {\n    return 2 * Math.acos(Math.abs(MathUtils.clamp(this.dot(q), -1, 1)));\n  }\n\n  rotateTowards(q, step) {\n    const angle = this.angleTo(q);\n    if (angle === 0) return this;\n    const t = Math.min(1, step / angle);\n    this.slerp(q, t);\n    return this;\n  }\n\n  identity() {\n    return this.set(0, 0, 0, 1);\n  }\n\n  invert() {\n    // quaternion is assumed to have unit length\n    return this.conjugate();\n  }\n\n  conjugate() {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  dot(v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  }\n\n  lengthSq() {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  }\n\n  length() {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  }\n\n  normalize() {\n    let l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  multiply(q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  }\n\n  premultiply(q) {\n    return this.multiplyQuaternions(q, this);\n  }\n\n  multiplyQuaternions(a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    const qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n    const qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  slerp(qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    const x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n    if (sqrSinHalfTheta <= Number.EPSILON) {\n      const s = 1 - t;\n      this._w = s * w + t * this._w;\n      this._x = s * x + t * this._x;\n      this._y = s * y + t * this._y;\n      this._z = s * z + t * this._z;\n      this.normalize();\n\n      this._onChangeCallback();\n\n      return this;\n    }\n\n    const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n    const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  slerpQuaternions(qa, qb, t) {\n    return this.copy(qa).slerp(qb, t);\n  }\n\n  random() {\n    // Derived from http://planning.cs.uiuc.edu/node198.html\n    // Note, this source uses w, x, y, z ordering,\n    // so we swap the order below.\n    const u1 = Math.random();\n    const sqrt1u1 = Math.sqrt(1 - u1);\n    const sqrtu1 = Math.sqrt(u1);\n    const u2 = 2 * Math.PI * Math.random();\n    const u3 = 2 * Math.PI * Math.random();\n    return this.set(sqrt1u1 * Math.cos(u2), sqrtu1 * Math.sin(u3), sqrtu1 * Math.cos(u3), sqrt1u1 * Math.sin(u2));\n  }\n\n  equals(quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  }\n\n  fromArray(array, offset = 0) {\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n\n    this._onChangeCallback();\n\n    return this;\n  }\n\n  toArray(array = [], offset = 0) {\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  }\n\n  fromBufferAttribute(attribute, index) {\n    this._x = attribute.getX(index);\n    this._y = attribute.getY(index);\n    this._z = attribute.getZ(index);\n    this._w = attribute.getW(index);\n    return this;\n  }\n\n  _onChange(callback) {\n    this._onChangeCallback = callback;\n    return this;\n  }\n\n  _onChangeCallback() {}\n\n}\n\nexports.Quaternion = Quaternion;\nQuaternion.prototype.isQuaternion = true;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","Quaternion","MathUtils","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","constructor","x","y","z","w","_x","_y","_z","_w","slerp","qa","qb","qm","t","console","warn","slerpQuaternions","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","s","cos","dir","sqrSin","Number","EPSILON","sin","Math","sqrt","len","atan2","tDir","f","multiplyQuaternionsFlat","_onChangeCallback","clone","copy","quaternion","setFromEuler","euler","update","isEuler","Error","order","_order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","m","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","r","dot","abs","normalize","angleTo","q","acos","clamp","rotateTowards","step","min","identity","invert","conjugate","v","lengthSq","length","l","multiply","p","undefined","multiplyQuaternions","premultiply","a","b","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","random","u1","sqrt1u1","sqrtu1","u2","PI","u3","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","index","getX","getY","getZ","getW","_onChange","callback","isQuaternion"]
}
