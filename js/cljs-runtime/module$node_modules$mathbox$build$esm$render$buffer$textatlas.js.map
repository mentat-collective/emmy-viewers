{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$buffer$textatlas.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/buffer/textatlas.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$buffer$textatlas\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TextAtlas = void 0;\n\nvar _atlas = require(\"./atlas.js\");\n\nvar _constants = require(\"three/src/constants.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst SCRATCH_SIZE = 512 / 16;\n/*\n * Dynamic text atlas\n * - Stores entire strings as sprites\n * - Renders alpha mask (fast) or signed distance field (slow)\n * - Emits (x,y,width,height) pointers into the atlas\n */\n\nclass TextAtlas extends _atlas.Atlas {\n  constructor(renderer, shaders, options) {\n    let left;\n\n    if (!options.width) {\n      options.width = 256;\n    }\n\n    if (!options.height) {\n      options.height = 256;\n    }\n\n    options.type = _constants.UnsignedByteType;\n    options.channels = 1;\n    options.backed = true;\n    super(renderer, shaders, options, false);\n    this.font = options.font != null ? options.font : [\"sans-serif\"];\n    this.size = options.size || 24;\n    this.style = options.style != null ? options.style : \"normal\";\n    this.variant = options.variant != null ? options.variant : \"normal\";\n    this.weight = options.weight != null ? options.weight : \"normal\";\n    this.outline = (left = +(options.outline != null ? options.outline : 5)) != null ? left : 0;\n    this.gamma = 1;\n\n    if (typeof navigator !== \"undefined\") {\n      const ua = navigator.userAgent;\n\n      if (ua.match(/Chrome/) && ua.match(/OS X/)) {\n        this.gamma = 0.5;\n      }\n    }\n\n    this.scratchW = this.scratchH = 0;\n    this.build(options);\n  }\n\n  build(options) {\n    super.build(options); // Prepare line-height with room for outline\n\n    let lineHeight = 16;\n    lineHeight = this.size;\n    lineHeight += 4 + 2 * Math.min(1, this.outline);\n    const maxWidth = SCRATCH_SIZE * lineHeight; // Prepare scratch canvas\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = maxWidth;\n    canvas.height = lineHeight;\n\n    const quote = str => `${str.replace(/(['\"\\\\])/g, \"\\\\$1\")}`;\n\n    const font = this.font.map(quote).join(\", \");\n    const context = canvas.getContext(\"2d\");\n    context.font = `${this.style} ${this.variant} ${this.weight} ${this.size}px ${font}`;\n    context.fillStyle = \"#FF0000\";\n    context.textAlign = \"left\";\n    context.textBaseline = \"bottom\";\n    context.lineJoin = \"round\"; // debug: show scratch canvas\n\n    /*\n    document.body.appendChild canvas\n    canvas.setAttribute('style', \"position: absolute; top: 0; left: 0; z-index: 100; border: 1px solid red; background: rgba(255,0,255,.25);\")\n    */\n    // Cache hex colors for distance field rendering\n\n    const colors = [];\n    const dilate = this.outline * 3;\n\n    for (let i = 0, end = dilate, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      // 8 rgb levels = 1 step = .5 pixel increase\n      const hex = (\"00\" + Math.max(0, -i * 8 + 128 - !i * 8).toString(16)).slice(-2);\n      colors.push(\"#\" + hex + hex + hex);\n    }\n\n    const scratch = new Uint8Array(maxWidth * lineHeight * 2);\n    this.canvas = canvas;\n    this.context = context;\n    this.lineHeight = lineHeight;\n    this.maxWidth = maxWidth;\n    this.colors = colors;\n    this.scratch = scratch;\n    this._allocate = this.allocate.bind(this);\n    return this._write = this.write.bind(this);\n  }\n\n  reset() {\n    super.reset();\n    return this.mapped = {};\n  }\n\n  begin() {\n    return Array.from(this.rows).map(row => row.alive = 0);\n  }\n\n  end() {\n    const {\n      mapped\n    } = this;\n\n    for (const row of Array.from(this.rows.slice())) {\n      if (row.alive === 0) {\n        for (const key of Array.from(row.keys)) {\n          delete mapped[key];\n        }\n\n        this.collapse(row);\n      }\n    }\n  }\n\n  map(text, emit) {\n    // See if already mapped into atlas\n    const {\n      mapped\n    } = this;\n    const c = mapped[text];\n\n    if (c != null) {\n      c.row.alive++;\n      return emit(c.x, c.y, c.w, c.h);\n    } // Draw text (don't recurse stack in @draw so it can be optimized cleanly)\n\n\n    this.draw(text);\n    const data = this.scratch;\n    const w = this.scratchW;\n    const h = this.scratchH; // Allocate and write into atlas\n\n    const allocate = this._allocate;\n    const write = this._write;\n    return allocate(text, w, h, function (row, x, y) {\n      mapped[text] = {\n        x,\n        y,\n        w,\n        h,\n        row\n      };\n      write(data, x, y, w, h);\n      return emit(x, y, w, h);\n    });\n  }\n\n  draw(text) {\n    let data, i, j;\n    let w = this.width;\n    const h = this.lineHeight;\n    const o = this.outline;\n    const ctx = this.context;\n    const dst = this.scratch;\n    const max = this.maxWidth;\n    const {\n      colors\n    } = this; // Bottom aligned\n\n    const x = o + 1;\n    const y = Math.round(h * 1.05 - 1); // Measure text\n\n    const m = ctx.measureText(text);\n    w = Math.min(max, Math.ceil(m.width + 2 * x + 1)); // Clear scratch area\n\n    ctx.clearRect(0, 0, w, h);\n\n    if (this.outline === 0) {\n      // Alpha sprite (fast)\n      let asc, end;\n      ctx.fillText(text, x, y);\n      ({\n        data\n      } = ctx.getImageData(0, 0, w, h));\n      j = 3; // Skip to alpha channel\n\n      for (i = 0, end = data.length / 4, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n        //dst[i] = 255 * (i%2); # test pattern to check pixel perfect alignment\n        dst[i] = data[j];\n        j += 4;\n      }\n\n      this.scratchW = w;\n      return this.scratchH = h;\n    } else {\n      // Signed distance field sprite (approximation) (slow)\n      // Draw strokes of decreasing width to create nested outlines (absolute distance)\n      let asc1, start;\n      let asc2, end1;\n      ctx.globalCompositeOperation = \"source-over\";\n\n      for (start = o + 1, i = start, asc1 = start <= 1; asc1 ? i <= 1 : i >= 1; asc1 ? i++ : i--) {\n        j = i > 1 ? i * 2 - 2 : i; // Eliminate odd strokes once past > 1px, don't need the detail\n\n        ctx.strokeStyle = colors[j - 1];\n        ctx.lineWidth = j;\n        ctx.strokeText(text, x, y);\n      } //console.log 'stroke', j, j+.5, colors[j]\n      // Fill center with multiply blend #FF0000 to mark inside/outside\n\n\n      ctx.globalCompositeOperation = \"multiply\";\n      ctx.fillText(text, x, y); // Pull image data\n\n      ({\n        data\n      } = ctx.getImageData(0, 0, w, h));\n      j = 0;\n      const {\n        gamma\n      } = this;\n\n      for (i = 0, end1 = data.length / 4, asc2 = 0 <= end1; asc2 ? i < end1 : i > end1; asc2 ? i++ : i--) {\n        // Get value + mask\n        const a = data[j];\n        let mask = a ? data[j + 1] / a : 1;\n\n        if (gamma === 0.5) {\n          mask = Math.sqrt(mask);\n        }\n\n        mask = Math.min(1, Math.max(0, mask)); // Blend between positive/outside and negative/inside\n\n        const b = 256 - a;\n        const c = b + (a - b) * mask; // Clamp\n        // (slight expansion to hide errors around the transition)\n\n        dst[i] = Math.max(0, Math.min(255, c + 2));\n        j += 4;\n      } // Debug: copy back into canvas\n      //\n      // TODO hide behind debug flag or delete.\n\n      /*\n      j = 0\n      for i in [0...data.length / 4]\n        v = dst[i]\n        *data[j] = v\n        *data[j+1] = v\n        data[j+2] = v\n        data[j+3] = 255\n        j += 4\n      ctx.putImageData(imageData, 0, 0);\n      */\n\n\n      this.scratchW = w;\n      return this.scratchH = h;\n    }\n  }\n\n}\n\nexports.TextAtlas = TextAtlas;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","TextAtlas","_atlas","_constants","Atlas","constructor","renderer","shaders","options","left","width","height","type","UnsignedByteType","channels","backed","font","size","style","variant","weight","outline","gamma","navigator","ua","userAgent","match","scratchW","scratchH","build","lineHeight","Math","min","maxWidth","SCRATCH_SIZE","canvas","document","createElement","map","str","quote","replace","join","context","getContext","fillStyle","textAlign","textBaseline","lineJoin","colors","dilate","i","end","asc","hex","slice","max","toString","push","scratch","Uint8Array","_allocate","allocate","bind","_write","write","reset","mapped","begin","Array","from","rows","row","alive","key","keys","collapse","text","emit","c","x","y","w","h","draw","data","o","ctx","dst","round","m","measureText","ceil","clearRect","fillText","getImageData","j","length","asc1","globalCompositeOperation","start","strokeStyle","lineWidth","strokeText","end1","asc2","mask","a","sqrt","b"]
}
