{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$surfacegeometry.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/geometry/surfacegeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$surfacegeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SurfaceGeometry = void 0;\n\nvar _BufferAttribute = require(\"three/src/core/BufferAttribute.js\");\n\nvar _clipgeometry = require(\"./clipgeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\nGrid Surface\n\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n|    |    |    |    |\n+----+----+----+----+\n*/\nclass SurfaceGeometry extends _clipgeometry.ClipGeometry {\n  constructor(options, build) {\n    if (build == null) {\n      build = true;\n    }\n\n    super(); // TODO not great... but use this pattern, maybe, to defer construction if\n    // options are missing, NOT the boolean.\n\n    if (build) {\n      this.construct(options);\n    }\n  }\n\n  construct(options) {\n    let closedX, closedY, height, layers, segmentsX, segmentsY, surfaces, width;\n\n    this._clipUniforms();\n\n    this.closedX = closedX = options.closedX || false;\n    this.closedY = closedY = options.closedY || false;\n    this.width = width = (+options.width || 2) + (closedX ? 1 : 0);\n    this.height = height = (+options.height || 2) + (closedY ? 1 : 0);\n    this.surfaces = surfaces = +options.surfaces || 1;\n    this.layers = layers = +options.layers || 1;\n    this.segmentsX = segmentsX = Math.max(0, width - 1);\n    this.segmentsY = segmentsY = Math.max(0, height - 1);\n    const points = width * height * surfaces * layers;\n    const quads = segmentsX * segmentsY * surfaces * layers;\n    const triangles = quads * 2;\n    this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(triangles * 3), 1));\n    this.setAttribute(\"position4\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 4), 4));\n    this.setAttribute(\"surface\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 2), 2));\n\n    const index = this._emitter(\"index\");\n\n    const position = this._emitter(\"position4\");\n\n    let base = 0;\n\n    for (let i = 0, end = surfaces * layers, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      for (let j = 0, end1 = segmentsY, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n        for (let k = 0, end2 = segmentsX, asc2 = 0 <= end2; asc2 ? k < end2 : k > end2; asc2 ? k++ : k--) {\n          index(base);\n          index(base + 1);\n          index(base + width);\n          index(base + width);\n          index(base + 1);\n          index(base + width + 1);\n          base++;\n        }\n\n        base++;\n      }\n\n      base += width;\n    }\n\n    for (let l = 0, end3 = layers, asc3 = 0 <= end3; asc3 ? l < end3 : l > end3; asc3 ? l++ : l--) {\n      for (let z = 0, end4 = surfaces, asc4 = 0 <= end4; asc4 ? z < end4 : z > end4; asc4 ? z++ : z--) {\n        for (let i1 = 0, y = i1, end5 = height, asc5 = 0 <= end5; asc5 ? i1 < end5 : i1 > end5; asc5 ? i1++ : i1--, y = i1) {\n          for (let j1 = 0, x = j1, end6 = width, asc6 = 0 <= end6; asc6 ? j1 < end6 : j1 > end6; asc6 ? j1++ : j1--, x = j1) {\n            position(x, y, z, l);\n          }\n        }\n      }\n    }\n\n    this._finalize();\n\n    this.clip();\n  }\n\n  clip(width, height, surfaces, layers) {\n    if (width == null) {\n      width = this.width - this.closedX;\n    }\n\n    if (height == null) {\n      height = this.height - this.closedY;\n    }\n\n    if (surfaces == null) {\n      ({\n        surfaces\n      } = this);\n    }\n\n    if (layers == null) {\n      ({\n        layers\n      } = this);\n    }\n\n    width += this.closedX;\n    height += this.closedY;\n    const segmentsX = Math.max(0, width - 1);\n    const segmentsY = Math.max(0, height - 1);\n\n    this._clipGeometry(width, height, surfaces, layers);\n\n    return this._clipOffsets(6, segmentsX, segmentsY, surfaces, layers, this.segmentsX, this.segmentsY, this.surfaces, this.layers);\n  }\n\n  map(width, height, surfaces, layers) {\n    if (width == null) {\n      ({\n        width\n      } = this);\n    }\n\n    if (height == null) {\n      ({\n        height\n      } = this);\n    }\n\n    if (surfaces == null) {\n      ({\n        surfaces\n      } = this);\n    }\n\n    if (layers == null) {\n      ({\n        layers\n      } = this);\n    }\n\n    return this._clipMap(width, height, surfaces, layers);\n  }\n\n}\n\nexports.SurfaceGeometry = SurfaceGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","SurfaceGeometry","_BufferAttribute","_clipgeometry","ClipGeometry","constructor","options","build","construct","closedX","closedY","segmentsX","segmentsY","surfaces","_clipUniforms","width","height","layers","Math","max","points","setIndex","BufferAttribute","Uint32Array","setAttribute","Float32Array","index","_emitter","position","base","i","end","asc","j","end1","asc1","k","end2","asc2","l","end3","asc3","z","end4","asc4","i1","y","end5","asc5","j1","x","end6","asc6","_finalize","clip","_clipGeometry","_clipOffsets","map","_clipMap"]
}
