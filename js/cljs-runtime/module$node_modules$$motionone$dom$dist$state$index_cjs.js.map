{
"version":3,
"file":"module$node_modules$$motionone$dom$dist$state$index_cjs.js",
"lineCount":9,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CAEA,KAAIC,MAAQN,OAAA,CAAQ,iCAAR,CAAZ,CACIO,UAAYP,OAAA,CAAQ,2CAAR,CADhB,CAEIQ,MAAQR,OAAA,CAAQ,qDAAR,CAFZ,CAGIS,aAAeT,OAAA,CAAQ,mEAAR,CAHnB,CAIIU,MAAQV,OAAA,CAAQ,2DAAR,CAJZ;AAKIW,QAAUX,OAAA,CAAQ,mEAAR,CALd,CAMIY,WAAaZ,OAAA,CAAQ,qEAAR,CANjB,CAOIa,eAAiBb,OAAA,CAAQ,yEAAR,CAPrB,CAQIc,SAAWd,OAAA,CAAQ,kEAAR,CACXe,OAAAA,CAASf,OAAA,CAAQ,oEAAR,CACTgB,OAAAA,CAAQhB,OAAA,CAAQ,kEAAR,CACZ;IAAIiB,MAAQjB,OAAA,CAAQ,kEAAR,CAAZ,CACIkB,OAASlB,OAAA,CAAQ,gEAAR,CAEb,OAAMmB,SAAW,CAAEJ,OAAQA,MAAOA,CAAAA,MAAjB,CAAyBC,MAAOA,MAAMA,CAAAA,KAAtC,CAA6CC,MAAOA,KAAMA,CAAAA,KAA1D,CAAjB,CAKMG,WAAa,CAAC,SAAD,CAAY,SAAZ,CAAuB,GAAGjB,MAAOkB,CAAAA,IAAP,CAAYF,QAAZ,CAA1B,CAAiD,MAAjD,CALnB,CAUMG,cAAgB,IAAIC,OAgK1BrB,QAAQsB,CAAAA,iBAAR,CA/JAA,QAA0B,CAACC,SAAA,CAAY,EAAb,CAAiBC,MAAjB,CAAyB,CAQ/C,IAAIC,OAAJ,CAIIC,MAAQF,MAAA,CAASA,MAAOG,CAAAA,QAAP,EAAT,CAA6B,CAA7B,CAAiC,CAI7C,OAAMC,aAAe,CAAEC,QAAS,CAAA,CAAX,CAAiBC,QAAS,CAAA,CAA1B,CAArB,CAKMC,qBAAuB,EAL7B;AAUMC,QAAU,EAChB,KAAK,MAAMC,IAAX,GAAmBf,WAAnB,CACIc,OAAA,CAAQC,IAAR,CAAA,CAC+B,QAA3B,GAAA,MAAOV,UAAA,CAAUU,IAAV,CAAP,CACMV,SAAA,CAAUU,IAAV,CADN,CAEiB,IAAX,GAAAT,MAAA,EAA8B,IAAK,EAAnC,GAAmBA,MAAnB,CAAuC,IAAK,EAA5C,CAAgDA,MAAOU,CAAAA,UAAP,EAAA,CAAoBD,IAApB,CAMxDE,OAAAA,CAA6C,CAAA,CAAtB,GAAAZ,SAAUM,CAAAA,OAAV,CAA8B,SAA9B,CAA0C,SAInEO,OAAAA,CAAKzB,cAAeA,CAAAA,cAAf,CAA8BY,SAAA,CAAUY,MAAV,CAA9B,EAAiEH,OAAA,CAAQG,MAAR,CAAjE,CAAgGZ,SAAUc,CAAAA,QAA1G,CAALD,EAA4H,EAAhI,KAAoIE,OAASlC,KAAMmC,CAAAA,MAAN,CAAaH,MAAb,CAAiB,CAAC,YAAD,CAAjB,CAO7I,OAAMI,WAAavC,MAAOwC,CAAAA,MAAP,CAAc,EAAd,CAAkBH,MAAlB,CAAnB,CAsDMI,WAAa,CAACT,IAAD,CAAOU,QAAP,CAAAD,EAAoB,EAAA,EAAM,CACzCd,YAAA,CAAaK,IAAb,CAAA,CAAqBU,QACrB/B,SAASgC,CAAAA,iBAAT,CAA2BC,KAA3B,CAFyC,CAtD7C,CA0DMC;AAA6B,EAAAA,EAAM,CACrC,IAAK,MAAMb,IAAX,GAAmBhB,SAAnB,CAA6B,CACzB,MAAM8B,gBAAkB9B,QAAA,CAASgB,IAAT,CAAeU,CAAAA,QAAf,CAAwBpB,SAAxB,CAAxB,CACMyB,OAASjB,oBAAA,CAAqBE,IAArB,CACXc,gBAAJ,EAAuB,CAACC,MAAxB,CACIjB,oBAAA,CAAqBE,IAArB,CADJ,CACiChB,QAAA,CAASgB,IAAT,CAAegB,CAAAA,SAAf,CAAyBxB,OAAzB,CAAkC,CAC3DyB,OAAQR,UAAA,CAAWT,IAAX,CAAiB,CAAA,CAAjB,CADmD,CAE3DkB,QAAST,UAAA,CAAWT,IAAX,CAAiB,CAAA,CAAjB,CAFkD,CAAlC,CAG1BV,SAH0B,CADjC,CAMS,CAACwB,eANV,EAM6BC,MAN7B,GAOIA,MAAA,EACA,CAAA,OAAOjB,oBAAA,CAAqBE,IAArB,CARX,CAHyB,CADQ,CA1DzC,CA0EMY,MAAQ,CACVO,OAASC,UAADD,EAAgB,CACf3B,OAAL,GAEAF,SAEA,CAFY8B,UAEZ,CADAP,0BAAA,EACA,CAAAlC,QAASgC,CAAAA,iBAAT,CAA2BC,KAA3B,CAJA,CADoB,CADd,CAQVS,UAAW,CAACrB,IAAD,CAAOU,QAAP,CAAAW,EAAoB,CACtB7B,OAAL;CAEAG,YAAA,CAAaK,IAAb,CACA,CADqBU,QACrB,CAAA/B,QAASgC,CAAAA,iBAAT,CAA2BC,KAA3B,CAHA,CAD2B,CARrB,CAcVU,eAlFJA,SAAwB,EAAG,CAAA,IACnBnB,WADmB,CACfoB,EACR,OAAMC,WAAanB,MACnBA,OAAA,CAAS,EACT,OAAMoB,iBAAmB,EACzB,KAAK,MAAMzB,IAAX,GAAmBf,WAAnB,CAA+B,CAC3B,GAAI,CAACU,YAAA,CAAaK,IAAb,CAAL,CACI,QACJ,OAAM0B,QAAUhD,cAAeA,CAAAA,cAAf,CAA8BY,SAAA,CAAUU,IAAV,CAA9B,CAChB,IAAK0B,OAAL,CAEA,IAAK,MAAMC,GAAX,GAAkBD,QAAlB,CACgB,YAAZ,GAAIC,GAAJ,GAEAtB,MAAA,CAAOsB,GAAP,CACA,CADcD,OAAA,CAAQC,GAAR,CACd,CAAAF,gBAAA,CAAiBE,GAAjB,CAAA,CAAwBnD,OAAQoD,CAAAA,UAAR,CAA8G,IAA3F,IAACL,EAAD,CAAoC,IAA9B,IAACpB,WAAD,CAAMuB,OAAQG,CAAAA,UAAd,GAA6C,IAAK,EAAlD,GAAsC1B,WAAtC,CAAsDA,WAAtD;AAA2Db,SAAUuC,CAAAA,UAA3E,GAA0G,IAAK,EAA/G,GAAmGN,EAAnG,CAAmHA,EAAnH,CAAwH,EAA3I,CAA+II,GAA/I,CAHxB,CAPuB,CAiB/B,MAAMG,mBAAqB,EACbC,EALQC,IAAIC,GAAJD,CAAQ,CAC1B,GAAGhE,MAAOkB,CAAAA,IAAP,CAAYmB,MAAZ,CADuB,CAE1B,GAAGrC,MAAOkB,CAAAA,IAAP,CAAYsC,UAAZ,CAFuB,CAARQ,CAKRD,EAAAA,OAAd,CAAuBJ,GAAD,EAAS,CAC3B,IAAIxB,EACgB+B,KAAAA,EAApB,GAAI7B,MAAA,CAAOsB,GAAP,CAAJ,GACItB,MAAA,CAAOsB,GAAP,CADJ,CACkBpB,UAAA,CAAWoB,GAAX,CADlB,CAGIlD,WAAWA,CAAAA,UAAX,CAAsB+C,UAAA,CAAWG,GAAX,CAAtB,CAAuCtB,MAAA,CAAOsB,GAAP,CAAvC,CAAJ,GAC+B,IAA3B,IAACxB,EAAD,CAAMI,UAAA,CAAWoB,GAAX,CAAN,GAA0C,IAAK,EAA/C,GAAmCxB,EAAnC,CAAmDA,EAAnD,CAAyDI,UAAA,CAAWoB,GAAX,CAAzD,CAA2EpD,KAAMA,CAAAA,KAAM4D,CAAAA,GAAZ,CAAgB3C,OAAhB,CAAyBmC,GAAzB,CAC3E,CAAAG,kBAAmBM,CAAAA,IAAnB,CAAwB9D,YAAaA,CAAAA,YAAb,CAA0BkB,OAA1B,CAAmCmC,GAAnC,CAAwCtB,MAAA,CAAOsB,GAAP,CAAxC,CAAqDF,gBAAA,CAAiBE,GAAjB,CAArD,CAAxB,CAFJ,CAL2B,CAA/B,CAWA,MACMU,YAAAA,CAAaP,kBACdQ,CAAAA,GADc,CACTC,OAAD;AAAaA,OAAA,EADH,CAEdC,CAAAA,MAFc,CAEPC,OAFO,CAGnB,IAAKJ,WAAWK,CAAAA,MAAhB,CAAA,CAEA,IAAMC,gBAAkBtC,MACxBb,QAAQoD,CAAAA,aAAR,CAAsB7D,MAAO8D,CAAAA,WAAP,CAAmB,aAAnB,CAAkCF,eAAlC,CAAtB,CACAG,QAAQC,CAAAA,GAAR,CAAYV,WAAWC,CAAAA,GAAX,CAAgBU,SAAD,EAAeA,SAAUC,CAAAA,QAAxC,CAAZ,CACKC,CAAAA,IADL,CACU,EAAA,EAAM,CACZ1D,OAAQoD,CAAAA,aAAR,CAAsB7D,MAAO8D,CAAAA,WAAP,CAAmB,gBAAnB,CAAqCF,eAArC,CAAtB,CADY,CADhB,CAIKQ,CAAAA,KAJL,CAIW9E,KAAM+E,CAAAA,IAJjB,CAJA,CAtCuB,CAoEb,CAeV1D,SAAU,EAAAA,EAAMD,KAfN,CAgBV4D,UAAW,EAAAA,EAAMhD,MAhBP,CAiBVuB,WAAY,EAAAA,EAAMtC,SAjBR,CAkBVW,WAAY,EAAAA,EAAMF,OAlBR,CAmBVuD,MAAQC,UAADD,EAAgB,CACnBlF,SAAUoF,CAAAA,SAAV,CAAoB,CAAA,CAAQD,UAA5B,CAAyC,oDAAzC,CACA/D;OAAA,CAAU+D,UACVpE,cAAcsE,CAAAA,GAAd,CAAkBjE,OAAlB,CAA2BoB,KAA3B,CACAC,2BAAA,EACA,OAAO,EAAA,EAAM,CACT1B,aAAcuE,CAAAA,MAAd,CAAqBlE,OAArB,CACAb,SAASgF,CAAAA,mBAAT,CAA6B/C,KAA7B,CACA,KAAK,MAAMe,GAAX,GAAkB7B,qBAAlB,CACIA,oBAAA,CAAqB6B,GAArB,CAAA,EAJK,CALM,CAnBb,CAgCViC,UAAW,EAAAA,EAAM,CAAA,CAAQpE,OAhCf,CAkCd,OAAOoB,MA5JwC,CAgKnD7C,QAAQoB,CAAAA,aAAR,CAAwBA,aA9L4F;",
"sources":["node_modules/@motionone/dom/dist/state/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$dom$dist$state$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib = require('tslib');\nvar heyListen = require('hey-listen');\nvar utils = require('@motionone/utils');\nvar animateStyle = require('../animate/animate-style.cjs.js');\nvar style = require('../animate/style.cjs.js');\nvar options = require('../animate/utils/options.cjs.js');\nvar hasChanged = require('./utils/has-changed.cjs.js');\nvar resolveVariant = require('./utils/resolve-variant.cjs.js');\nvar schedule = require('./utils/schedule.cjs.js');\nvar inView = require('./gestures/in-view.cjs.js');\nvar hover = require('./gestures/hover.cjs.js');\nvar press = require('./gestures/press.cjs.js');\nvar events = require('./utils/events.cjs.js');\n\nconst gestures = { inView: inView.inView, hover: hover.hover, press: press.press };\n/**\n * A list of state types, in priority order. If a value is defined in\n * a righter-most type, it will override any definition in a lefter-most.\n */\nconst stateTypes = [\"initial\", \"animate\", ...Object.keys(gestures), \"exit\"];\n/**\n * A global store of all generated motion states. This can be used to lookup\n * a motion state for a given Element.\n */\nconst mountedStates = new WeakMap();\nfunction createMotionState(options$1 = {}, parent) {\n    /**\n     * The element represented by the motion state. This is an empty reference\n     * when we create the state to support SSR and allow for later mounting\n     * in view libraries.\n     *\n     * @ts-ignore\n     */\n    let element;\n    /**\n     * Calculate a depth that we can use to order motion states by tree depth.\n     */\n    let depth = parent ? parent.getDepth() + 1 : 0;\n    /**\n     * Track which states are currently active.\n     */\n    const activeStates = { initial: true, animate: true };\n    /**\n     * A map of functions that, when called, will remove event listeners for\n     * a given gesture.\n     */\n    const gestureSubscriptions = {};\n    /**\n     * Initialise a context to share through motion states. This\n     * will be populated by variant names (if any).\n     */\n    const context = {};\n    for (const name of stateTypes) {\n        context[name] =\n            typeof options$1[name] === \"string\"\n                ? options$1[name]\n                : parent === null || parent === void 0 ? void 0 : parent.getContext()[name];\n    }\n    /**\n     * If initial is set to false we use the animate prop as the initial\n     * animation state.\n     */\n    const initialVariantSource = options$1.initial === false ? \"animate\" : \"initial\";\n    /**\n     * Destructure an initial target out from the resolved initial variant.\n     */\n    let _a = resolveVariant.resolveVariant(options$1[initialVariantSource] || context[initialVariantSource], options$1.variants) || {}, target = tslib.__rest(_a, [\"transition\"]);\n    /**\n     * The base target is a cached map of values that we'll use to animate\n     * back to if a value is removed from all active state types. This\n     * is usually the initial value as read from the DOM, for instance if\n     * it hasn't been defined in initial.\n     */\n    const baseTarget = Object.assign({}, target);\n    /**\n     * A generator that will be processed by the global animation scheduler.\n     * This yeilds when it switches from reading the DOM to writing to it\n     * to prevent layout thrashing.\n     */\n    function* animateUpdates() {\n        var _a, _b;\n        const prevTarget = target;\n        target = {};\n        const animationOptions = {};\n        for (const name of stateTypes) {\n            if (!activeStates[name])\n                continue;\n            const variant = resolveVariant.resolveVariant(options$1[name]);\n            if (!variant)\n                continue;\n            for (const key in variant) {\n                if (key === \"transition\")\n                    continue;\n                target[key] = variant[key];\n                animationOptions[key] = options.getOptions((_b = (_a = variant.transition) !== null && _a !== void 0 ? _a : options$1.transition) !== null && _b !== void 0 ? _b : {}, key);\n            }\n        }\n        const allTargetKeys = new Set([\n            ...Object.keys(target),\n            ...Object.keys(prevTarget),\n        ]);\n        const animationFactories = [];\n        allTargetKeys.forEach((key) => {\n            var _a;\n            if (target[key] === undefined) {\n                target[key] = baseTarget[key];\n            }\n            if (hasChanged.hasChanged(prevTarget[key], target[key])) {\n                (_a = baseTarget[key]) !== null && _a !== void 0 ? _a : (baseTarget[key] = style.style.get(element, key));\n                animationFactories.push(animateStyle.animateStyle(element, key, target[key], animationOptions[key]));\n            }\n        });\n        // Wait for all animation states to read from the DOM\n        yield;\n        const animations = animationFactories\n            .map((factory) => factory())\n            .filter(Boolean);\n        if (!animations.length)\n            return;\n        const animationTarget = target;\n        element.dispatchEvent(events.motionEvent(\"motionstart\", animationTarget));\n        Promise.all(animations.map((animation) => animation.finished))\n            .then(() => {\n            element.dispatchEvent(events.motionEvent(\"motioncomplete\", animationTarget));\n        })\n            .catch(utils.noop);\n    }\n    const setGesture = (name, isActive) => () => {\n        activeStates[name] = isActive;\n        schedule.scheduleAnimation(state);\n    };\n    const updateGestureSubscriptions = () => {\n        for (const name in gestures) {\n            const isGestureActive = gestures[name].isActive(options$1);\n            const remove = gestureSubscriptions[name];\n            if (isGestureActive && !remove) {\n                gestureSubscriptions[name] = gestures[name].subscribe(element, {\n                    enable: setGesture(name, true),\n                    disable: setGesture(name, false),\n                }, options$1);\n            }\n            else if (!isGestureActive && remove) {\n                remove();\n                delete gestureSubscriptions[name];\n            }\n        }\n    };\n    const state = {\n        update: (newOptions) => {\n            if (!element)\n                return;\n            options$1 = newOptions;\n            updateGestureSubscriptions();\n            schedule.scheduleAnimation(state);\n        },\n        setActive: (name, isActive) => {\n            if (!element)\n                return;\n            activeStates[name] = isActive;\n            schedule.scheduleAnimation(state);\n        },\n        animateUpdates,\n        getDepth: () => depth,\n        getTarget: () => target,\n        getOptions: () => options$1,\n        getContext: () => context,\n        mount: (newElement) => {\n            heyListen.invariant(Boolean(newElement), \"Animation state must be mounted with valid Element\");\n            element = newElement;\n            mountedStates.set(element, state);\n            updateGestureSubscriptions();\n            return () => {\n                mountedStates.delete(element);\n                schedule.unscheduleAnimation(state);\n                for (const key in gestureSubscriptions) {\n                    gestureSubscriptions[key]();\n                }\n            };\n        },\n        isMounted: () => Boolean(element),\n    };\n    return state;\n}\n\nexports.createMotionState = createMotionState;\nexports.mountedStates = mountedStates;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","tslib","heyListen","utils","animateStyle","style","options","hasChanged","resolveVariant","schedule","inView","hover","press","events","gestures","stateTypes","keys","mountedStates","WeakMap","createMotionState","options$1","parent","element","depth","getDepth","activeStates","initial","animate","gestureSubscriptions","context","name","getContext","initialVariantSource","_a","variants","target","__rest","baseTarget","assign","setGesture","isActive","scheduleAnimation","state","updateGestureSubscriptions","isGestureActive","remove","subscribe","enable","disable","update","newOptions","setActive","animateUpdates","_b","prevTarget","animationOptions","variant","key","getOptions","transition","animationFactories","forEach","allTargetKeys","Set","undefined","get","push","animations","map","factory","filter","Boolean","length","animationTarget","dispatchEvent","motionEvent","Promise","all","animation","finished","then","catch","noop","getTarget","mount","newElement","invariant","set","delete","unscheduleAnimation","isMounted"]
}
