{
"version":3,
"file":"module$node_modules$lodash$_isIndex.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKhG,IAAIC,SAAW,kBAoBfF,OAAOC,CAAAA,OAAP,CAVAE,QAAgB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC9B,IAAIC,KAAO,MAAOF,MAClBC,OAAA,CAAmB,IAAV,EAAAA,MAAA,CAfYE,gBAeZ,CAAoCF,MAE7C,OAAO,CAAC,CAACA,MAAT,GACW,QADX,EACGC,IADH,EAEa,QAFb,EAEKA,IAFL,EAEyBJ,QAASM,CAAAA,IAAT,CAAcJ,KAAd,CAFzB,GAGe,CAAC,CAHhB,CAGOA,KAHP,EAGkC,CAHlC,EAGqBA,KAHrB,CAG6B,CAH7B,EAGuCA,KAHvC,CAG+CC,MAPjB,CAfgE;",
"sources":["node_modules/lodash/_isIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isIndex\"] = function(global,require,module,exports) {\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n};"],
"names":["shadow$provide","global","require","module","exports","reIsUint","isIndex","value","length","type","MAX_SAFE_INTEGER","test"]
}
