{"version":3,"sources":["devtools/prefs.cljs"],"mappings":";;AAKA,AAAKA,gCAAe,KAAAC,gBAAA;AAAA,AAAA,OAAAC,gBAAQC;GAAR;AACpB,AAAKC,iCAAgB,KAAAH,gBAAA;AAAA,AAAO,AAAA;GAAP;AACrB,AAAKI,gCAAe,KAAAJ,gBAAA;AAAA,AAAO,8GAAA,AAAAC,+CAAA,AAAAA,tJAACI,uHAAON,+CAAgBI;GAA/B;AAEpB,AAAeG,4CAAiB,KAAAN,gBAAA;AAAA,AAAA,OAAAC,gBAAQG;GAAR;AAIhC,iCAAA,jCAAMG,0EAAYC;AAAlB,AACE,QAAMF,4CAAiBE;;AAEzB,2BAAA,3BAAMC;AAAN,AACE,GAAM,AAACC,uBAAOJ;AAAd,AACE,+BAAA,AAAAL,/BAACM,+CAAYD;;AADf;;AAEAA;;AAEF,sBAAA,tBAAMK,oDAAMC;AAAZ,AACE,IAAAC,WAAK,AAACJ;AAAN,AAAA,8EAAAI,0BAAAA,hGAACD,oCAAAA,8CAAAA;;AAEH,gCAAA,hCAAME,wEAAWF,IAAIG;AAArB,AACE,OAACR,+BAAW,AAACS,8CAAM,AAACP,2BAAWG,IAAIG;;AAErC,mCAAA,nCAAME,8EAAcC;AAApB,AACE,OAACX,+BAAW,AAACF,uGAAM,AAACI,2BAAWS;;AAEjC,AAAA,mCAAA,2CAAAC,9EAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,sEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,wEAAA,xEAAME,mFAAcb,IAAIoB,EAAIC;AAA5B,AACE,IAAMC,UAAQ,AAACC,8CAAMH,EAAE,AAACrB,oBAAKC,KAAKqB;AAAlC,AACE,OAACnB,8BAAUF,IAAIsB;;;AAFnB,CAAA,2DAAA,3DAAMT;;AAAN;AAAA,CAAA,qDAAA,WAAAC,hEAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAI,WAAA,AAAAF,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAK,qBAAA;AAAA,AAAA,OAAAA,wDAAAJ,SAAAG,SAAAJ;;;AAAA","names":["devtools.prefs/default-config","cljs.core/Delay","cljs.core/deref","devtools.defaults/config","devtools.prefs/external-config","devtools.prefs/initial-config","cljs.core.merge","devtools.prefs/*current-config*","devtools.prefs/set-prefs!","new-prefs","devtools.prefs/get-prefs","cljs.core/delay?","devtools.prefs/pref","key","G__63833","devtools.prefs/set-pref!","val","cljs.core.assoc","devtools.prefs/merge-prefs!","m","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","devtools.prefs/update-pref!","seq63835","G__63836","cljs.core/first","cljs.core/next","G__63837","self__5754__auto__","f","args","new-val","cljs.core.apply"],"sourcesContent":["(ns devtools.prefs\n  (:require-macros [devtools.prefs :refer [emit-external-config]])\n  (:require [devtools.defaults :as defaults]))\n\n; we use delay for DCE, see https://github.com/binaryage/cljs-devtools/issues/37\n(def default-config (delay @defaults/config))\n(def external-config (delay (emit-external-config)))\n(def initial-config (delay (merge @default-config @external-config)))\n\n(def ^:dynamic *current-config* (delay @initial-config))\n\n; -- public api -------------------------------------------------------------------------------------------------------------\n\n(defn set-prefs! [new-prefs]\n  (set! *current-config* new-prefs))\n\n(defn get-prefs []\n  (when (delay? *current-config*)\n    (set-prefs! @*current-config*))\n  *current-config*)\n\n(defn pref [key]\n  (key (get-prefs)))\n\n(defn set-pref! [key val]\n  (set-prefs! (assoc (get-prefs) key val)))\n\n(defn merge-prefs! [m]\n  (set-prefs! (merge (get-prefs) m)))\n\n(defn update-pref! [key f & args]\n  (let [new-val (apply f (pref key) args)]\n    (set-pref! key new-val)))\n"]}