{"version":3,"sources":["sci/impl/vars.cljc"],"mappings":"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,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAzB,MAAA,CAAA,8DAAA,CAAA,AAAA,mBAAA;;;;;AAAA,CAAA,AAAA,2CAAA,WAAAyB,OAAAE,7DAASE;;AAAT,AAAA,IAAAJ,aAAA;AAAA,AAAA,OAAA,AAAAA,sBAAAA,WAAA,AAAA,CAAAA,mBAAA,AAAAG,iBAAAD;;;AAAA,CAAA,AAAA,mEAAA,nEAASE;;AAAT,AAAA,QAAA,JAKkCxC;AALlC,AAMI,OAACiC,2CAA6BC;;;AANlC,CAAA,AAAA,mEAAA,nEAASM,8EAO2BE;;AAPpC,AAAA,QAAA,JAOkC1C;AAPlC,AAQI,OAACiC,2CAA6BC;;;AARlC,CAAA,AAAA,mEAAA,nEAASM,8EAS2BE,EAAEC;;AATtC,AAAA,QAAA,JASkC3C;AATlC,AAUI,OAACiC,2CAA6BC;;;AAVlC,CAAA,AAAA,mEAAA,nEAASM,8EAW2BE,EAAEC,EAAEC;;AAXxC,AAAA,QAAA,JAWkC5C;AAXlC,AAYI,OAACiC,2CAA6BC;;;AAZlC,CAAA,AAAA,mEAAA,nEAASM,8EAa2BE,EAAEC,EAAEC,EAAEC;;AAb1C,AAAA,QAAA,JAakC7C;AAblC,AAcI,OAACiC,2CAA6BC;;;AAdlC,CAAA,AAAA,mEAAA,nEAASM,8EAe2BE,EAAEC,EAAEC,EAAEC,EAAEC;;AAf5C,AAAA,QAAA,JAekC9C;AAflC,AAgBI,OAACiC,2CAA6BC;;;AAhBlC,CAAA,AAAA,mEAAA,nEAASM,8EAiB2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E;;AAjB9C,AAAA,QAAA,JAiBkCgC;AAjBlC,AAkBI,OAACiC,2CAA6BC;;;AAlBlC,CAAA,AAAA,mEAAA,nEAASM,8EAmB2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E;;AAnBhD,AAAA,QAAA,JAmBkC/C;AAnBlC,AAoBI,OAACiC,2CAA6BC;;;AApBlC,CAAA,AAAA,mEAAA,nEAASM,8EAqB2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC;;AArBlD,AAAA,QAAA,JAqBkChD;AArBlC,AAsBI,OAACiC,2CAA6BC;;;AAtBlC,CAAA,AAAA,mEAAA,nEAASM,8EAuB2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC;;AAvBpD,AAAA,QAAA,JAuBkCjD;AAvBlC,AAwBI,OAACiC,2CAA6BC;;;AAxBlC,CAAA,AAAA,oEAAA,pEAASM,+EAyB2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC;;AAzBtD,AAAA,QAAA,JAyBkClD;AAzBlC,AA0BI,OAACiC,2CAA6BC;;;AA1BlC,CAAA,AAAA,oEAAA,pEAASM,+EA2B2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC;;AA3BxD,AAAA,QAAA,JA2BkCnD;AA3BlC,AA4BI,OAACiC,2CAA6BC;;;AA5BlC,CAAA,AAAA,oEAAA,pEAASM,+EA6B2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AA7B1D,AAAA,QAAA,JA6BkCpD;AA7BlC,AA8BI,OAACiC,2CAA6BC;;;AA9BlC,CAAA,AAAA,oEAAA,pEAASM,+EA+B2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AA/B5D,AAAA,QAAA,JA+BkCrD;AA/BlC,AAgCI,OAACiC,2CAA6BC;;;AAhClC,CAAA,AAAA,oEAAA,pEAASM,+EAiC2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AAjC9D,AAAA,QAAA,JAiCkCtD;AAjClC,AAkCI,OAACiC,2CAA6BC;;;AAlClC,CAAA,AAAA,oEAAA,pEAASM,+EAmC2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AAnChE,AAAA,QAAA,JAmCkCvD;AAnClC,AAoCI,OAACiC,2CAA6BC;;;AApClC,CAAA,AAAA,oEAAA,pEAASM,+EAqC2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AArClE,AAAA,QAAA,JAqCkCxD;AArClC,AAsCI,OAACiC,2CAA6BC;;;AAtClC,CAAA,AAAA,oEAAA,pEAASM,+EAuC2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AAvCpE,AAAA,QAAA,JAuCkCzD;AAvClC,AAwCI,OAACiC,2CAA6BC;;;AAxClC,CAAA,AAAA,oEAAA,pEAASM,+EAyC2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AAzCtE,AAAA,QAAA,JAyCkC1D;AAzClC,AA0CI,OAACiC,2CAA6BC;;;AA1ClC,CAAA,AAAA,oEAAA,pEAASM,+EA2C2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AA3CxE,AAAA,QAAA,JA2CkC3D;AA3ClC,AA4CI,OAACiC,2CAA6BC;;;AA5ClC,CAAA,AAAA,oEAAA,pEAASM,+EA6C2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AA7C1E,AAAA,QAAA,JA6CkC5D;AA7ClC,AA8CI,OAACiC,2CAA6BC;;;AA9ClC,CAAA,AAAA,oEAAA,pEAASM,+EA+C2BE,EAAEC,EAAEC,EAAEC,EAAEC,EAAE9E,EAAE+E,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC;;AA/C5E,AAAA,QAAA,JA+CkC7D;AA/ClC,AAgDI,OAACiC,2CAA6BC;;;AAhDlC,CAAA,oCAAA,pCAASM;AAAT,AAAA,AAAA;;;AAAA,CAAA,0CAAA,1CAASA;;AAAT,CAAA,6CAAA,7CAASA;;AAAT,CAAA,kDAAA,WAAA7F,mBAAAC,qBAAAC,rGAAS2F;AAAT,AAAA,OAAA1F,iBAAAF,qBAAA;;;AAAA;;;gCAAA,hCAAS6F,wEAAYP;AAArB,AAAA,YAAAM,yBAAqBN;;;AAAZM,AAuDT,oCAAA,pCAAMsB,gFAAeC;AAArB,AACE,OAAA,gGAAeA;;AAEjB,AAaA,wBAAA,xBAAMC,wDAASlG;AAAf,AACE,OAACR,gBAAMQ;;AAET,wBAAA,xBAAMmG,wDAASnG,EAAEF;AAAjB,AACE,OAACsG,sBAASpG,EAAEF;;AAEd;;;iCAAA,jCAAMuG,0EAEHC;AAFH,AAGE,GAAI,AAACC,kCAAkBD;AACrB,OAACE,+CAAO,AAACC,eAAKH;;AACdA;;;AAEJ,AAYA,AAAA,+BAAA,uCAAAI,tEAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,2DAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,IAAAC,yBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,4BAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,KAAAC,qBAAA,AAAAJ,6BAAA,KAAA,IAAA;AAAA,AAAA,OAAAD,kEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAAI;;;;;AAAA,CAAA,6DAAA,7DAAMJ,wEACF5G,EAAEE;AADN,AAIY,OAACO,uBAAST,EAAE,iBAAAsH,WAAG,AAACxG,yBAAWd;AAAf,AAAA,0EAAAsH,wBAAAA,1FAACpH,kCAAAA,4CAAAA;;;;AAJzB,AAAA,CAAA,oEAAA,pEAAM0G,+EAKF5G,EAAEE,EAAI+D;AALV,AAQY,OAACxD,uBAAST,EAAE,AAACkE,8CAAMhE,EAAE,AAACY,yBAAWd,GAAGiE;;;AARhD;AAAA,CAAA,iDAAA,WAAAiD,5DAAMN;AAAN,AAAA,IAAAO,WAAA,AAAA5D,gBAAA2D;IAAAA,eAAA,AAAAzD,eAAAyD;IAAAE,WAAA,AAAA7D,gBAAA2D;IAAAA,eAAA,AAAAzD,eAAAyD;AAAA,AAAA,IAAAG,qBAAA;AAAA,AAAA,OAAAA,wDAAAF,SAAAC,SAAAF;;;AAAA,CAAA,uDAAA,vDAAMN;;AAAN,AAUA","names":["this__4491__auto__","writer__4492__auto__","opt__4493__auto__","cljs.core/-write","sci.impl.vars/Frame","sci.impl.vars/->Frame","bindings","prev","sci.impl.vars/top-frame","sci.impl.vars/dvals","cljs.core/volatile!","cljs.core/deref","sci.impl.vars/get-thread-binding-frame","cljs.core/PROTOCOL_SENTINEL","sci.impl.vars/TBox","sci.impl.vars/->TBox","thread","val","this","v","sci.impl.vars/clone-thread-binding-frame","f","sci.impl.vars/reset-thread-binding-frame","frame","cljs.core/vreset!","sci$impl$vars$IVar$bindRoot$dyn","x__4550__auto__","m__4551__auto__","sci.impl.vars/bindRoot","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","sci$impl$vars$IVar$getRawRoot$dyn","sci.impl.vars/getRawRoot","sci$impl$vars$IVar$toSymbol$dyn","sci.impl.vars/toSymbol","sci$impl$vars$IVar$isMacro$dyn","sci.impl.vars/isMacro","sci$impl$vars$IVar$hasRoot$dyn","sci.impl.vars/hasRoot","sci$impl$vars$IVar$setThreadBound$dyn","sci.impl.vars/setThreadBound","sci$impl$vars$IVar$unbind$dyn","sci.impl.vars/unbind","sci.impl.vars/IVar","sci$impl$vars$DynVar$dynamic_QMARK_$dyn","sci.impl.vars/dynamic?","sci.impl.vars/DynVar","sci$impl$vars$CtxVar$needs_ctx_QMARK_$dyn","sci.impl.vars/needs-ctx?","sci$impl$vars$CtxVar$needs_ctx_BANG_$dyn","sci.impl.vars/needs-ctx!","sci.impl.vars/CtxVar","_","sci.impl.vars/push-thread-bindings","bmap","cljs.core.reduce","p__85520","vec__85521","cljs.core.nth","acc","var*","val*","cljs.core/not","js/Error","cljs.core.assoc","sci.impl.vars/pop-thread-bindings","temp__5751__auto__","sci.impl.vars/get-thread-bindings","ret","kvs","cljs.core/seq","vec__85527","tbox","cljs.core/first","tbox-val","cljs.core/next","sci.impl.vars/get-thread-binding","sci-var","temp__5753__auto__","sci.impl.vars/binding-conveyor-fn","x","y","z","args","cljs.core.apply","sci.impl.vars/throw-unbound-call-exception","the-var","unused__43702__auto__","self__","G__85561","args85559","cljs.core/aclone","sci.impl.vars/SciUnbound","sci.impl.vars/->SciUnbound","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","rest","sci.impl.vars/built-in-var?","var-meta","sci.impl.vars/var-get","sci.impl.vars/var-set","sci.impl.types/setVal","sci.impl.vars/unqualify-symbol","sym","cljs.core/qualified-symbol?","cljs.core.symbol","cljs.core/name","var_args","G__85634","sci.impl.vars/alter-var-root","args-arr__4885__auto__","len__4864__auto__","i__4865__auto__","argseq__4886__auto__","cljs.core/IndexedSeq","seq85627","G__85628","G__85629","self__4851__auto__","G__85636"],"sourcesContent":["(ns sci.impl.vars\n  {:no-doc true}\n  (:refer-clojure :exclude [binding\n                            push-thread-bindings\n                            get-thread-bindings\n                            pop-thread-bindings\n                            with-bindings*\n                            with-bindings\n                            thread-bound?\n                            alter-var-root\n                            var-get\n                            var-set\n                            bound-fn*])\n  (:require [sci.impl.macros :as macros]\n            [sci.impl.types :as t]\n            [sci.impl.unrestrict :refer [*unrestricted*]])\n  #?(:cljs (:require-macros [sci.impl.vars :refer [with-bindings\n                                                   with-writeable-namespace\n                                                   with-writeable-var]])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(macros/deftime\n  (defmacro with-writeable-namespace\n    [the-ns-object ns-meta & body]\n    `(let [m# ~ns-meta]\n       (if (or *unrestricted* (not (:sci/built-in m#)))\n         (do ~@body)\n         (let [ns-obj# ~the-ns-object\n               name# (t/getName ns-obj#)]\n           (throw (ex-info (str \"Built-in namespace \" name# \" is read-only.\")\n                           {:ns ns-obj#})))))))\n\n(deftype Frame [bindings prev])\n\n(def top-frame (Frame. {} nil))\n\n#?(:clj\n   (def ^ThreadLocal dvals (proxy [ThreadLocal] []\n                             (initialValue [] top-frame)))\n   :cljs\n   (def dvals (volatile! top-frame)))\n\n(defn get-thread-binding-frame ^Frame []\n  #?(:clj (.get dvals)\n     :cljs @dvals))\n\n(deftype TBox #?(:clj [thread ^:volatile-mutable val]\n                 :cljs [thread ^:mutable val])\n  t/IBox\n  (setVal [this v]\n    (set! val v))\n  (getVal [this] val))\n\n(defn clone-thread-binding-frame ^Frame []\n  (let [^Frame f #?(:clj (.get dvals)\n                    :cljs @dvals)]\n    (Frame. (.-bindings f) nil)))\n\n(defn reset-thread-binding-frame [frame]\n  #?(:clj (.set dvals frame)\n     :cljs (vreset! dvals frame)))\n\n(defprotocol IVar\n  (bindRoot [this v])\n  (getRawRoot [this])\n  (toSymbol [this])\n  (isMacro [this])\n  (hasRoot [this])\n  (setThreadBound [this v])\n  (unbind [this]))\n\n(defprotocol DynVar\n  (dynamic? [this]))\n\n(defprotocol CtxVar\n  (needs-ctx? [this])\n  (needs-ctx! [this]))\n\n(extend-type #?(:clj Object :cljs default)\n  DynVar\n  (dynamic? [_] false))\n\n(defn push-thread-bindings [bindings]\n  (let [^Frame frame (get-thread-binding-frame)\n        bmap (.-bindings frame)\n        bmap (reduce (fn [acc [var* val*]]\n                       (when (not (dynamic? var*))\n                         (throw (new #?(:clj IllegalStateException\n                                        :cljs js/Error)\n                                     (str \"Can't dynamically bind non-dynamic var \" var*))))\n                       (setThreadBound var* true)\n                       (assoc acc var* (TBox. #?(:clj (Thread/currentThread)\n                                                 :cljs nil) val*)))\n                     bmap\n                     bindings)]\n    (reset-thread-binding-frame (Frame. bmap frame))))\n\n(defn pop-thread-bindings []\n  ;; type hint needed to satisfy CLJS compiler / shadow\n  (if-let [f (.-prev ^Frame (get-thread-binding-frame))]\n    (if (identical? top-frame f)\n      #?(:clj (.remove dvals)\n         :cljs (vreset! dvals top-frame))\n      (reset-thread-binding-frame f))\n    (throw (new #?(:clj Exception :cljs js/Error) \"No frame to pop.\"))))\n\n(defn get-thread-bindings []\n  (let [;; type hint added to prevent shadow-cljs warning, although fn has return tag\n        ^Frame f (get-thread-binding-frame)]\n    (loop [ret {}\n           kvs (seq (.-bindings f))]\n      (if kvs\n        (let [[var* ^TBox tbox] (first kvs)\n              tbox-val (t/getVal tbox)]\n          (recur (assoc ret var* tbox-val)\n                 (next kvs)))\n        ret))))\n\n(defn get-thread-binding ^TBox [sci-var]\n  (when-let [;; type hint added to prevent shadow-cljs warning, although fn has return tag\n             ^Frame f #?(:clj (.get dvals)\n                         :cljs @dvals)]\n    #?(:clj (.get ^java.util.Map (.-bindings f) sci-var)\n       :cljs (.get (.-bindings f) sci-var))))\n\n(defn binding-conveyor-fn\n  [f]\n  (let [frame (clone-thread-binding-frame)]\n    (fn\n      ([]\n       (reset-thread-binding-frame frame)\n       (f))\n      ([x]\n       (reset-thread-binding-frame frame)\n       (f x))\n      ([x y]\n       (reset-thread-binding-frame frame)\n       (f x y))\n      ([x y z]\n       (reset-thread-binding-frame frame)\n       (f x y z))\n      ([x y z & args]\n       (reset-thread-binding-frame frame)\n       (apply f x y z args)))))\n\n(defn throw-unbound-call-exception [the-var]\n  (throw (new #?(:clj IllegalStateException\n                 :cljs js/Error) (str \"Attempting to call unbound fn: \" the-var))))\n\n(deftype SciUnbound [the-var]\n  Object\n  (toString [_]\n    (str \"Unbound: \" the-var))\n  #?@(:clj [clojure.lang.IFn] :cljs [IFn])\n  (#?(:clj invoke :cljs -invoke) [_]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s t]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s t rest]\n    (throw-unbound-call-exception the-var))\n  #?(:clj\n     (applyTo [_ args]\n              (throw-unbound-call-exception the-var))))\n\n;; adapted from https://github.com/clojure/clojurescript/blob/df1837048d01b157a04bb3dc7fedc58ee349a24a/src/main/cljs/cljs/core.cljs#L1118\n\n(defn built-in-var? [var-meta]\n  (:sci/built-in var-meta))\n\n(macros/deftime\n  (defmacro with-writeable-var\n    [the-var var-meta & body]\n    `(let [vm# ~var-meta]\n       (if (or *unrestricted* (not (:sci/built-in vm#)))\n         (do ~@body)\n         (let [the-var# ~the-var\n               ns# (:ns vm#)\n               ns-name# (t/getName ns#)\n               name# (t/getName the-var#)]\n           (throw (ex-info (str \"Built-in var #'\" ns-name# \"/\" name# \" is read-only.\")\n                           {:var ~the-var})))))))\n\n(defn var-get [v]\n  (deref v))\n\n(defn var-set [v val]\n  (t/setVal v val))\n\n(defn unqualify-symbol \n  \"If sym is namespace-qualified, remove the namespace, else return sym\"\n  [sym]\n  (if (qualified-symbol? sym)\n    (symbol (name sym))\n    sym))\n\n(macros/deftime\n  (defmacro with-bindings\n    \"Macro for binding sci vars for internal use.\"\n    [bindings & body]\n    `(do\n       ;; important: outside try\n       (vars/push-thread-bindings ~bindings)\n       (try\n         (do ~@body)\n         (finally\n           (vars/pop-thread-bindings))))))\n\n(defn alter-var-root\n  ([v f]\n   #?(:clj\n      (locking v (bindRoot v (f (getRawRoot v))))\n      :cljs (bindRoot v (f (getRawRoot v)))))\n  ([v f & args]\n   #?(:clj\n      (locking v (bindRoot v (apply f (getRawRoot v) args)))\n      :cljs (bindRoot v (apply f (getRawRoot v) args)))))\n\n(comment\n  (def v1 (SciVar. (fn [] 0) 'foo nil))\n  @v1 ;; 0\n  (push-thread-bindings {v1 2})\n  (get-thread-binding v1) ;; 2\n  (push-thread-bindings {v1 3})\n  (get-thread-binding v1) ;; 3\n  (pop-thread-bindings)\n  (get-thread-binding v1) ;; 2\n  (pop-thread-bindings)\n  (get-thread-binding v1) ;; nil\n  @v1 ;; 0\n  (pop-thread-bindings) ;; exception\n  )\n"]}