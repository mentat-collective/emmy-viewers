{
"version":3,
"file":"module$node_modules$three$src$geometries$PlaneGeometry.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGnHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAAwB,IAAK,EAEzBC,OAAAA,CAAkBP,OAAA,CAAQ,mDAAR,CAEtB,KAAIQ,iBAAmBR,OAAA,CAAQ,oDAAR,CAEvB,MAAMM,cAAN,QAA4BC,OAAgBE,CAAAA,cAA5C,CACEC,WAAW,CAACC,KAAA,CAAQ,CAAT,CAAYC,MAAA,CAAS,CAArB,CAAwBC,aAAA,CAAgB,CAAxC,CAA2CC,cAAA,CAAiB,CAA5D,CAA+D,CACxE,KAAA,EACA,KAAKC,CAAAA,IAAL,CAAY,eACZ,KAAKC,CAAAA,UAAL;AAAkB,CACTL,KADS,CAERC,MAFQ,CAGDC,aAHC,CAIAC,cAJA,CAMlB,KAAMG,WAAaN,KAAbM,CAAqB,CAA3B,CACMC,YAAcN,MAAdM,CAAuB,CACvBC,cAAAA,CAAQC,IAAKC,CAAAA,KAAL,CAAWR,aAAX,CACRS,eAAAA,CAAQF,IAAKC,CAAAA,KAAL,CAAWP,cAAX,CACd,OAAMS,OAASJ,aAATI,CAAiB,CACvB,KAAMC,OAASF,cAATE,CAAiB,CAAvB,CACMC,cAAgBd,KAAhBc,CAAwBN,aAD9B,CAEMO,eAAiBd,MAAjBc,CAA0BJ,cAE1BK,OAAAA,CAAU,EACVC,MAAAA,CAAW,EACjB,OAAMC,QAAU,EAAhB,CACMC,IAAM,EAEZ,KAAK,IAAIC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBP,MAAtB,CAA8BO,EAAA,EAA9B,CAAoC,CAClC,MAAMC,EAAID,EAAJC,CAASN,cAATM,CAA0Bd,WAEhC,KAAK,IAAIe,GAAK,CAAd,CAAiBA,EAAjB,CAAsBV,MAAtB,CAA8BU,EAAA,EAA9B,CAEEL,KAASM,CAAAA,IAAT,CADUD,EACV,CADeR,aACf,CAD+BR,UAC/B,CAAiB,CAACe,CAAlB,CAAqB,CAArB,CAGA,CAFAH,OAAQK,CAAAA,IAAR,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAEA;AADAJ,GAAII,CAAAA,IAAJ,CAASD,EAAT,CAAcd,aAAd,CACA,CAAAW,GAAII,CAAAA,IAAJ,CAAS,CAAT,CAAaH,EAAb,CAAkBT,cAAlB,CARgC,CAYpC,IAASS,UAAT,CAAc,CAAd,CAAiBA,UAAjB,CAAsBT,cAAtB,CAA6BS,UAAA,EAA7B,CACE,IAASE,WAAT,CAAc,CAAd,CAAiBA,WAAjB,CAAsBd,aAAtB,CAA6Bc,WAAA,EAA7B,CAEQE,MAIN,CAJUF,WAIV,CAJeV,MAIf,EAJyBQ,UAIzB,CAJ8B,CAI9B,EAHMK,aAGN,CAHUH,WAGV,CAHe,CAGf,CAHmBV,MAGnB,EAH6BQ,UAG7B,CAHkC,CAGlC,EAFMM,cAEN,CAFUJ,WAEV,CAFe,CAEf,CAFmBV,MAEnB,CAF4BQ,UAE5B,CADAJ,MAAQO,CAAAA,IAAR,CAJUD,WAIV,CAJeV,MAIf,CAJwBQ,UAIxB,CAAgBI,MAAhB,CAAmBE,cAAnB,CACA,CAAAV,MAAQO,CAAAA,IAAR,CAAaC,MAAb,CAAgBC,aAAhB,CAAmBC,cAAnB,CAIJ,KAAKC,CAAAA,QAAL,CAAcX,MAAd,CACA,KAAKY,CAAAA,YAAL,CAAkB,UAAlB,CAA8B,IAAI/B,gBAAiBgC,CAAAA,sBAArB,CAA4CZ,KAA5C;AAAsD,CAAtD,CAA9B,CACA,KAAKW,CAAAA,YAAL,CAAkB,QAAlB,CAA4B,IAAI/B,gBAAiBgC,CAAAA,sBAArB,CAA4CX,OAA5C,CAAqD,CAArD,CAA5B,CACA,KAAKU,CAAAA,YAAL,CAAkB,IAAlB,CAAwB,IAAI/B,gBAAiBgC,CAAAA,sBAArB,CAA4CV,GAA5C,CAAiD,CAAjD,CAAxB,CAjDwE,CAoDnEW,eAAQ,CAACC,IAAD,CAAO,CACpB,MAAO,KAAIpC,aAAJ,CAAkBoC,IAAK/B,CAAAA,KAAvB,CAA8B+B,IAAK9B,CAAAA,MAAnC,CAA2C8B,IAAK7B,CAAAA,aAAhD,CAA+D6B,IAAK5B,CAAAA,cAApE,CADa,CArDxB,CA2DAZ,OAAQI,CAAAA,aAAR,CAAwBA,aAvE2F;",
"sources":["node_modules/three/src/geometries/PlaneGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$geometries$PlaneGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlaneGeometry = void 0;\n\nvar _BufferGeometry = require(\"../core/BufferGeometry.js\");\n\nvar _BufferAttribute = require(\"../core/BufferAttribute.js\");\n\nclass PlaneGeometry extends _BufferGeometry.BufferGeometry {\n  constructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n    super();\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    const width_half = width / 2;\n    const height_half = height / 2;\n    const gridX = Math.floor(widthSegments);\n    const gridY = Math.floor(heightSegments);\n    const gridX1 = gridX + 1;\n    const gridY1 = gridY + 1;\n    const segment_width = width / gridX;\n    const segment_height = height / gridY; //\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    for (let iy = 0; iy < gridY1; iy++) {\n      const y = iy * segment_height - height_half;\n\n      for (let ix = 0; ix < gridX1; ix++) {\n        const x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    }\n\n    for (let iy = 0; iy < gridY; iy++) {\n      for (let ix = 0; ix < gridX; ix++) {\n        const a = ix + gridX1 * iy;\n        const b = ix + gridX1 * (iy + 1);\n        const c = ix + 1 + gridX1 * (iy + 1);\n        const d = ix + 1 + gridX1 * iy;\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n\n    this.setIndex(indices);\n    this.setAttribute('position', new _BufferAttribute.Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new _BufferAttribute.Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new _BufferAttribute.Float32BufferAttribute(uvs, 2));\n  }\n\n  static fromJSON(data) {\n    return new PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n  }\n\n}\n\nexports.PlaneGeometry = PlaneGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","PlaneGeometry","_BufferGeometry","_BufferAttribute","BufferGeometry","constructor","width","height","widthSegments","heightSegments","type","parameters","width_half","height_half","gridX","Math","floor","gridY","gridX1","gridY1","segment_width","segment_height","indices","vertices","normals","uvs","iy","y","ix","push","b","c","d","setIndex","setAttribute","Float32BufferAttribute","fromJSON","data"]
}
