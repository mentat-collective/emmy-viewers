{
"version":3,
"file":"module$node_modules$mathbox$build$esm$shaders$glsl$project_position.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EA6BvBJ,QAAQI,CAAAA,OAAR,CA1BCC,wrBAT+H;",
"sources":["node_modules/mathbox/build/esm/shaders/glsl/project.position.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$shaders$glsl$project_position\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default =\n/* glsl */\n`uniform float styleZBias;\nuniform float styleZIndex;\n\nvoid setPosition(vec3 position) {\n\n  #ifdef PROJECT_ORTHOGONAL\n  // Orthogonal projection with depth preservation around z = 1\n  vec4 pos = projectionMatrix * vec4(position, 1.0);\n  pos.xy *= -position.z;\n  #else\n  // Normal perspective projection\n  vec4 pos = projectionMatrix * vec4(position, 1.0);\n  #endif\n\n  // Apply relative Z bias\n  float bias  = (1.0 - styleZBias / 32768.0);\n  pos.z *= bias;\n\n  // Apply large scale Z index changes\n  if (styleZIndex > 0.0) {\n    float z = pos.z / pos.w;\n    pos.z = ((z + 1.0) / (styleZIndex + 1.0) - 1.0) * pos.w;\n  }\n\n  gl_Position = pos;\n}`;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","_default"]
}
