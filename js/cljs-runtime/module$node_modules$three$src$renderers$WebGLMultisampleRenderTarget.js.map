{
"version":3,
"file":"module$node_modules$three$src$renderers$WebGLMultisampleRenderTarget.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,oEAAA,CAAyF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGjIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,4BAAR,CAAuC,IAAK,EAExCC,OAAAA,CAAqBP,OAAA,CAAQ,2DAAR,CAEzB,MAAMM,6BAAN,QAA2CC,OAAmBC,CAAAA,iBAA9D,CACEC,WAAW,CAACC,KAAD,CAAQC,MAAR,CAAgBC,OAAA,CAAU,EAA1B,CAA8B,CACvC,KAAA,CAAMF,KAAN,CAAaC,MAAb,CAAqBC,OAArB,CACA,KAAKC,CAAAA,OAAL,CAAe,CACf,KAAKC,CAAAA,6BAAL,CAA6DC,IAAAA,EAAxB,GAAAH,OAAQI,CAAAA,WAAR;AAAoCJ,OAAQI,CAAAA,WAA5C,CAA0D,CAAA,CAC/F,KAAKC,CAAAA,kBAAL,CAAyDF,IAAAA,EAA/B,GAAAH,OAAQK,CAAAA,kBAAR,CAA2CL,OAAQK,CAAAA,kBAAnD,CAAwE,CAAA,CAClG,KAAKC,CAAAA,eAAL,CAAmD,CAAA,CAAnD,GAAuB,IAAKD,CAAAA,kBALW,CAQzCE,IAAI,CAACC,MAAD,CAAS,CACX,KAAMD,CAAAA,IAAKE,CAAAA,IAAX,CAAgB,IAAhB,CAAsBD,MAAtB,CACA,KAAKP,CAAAA,OAAL,CAAeO,MAAOP,CAAAA,OACtB,KAAKI,CAAAA,kBAAL,CAA0BG,MAAOH,CAAAA,kBACjC,KAAKC,CAAAA,eAAL,CAAuBE,MAAOF,CAAAA,eAC9B,OAAO,KALI,CATf,CAmBAhB,OAAQI,CAAAA,4BAAR,CAAuCA,4BACvCA,6BAA6BgB,CAAAA,SAAUC,CAAAA,8BAAvC,CAAwE,CAAA,CA9ByD;",
"sources":["node_modules/three/src/renderers/WebGLMultisampleRenderTarget.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$WebGLMultisampleRenderTarget\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLMultisampleRenderTarget = void 0;\n\nvar _WebGLRenderTarget = require(\"./WebGLRenderTarget.js\");\n\nclass WebGLMultisampleRenderTarget extends _WebGLRenderTarget.WebGLRenderTarget {\n  constructor(width, height, options = {}) {\n    super(width, height, options);\n    this.samples = 4;\n    this.ignoreDepthForMultisampleCopy = options.ignoreDepth !== undefined ? options.ignoreDepth : true;\n    this.useRenderToTexture = options.useRenderToTexture !== undefined ? options.useRenderToTexture : false;\n    this.useRenderbuffer = this.useRenderToTexture === false;\n  }\n\n  copy(source) {\n    super.copy.call(this, source);\n    this.samples = source.samples;\n    this.useRenderToTexture = source.useRenderToTexture;\n    this.useRenderbuffer = source.useRenderbuffer;\n    return this;\n  }\n\n}\n\nexports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLMultisampleRenderTarget","_WebGLRenderTarget","WebGLRenderTarget","constructor","width","height","options","samples","ignoreDepthForMultisampleCopy","undefined","ignoreDepth","useRenderToTexture","useRenderbuffer","copy","source","call","prototype","isWebGLMultisampleRenderTarget"]
}
