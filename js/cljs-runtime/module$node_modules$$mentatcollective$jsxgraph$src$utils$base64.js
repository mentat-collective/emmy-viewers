shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$utils$base64=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getIndex(s,i){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(s.charAt(i))}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;global=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg"));var _encoding=
_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$encoding"));global.default.Util=global.default.Util||{};global.default.Util.Base64={encode:function(input){var buffer=[];var encInput=_encoding.default.encode(input);var len=encInput.length;var padLen=len%3;for(input=0;input<len-padLen;input+=3){var bin=(encInput.charCodeAt(input)&255)<<16|(encInput.charCodeAt(input+1)&255)<<8|encInput.charCodeAt(input+2)&255;buffer.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>
18),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>12&63),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>6&63),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin&63))}switch(padLen){case 1:bin=encInput.charCodeAt(len-1)&255;buffer.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>2),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin<<4&63),"\x3d",
"\x3d");break;case 2:bin=(encInput.charCodeAt(len-2)&255)<<8|encInput.charCodeAt(len-1)&255,buffer.push("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>10),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin>>4&63),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(bin<<2&63),"\x3d")}return buffer.join("")},decode:function(input,utf8){var i,result=[],buffer=[];input=input.replace(/[^A-Za-z0-9+/=]/g,"");var len=input.length;
if(0!==len%4)throw Error("JSXGraph/utils/base64: Can't decode string (invalid input length).");if("\x3d"===input.charAt(len-1)){var padLen=1;"\x3d"===input.charAt(len-2)&&(padLen=2);len-=4}for(i=0;i<len;i+=4){var bin=_getIndex(input,i)<<18|_getIndex(input,i+1)<<12|_getIndex(input,i+2)<<6|_getIndex(input,i+3);buffer.push(bin>>16,bin>>8&255,bin&255);0===i%1E4&&(result.push(String.fromCharCode.apply(null,buffer)),buffer=[])}switch(padLen){case 1:bin=_getIndex(input,len)<<12|_getIndex(input,len+1)<<6|
_getIndex(input,len+2);buffer.push(bin>>10,bin>>2&255);break;case 2:bin=_getIndex(input,i)<<6|_getIndex(input,i+1),buffer.push(bin>>4)}result.push(String.fromCharCode.apply(null,buffer));padLen=result.join("");utf8&&(padLen=_encoding.default.decode(padLen));return padLen},decodeAsArray:function(input){var dec=this.decode(input),ar=[],len=dec.length;for(input=0;input<len;input++)ar[input]=dec.charCodeAt(input);return ar}};exports.default=global.default.Util.Base64}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$utils$base64.js.map
