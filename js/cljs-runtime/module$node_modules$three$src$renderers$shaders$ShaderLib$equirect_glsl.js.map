{
"version":3,
"file":"module$node_modules$three$src$renderers$shaders$ShaderLib$equirect_glsl.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,uEAAA,CAA4F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAoBAH,QAAQI,CAAAA,MAAR,CAdCA,iOAqCDJ,QAAQK,CAAAA,QAAR,CApBCA,uWA1BmI;",
"sources":["node_modules/three/src/renderers/shaders/ShaderLib/equirect.glsl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$shaders$ShaderLib$equirect_glsl\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fragment = exports.vertex = void 0;\nconst vertex =\n/* glsl */\n`\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\n}\n`;\nexports.vertex = vertex;\nconst fragment =\n/* glsl */\n`\nuniform sampler2D tEquirect;\n\nvarying vec3 vWorldDirection;\n\n#include <common>\n\nvoid main() {\n\n\tvec3 direction = normalize( vWorldDirection );\n\n\tvec2 sampleUV = equirectUv( direction );\n\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\n}\n`;\nexports.fragment = fragment;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","vertex","fragment"]
}
