{
"version":3,
"file":"module$node_modules$$mentatcollective$jsxgraph$src$utils$xml.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYzHC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CATrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEnBI,OAAAA,CAAOP,sBAAA,CAAuBH,OAAA,CAAQ,wDAAR,CAAvB,CAEX,KAAIW,MAAQR,sBAAA,CAAuBH,OAAA,CAAQ,+DAAR,CAAvB,CA2CZU,OAAKJ,CAAAA,OAAQM,CAAAA,GAAb,CAAmB,CAKjBC,gBAAiBA,QAAS,CAACC,EAAD,CAAK,CAG7B,IAFA,IAAIC;AAAMD,EAAGE,CAAAA,UAEb,CAAOL,KAAML,CAAAA,OAAQW,CAAAA,MAAd,CAAqBF,GAArB,CAAP,CAAA,CACuB,CAArB,GAAIA,GAAIG,CAAAA,QAAR,EAA2B,IAAKC,CAAAA,IAAL,CAAUJ,GAAIK,CAAAA,SAAd,CAA3B,CAE4B,CAF5B,GAEWL,GAAIG,CAAAA,QAFf,EAGE,IAAKL,CAAAA,eAAL,CAAqBE,GAArB,CAHF,CACED,EAAGO,CAAAA,WAAH,CAAeN,GAAf,CAKF,CAAAA,GAAA,CAAMA,GAAIO,CAAAA,WAViB,CALd,CAwBjBC,MAAOA,QAAS,CAACC,YAAD,CAAM,CAuBpBC,YAAA,CAAcC,CADLC,KAlBgB,UAAzBC,GAAI,MAAOC,UAAXD,EAA4D,QAA5DA,GAAuC,MAAOC,UAA9CD,CACOC,SADPD,CAIOA,QAAS,EAAG,CACf,IAAKF,CAAAA,eAAL,CAAuBI,QAAS,CAACN,GAAD,CAAM,CAGpC,GAA6B,UAA7B,GAAI,MAAOO,cAAX,CAAyC,CACvC,IAAAC,EAAI,IAAID,aAAJ,CAAkB,mBAAlB,CACJC,EAAEC,CAAAA,OAAF,CAAUT,GAAV,CAFuC,CAKzC,MAAOQ,EAR6B,CADvB,CAcVL,CACKD,EAAAA,eAAP,CAAuBF,YAAvB,CAA4B,UAA5B,CACP,KAAKX,CAAAA,eAAL,CAAqBY,YAArB,CACA;MAAOA,aAzBa,CAxBL,CAqDnBvB,QAAQI,CAAAA,OAAR,CADeI,MAAKJ,CAAAA,OAAQM,CAAAA,GAzG6F;",
"sources":["node_modules/@mentatcollective/jsxgraph/src/utils/xml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mentatcollective$jsxgraph$src$utils$xml\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jxg = _interopRequireDefault(require(\"../jxg\"));\n\nvar _type = _interopRequireDefault(require(\"./type\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n Copyright 2008-2022\n Matthias Ehmann,\n Michael Gerhaeuser,\n Carsten Miller,\n Bianca Valentin,\n Alfred Wassermann,\n Peter Wilfahrt\n\n This file is part of JSXGraph.\n\n JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n You can redistribute it and/or modify it under the terms of the\n\n * GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version\n OR\n * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n JSXGraph is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License and\n the MIT License along with JSXGraph. If not, see <http://www.gnu.org/licenses/>\n and <http://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true, DOMParser: true, ActiveXObject: true*/\n\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * Holds browser independent xml parsing routines. Won't work in environments other than browsers.\n * @namespace\n */\n_jxg.default.XML = {\n  /**\n   * Cleans out unneccessary whitespaces in a chunk of xml.\n   * @param {Object} el\n   */\n  cleanWhitespace: function (el) {\n    var cur = el.firstChild;\n\n    while (_type.default.exists(cur)) {\n      if (cur.nodeType === 3 && !/\\S/.test(cur.nodeValue)) {\n        el.removeChild(cur);\n      } else if (cur.nodeType === 1) {\n        this.cleanWhitespace(cur);\n      }\n\n      cur = cur.nextSibling;\n    }\n  },\n\n  /**\n   * Converts a given string into a XML tree.\n   * @param {String} str\n   * @returns {Object} The xml tree represented by the root node.\n   */\n  parse: function (str) {\n    var parser, tree, DP; // DOMParser is a function in all browsers, except older IE and Safari.\n    // In IE it does not exists (workaround in else branch), in Safari it's an object.\n\n    if (typeof DOMParser === \"function\" || typeof DOMParser === \"object\") {\n      DP = DOMParser;\n    } else {\n      // IE workaround, since there is no DOMParser\n      DP = function () {\n        this.parseFromString = function (str) {\n          var d;\n\n          if (typeof ActiveXObject === \"function\") {\n            d = new ActiveXObject(\"MSXML.DomDocument\");\n            d.loadXML(str);\n          }\n\n          return d;\n        };\n      };\n    }\n\n    parser = new DP();\n    tree = parser.parseFromString(str, \"text/xml\");\n    this.cleanWhitespace(tree);\n    return tree;\n  }\n};\nvar _default = _jxg.default.XML;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_jxg","_type","XML","cleanWhitespace","el","cur","firstChild","exists","nodeType","test","nodeValue","removeChild","nextSibling","parse","str","tree","parseFromString","parser","DP","DOMParser","this.parseFromString","ActiveXObject","d","loadXML"]
}
