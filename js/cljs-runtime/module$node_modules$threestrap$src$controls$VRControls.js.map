{
"version":3,
"file":"module$node_modules$threestrap$src$controls$VRControls.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/threestrap/src/controls/VRControls.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$threestrap$src$controls$VRControls\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VRControls = void 0;\n\nvar _Matrix = require(\"three/src/math/Matrix4.js\");\n\n/**\n * @author dmarcos / https://github.com/dmarcos\n * @author mrdoob / http://mrdoob.com\n *\n * VRControls from\n * https://cdn.jsdelivr.net/npm/three@0.93.0/examples/js/controls/VRControls.js.\n * Added here so that the existing VR examples still work... this will stay\n * until we get everything upgraded to the modern three.js approach to VR. See\n * https://threejs.org/docs/index.html#manual/en/introduction/How-to-create-VR-content\n * for more info.\n */\nclass VRControls {\n  constructor(object, onError) {\n    this.object = object;\n    this.standingMatrix = new _Matrix.Matrix4();\n    this.frameData = null;\n\n    if (\"VRFrameData\" in window) {\n      // eslint-disable-next-line no-undef\n      this.frameData = new VRFrameData();\n    }\n\n    function gotVRDisplays(displays) {\n      this.vrDisplays = displays;\n\n      if (displays.length > 0) {\n        this.vrDisplay = displays[0];\n      } else {\n        if (onError) onError(\"VR input not available.\");\n      }\n    }\n\n    if (navigator.getVRDisplays) {\n      navigator.getVRDisplays().then(gotVRDisplays).catch(function () {\n        console.warn(\"VRControls: Unable to get VR Displays\");\n      });\n    } // the Rift SDK returns the position in meters\n    // this scale factor allows the user to define how meters\n    // are converted to scene units.\n\n\n    this.scale = 1; // If true will use \"standing space\" coordinate system where y=0 is the\n    // floor and x=0, z=0 is the center of the room.\n\n    this.standing = false; // Distance from the users eyes to the floor in meters. Used when\n    // standing=true but the VRDisplay doesn't provide stageParameters.\n\n    this.userHeight = 1.6;\n  }\n\n  getVRDisplay() {\n    return this.vrDisplay;\n  }\n\n  setVRDisplay(value) {\n    this.vrDisplay = value;\n  }\n\n  getVRDisplays() {\n    console.warn(\"VRControls: getVRDisplays() is being deprecated.\");\n    return this.vrDisplays;\n  }\n\n  getStandingMatrix() {\n    return this.standingMatrix;\n  }\n\n  update() {\n    if (this.vrDisplay) {\n      let pose;\n\n      if (this.vrDisplay.getFrameData) {\n        this.vrDisplay.getFrameData(this.frameData);\n        pose = this.frameData.pose;\n      } else if (this.vrDisplay.getPose) {\n        pose = this.vrDisplay.getPose();\n      }\n\n      if (pose.orientation !== null) {\n        this.object.quaternion.fromArray(pose.orientation);\n      }\n\n      if (pose.position !== null) {\n        this.object.position.fromArray(pose.position);\n      } else {\n        this.object.position.set(0, 0, 0);\n      }\n\n      if (this.standing) {\n        if (this.vrDisplay.stageParameters) {\n          this.object.updateMatrix();\n          this.standingMatrix.fromArray(this.vrDisplay.stageParameters.sittingToStandingTransform);\n          this.object.applyMatrix(this.standingMatrix);\n        } else {\n          this.object.position.setY(this.object.position.y + this.userHeight);\n        }\n      }\n\n      this.object.position.multiplyScalar(this.scale);\n    }\n  }\n\n  dispose() {\n    this.vrDisplay = null;\n  }\n\n}\n\nexports.VRControls = VRControls;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","VRControls","_Matrix","constructor","object","onError","gotVRDisplays","displays","vrDisplays","length","vrDisplay","standingMatrix","Matrix4","frameData","window","VRFrameData","navigator","getVRDisplays","then","catch","console","warn","scale","standing","userHeight","getVRDisplay","setVRDisplay","getStandingMatrix","update","pose","getFrameData","getPose","orientation","quaternion","fromArray","position","set","stageParameters","updateMatrix","sittingToStandingTransform","applyMatrix","setY","y","multiplyScalar","dispose"]
}
