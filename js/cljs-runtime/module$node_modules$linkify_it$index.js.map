{
"version":3,
"file":"module$node_modules$linkify_it$index.js",
"lineCount":15,
"mappings":"AAAAA,cAAA,CAAA,oCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CASjGC,QAASA,OAAM,CAACC,GAAD,CAAmC,CAClCC,KAAMC,CAAAA,SAAUC,CAAAA,KAAMC,CAAAA,IAAtBC,CAA2BC,SAA3BD,CAAsC,CAAtCA,CAENE,CAAAA,OAAR,CAAgB,QAAS,CAACC,MAAD,CAAS,CAC3BA,MAAL,EAEAC,MAAOC,CAAAA,IAAP,CAAYF,MAAZ,CAAoBD,CAAAA,OAApB,CAA4B,QAAS,CAACI,GAAD,CAAM,CACzCX,GAAA,CAAIW,GAAJ,CAAA,CAAWH,MAAA,CAAOG,GAAP,CAD8B,CAA3C,CAHgC,CAAlC,CAQA,OAAOX,IAXyC,CAclDY,QAASA,OAAM,CAACZ,GAAD,CAAM,CAAE,MAAOS,OAAOP,CAAAA,SAAUW,CAAAA,QAAST,CAAAA,IAA1B,CAA+BJ,GAA/B,CAAT,CAOrBc,QAASA,SAAQ,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAIC,CAAAA,OAAJ,CAAY,sBAAZ,CAAoC,SAApC,CAAT,CAYvBC,QAASA,aAAY,CAACjB,GAAD,CAAM,CACzB,MAAOS,OAAOC,CAAAA,IAAP,CAAYV,GAAZ,EAAmB,EAAnB,CAAuBkB,CAAAA,MAAvB,CAA8B,QAAS,CAACC,GAAD,CAAMC,CAAN,CAAS,CACrD,MAAOD,IAAP,EAAcE,cAAeC,CAAAA,cAAf,CAA8BF,CAA9B,CADuC,CAAhD;AAEJ,CAAA,CAFI,CADkB,CAoF3BG,QAASA,eAAc,CAACC,IAAD,CAAO,CAC5BA,IAAKC,CAAAA,SAAL,CAAiB,CAAC,CAClBD,KAAKE,CAAAA,cAAL,CAAwB,EAFI,CAK9BC,QAASA,gBAAe,CAACC,EAAD,CAAK,CAC3B,MAAO,SAAS,CAACC,IAAD,CAAOC,GAAP,CAAY,CACtBC,IAAAA,CAAOF,IAAK1B,CAAAA,KAAL,CAAW2B,GAAX,CAEX,OAAIF,GAAGI,CAAAA,IAAH,CAAQD,IAAR,CAAJ,CACSA,IAAKE,CAAAA,KAAL,CAAWL,EAAX,CAAA,CAAe,CAAf,CAAkBM,CAAAA,MAD3B,CAGO,CANmB,CADD,CAW7BC,QAASA,iBAAgB,EAAG,CAC1B,MAAO,SAAS,CAACF,KAAD,CAAQT,IAAR,CAAc,CAC5BA,IAAKY,CAAAA,SAAL,CAAeH,KAAf,CAD4B,CADJ,CAQ5BI,QAASA,QAAO,CAACb,IAAD,CAAO,CAiBrBc,QAASA,MAAK,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAIvB,CAAAA,OAAJ,CAAY,QAAZ,CAAsBY,EAAGY,CAAAA,QAAzB,CAAT,CAepBC,QAASA,YAAW,CAACC,IAAD,CAAOC,GAAP,CAAY,CAC9B,KAAUC,MAAJ,CAAU,8BAAV,CAA2CF,IAA3C,CAAkD,KAAlD,CAA0DC,GAA1D,CAAN,CAD8B,CA7BhC,IAAIf,GAAKJ,IAAKI,CAAAA,EAAVA,CAAehC,OAAA,CAAQ,uCAAR,CAAA,CAAoB4B,IAAKqB,CAAAA,QAAzB,CAAnB;AAGIC,KAAOtB,IAAKuB,CAAAA,QAAS5C,CAAAA,KAAd,EAEXqB,KAAKwB,CAAAA,SAAL,EAEKxB,KAAKyB,CAAAA,iBAAV,EACEH,IAAKI,CAAAA,IAAL,CA5CkBC,yVA4ClB,CAEFL,KAAKI,CAAAA,IAAL,CAAUtB,EAAGwB,CAAAA,MAAb,CAEAxB,GAAGY,CAAAA,QAAH,CAAcM,IAAKO,CAAAA,IAAL,CAAU,GAAV,CAIdzB,GAAG0B,CAAAA,WAAH,CAAsBC,MAAA,CAAOjB,KAAA,CAAMV,EAAG4B,CAAAA,eAAT,CAAP;AAAkC,GAAlC,CACtB5B,GAAG6B,CAAAA,UAAH,CAAsBF,MAAA,CAAOjB,KAAA,CAAMV,EAAG8B,CAAAA,cAAT,CAAP,CAAiC,GAAjC,CACtB9B,GAAG+B,CAAAA,gBAAH,CAAsBJ,MAAA,CAAOjB,KAAA,CAAMV,EAAGgC,CAAAA,oBAAT,CAAP,CAAuC,GAAvC,CACtBhC,GAAGiC,CAAAA,eAAH,CAAsBN,MAAA,CAAOjB,KAAA,CAAMV,EAAGkC,CAAAA,mBAAT,CAAP,CAAsC,GAAtC,CAMtB,KAAIC,QAAU,EAEdvC,KAAKwC,CAAAA,YAAL,CAAoB,EAMpBvD,OAAOC,CAAAA,IAAP,CAAYc,IAAKyC,CAAAA,WAAjB,CAA8B1D,CAAAA,OAA9B,CAAsC,QAAS,CAACmC,IAAD,CAAO,CACpD,IAAIC,IAAMnB,IAAKyC,CAAAA,WAAL,CAAiBvB,IAAjB,CAGV,IAAY,IAAZ,GAAIC,GAAJ,CAAA,CAEA,IAAIuB,SAAW,CAAEC,SAAU,IAAZ,CAAkBC,KAAM,IAAxB,CAEf5C,KAAKwC,CAAAA,YAAL,CAAkBtB,IAAlB,CAAA,CAA0BwB,QAzKkB,kBA2K5C,GA3K4BtD,MAAA,CA2Kf+B,GA3Ke,CA2K5B,EA1K4C,iBA2K1C,GA3K0B/B,MAAA,CA2Kb+B,GAAIwB,CAAAA,QA3KS,CA2K1B,CACED,QAASC,CAAAA,QADX,CACsBxC,eAAA,CAAgBgB,GAAIwB,CAAAA,QAApB,CADtB;AA1K4C,mBA4KrC,GA5KqBvD,MAAA,CA4KN+B,GAAIwB,CAAAA,QA5KE,CA4KrB,CACLD,QAASC,CAAAA,QADJ,CACexB,GAAIwB,CAAAA,QADnB,CAGL1B,WAAA,CAAYC,IAAZ,CAAkBC,GAAlB,CAGF,CAlL4C,mBAkL5C,GAlL4B/B,MAAA,CAkLb+B,GAAIP,CAAAA,SAlLS,CAkL5B,CACE8B,QAAS9B,CAAAA,SADX,CACuBO,GAAIP,CAAAA,SAD3B,CAEYO,GAAIP,CAAAA,SAAT,CAGLK,WAAA,CAAYC,IAAZ,CAAkBC,GAAlB,CAHK,CACLuB,QAAS9B,CAAAA,SADJ,CACgBD,gBAAA,EAZzB,EA5K4C,iBAgM5C,GAhM4BvB,MAAA,CAgMf+B,GAhMe,CAgM5B,CACEoB,OAAQb,CAAAA,IAAR,CAAaR,IAAb,CADF,CAKAD,WAAA,CAAYC,IAAZ,CAAkBC,GAAlB,CA/BA,CAJoD,CAAtD,CA0CAoB,QAAQxD,CAAAA,OAAR,CAAgB,QAAS,CAAC8D,KAAD,CAAQ,CAC1B7C,IAAKwC,CAAAA,YAAL,CAAkBxC,IAAKyC,CAAAA,WAAL,CAAiBI,KAAjB,CAAlB,CAAL,GAMA7C,IAAKwC,CAAAA,YAAL,CAAkBK,KAAlB,CAAyBF,CAAAA,QAEzB,CADE3C,IAAKwC,CAAAA,YAAL,CAAkBxC,IAAKyC,CAAAA,WAAL,CAAiBI,KAAjB,CAAlB,CAA2CF,CAAAA,QAC7C,CAAA3C,IAAKwC,CAAAA,YAAL,CAAkBK,KAAlB,CAAyBjC,CAAAA,SAAzB;AACEZ,IAAKwC,CAAAA,YAAL,CAAkBxC,IAAKyC,CAAAA,WAAL,CAAiBI,KAAjB,CAAlB,CAA2CjC,CAAAA,SAT7C,CAD+B,CAAjC,CAgBAZ,KAAKwC,CAAAA,YAAL,CAAkB,EAAlB,CAAA,CAAwB,CAAEG,SAAU,IAAZ,CAAkB/B,UAAWD,gBAAA,EAA7B,CAKpBmC,KAAAA,CAAQ7D,MAAOC,CAAAA,IAAP,CAAYc,IAAKwC,CAAAA,YAAjB,CACSO,CAAAA,MADT,CACgB,QAAS,CAAC7B,IAAD,CAAO,CAEtB,MAAqB,EAArB,CAAOA,IAAKR,CAAAA,MAAZ,EAA0BV,IAAKwC,CAAAA,YAAL,CAAkBtB,IAAlB,CAFJ,CADhC,CAKS8B,CAAAA,GALT,CAKa1D,QALb,CAMSuC,CAAAA,IANT,CAMc,GANd,CAQZ7B,KAAKI,CAAAA,EAAG6C,CAAAA,WAAR,CAAwBlB,MAAA,CAAO,yBAAP,CAAkC3B,EAAG8C,CAAAA,QAArC,CAAgD,KAAhD,CAAwDJ,IAAxD,CAAgE,GAAhE,CAAqE,GAArE,CACxB9C,KAAKI,CAAAA,EAAG+C,CAAAA,aAAR,CAAwBpB,MAAA,CAAO,yBAAP,CAAkC3B,EAAG8C,CAAAA,QAArC,CAAgD,KAAhD,CAAwDJ,IAAxD,CAAgE,GAAhE,CAAqE,IAArE,CAExB9C,KAAKI,CAAAA,EAAGgD,CAAAA,OAAR,CAAkBrB,MAAA,CAChB,GADgB,CACV/B,IAAKI,CAAAA,EAAG6C,CAAAA,WAAYjE,CAAAA,MADV,CACmB,KADnB,CAC2BgB,IAAKI,CAAAA,EAAGiC,CAAAA,eAAgBrD,CAAAA,MADnD;AAC4D,KAD5D,CAEhB,GAFgB,CASlBe,eAAA,CAAeC,IAAf,CAvHqB,CA+HvBqD,QAASA,MAAK,CAACrD,IAAD,CAAOsD,KAAP,CAAc,CAAA,IACtBC,MAAQvD,IAAKC,CAAAA,SADS,CAEtBuD,IAAQxD,IAAKyD,CAAAA,cAFS,CAGtBpD,KAAQL,IAAKE,CAAAA,cAAevB,CAAAA,KAApB,CAA0B4E,KAA1B,CAAiCC,GAAjC,CAOZ,KAAKE,CAAAA,MAAL,CAAiB1D,IAAK2D,CAAAA,UAAWC,CAAAA,WAAhB,EAMjB,KAAKC,CAAAA,KAAL,CAAiBN,KAAjB,CAAyBD,KAMzB,KAAKQ,CAAAA,SAAL,CAAiBN,GAAjB,CAAuBF,KAkBvB,KAAKS,CAAAA,GAAL,CANA,IAAK1D,CAAAA,IAML,CAZA,IAAK2D,CAAAA,GAYL,CAZiB3D,IA5BS,CA2C5B4D,QAASA,YAAW,CAACjE,IAAD,CAAOsD,KAAP,CAAc,CAC5B7C,KAAAA,CAAQ,IAAI4C,KAAJ,CAAUrD,IAAV,CAAgBsD,KAAhB,CAEZtD,KAAKwC,CAAAA,YAAL,CAAkB/B,KAAMiD,CAAAA,MAAxB,CAAgC9C,CAAAA,SAAhC,CAA0CH,KAA1C,CAAiDT,IAAjD,CAEA,OAAOS,MALyB,CA+ClCyD,QAASA,UAAS,CAACC,OAAD,CAAUC,OAAV,CAAmB,CACnC,GAAI,EAAE,IAAF,WAAkBF,UAAlB,CAAJ,CACE,MAAO,KAAIA,SAAJ,CAAcC,OAAd,CAAuBC,OAAvB,CAGL;CAACA,OAAL,EACM3E,YAAA,CAAa0E,OAAb,CADN,GAEIC,OACA,CADUD,OACV,CAAAA,OAAA,CAAU,EAHd,CAOA,KAAK9C,CAAAA,QAAL,CAA0B9C,MAAA,CAAO,EAAP,CAAWsB,cAAX,CAA2BuE,OAA3B,CAI1B,KAAKX,CAAAA,cAAL,CADA,IAAKxD,CAAAA,SACL,CAD0B,CAAC,CAG3B,KAAKC,CAAAA,cAAL,CADA,IAAKyD,CAAAA,UACL,CAD0B,EAG1B,KAAKlB,CAAAA,WAAL,CAA0BlE,MAAA,CAAO,EAAP,CAAW8F,cAAX,CAA2BF,OAA3B,CAC1B,KAAK3B,CAAAA,YAAL,CAA0B,EAE1B,KAAKjB,CAAAA,QAAL,CAA0B+C,YAC1B,KAAK7C,CAAAA,iBAAL,CAA0B,CAAA,CAE1B,KAAKrB,CAAAA,EAAL,CAAU,EAEVS,QAAA,CAAQ,IAAR,CA5BmC,CA5UrC,IAAIhB,eAAiB,CACnB0E,UAAW,CAAA,CADQ,CAEnBC,WAAY,CAAA,CAFO,CAGnBC,QAAS,CAAA,CAHU,CAArB,CAcIJ,eAAiB,CACnB,QAAS,CACP1B,SAAUA,QAAS,CAACtC,IAAD,CAAOC,GAAP,CAAYN,IAAZ,CAAkB,CAC/BO,IAAAA,CAAOF,IAAK1B,CAAAA,KAAL,CAAW2B,GAAX,CAENN,KAAKI,CAAAA,EAAGsE,CAAAA,IAAb,GAEE1E,IAAKI,CAAAA,EAAGsE,CAAAA,IAFV;AAEkB,IAAI3C,MAAJ,CACd,SADc,CACF/B,IAAKI,CAAAA,EAAGuE,CAAAA,QADN,CACiB3E,IAAKI,CAAAA,EAAGwE,CAAAA,oBADzB,CACgD5E,IAAKI,CAAAA,EAAGyE,CAAAA,QADxD,CACkE,GADlE,CAFlB,CAMA,OAAI7E,KAAKI,CAAAA,EAAGsE,CAAAA,IAAKlE,CAAAA,IAAb,CAAkBD,IAAlB,CAAJ,CACSA,IAAKE,CAAAA,KAAL,CAAWT,IAAKI,CAAAA,EAAGsE,CAAAA,IAAnB,CAAA,CAAyB,CAAzB,CAA4BhE,CAAAA,MADrC,CAGO,CAZ4B,CAD9B,CADU,CAiBnB,SAAW,OAjBQ,CAkBnB,OAAW,OAlBQ,CAmBnB,KAAW,CACTiC,SAAUA,QAAS,CAACtC,IAAD,CAAOC,GAAP,CAAYN,IAAZ,CAAkB,CACnC,IAAIO,KAAOF,IAAK1B,CAAAA,KAAL,CAAW2B,GAAX,CAENN,KAAKI,CAAAA,EAAG0E,CAAAA,OAAb,GAEE9E,IAAKI,CAAAA,EAAG0E,CAAAA,OAFV,CAEqB,IAAI/C,MAAJ,CACjB,GADiB,CAEjB/B,IAAKI,CAAAA,EAAGuE,CAAAA,QAFS,CAKjB,qBALiB,CAKO3E,IAAKI,CAAAA,EAAG2E,CAAAA,UALf,CAK4B,QAL5B,CAKuC/E,IAAKI,CAAAA,EAAG4E,CAAAA,eAL/C,CAKiE,GALjE,CAMjBhF,IAAKI,CAAAA,EAAG6E,CAAAA,QANS,CAOjBjF,IAAKI,CAAAA,EAAG8E,CAAAA,mBAPS,CAQjBlF,IAAKI,CAAAA,EAAGyE,CAAAA,QARS,CAUjB,GAViB,CAFrB,CAgBA,OAAI7E,KAAKI,CAAAA,EAAG0E,CAAAA,OAAQtE,CAAAA,IAAhB,CAAqBD,IAArB,CAAJ;AAEa,CACX,EADID,GACJ,EADkC,GAClC,GADgBD,IAAA,CAAKC,GAAL,CAAW,CAAX,CAChB,EAAW,CAAX,EAAIA,GAAJ,EAAkC,GAAlC,GAAgBD,IAAA,CAAKC,GAAL,CAAW,CAAX,CAAhB,CAAgD,CAAhD,CACOC,IAAKE,CAAAA,KAAL,CAAWT,IAAKI,CAAAA,EAAG0E,CAAAA,OAAnB,CAAA,CAA4B,CAA5B,CAA+BpE,CAAAA,MAJxC,CAMO,CAzB4B,CAD5B,CAnBQ,CAgDnB,UAAW,CACTiC,SAAUA,QAAS,CAACtC,IAAD,CAAOC,GAAP,CAAYN,IAAZ,CAAkB,CAC/BO,IAAAA,CAAOF,IAAK1B,CAAAA,KAAL,CAAW2B,GAAX,CAENN,KAAKI,CAAAA,EAAG+E,CAAAA,MAAb,GACEnF,IAAKI,CAAAA,EAAG+E,CAAAA,MADV,CACoB,IAAIpD,MAAJ,CAChB,GADgB,CACV/B,IAAKI,CAAAA,EAAGgF,CAAAA,cADE,CACe,GADf,CACqBpF,IAAKI,CAAAA,EAAGiF,CAAAA,eAD7B,CAC8C,GAD9C,CADpB,CAKA,OAAIrF,KAAKI,CAAAA,EAAG+E,CAAAA,MAAO3E,CAAAA,IAAf,CAAoBD,IAApB,CAAJ,CACSA,IAAKE,CAAAA,KAAL,CAAWT,IAAKI,CAAAA,EAAG+E,CAAAA,MAAnB,CAAA,CAA2B,CAA3B,CAA8BzE,CAAAA,MADvC,CAGO,CAX4B,CAD5B,CAhDQ,CAdrB,CAqFI4D,aAAe,6EAAA,CAAA,KAAA,CAAA,GAAA,CA8RnBJ,UAAUxF,CAAAA,SAAU4G,CAAAA,GAApB,CAA0BC,QAAY,CAAC7B,MAAD,CAAS8B,UAAT,CAAqB,CACzD,IAAK/C,CAAAA,WAAL,CAAiBiB,MAAjB,CAAA;AAA2B8B,UAC3B3E,QAAA,CAAQ,IAAR,CACA,OAAO,KAHkD,CAa3DqD,UAAUxF,CAAAA,SAAU+G,CAAAA,GAApB,CAA0BC,QAAY,CAACtB,OAAD,CAAU,CAC9C,IAAK/C,CAAAA,QAAL,CAAgB9C,MAAA,CAAO,IAAK8C,CAAAA,QAAZ,CAAsB+C,OAAtB,CAChB,OAAO,KAFuC,CAWhDF,UAAUxF,CAAAA,SAAU8B,CAAAA,IAApB,CAA2BmF,QAAa,CAACtF,IAAD,CAAO,CAE7C,IAAKH,CAAAA,cAAL,CAAsBG,IACtB,KAAKJ,CAAAA,SAAL,CAAsB,CAAC,CAEvB,IAAI,CAACI,IAAKK,CAAAA,MAAV,CAAoB,MAAO,CAAA,CALkB,KAOzCkF,CAPyC,CAOtCC,EAPsC,CAOlCC,EAPkC,CAO9BC,GAGf,IAAI,IAAK3F,CAAAA,EAAG6C,CAAAA,WAAYzC,CAAAA,IAApB,CAAyBH,IAAzB,CAAJ,CAAoC,CAClC,IAAAD,GAAK,IAAKA,CAAAA,EAAG+C,CAAAA,aAEb,KADA/C,EAAG0D,CAAAA,SACH,CADe,CACf,CAA+B,IAA/B,IAAQ8B,CAAR,CAAYxF,EAAG4F,CAAAA,IAAH,CAAQ3F,IAAR,CAAZ,EAAA,CAEE,GADA0F,GACA,CADM,IAAKE,CAAAA,YAAL,CAAkB5F,IAAlB,CAAwBuF,CAAA,CAAE,CAAF,CAAxB,CAA8BxF,EAAG0D,CAAAA,SAAjC,CACN,CAAS,CACP,IAAKH,CAAAA,UAAL,CAAsBiC,CAAA,CAAE,CAAF,CACtB,KAAK3F,CAAAA,SAAL,CAAsB2F,CAAE/B,CAAAA,KAAxB,CAAgC+B,CAAA,CAAE,CAAF,CAAKlF,CAAAA,MACrC,KAAK+C,CAAAA,cAAL,CAAsBmC,CAAE/B,CAAAA,KAAxB;AAAgC+B,CAAA,CAAE,CAAF,CAAKlF,CAAAA,MAArC,CAA8CqF,GAC9C,MAJO,CALuB,CAchC,IAAK1E,CAAAA,QAASkD,CAAAA,SAAlB,EAA+B,IAAK/B,CAAAA,YAAL,CAAkB,OAAlB,CAA/B,GAEE0D,CAGM,CAHI7F,IAAK8F,CAAAA,MAAL,CAAY,IAAK/F,CAAAA,EAAGiC,CAAAA,eAApB,CAGJ,CAFS,CAET,EAFF6D,CAEE,GAAiB,CAAjB,CAAA,IAAKjG,CAAAA,SAAL,EAAsBiG,CAAtB,CAAgC,IAAKjG,CAAAA,SAArC,GAC+F,IAD/F,IACG4F,EADH,CACQxF,IAAKI,CAAAA,KAAL,CAAW,IAAKY,CAAAA,QAASoD,CAAAA,OAAd,CAAwB,IAAKrE,CAAAA,EAAG6B,CAAAA,UAAhC,CAA6C,IAAK7B,CAAAA,EAAG+B,CAAAA,gBAAhE,CADR,IAGAmB,CAEI,CAFIuC,EAAGhC,CAAAA,KAEP,CAFegC,EAAA,CAAG,CAAH,CAAMnF,CAAAA,MAErB,CAAiB,CAAjB,CAAA,IAAKT,CAAAA,SAAL,EAAsBqD,CAAtB,CAA8B,IAAKrD,CAAAA,SALvC,CALR,IAWU,IAAK0D,CAAAA,UAEL,CAFsB,EAEtB,CADA,IAAK1D,CAAAA,SACL,CADsBqD,CACtB,CAAA,IAAKG,CAAAA,cAAL,CAAsBoC,EAAGhC,CAAAA,KAAzB,CAAiCgC,EAAA,CAAG,CAAH,CAAMnF,CAAAA,MAbjD,CAoBI,KAAKW,CAAAA,QAASmD,CAAAA,UAAlB,EAAgC,IAAKhC,CAAAA,YAAL,CAAkB,SAAlB,CAAhC,GAEE4D,EACI,CADK/F,IAAKgG,CAAAA,OAAL,CAAa,GAAb,CACL,CAAU,CAAV,EAAAD,EAAA,EAG6C,IAH7C,IAGGN,EAHH,CAGQzF,IAAKI,CAAAA,KAAL,CAAW,IAAKL,CAAAA,EAAG0B,CAAAA,WAAnB,CAHR;CAKAwB,CAGI,CAHIwC,EAAGjC,CAAAA,KAGP,CAHeiC,EAAA,CAAG,CAAH,CAAMpF,CAAAA,MAGrB,CAFJ4F,IAEI,CAFIR,EAAGjC,CAAAA,KAEP,CAFeiC,EAAA,CAAG,CAAH,CAAMpF,CAAAA,MAErB,CAAiB,CAAjB,CAAA,IAAKT,CAAAA,SAAL,EAAsBqD,CAAtB,CAA8B,IAAKrD,CAAAA,SAAnC,EACCqD,CADD,GACW,IAAKrD,CAAAA,SADhB,EAC6BqG,IAD7B,CACoC,IAAK7C,CAAAA,cAT7C,CAHN,IAaQ,IAAKE,CAAAA,UAEL,CAFsB,SAEtB,CADA,IAAK1D,CAAAA,SACL,CADsBqD,CACtB,CAAA,IAAKG,CAAAA,cAAL,CAAsB6C,IAf9B,CAqBA,OAAyB,EAAzB,EAAO,IAAKrG,CAAAA,SAjEiC,CA4E/CiE,UAAUxF,CAAAA,SAAU0E,CAAAA,OAApB,CAA8BmD,QAAgB,CAAClG,IAAD,CAAO,CACnD,MAAO,KAAKD,CAAAA,EAAGgD,CAAAA,OAAQ5C,CAAAA,IAAhB,CAAqBH,IAArB,CAD4C,CAcrD6D,UAAUxF,CAAAA,SAAUuH,CAAAA,YAApB,CAAmCO,QAAqB,CAACnG,IAAD,CAAOqD,MAAP,CAAepD,GAAf,CAAoB,CAE1E,MAAK,KAAKkC,CAAAA,YAAL,CAAkBkB,MAAOE,CAAAA,WAAP,EAAlB,CAAL,CAGO,IAAKpB,CAAAA,YAAL,CAAkBkB,MAAOE,CAAAA,WAAP,EAAlB,CAAwCjB,CAAAA,QAAxC,CAAiDtC,IAAjD,CAAuDC,GAAvD,CAA4D,IAA5D,CAHP,CACS,CAHiE,CAyB5E4D,UAAUxF,CAAAA,SAAU+B,CAAAA,KAApB;AAA4BgG,QAAc,CAACpG,IAAD,CAAO,CAAA,IAC3CiD,MAAQ,CADmC,CAChCoD,OAAS,EAGF,EAAtB,EAAI,IAAKzG,CAAAA,SAAT,EAA2B,IAAKC,CAAAA,cAAhC,GAAmDG,IAAnD,GACEqG,MAAOhF,CAAAA,IAAP,CAAYuC,WAAA,CAAY,IAAZ,CAAkBX,KAAlB,CAAZ,CACA,CAAAA,KAAA,CAAQ,IAAKG,CAAAA,cAFf,CASA,KAHIlD,IAGJ,CAHW+C,KAAA,CAAQjD,IAAK1B,CAAAA,KAAL,CAAW2E,KAAX,CAAR,CAA4BjD,IAGvC,CAAO,IAAKG,CAAAA,IAAL,CAAUD,IAAV,CAAP,CAAA,CACEmG,MAAOhF,CAAAA,IAAP,CAAYuC,WAAA,CAAY,IAAZ,CAAkBX,KAAlB,CAAZ,CAGA,CADA/C,IACA,CADOA,IAAK5B,CAAAA,KAAL,CAAW,IAAK8E,CAAAA,cAAhB,CACP,CAAAH,KAAA,EAAS,IAAKG,CAAAA,cAGhB,OAAIiD,OAAOhG,CAAAA,MAAX,CACSgG,MADT,CAIO,IAxBwC,CA2CjDxC,UAAUxF,CAAAA,SAAU4C,CAAAA,IAApB,CAA2BqF,QAAa,CAACC,IAAD,CAAOC,OAAP,CAAgB,CACtDD,IAAA,CAAOnI,KAAMqI,CAAAA,OAAN,CAAcF,IAAd,CAAA,CAAsBA,IAAtB,CAA6B,CAAEA,IAAF,CAEpC,IAAI,CAACC,OAAL,CAIE,MAHA,KAAKtF,CAAAA,QAGE,CAHSqF,IAAKjI,CAAAA,KAAL,EAGT,CAFP,IAAK8C,CAAAA,iBAEE,CAFkB,CAAA,CAElB,CADPZ,OAAA,CAAQ,IAAR,CACO;AAAA,IAGT,KAAKU,CAAAA,QAAL,CAAgB,IAAKA,CAAAA,QAASwF,CAAAA,MAAd,CAAqBH,IAArB,CACiBI,CAAAA,IADjB,EAEiBjE,CAAAA,MAFjB,CAEwB,QAAS,CAACkE,EAAD,CAAKC,GAAL,CAAUC,GAAV,CAAe,CAC9B,MAAOF,GAAP,GAAcE,GAAA,CAAID,GAAJ,CAAU,CAAV,CADgB,CAFhD,CAKiBE,CAAAA,OALjB,EAOhBvG,QAAA,CAAQ,IAAR,CACA,OAAO,KAlB+C,CA0BxDqD,UAAUxF,CAAAA,SAAUkC,CAAAA,SAApB,CAAgCyG,QAAkB,CAAC5G,KAAD,CAAQ,CAKnDA,KAAMiD,CAAAA,MAAX,GAAqBjD,KAAMsD,CAAAA,GAA3B,CAAiC,SAAjC,CAA6CtD,KAAMsD,CAAAA,GAAnD,CAEqB,UAArB,GAAItD,KAAMiD,CAAAA,MAAV,EAAmC,WAAYlD,CAAAA,IAAZ,CAAiBC,KAAMsD,CAAAA,GAAvB,CAAnC,GACEtD,KAAMsD,CAAAA,GADR,CACc,SADd,CAC0BtD,KAAMsD,CAAAA,GADhC,CAPwD,CAkB1DG,UAAUxF,CAAAA,SAAU8C,CAAAA,SAApB,CAAgC8F,QAAkB,EAAG,EAIrDjJ,OAAOC,CAAAA,OAAP,CAAiB4F,SA5nBgF;",
"sources":["node_modules/linkify-it/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$linkify_it$index\"] = function(global,require,module,exports) {\n'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\u0440\u0444\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n\n};"],
"names":["shadow$provide","global","require","module","exports","assign","obj","Array","prototype","slice","call","sources","arguments","forEach","source","Object","keys","key","_class","toString","escapeRE","str","replace","isOptionsObj","reduce","acc","k","defaultOptions","hasOwnProperty","resetScanCache","self","__index__","__text_cache__","createValidator","re","text","pos","tail","test","match","length","createNormalizer","normalize","compile","untpl","tpl","src_tlds","schemaError","name","val","Error","__opts__","tlds","__tlds__","onCompile","__tlds_replaced__","push","tlds_2ch_src_re","src_xn","join","email_fuzzy","RegExp","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","__compiled__","__schemas__","compiled","validate","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","index","lastIndex","url","raw","createMatch","LinkifyIt","schemas","options","defaultSchemas","tlds_default","fuzzyLink","fuzzyEmail","fuzzyIP","http","src_auth","src_host_port_strict","src_path","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","add","LinkifyIt.prototype.add","definition","set","LinkifyIt.prototype.set","LinkifyIt.prototype.test","m","ml","me","len","exec","testSchemaAt","tld_pos","search","at_pos","indexOf","next","LinkifyIt.prototype.pretest","LinkifyIt.prototype.testSchemaAt","LinkifyIt.prototype.match","result","LinkifyIt.prototype.tlds","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","LinkifyIt.prototype.normalize","LinkifyIt.prototype.onCompile"]
}
