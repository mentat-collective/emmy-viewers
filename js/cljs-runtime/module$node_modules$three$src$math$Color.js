shadow$provide.module$node_modules$three$src$math$Color=function(global,require,module,exports){function hue2rgb(p,q,t){0>t&&(t+=1);1<t&&--t;return t<1/6?p+6*(q-p)*t:.5>t?q:t<2/3?p+6*(q-p)*(2/3-t):p}function toComponents(source,target){target.r=source.r;target.g=source.g;target.b=source.b;return target}Object.defineProperty(exports,"__esModule",{value:!0});Object.defineProperty(exports,"SRGBToLinear",{enumerable:!0,get:function(){return _ColorManagement.SRGBToLinear}});exports.Color=void 0;var _MathUtils=
require("module$node_modules$three$src$math$MathUtils"),_ColorManagement=require("module$node_modules$three$src$math$ColorManagement"),_constants=require("module$node_modules$three$src$constants");const _colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,
cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,
dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,
lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,
mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,
seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_rgb={r:0,g:0,b:0},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};class Color{constructor(r,g,b){this.isColor=!0;this.b=this.g=this.r=1;return void 0===
g&&void 0===b?this.set(r):this.setRGB(r,g,b)}set(value){value&&value.isColor?this.copy(value):"number"===typeof value?this.setHex(value):"string"===typeof value&&this.setStyle(value);return this}setScalar(scalar){this.b=this.g=this.r=scalar;return this}setHex(hex,colorSpace=_constants.SRGBColorSpace){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace);return this}setRGB(r,g,b,colorSpace=_constants.LinearSRGBColorSpace){this.r=
r;this.g=g;this.b=b;_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace);return this}setHSL(h,s,l,colorSpace=_constants.LinearSRGBColorSpace){h=(0,_MathUtils.euclideanModulo)(h,1);s=(0,_MathUtils.clamp)(s,0,1);l=(0,_MathUtils.clamp)(l,0,1);0===s?this.r=this.g=this.b=l:(s=.5>=l?l*(1+s):l+s-l*s,l=2*l-s,this.r=hue2rgb(l,s,h+1/3),this.g=hue2rgb(l,s,h),this.b=hue2rgb(l,s,h-1/3));_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace);return this}setStyle(style,colorSpace=
_constants.SRGBColorSpace){function handleAlpha(string){void 0!==string&&1>parseFloat(string)&&console.warn("THREE.Color: Alpha component of "+style+" will be ignored.")}var m;if(m=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(style)){var components=m[2];switch(m[1]){case "rgb":case "rgba":if(m=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return this.r=Math.min(255,parseInt(m[1],10))/255,this.g=Math.min(255,parseInt(m[2],10))/255,this.b=Math.min(255,parseInt(m[3],10))/255,
_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace),handleAlpha(m[4]),this;if(m=/^\s*(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components))return this.r=Math.min(100,parseInt(m[1],10))/100,this.g=Math.min(100,parseInt(m[2],10))/100,this.b=Math.min(100,parseInt(m[3],10))/100,_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace),handleAlpha(m[4]),this;break;case "hsl":case "hsla":if(m=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)%\s*,\s*(\d*\.?\d+)%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(components)){components=
parseFloat(m[1])/360;const s=parseFloat(m[2])/100,l=parseFloat(m[3])/100;handleAlpha(m[4]);return this.setHSL(components,s,l,colorSpace)}}}else if(m=/^#([A-Fa-f\d]+)$/.exec(style)){m=m[1];components=m.length;if(3===components)return this.r=parseInt(m.charAt(0)+m.charAt(0),16)/255,this.g=parseInt(m.charAt(1)+m.charAt(1),16)/255,this.b=parseInt(m.charAt(2)+m.charAt(2),16)/255,_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace),this;if(6===components)return this.r=parseInt(m.charAt(0)+
m.charAt(1),16)/255,this.g=parseInt(m.charAt(2)+m.charAt(3),16)/255,this.b=parseInt(m.charAt(4)+m.charAt(5),16)/255,_ColorManagement.ColorManagement.toWorkingColorSpace(this,colorSpace),this}return style&&0<style.length?this.setColorName(style,colorSpace):this}setColorName(style,colorSpace=_constants.SRGBColorSpace){const hex=_colorKeywords[style.toLowerCase()];void 0!==hex?this.setHex(hex,colorSpace):console.warn("THREE.Color: Unknown color "+style);return this}clone(){return new this.constructor(this.r,
this.g,this.b)}copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this}copySRGBToLinear(color){this.r=(0,_ColorManagement.SRGBToLinear)(color.r);this.g=(0,_ColorManagement.SRGBToLinear)(color.g);this.b=(0,_ColorManagement.SRGBToLinear)(color.b);return this}copyLinearToSRGB(color){this.r=(0,_ColorManagement.LinearToSRGB)(color.r);this.g=(0,_ColorManagement.LinearToSRGB)(color.g);this.b=(0,_ColorManagement.LinearToSRGB)(color.b);return this}convertSRGBToLinear(){this.copySRGBToLinear(this);
return this}convertLinearToSRGB(){this.copyLinearToSRGB(this);return this}getHex(colorSpace=_constants.SRGBColorSpace){_ColorManagement.ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),colorSpace);return(0,_MathUtils.clamp)(255*_rgb.r,0,255)<<16^(0,_MathUtils.clamp)(255*_rgb.g,0,255)<<8^(0,_MathUtils.clamp)(255*_rgb.b,0,255)<<0}getHexString(colorSpace=_constants.SRGBColorSpace){return("000000"+this.getHex(colorSpace).toString(16)).slice(-6)}getHSL(target,colorSpace=_constants.LinearSRGBColorSpace){_ColorManagement.ColorManagement.fromWorkingColorSpace(toComponents(this,
_rgb),colorSpace);colorSpace=_rgb.r;const g=_rgb.g,b=_rgb.b,max=Math.max(colorSpace,g,b);var min=Math.min(colorSpace,g,b);let hue;const lightness=(min+max)/2;if(min===max)min=hue=0;else{const delta=max-min;min=.5>=lightness?delta/(max+min):delta/(2-max-min);switch(max){case colorSpace:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-colorSpace)/delta+2;break;case b:hue=(colorSpace-g)/delta+4}hue/=6}target.h=hue;target.s=min;target.l=lightness;return target}getRGB(target,colorSpace=_constants.LinearSRGBColorSpace){_ColorManagement.ColorManagement.fromWorkingColorSpace(toComponents(this,
_rgb),colorSpace);target.r=_rgb.r;target.g=_rgb.g;target.b=_rgb.b;return target}getStyle(colorSpace=_constants.SRGBColorSpace){_ColorManagement.ColorManagement.fromWorkingColorSpace(toComponents(this,_rgb),colorSpace);return colorSpace!==_constants.SRGBColorSpace?`color(${colorSpace} ${_rgb.r} ${_rgb.g} ${_rgb.b})`:`rgb(${255*_rgb.r|0},${255*_rgb.g|0},${255*_rgb.b|0})`}offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this}add(color){this.r+=
color.r;this.g+=color.g;this.b+=color.b;return this}addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this}addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this}sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this}multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this}multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this}lerp(color,alpha){this.r+=
(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this}lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this}lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);color=(0,_MathUtils.lerp)(_hslA.h,_hslB.h,alpha);const s=(0,_MathUtils.lerp)(_hslA.s,_hslB.s,alpha);alpha=(0,_MathUtils.lerp)(_hslA.l,_hslB.l,alpha);this.setHSL(color,s,alpha);
return this}equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b}fromArray(array,offset=0){this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this}toArray(array=[],offset=0){array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array}fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);return this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r;yield this.g;yield this.b}}
exports.Color=Color;Color.NAMES=_colorKeywords}
//# sourceMappingURL=module$node_modules$three$src$math$Color.js.map
