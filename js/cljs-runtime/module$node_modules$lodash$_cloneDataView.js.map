{
"version":3,
"file":"module$node_modules$lodash$_cloneDataView.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACtG,IAAIC,iBAAmBH,OAAA,CAAQ,8CAAR,CAevBC,OAAOC,CAAAA,OAAP,CALAE,QAAsB,CAACC,QAAD,CAAWC,MAAX,CAAmB,CACnCC,MAAAA,CAASD,MAAA,CAASH,gBAAA,CAAiBE,QAASE,CAAAA,MAA1B,CAAT,CAA6CF,QAASE,CAAAA,MACnE,OAAO,KAAIF,QAASG,CAAAA,WAAb,CAAyBD,MAAzB,CAAiCF,QAASI,CAAAA,UAA1C,CAAsDJ,QAASK,CAAAA,UAA/D,CAFgC,CAX6D;",
"sources":["node_modules/lodash/_cloneDataView.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_cloneDataView\"] = function(global,require,module,exports) {\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n};"],
"names":["shadow$provide","global","require","module","exports","cloneArrayBuffer","cloneDataView","dataView","isDeep","buffer","constructor","byteOffset","byteLength"]
}
