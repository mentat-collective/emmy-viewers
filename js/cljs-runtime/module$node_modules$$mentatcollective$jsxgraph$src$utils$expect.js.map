{
"version":3,
"file":"module$node_modules$$mentatcollective$jsxgraph$src$utils$expect.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgB5HC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAIC,CAAAA,UAAX,CAAwBD,GAAxB,CAA8B,CAAEE,QAASF,GAAX,CAAvC,CAbrCG,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CO,MAAO,CAAA,CADoC,CAA7C,CAGAP,QAAQI,CAAAA,OAAR,CAAkB,IAAK,EAEnBI,OAAAA,CAAOP,sBAAA,CAAuBH,OAAA,CAAQ,wDAAR,CAAvB,CAEX,KAAIW,MAAQR,sBAAA,CAAuBH,OAAA,CAAQ,+DAAR,CAAvB,CAAZ,CAEIY,WAAaT,sBAAA,CAAuBH,OAAA,CAAQ,mEAAR,CAAvB,CAFjB;AAIIa,QAAUV,sBAAA,CAAuBH,OAAA,CAAQ,gEAAR,CAAvB,CA0CVc,QAAAA,CAAS,CAUXC,KAAMA,QAAS,CAACC,CAAD,CAAIC,MAAJ,CAAYC,IAAZ,CAAkB,CAAA,IAC3BC,CAD2B,CAG3BC,EAAI,EAER,IAAIT,KAAML,CAAAA,OAAQe,CAAAA,MAAd,CAAqBL,CAAEM,CAAAA,MAAvB,CAAJ,CAAoC,CAClC,IAAAC,IAAMP,CAAEM,CAAAA,MAER,KAAKH,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBI,GAAhB,CAAqBJ,CAAA,EAArB,CACEC,CAAEI,CAAAA,IAAF,CAAOP,MAAOQ,CAAAA,IAAP,CAAY,IAAZ,CAAkBT,CAAA,CAAEG,CAAF,CAAlB,CAAwBD,IAAxB,CAAP,CAJgC,CAQpC,MAAOE,EAbwB,CAVtB,CAkCXM,OAAQA,QAAS,CAACC,CAAD,CAAIT,IAAJ,CAAU,CACzB,IAAIU,MAAQD,CAERA,EAAJ,EAASA,CAAEE,CAAAA,YAAX,GAA4BjB,UAAWN,CAAAA,OAAQwB,CAAAA,kBAA/C,CACEF,KADF,CACUD,CAAED,CAAAA,MADZ,CAEWC,CAAEI,CAAAA,SAFb,EAE0BJ,CAAEK,CAAAA,SAF5B,EAEyCL,CAAEM,CAAAA,UAF3C,GAGEL,KAHF,CAGUD,CAHV,CAMIT,KAAJ,GACEU,KADF,CACU,IAAIf,OAAQP,CAAAA,OAAZ,CAAoBM,UAAWN,CAAAA,OAAQ4B,CAAAA,cAAvC,CAAuDN,KAAMG,CAAAA,SAA7D;AAAwEH,KAAMO,CAAAA,KAA9E,CADV,CAIA,OAAOP,MAbkB,CAlChB,CA0DXQ,YAAaA,QAAS,CAACT,CAAD,CAAIT,IAAJ,CAAU,CAM5BU,CAAA,CAHGjB,KAAML,CAAAA,OAAQ+B,CAAAA,OAAd,CAAsBV,CAAtB,CAAL,CAGUA,CAHV,CACU,IAAKD,CAAAA,MAAL,CAAYC,CAAZ,CAAeI,CAAAA,SAKN,EAAnB,CAAIH,CAAMN,CAAAA,MAAV,EACEM,CAAMU,CAAAA,OAAN,CAAc,CAAd,CAGEpB,KAAJ,GACEU,CADF,CACU,CAACA,CAAA,CAAM,CAAN,CAAD,CAAWA,CAAA,CAAM,CAAN,CAAX,CAAqBA,CAAA,CAAM,CAAN,CAArB,CADV,CAIA,OAAOA,EAjBuB,CA1DrB,CA8EblB,OAAKJ,CAAAA,OAAQQ,CAAAA,MAAb,CAAsBA,OAEtBZ,QAAQI,CAAAA,OAAR,CADeQ,OAvI6G;",
"sources":["node_modules/@mentatcollective/jsxgraph/src/utils/expect.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mentatcollective$jsxgraph$src$utils$expect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jxg = _interopRequireDefault(require(\"../jxg\"));\n\nvar _type = _interopRequireDefault(require(\"./type\"));\n\nvar _constants = _interopRequireDefault(require(\"../base/constants\"));\n\nvar _coords = _interopRequireDefault(require(\"../base/coords\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n    Copyright 2008-2022\n        Matthias Ehmann,\n        Michael Gerhaeuser,\n        Carsten Miller,\n        Bianca Valentin,\n        Alfred Wassermann,\n        Peter Wilfahrt\n\n    This file is part of JSXGraph.\n\n    JSXGraph is free software dual licensed under the GNU LGPL or MIT License.\n\n    You can redistribute it and/or modify it under the terms of the\n\n      * GNU Lesser General Public License as published by\n        the Free Software Foundation, either version 3 of the License, or\n        (at your option) any later version\n      OR\n      * MIT License: https://github.com/jsxgraph/jsxgraph/blob/master/LICENSE.MIT\n\n    JSXGraph is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License and\n    the MIT License along with JSXGraph. If not, see <http://www.gnu.org/licenses/>\n    and <http://opensource.org/licenses/MIT/>.\n */\n\n/*global JXG: true, define: true, html_sanitize: true*/\n\n/*jslint nomen: true, plusplus: true*/\n\n/**\n * @fileoverview expect.js provides utilities for parameter magic by normalizing multi-type parameters.\n */\nvar Expect = {\n  /**\n   * Apply an expect method on every element of an array.\n   *\n   * @param {Array} a\n   * @param {function} format\n   * @param {Boolean} [copy=false]\n   *\n   * @returns {Array}\n   */\n  each: function (a, format, copy) {\n    var i,\n        len,\n        r = [];\n\n    if (_type.default.exists(a.length)) {\n      len = a.length;\n\n      for (i = 0; i < len; i++) {\n        r.push(format.call(this, a[i], copy));\n      }\n    }\n\n    return r;\n  },\n\n  /**\n   * Normalize points and coord objects into a coord object.\n   *\n   * @param {JXG.Point|JXG.Coords} c\n   * @param {Boolean} [copy=false] Return a copy, not a reference\n   *\n   * @returns {JXG.Coords}\n   */\n  coords: function (c, copy) {\n    var coord = c;\n\n    if (c && c.elementClass === _constants.default.OBJECT_CLASS_POINT) {\n      coord = c.coords;\n    } else if (c.usrCoords && c.scrCoords && c.usr2screen) {\n      coord = c;\n    }\n\n    if (copy) {\n      coord = new _coords.default(_constants.default.COORDS_BY_USER, coord.usrCoords, coord.board);\n    }\n\n    return coord;\n  },\n\n  /**\n   * Normalize points, coordinate arrays and coord objects into a coordinate array.\n   *\n   * @param {JXG.Point|JXG.Coords|Array} c\n   * @param {Boolean} [copy=false] Return a copy, not a reference\n   *\n   * @returns {Array} Homogeneous coordinates\n   */\n  coordsArray: function (c, copy) {\n    var coord;\n\n    if (!_type.default.isArray(c)) {\n      coord = this.coords(c).usrCoords;\n    } else {\n      coord = c;\n    }\n\n    if (coord.length < 3) {\n      coord.unshift(1);\n    }\n\n    if (copy) {\n      coord = [coord[0], coord[1], coord[2]];\n    }\n\n    return coord;\n  }\n};\n_jxg.default.Expect = Expect;\nvar _default = Expect;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_jxg","_type","_constants","_coords","Expect","each","a","format","copy","i","r","exists","length","len","push","call","coords","c","coord","elementClass","OBJECT_CLASS_POINT","usrCoords","scrCoords","usr2screen","COORDS_BY_USER","board","coordsArray","isArray","unshift"]
}
