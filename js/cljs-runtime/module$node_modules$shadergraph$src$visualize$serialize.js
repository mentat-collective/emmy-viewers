shadow$provide.module$node_modules$shadergraph$src$visualize$serialize=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.serialize=void 0;var Block=function(obj,
nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;
desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$shadergraph$src$block$index"));const serialize=function(graph){const nodes=[],links=[];for(const node of Array.from(graph.nodes)){let outlet;var record={id:node.id,name:null,type:null,depth:null,graph:null,inputs:[],outputs:[]};nodes.push(record);({inputs:graph}=record);const {outputs}=record,block=node.owner;
block instanceof Block.Call?(record.name=block.snippet._name,record.type="call",record.code=block.snippet._original):block instanceof Block.Callback?(record.name="Callback",record.type="callback",record.graph=serialize(block.graph)):block instanceof Block.Isolate?(record.name="Isolate",record.type="isolate",record.graph=serialize(block.graph)):block instanceof Block.Join?(record.name="Join",record.type="join"):null!=block&&(null==record.name&&(record.name=null!=block.name?block.name:block.type),null==
record.type&&(record.type=block.type),null==record.code&&(record.code=block.code),null!=block.graph&&(record.graph=serialize(block.graph)));record=function(type){type=type.replace(")(",")â†’(");return type.replace("()","")};for(outlet of Array.from(node.inputs))graph.push({id:outlet.id,name:outlet.name,type:record(outlet.type),open:null==outlet.input});for(outlet of Array.from(node.outputs)){outputs.push({id:outlet.id,name:outlet.name,type:record(outlet.type),open:!outlet.output.length});for(const other of Array.from(outlet.output))links.push({from:node.id,
out:outlet.id,to:other.node.id,in:other.id,type:record(outlet.type)})}}return{nodes,links}};exports.serialize=serialize}
//# sourceMappingURL=module$node_modules$shadergraph$src$visualize$serialize.js.map
