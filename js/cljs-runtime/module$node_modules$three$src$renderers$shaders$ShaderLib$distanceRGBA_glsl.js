shadow$provide.module$node_modules$three$src$renderers$shaders$ShaderLib$distanceRGBA_glsl=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.vertex="\n#define DISTANCE\n\nvarying vec3 vWorldPosition;\n\n#include \x3ccommon\x3e\n#include \x3cuv_pars_vertex\x3e\n#include \x3cdisplacementmap_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cclipping_planes_pars_vertex\x3e\n\nvoid main() {\n\n\t#include \x3cuv_vertex\x3e\n\n\t#include \x3cskinbase_vertex\x3e\n\n\t#ifdef USE_DISPLACEMENTMAP\n\n\t\t#include \x3cbeginnormal_vertex\x3e\n\t\t#include \x3cmorphnormal_vertex\x3e\n\t\t#include \x3cskinnormal_vertex\x3e\n\n\t#endif\n\n\t#include \x3cbegin_vertex\x3e\n\t#include \x3cmorphtarget_vertex\x3e\n\t#include \x3cskinning_vertex\x3e\n\t#include \x3cdisplacementmap_vertex\x3e\n\t#include \x3cproject_vertex\x3e\n\t#include \x3cworldpos_vertex\x3e\n\t#include \x3cclipping_planes_vertex\x3e\n\n\tvWorldPosition \x3d worldPosition.xyz;\n\n}\n";
exports.fragment="\n#define DISTANCE\n\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n\n#include \x3ccommon\x3e\n#include \x3cpacking\x3e\n#include \x3cuv_pars_fragment\x3e\n#include \x3cmap_pars_fragment\x3e\n#include \x3calphamap_pars_fragment\x3e\n#include \x3calphatest_pars_fragment\x3e\n#include \x3cclipping_planes_pars_fragment\x3e\n\nvoid main () {\n\n\t#include \x3cclipping_planes_fragment\x3e\n\n\tvec4 diffuseColor \x3d vec4( 1.0 );\n\n\t#include \x3cmap_fragment\x3e\n\t#include \x3calphamap_fragment\x3e\n\t#include \x3calphatest_fragment\x3e\n\n\tfloat dist \x3d length( vWorldPosition - referencePosition );\n\tdist \x3d ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist \x3d saturate( dist ); // clamp to [ 0, 1 ]\n\n\tgl_FragColor \x3d packDepthToRGBA( dist );\n\n}\n"}
//# sourceMappingURL=module$node_modules$three$src$renderers$shaders$ShaderLib$distanceRGBA_glsl.js.map
