{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLShadowMap.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLShadowMap.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLShadowMap\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLShadowMap = WebGLShadowMap;\n\nvar _constants = require(\"../../constants.js\");\n\nvar _WebGLRenderTarget = require(\"../WebGLRenderTarget.js\");\n\nvar _MeshDepthMaterial = require(\"../../materials/MeshDepthMaterial.js\");\n\nvar _MeshDistanceMaterial = require(\"../../materials/MeshDistanceMaterial.js\");\n\nvar _ShaderMaterial = require(\"../../materials/ShaderMaterial.js\");\n\nvar _BufferAttribute = require(\"../../core/BufferAttribute.js\");\n\nvar _BufferGeometry = require(\"../../core/BufferGeometry.js\");\n\nvar _Mesh = require(\"../../objects/Mesh.js\");\n\nvar _Vector = require(\"../../math/Vector4.js\");\n\nvar _Vector2 = require(\"../../math/Vector2.js\");\n\nvar _Frustum = require(\"../../math/Frustum.js\");\n\nvar vsm = _interopRequireWildcard(require(\"../shaders/ShaderLib/vsm.glsl.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n  let _frustum = new _Frustum.Frustum();\n\n  const _shadowMapSize = new _Vector2.Vector2(),\n        _viewportSize = new _Vector2.Vector2(),\n        _viewport = new _Vector.Vector4(),\n        _depthMaterial = new _MeshDepthMaterial.MeshDepthMaterial({\n    depthPacking: _constants.RGBADepthPacking\n  }),\n        _distanceMaterial = new _MeshDistanceMaterial.MeshDistanceMaterial(),\n        _materialCache = {},\n        _maxTextureSize = _capabilities.maxTextureSize;\n\n  const shadowSide = {\n    0: _constants.BackSide,\n    1: _constants.FrontSide,\n    2: _constants.DoubleSide\n  };\n  const shadowMaterialVertical = new _ShaderMaterial.ShaderMaterial({\n    defines: {\n      VSM_SAMPLES: 8\n    },\n    uniforms: {\n      shadow_pass: {\n        value: null\n      },\n      resolution: {\n        value: new _Vector2.Vector2()\n      },\n      radius: {\n        value: 4.0\n      }\n    },\n    vertexShader: vsm.vertex,\n    fragmentShader: vsm.fragment\n  });\n  const shadowMaterialHorizontal = shadowMaterialVertical.clone();\n  shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n  const fullScreenTri = new _BufferGeometry.BufferGeometry();\n  fullScreenTri.setAttribute('position', new _BufferAttribute.BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n  const fullScreenMesh = new _Mesh.Mesh(fullScreenTri, shadowMaterialVertical);\n  const scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = _constants.PCFShadowMap;\n\n  this.render = function (lights, scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (lights.length === 0) return;\n\n    const currentRenderTarget = _renderer.getRenderTarget();\n\n    const activeCubeFace = _renderer.getActiveCubeFace();\n\n    const activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n    const _state = _renderer.state; // Set GL state for depth map.\n\n    _state.setBlending(_constants.NoBlending);\n\n    _state.buffers.color.setClear(1, 1, 1, 1);\n\n    _state.buffers.depth.setTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    for (let i = 0, il = lights.length; i < il; i++) {\n      const light = lights[i];\n      const shadow = light.shadow;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      if (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      const shadowFrameExtents = shadow.getFrameExtents();\n\n      _shadowMapSize.multiply(shadowFrameExtents);\n\n      _viewportSize.copy(shadow.mapSize);\n\n      if (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n        if (_shadowMapSize.x > _maxTextureSize) {\n          _viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n          _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n          shadow.mapSize.x = _viewportSize.x;\n        }\n\n        if (_shadowMapSize.y > _maxTextureSize) {\n          _viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n          _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n          shadow.mapSize.y = _viewportSize.y;\n        }\n      }\n\n      if (shadow.map === null && !shadow.isPointLightShadow && this.type === _constants.VSMShadowMap) {\n        const pars = {\n          minFilter: _constants.LinearFilter,\n          magFilter: _constants.LinearFilter,\n          format: _constants.RGBAFormat\n        };\n        shadow.map = new _WebGLRenderTarget.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.map.texture.name = light.name + '.shadowMap';\n        shadow.mapPass = new _WebGLRenderTarget.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.camera.updateProjectionMatrix();\n      }\n\n      if (shadow.map === null) {\n        const pars = {\n          minFilter: _constants.NearestFilter,\n          magFilter: _constants.NearestFilter,\n          format: _constants.RGBAFormat\n        };\n        shadow.map = new _WebGLRenderTarget.WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.map.texture.name = light.name + '.shadowMap';\n        shadow.camera.updateProjectionMatrix();\n      }\n\n      _renderer.setRenderTarget(shadow.map);\n\n      _renderer.clear();\n\n      const viewportCount = shadow.getViewportCount();\n\n      for (let vp = 0; vp < viewportCount; vp++) {\n        const viewport = shadow.getViewport(vp);\n\n        _viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n        _state.viewport(_viewport);\n\n        shadow.updateMatrices(light, vp);\n        _frustum = shadow.getFrustum();\n        renderObject(scene, camera, shadow.camera, light, this.type);\n      } // do blur pass for VSM\n\n\n      if (!shadow.isPointLightShadow && this.type === _constants.VSMShadowMap) {\n        VSMPass(shadow, camera);\n      }\n\n      shadow.needsUpdate = false;\n    }\n\n    scope.needsUpdate = false;\n\n    _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n  };\n\n  function VSMPass(shadow, camera) {\n    const geometry = _objects.update(fullScreenMesh);\n\n    if (shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples) {\n      shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n      shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n      shadowMaterialVertical.needsUpdate = true;\n      shadowMaterialHorizontal.needsUpdate = true;\n    } // vertical pass\n\n\n    shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n    shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n    _renderer.setRenderTarget(shadow.mapPass);\n\n    _renderer.clear();\n\n    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n    shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n    shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n    shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n    _renderer.setRenderTarget(shadow.map);\n\n    _renderer.clear();\n\n    _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n  }\n\n  function getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n    let result = null;\n    const customMaterial = light.isPointLight === true ? object.customDistanceMaterial : object.customDepthMaterial;\n\n    if (customMaterial !== undefined) {\n      result = customMaterial;\n    } else {\n      result = light.isPointLight === true ? _distanceMaterial : _depthMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 || material.displacementMap && material.displacementScale !== 0 || material.alphaMap && material.alphaTest > 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      const keyA = result.uuid,\n            keyB = material.uuid;\n      let materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      let cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n\n    if (type === _constants.VSMShadowMap) {\n      result.side = material.shadowSide !== null ? material.shadowSide : material.side;\n    } else {\n      result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n    }\n\n    result.alphaMap = material.alphaMap;\n    result.alphaTest = material.alphaTest;\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.clipIntersection = material.clipIntersection;\n    result.displacementMap = material.displacementMap;\n    result.displacementScale = material.displacementScale;\n    result.displacementBias = material.displacementBias;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n      result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n      result.nearDistance = shadowCameraNear;\n      result.farDistance = shadowCameraFar;\n    }\n\n    return result;\n  }\n\n  function renderObject(object, camera, shadowCamera, light, type) {\n    if (object.visible === false) return;\n    const visible = object.layers.test(camera.layers);\n\n    if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n      if ((object.castShadow || object.receiveShadow && type === _constants.VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n        object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n        const geometry = _objects.update(object);\n\n        const material = object.material;\n\n        if (Array.isArray(material)) {\n          const groups = geometry.groups;\n\n          for (let k = 0, kl = groups.length; k < kl; k++) {\n            const group = groups[k];\n            const groupMaterial = material[group.materialIndex];\n\n            if (groupMaterial && groupMaterial.visible) {\n              const depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n            }\n          }\n        } else if (material.visible) {\n          const depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n          _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n        }\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      renderObject(children[i], camera, shadowCamera, light, type);\n    }\n  }\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","WebGLShadowMap","_renderer","_objects","_capabilities","getDepthMaterial","object","geometry","material","light","shadowCameraNear","shadowCameraFar","type","customMaterial","isPointLight","customDistanceMaterial","customDepthMaterial","result","undefined","_distanceMaterial","_depthMaterial","localClippingEnabled","clipShadows","clippingPlanes","length","displacementMap","displacementScale","alphaMap","alphaTest","keyA","uuid","keyB","materialsForVariant","_materialCache","cachedMaterial","clone","visible","wireframe","side","_constants","VSMShadowMap","shadowSide","clipIntersection","displacementBias","wireframeLinewidth","linewidth","isMeshDistanceMaterial","referencePosition","setFromMatrixPosition","matrixWorld","nearDistance","farDistance","renderObject","camera","shadowCamera","layers","test","isMesh","isLine","isPoints","castShadow","receiveShadow","frustumCulled","_frustum","intersectsObject","modelViewMatrix","multiplyMatrices","matrixWorldInverse","update","Array","isArray","groups","k","kl","group","groupMaterial","materialIndex","depthMaterial","near","far","renderBufferDirect","children","i","l","_Frustum","Frustum","_shadowMapSize","_Vector2","Vector2","_viewportSize","_viewport","_Vector","Vector4","_MeshDepthMaterial","MeshDepthMaterial","depthPacking","RGBADepthPacking","_MeshDistanceMaterial","MeshDistanceMaterial","_maxTextureSize","maxTextureSize","BackSide","FrontSide","DoubleSide","shadowMaterialVertical","_ShaderMaterial","ShaderMaterial","defines","VSM_SAMPLES","uniforms","shadow_pass","resolution","radius","vertexShader","vsm","vertex","fragmentShader","fragment","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","_BufferGeometry","BufferGeometry","setAttribute","_BufferAttribute","BufferAttribute","Float32Array","fullScreenMesh","_Mesh","Mesh","scope","enabled","autoUpdate","needsUpdate","PCFShadowMap","render","this.render","lights","scene","currentRenderTarget","getRenderTarget","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","state","setBlending","NoBlending","buffers","color","setClear","depth","setTest","setScissorTest","il","shadow","console","warn","copy","mapSize","shadowFrameExtents","getFrameExtents","multiply","x","y","Math","floor","map","isPointLightShadow","pars","minFilter","LinearFilter","magFilter","format","RGBAFormat","_WebGLRenderTarget","WebGLRenderTarget","texture","name","mapPass","updateProjectionMatrix","NearestFilter","setRenderTarget","clear","viewportCount","getViewportCount","vp","viewport","getViewport","set","z","w","updateMatrices","getFrustum","blurSamples","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc"]
}
