{"version":3,"sources":["mathbox/primitives/present/step.cljs"],"mappings":";;AAIA;;;;;;;;;;;;;;;;;;;AAiBEA,uCACA,AAACC,+BAAoBC","names":["mathbox.primitives.present.step/Step","reagent.core/adapt-react-class","js/module$node_modules$mathbox_react$build$cjs$index.Step"],"sourcesContent":["(ns mathbox.primitives.present.step\n  (:require [\"mathbox-react\" :as box]\n            [reagent.core :as r]))\n\n(def ^{:doc \"*Step through a sequenced animation*\n\n:classes `[]` (string array) - Custom classes, e.g. `[\\\\\\\"big\\\\\\\"]`\n:delay `0` (number) - Step delay\n:duration `0.3` (number) - Step duration\n:ease `\\\\\\\"cosine\\\\\\\"` (ease) - Animation ease (linear, cosine, binary, hold)\n:id `null` (nullable string) - Unique ID, e.g. `\\\\\\\"sampler\\\\\\\"`\n:pace `0` (number) - Step pace\n:playback `\\\\\\\"linear\\\\\\\"` (ease) - Playhead ease (linear, cosine, binary, hold)\n:realtime `false` (bool) - Run on real time, not clock time\n:rewind `2` (number) - Step rewind factor\n:script `{}` (object) - Animation script, e.g. `{ \\\"0\\\": { props: { color: \\\"red\\\" }, expr: { size: function (t) { return Math.sin(t) + 1; }}}, \\\"1\\\": ...}`\n:skip `true` (bool) - Speed up through skips\n:speed `1` (number) - Step speed\n:stops `null` (nullable number array) - Playhead stops, e.g. `[0, 1, 3, 5]`\n:target `\\\\\\\"<\\\\\\\"` (select) - Animation target\n:trigger `1` (nullable number) - Trigger on step\"}\n  Step\n  (r/adapt-react-class box/Step))\n"]}