{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLShaderCache.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLShaderCache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLShaderCache\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLShaderCache = void 0;\nlet _id = 0;\n\nclass WebGLShaderCache {\n  constructor() {\n    this.shaderCache = new Map();\n    this.materialCache = new Map();\n  }\n\n  update(material) {\n    const vertexShader = material.vertexShader;\n    const fragmentShader = material.fragmentShader;\n\n    const vertexShaderStage = this._getShaderStage(vertexShader);\n\n    const fragmentShaderStage = this._getShaderStage(fragmentShader);\n\n    const materialShaders = this._getShaderCacheForMaterial(material);\n\n    if (materialShaders.has(vertexShaderStage) === false) {\n      materialShaders.add(vertexShaderStage);\n      vertexShaderStage.usedTimes++;\n    }\n\n    if (materialShaders.has(fragmentShaderStage) === false) {\n      materialShaders.add(fragmentShaderStage);\n      fragmentShaderStage.usedTimes++;\n    }\n\n    return this;\n  }\n\n  remove(material) {\n    const materialShaders = this.materialCache.get(material);\n\n    for (const shaderStage of materialShaders) {\n      shaderStage.usedTimes--;\n      if (shaderStage.usedTimes === 0) this.shaderCache.delete(shaderStage.code);\n    }\n\n    this.materialCache.delete(material);\n    return this;\n  }\n\n  getVertexShaderID(material) {\n    return this._getShaderStage(material.vertexShader).id;\n  }\n\n  getFragmentShaderID(material) {\n    return this._getShaderStage(material.fragmentShader).id;\n  }\n\n  dispose() {\n    this.shaderCache.clear();\n    this.materialCache.clear();\n  }\n\n  _getShaderCacheForMaterial(material) {\n    const cache = this.materialCache;\n    let set = cache.get(material);\n\n    if (set === undefined) {\n      set = new Set();\n      cache.set(material, set);\n    }\n\n    return set;\n  }\n\n  _getShaderStage(code) {\n    const cache = this.shaderCache;\n    let stage = cache.get(code);\n\n    if (stage === undefined) {\n      stage = new WebGLShaderStage(code);\n      cache.set(code, stage);\n    }\n\n    return stage;\n  }\n\n}\n\nexports.WebGLShaderCache = WebGLShaderCache;\n\nclass WebGLShaderStage {\n  constructor(code) {\n    this.id = _id++;\n    this.code = code;\n    this.usedTimes = 0;\n  }\n\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLShaderCache","_id","constructor","shaderCache","Map","materialCache","update","material","fragmentShader","vertexShaderStage","_getShaderStage","vertexShader","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","has","add","usedTimes","remove","get","shaderStage","delete","code","getVertexShaderID","id","getFragmentShaderID","dispose","clear","cache","set","undefined","Set","stage","WebGLShaderStage"]
}
