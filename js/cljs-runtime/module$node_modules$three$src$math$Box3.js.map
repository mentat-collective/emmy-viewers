{
"version":3,
"file":"module$node_modules$three$src$math$Box3.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/three/src/math/Box3.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$math$Box3\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Box3 = void 0;\n\nvar _Vector = require(\"./Vector3.js\");\n\nclass Box3 {\n  constructor(min = new _Vector.Vector3(+Infinity, +Infinity, +Infinity), max = new _Vector.Vector3(-Infinity, -Infinity, -Infinity)) {\n    this.isBox3 = true;\n    this.min = min;\n    this.max = max;\n  }\n\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n\n  setFromArray(array) {\n    let minX = +Infinity;\n    let minY = +Infinity;\n    let minZ = +Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let maxZ = -Infinity;\n\n    for (let i = 0, l = array.length; i < l; i += 3) {\n      const x = array[i];\n      const y = array[i + 1];\n      const z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  }\n\n  setFromBufferAttribute(attribute) {\n    let minX = +Infinity;\n    let minY = +Infinity;\n    let minZ = +Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    let maxZ = -Infinity;\n\n    for (let i = 0, l = attribute.count; i < l; i++) {\n      const x = attribute.getX(i);\n      const y = attribute.getY(i);\n      const z = attribute.getZ(i);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  }\n\n  setFromPoints(points) {\n    this.makeEmpty();\n\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  }\n\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector.copy(size).multiplyScalar(0.5);\n\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n\n  setFromObject(object, precise = false) {\n    this.makeEmpty();\n    return this.expandByObject(object, precise);\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n\n  makeEmpty() {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  }\n\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  }\n\n  getCenter(target) {\n    return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n\n  getSize(target) {\n    return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n  }\n\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n\n  expandByObject(object, precise = false) {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    object.updateWorldMatrix(false, false);\n    const geometry = object.geometry;\n\n    if (geometry !== undefined) {\n      if (precise && geometry.attributes != undefined && geometry.attributes.position !== undefined) {\n        const position = geometry.attributes.position;\n\n        for (let i = 0, l = position.count; i < l; i++) {\n          _vector.fromBufferAttribute(position, i).applyMatrix4(object.matrixWorld);\n\n          this.expandByPoint(_vector);\n        }\n      } else {\n        if (geometry.boundingBox === null) {\n          geometry.computeBoundingBox();\n        }\n\n        _box.copy(geometry.boundingBox);\n\n        _box.applyMatrix4(object.matrixWorld);\n\n        this.union(_box);\n      }\n    }\n\n    const children = object.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      this.expandByObject(children[i], precise);\n    }\n\n    return this;\n  }\n\n  containsPoint(point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n  }\n\n  containsBox(box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n  }\n\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  }\n\n  intersectsBox(box) {\n    // using 6 splitting planes to rule out intersections.\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n  }\n\n  intersectsSphere(sphere) {\n    // Find the point on the AABB closest to the sphere center.\n    this.clampPoint(sphere.center, _vector); // If that point is inside the sphere, the AABB and sphere intersect.\n\n    return _vector.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n  }\n\n  intersectsPlane(plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    let min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= -plane.constant && max >= -plane.constant;\n  }\n\n  intersectsTriangle(triangle) {\n    if (this.isEmpty()) {\n      return false;\n    } // compute box center and extents\n\n\n    this.getCenter(_center);\n\n    _extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n    _v0.subVectors(triangle.a, _center);\n\n    _v1.subVectors(triangle.b, _center);\n\n    _v2.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n    _f0.subVectors(_v1, _v0);\n\n    _f1.subVectors(_v2, _v1);\n\n    _f2.subVectors(_v0, _v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n    // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n    // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n    let axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n    if (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n      return false;\n    } // test 3 face normals from the aabb\n\n\n    axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (!satForAxes(axes, _v0, _v1, _v2, _extents)) {\n      return false;\n    } // finally testing the face normal of the triangle\n    // use already existing triangle edge vectors here\n\n\n    _triangleNormal.crossVectors(_f0, _f1);\n\n    axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n    return satForAxes(axes, _v0, _v1, _v2, _extents);\n  }\n\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n\n  distanceToPoint(point) {\n    const clampedPoint = _vector.copy(point).clamp(this.min, this.max);\n\n    return clampedPoint.sub(point).length();\n  }\n\n  getBoundingSphere(target) {\n    this.getCenter(target.center);\n    target.radius = this.getSize(_vector).length() * 0.5;\n    return target;\n  }\n\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  }\n\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n\n  applyMatrix4(matrix) {\n    // transform of empty box is an empty box.\n    if (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n    _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n    _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n    _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n    _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n    _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n    _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n    _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n    _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n    this.setFromPoints(_points);\n    return this;\n  }\n\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n\n}\n\nexports.Box3 = Box3;\nconst _points = [/*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3(), /*@__PURE__*/new _Vector.Vector3()];\n\nconst _vector = /*@__PURE__*/new _Vector.Vector3();\n\nconst _box = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\nconst _v0 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _v1 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _v2 = /*@__PURE__*/new _Vector.Vector3(); // triangle edge vectors\n\n\nconst _f0 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _f1 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _f2 = /*@__PURE__*/new _Vector.Vector3();\n\nconst _center = /*@__PURE__*/new _Vector.Vector3();\n\nconst _extents = /*@__PURE__*/new _Vector.Vector3();\n\nconst _triangleNormal = /*@__PURE__*/new _Vector.Vector3();\n\nconst _testAxis = /*@__PURE__*/new _Vector.Vector3();\n\nfunction satForAxes(axes, v0, v1, v2, extents) {\n  for (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n    _testAxis.fromArray(axes, i); // project the aabb onto the separating axis\n\n\n    const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the separating axis\n\n    const p0 = v0.dot(_testAxis);\n    const p1 = v1.dot(_testAxis);\n    const p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n    if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n      // points of the projected triangle are outside the projected half-length of the aabb\n      // the axis is separating and we can exit\n      return false;\n    }\n  }\n\n  return true;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","satForAxes","axes","v0","v1","v2","extents","i","j","length","_testAxis","fromArray","r","x","Math","abs","y","z","p0","dot","p1","p2","max","min","Object","defineProperty","value","Box3","_Vector","constructor","Vector3","Infinity","isBox3","set","copy","setFromArray","array","minX","minY","minZ","maxX","maxY","maxZ","l","setFromBufferAttribute","attribute","count","getX","getY","getZ","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","center","size","halfSize","_vector","multiplyScalar","sub","add","setFromObject","object","precise","expandByObject","clone","box","isEmpty","getCenter","target","addVectors","getSize","subVectors","point","expandByVector","vector","expandByScalar","scalar","addScalar","updateWorldMatrix","geometry","undefined","attributes","position","fromBufferAttribute","applyMatrix4","matrixWorld","boundingBox","computeBoundingBox","_box","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","distanceToSquared","radius","intersectsPlane","plane","normal","constant","intersectsTriangle","triangle","_center","_extents","_v0","a","_v1","b","_v2","c","_f0","_f1","_f2","_triangleNormal","crossVectors","clamp","distanceToPoint","clampedPoint","getBoundingSphere","intersect","matrix","_points","translate","offset","equals"]
}
