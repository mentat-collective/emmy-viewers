{
"version":3,
"file":"module$node_modules$css_select$lib$sort.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/css-select/lib/sort.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$css_select$lib$sort\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar css_what_1 = require(\"css-what\");\nvar procedure_1 = require(\"./procedure\");\nvar attributes = {\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4,\n};\n/**\n * Sort the parts of the passed selector,\n * as there is potential for optimization\n * (some types of selectors are faster than others)\n *\n * @param arr Selector to sort\n */\nfunction sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n    for (var i = 1; i < arr.length; i++) {\n        var procNew = procs[i];\n        if (procNew < 0)\n            continue;\n        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            var token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\nexports.default = sortByProcedure;\nfunction getProcedure(token) {\n    var proc = procedure_1.procedure[token.type];\n    if (token.type === css_what_1.SelectorType.Attribute) {\n        proc = attributes[token.action];\n        if (proc === attributes.equals && token.name === \"id\") {\n            // Prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n        if (token.ignoreCase) {\n            /*\n             * IgnoreCase adds some overhead, prefer \"normal\" token\n             * this is a binary operation, to ensure it's still an int\n             */\n            proc >>= 1;\n        }\n    }\n    else if (token.type === css_what_1.SelectorType.Pseudo) {\n        if (!token.data) {\n            proc = 3;\n        }\n        else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; // Expensive in any case\n        }\n        else if (Array.isArray(token.data)) {\n            // \"matches\" and \"not\"\n            proc = 0;\n            for (var i = 0; i < token.data.length; i++) {\n                // TODO better handling of complex selectors\n                if (token.data[i].length !== 1)\n                    continue;\n                var cur = getProcedure(token.data[i][0]);\n                // Avoid executing :has or :contains\n                if (cur === 0) {\n                    proc = 0;\n                    break;\n                }\n                if (cur > proc)\n                    proc = cur;\n            }\n            if (token.data.length > 1 && proc > 0)\n                proc -= 1;\n        }\n        else {\n            proc = 1;\n        }\n    }\n    return proc;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","getProcedure","token","proc","procedure_1","procedure","type","css_what_1","SelectorType","Attribute","attributes","action","equals","name","ignoreCase","Pseudo","data","Array","isArray","i","length","cur","Object","defineProperty","value","exists","not","start","end","any","hyphen","element","default","sortByProcedure","arr","procs","map","procNew","j"]
}
