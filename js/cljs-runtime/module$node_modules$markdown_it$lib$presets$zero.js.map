{
"version":3,
"file":"module$node_modules$markdown_it$lib$presets$zero.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAO7GD,MAAOC,CAAAA,OAAP,CAAiB,CACfC,QAAS,CACPC,KAAc,CAAA,CADP,CAEPC,SAAc,CAAA,CAFP,CAGPC,OAAc,CAAA,CAHP,CAIPC,WAAc,WAJP,CAKPC,QAAc,CAAA,CALP,CAQPC,YAAc,CAAA,CARP,CAePC,OAAQ,MAfD,CAuBPC,UAAW,IAvBJ,CAyBPC,WAAc,EAzBP,CADM,CA6BfC,WAAY,CAEVC,KAAM,CACJC,MAAO,CACL,WADK,CAEL,OAFK,CAGL,QAHK,CADH,CAFI,CAUVC,MAAO,CACLD,MAAO,CACL,WADK,CADF,CAVG,CAgBVE,OAAQ,CACNF,MAAO,CACL,MADK,CADD,CAING,OAAQ,CACN,eADM,CAEN,eAFM,CAJF,CAhBE,CA7BG,CAP4F;",
"sources":["node_modules/markdown-it/lib/presets/zero.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$presets$zero\"] = function(global,require,module,exports) {\n// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '\u00ab\u00bb\u201e\u201c' for Russian, '\u201e\u201c\u201a\u2018' for German,\n    // and ['\u00ab\\xA0', '\\xA0\u00bb', '\u2039\\xA0', '\\xA0\u203a'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* \u201c\u201d\u2018\u2019 */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","options","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","components","core","rules","block","inline","rules2"]
}
