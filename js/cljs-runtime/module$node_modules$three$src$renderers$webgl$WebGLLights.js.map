{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLLights.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLLights.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLLights\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLLights = WebGLLights;\n\nvar _Color = require(\"../../math/Color.js\");\n\nvar _Matrix = require(\"../../math/Matrix4.js\");\n\nvar _Vector = require(\"../../math/Vector2.js\");\n\nvar _Vector2 = require(\"../../math/Vector3.js\");\n\nvar _UniformsLib = require(\"../shaders/UniformsLib.js\");\n\nfunction UniformsCache() {\n  const lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new _Vector2.Vector3(),\n            color: new _Color.Color()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new _Vector2.Vector3(),\n            direction: new _Vector2.Vector3(),\n            color: new _Color.Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new _Vector2.Vector3(),\n            color: new _Color.Color(),\n            distance: 0,\n            decay: 0\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new _Vector2.Vector3(),\n            skyColor: new _Color.Color(),\n            groundColor: new _Color.Color()\n          };\n          break;\n\n        case 'RectAreaLight':\n          uniforms = {\n            color: new _Color.Color(),\n            position: new _Vector2.Vector3(),\n            halfWidth: new _Vector2.Vector3(),\n            halfHeight: new _Vector2.Vector3()\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nfunction ShadowUniformsCache() {\n  const lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000\n          };\n          break;\n        // TODO (abelnation): set RectAreaLight shadow uniforms\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst(lightA, lightB) {\n  return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n}\n\nfunction WebGLLights(extensions, capabilities) {\n  const cache = new UniformsCache();\n  const shadowCache = ShadowUniformsCache();\n  const state = {\n    version: 0,\n    hash: {\n      directionalLength: -1,\n      pointLength: -1,\n      spotLength: -1,\n      rectAreaLength: -1,\n      hemiLength: -1,\n      numDirectionalShadows: -1,\n      numPointShadows: -1,\n      numSpotShadows: -1\n    },\n    ambient: [0, 0, 0],\n    probe: [],\n    directional: [],\n    directionalShadow: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadow: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    rectArea: [],\n    rectAreaLTC1: null,\n    rectAreaLTC2: null,\n    point: [],\n    pointShadow: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: []\n  };\n\n  for (let i = 0; i < 9; i++) state.probe.push(new _Vector2.Vector3());\n\n  const vector3 = new _Vector2.Vector3();\n  const matrix4 = new _Matrix.Matrix4();\n  const matrix42 = new _Matrix.Matrix4();\n\n  function setup(lights, physicallyCorrectLights) {\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    for (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n    let numDirectionalShadows = 0;\n    let numPointShadows = 0;\n    let numSpotShadows = 0;\n    lights.sort(shadowCastingLightsFirst); // artist-friendly light intensity scaling factor\n\n    const scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n      const color = light.color;\n      const intensity = light.intensity;\n      const distance = light.distance;\n      const shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity * scaleFactor;\n        g += color.g * intensity * scaleFactor;\n        b += color.b * intensity * scaleFactor;\n      } else if (light.isLightProbe) {\n        for (let j = 0; j < 9; j++) {\n          state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n        }\n      } else if (light.isDirectionalLight) {\n        const uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          state.directionalShadow[directionalLength] = shadowUniforms;\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          numDirectionalShadows++;\n        }\n\n        state.directional[directionalLength] = uniforms;\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n        uniforms.distance = distance;\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          state.spotShadow[spotLength] = shadowUniforms;\n          state.spotShadowMap[spotLength] = shadowMap;\n          state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n          numSpotShadows++;\n        }\n\n        state.spot[spotLength] = uniforms;\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n        //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n        // (b) intensity is the brightness of the light\n\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        state.rectArea[rectAreaLength] = uniforms;\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          shadowUniforms.shadowCameraNear = shadow.camera.near;\n          shadowUniforms.shadowCameraFar = shadow.camera.far;\n          state.pointShadow[pointLength] = shadowUniforms;\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          numPointShadows++;\n        }\n\n        state.point[pointLength] = uniforms;\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = cache.get(light);\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n        state.hemi[hemiLength] = uniforms;\n        hemiLength++;\n      }\n    }\n\n    if (rectAreaLength > 0) {\n      if (capabilities.isWebGL2) {\n        // WebGL 2\n        state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_FLOAT_1;\n        state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_FLOAT_2;\n      } else {\n        // WebGL 1\n        if (extensions.has('OES_texture_float_linear') === true) {\n          state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_FLOAT_2;\n        } else if (extensions.has('OES_texture_half_float_linear') === true) {\n          state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_HALF_1;\n          state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_HALF_2;\n        } else {\n          console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n        }\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n    const hash = state.hash;\n\n    if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n      state.directionalShadow.length = numDirectionalShadows;\n      state.directionalShadowMap.length = numDirectionalShadows;\n      state.pointShadow.length = numPointShadows;\n      state.pointShadowMap.length = numPointShadows;\n      state.spotShadow.length = numSpotShadows;\n      state.spotShadowMap.length = numSpotShadows;\n      state.directionalShadowMatrix.length = numDirectionalShadows;\n      state.pointShadowMatrix.length = numPointShadows;\n      state.spotShadowMatrix.length = numSpotShadows;\n      hash.directionalLength = directionalLength;\n      hash.pointLength = pointLength;\n      hash.spotLength = spotLength;\n      hash.rectAreaLength = rectAreaLength;\n      hash.hemiLength = hemiLength;\n      hash.numDirectionalShadows = numDirectionalShadows;\n      hash.numPointShadows = numPointShadows;\n      hash.numSpotShadows = numSpotShadows;\n      state.version = nextVersion++;\n    }\n  }\n\n  function setupView(lights, camera) {\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n    const viewMatrix = camera.matrixWorldInverse;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n\n      if (light.isDirectionalLight) {\n        const uniforms = state.directional[directionalLength];\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = state.spot[spotLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = state.rectArea[rectAreaLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        uniforms.halfWidth.applyMatrix4(matrix42);\n        uniforms.halfHeight.applyMatrix4(matrix42);\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = state.point[pointLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = state.hemi[hemiLength];\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        hemiLength++;\n      }\n    }\n  }\n\n  return {\n    setup: setup,\n    setupView: setupView,\n    state: state\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","UniformsCache","lights","get","light","undefined","id","uniforms","type","direction","_Vector2","Vector3","color","_Color","Color","position","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","ShadowUniformsCache","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","_Vector","Vector2","shadowCameraNear","shadowCameraFar","shadowCastingLightsFirst","lightA","lightB","castShadow","Object","defineProperty","value","WebGLLights","extensions","capabilities","cache","shadowCache","state","version","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directional","directionalShadow","directionalShadowMap","directionalShadowMatrix","spot","spotShadow","spotShadowMap","spotShadowMatrix","rectArea","rectAreaLTC1","rectAreaLTC2","point","pointShadow","pointShadowMap","pointShadowMatrix","hemi","i","push","vector3","matrix4","_Matrix","Matrix4","matrix42","setup","physicallyCorrectLights","r","g","b","set","sort","scaleFactor","Math","PI","l","length","intensity","shadowMap","shadow","map","texture","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","copy","multiplyScalar","shadowUniforms","bias","normalBias","radius","mapSize","matrix","isSpotLight","setFromMatrixPosition","matrixWorld","cos","angle","penumbra","isRectAreaLight","width","height","isPointLight","camera","near","far","isHemisphereLight","isWebGL2","_UniformsLib","UniformsLib","LTC_FLOAT_1","LTC_FLOAT_2","has","LTC_HALF_1","LTC_HALF_2","console","error","nextVersion","setupView","viewMatrix","matrixWorldInverse","target","sub","transformDirection","applyMatrix4","identity","premultiply","extractRotation","normalize"]
}
