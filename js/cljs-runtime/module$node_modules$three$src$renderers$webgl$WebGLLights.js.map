{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLLights.js",
"lineCount":20,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLLights.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLLights\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLLights = WebGLLights;\n\nvar _Color = require(\"../../math/Color.js\");\n\nvar _Matrix = require(\"../../math/Matrix4.js\");\n\nvar _Vector = require(\"../../math/Vector2.js\");\n\nvar _Vector2 = require(\"../../math/Vector3.js\");\n\nvar _UniformsLib = require(\"../shaders/UniformsLib.js\");\n\nfunction UniformsCache() {\n  const lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new _Vector2.Vector3(),\n            color: new _Color.Color()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new _Vector2.Vector3(),\n            direction: new _Vector2.Vector3(),\n            color: new _Color.Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new _Vector2.Vector3(),\n            color: new _Color.Color(),\n            distance: 0,\n            decay: 0\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new _Vector2.Vector3(),\n            skyColor: new _Color.Color(),\n            groundColor: new _Color.Color()\n          };\n          break;\n\n        case 'RectAreaLight':\n          uniforms = {\n            color: new _Color.Color(),\n            position: new _Vector2.Vector3(),\n            halfWidth: new _Vector2.Vector3(),\n            halfHeight: new _Vector2.Vector3()\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nfunction ShadowUniformsCache() {\n  const lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      let uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            shadowBias: 0,\n            shadowNormalBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new _Vector.Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000\n          };\n          break;\n        // TODO (abelnation): set RectAreaLight shadow uniforms\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst(lightA, lightB) {\n  return (lightB.castShadow ? 2 : 0) - (lightA.castShadow ? 2 : 0) + (lightB.map ? 1 : 0) - (lightA.map ? 1 : 0);\n}\n\nfunction WebGLLights(extensions, capabilities) {\n  const cache = new UniformsCache();\n  const shadowCache = ShadowUniformsCache();\n  const state = {\n    version: 0,\n    hash: {\n      directionalLength: -1,\n      pointLength: -1,\n      spotLength: -1,\n      rectAreaLength: -1,\n      hemiLength: -1,\n      numDirectionalShadows: -1,\n      numPointShadows: -1,\n      numSpotShadows: -1,\n      numSpotMaps: -1\n    },\n    ambient: [0, 0, 0],\n    probe: [],\n    directional: [],\n    directionalShadow: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotLightMap: [],\n    spotShadow: [],\n    spotShadowMap: [],\n    spotLightMatrix: [],\n    rectArea: [],\n    rectAreaLTC1: null,\n    rectAreaLTC2: null,\n    point: [],\n    pointShadow: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: [],\n    numSpotLightShadowsWithMaps: 0\n  };\n\n  for (let i = 0; i < 9; i++) state.probe.push(new _Vector2.Vector3());\n\n  const vector3 = new _Vector2.Vector3();\n  const matrix4 = new _Matrix.Matrix4();\n  const matrix42 = new _Matrix.Matrix4();\n\n  function setup(lights, physicallyCorrectLights) {\n    let r = 0,\n        g = 0,\n        b = 0;\n\n    for (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n    let numDirectionalShadows = 0;\n    let numPointShadows = 0;\n    let numSpotShadows = 0;\n    let numSpotMaps = 0;\n    let numSpotShadowsWithMaps = 0; // ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\n    lights.sort(shadowCastingAndTexturingLightsFirst); // artist-friendly light intensity scaling factor\n\n    const scaleFactor = physicallyCorrectLights !== true ? Math.PI : 1;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n      const color = light.color;\n      const intensity = light.intensity;\n      const distance = light.distance;\n      const shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity * scaleFactor;\n        g += color.g * intensity * scaleFactor;\n        b += color.b * intensity * scaleFactor;\n      } else if (light.isLightProbe) {\n        for (let j = 0; j < 9; j++) {\n          state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n        }\n      } else if (light.isDirectionalLight) {\n        const uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          state.directionalShadow[directionalLength] = shadowUniforms;\n          state.directionalShadowMap[directionalLength] = shadowMap;\n          state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n          numDirectionalShadows++;\n        }\n\n        state.directional[directionalLength] = uniforms;\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.color.copy(color).multiplyScalar(intensity * scaleFactor);\n        uniforms.distance = distance;\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.decay;\n        state.spot[spotLength] = uniforms;\n        const shadow = light.shadow;\n\n        if (light.map) {\n          state.spotLightMap[numSpotMaps] = light.map;\n          numSpotMaps++; // make sure the lightMatrix is up to date\n          // TODO : do it if required only\n\n          shadow.updateMatrices(light);\n          if (light.castShadow) numSpotShadowsWithMaps++;\n        }\n\n        state.spotLightMatrix[spotLength] = shadow.matrix;\n\n        if (light.castShadow) {\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          state.spotShadow[spotLength] = shadowUniforms;\n          state.spotShadowMap[spotLength] = shadowMap;\n          numSpotShadows++;\n        }\n\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n        //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n        // (b) intensity is the brightness of the light\n\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        state.rectArea[rectAreaLength] = uniforms;\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity * scaleFactor);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.decay;\n\n        if (light.castShadow) {\n          const shadow = light.shadow;\n          const shadowUniforms = shadowCache.get(light);\n          shadowUniforms.shadowBias = shadow.bias;\n          shadowUniforms.shadowNormalBias = shadow.normalBias;\n          shadowUniforms.shadowRadius = shadow.radius;\n          shadowUniforms.shadowMapSize = shadow.mapSize;\n          shadowUniforms.shadowCameraNear = shadow.camera.near;\n          shadowUniforms.shadowCameraFar = shadow.camera.far;\n          state.pointShadow[pointLength] = shadowUniforms;\n          state.pointShadowMap[pointLength] = shadowMap;\n          state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n          numPointShadows++;\n        }\n\n        state.point[pointLength] = uniforms;\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = cache.get(light);\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity * scaleFactor);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity * scaleFactor);\n        state.hemi[hemiLength] = uniforms;\n        hemiLength++;\n      }\n    }\n\n    if (rectAreaLength > 0) {\n      if (capabilities.isWebGL2) {\n        // WebGL 2\n        state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_FLOAT_1;\n        state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_FLOAT_2;\n      } else {\n        // WebGL 1\n        if (extensions.has('OES_texture_float_linear') === true) {\n          state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_FLOAT_1;\n          state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_FLOAT_2;\n        } else if (extensions.has('OES_texture_half_float_linear') === true) {\n          state.rectAreaLTC1 = _UniformsLib.UniformsLib.LTC_HALF_1;\n          state.rectAreaLTC2 = _UniformsLib.UniformsLib.LTC_HALF_2;\n        } else {\n          console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n        }\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n    const hash = state.hash;\n\n    if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows || hash.numSpotMaps !== numSpotMaps) {\n      state.directional.length = directionalLength;\n      state.spot.length = spotLength;\n      state.rectArea.length = rectAreaLength;\n      state.point.length = pointLength;\n      state.hemi.length = hemiLength;\n      state.directionalShadow.length = numDirectionalShadows;\n      state.directionalShadowMap.length = numDirectionalShadows;\n      state.pointShadow.length = numPointShadows;\n      state.pointShadowMap.length = numPointShadows;\n      state.spotShadow.length = numSpotShadows;\n      state.spotShadowMap.length = numSpotShadows;\n      state.directionalShadowMatrix.length = numDirectionalShadows;\n      state.pointShadowMatrix.length = numPointShadows;\n      state.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n      state.spotLightMap.length = numSpotMaps;\n      state.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n      hash.directionalLength = directionalLength;\n      hash.pointLength = pointLength;\n      hash.spotLength = spotLength;\n      hash.rectAreaLength = rectAreaLength;\n      hash.hemiLength = hemiLength;\n      hash.numDirectionalShadows = numDirectionalShadows;\n      hash.numPointShadows = numPointShadows;\n      hash.numSpotShadows = numSpotShadows;\n      hash.numSpotMaps = numSpotMaps;\n      state.version = nextVersion++;\n    }\n  }\n\n  function setupView(lights, camera) {\n    let directionalLength = 0;\n    let pointLength = 0;\n    let spotLength = 0;\n    let rectAreaLength = 0;\n    let hemiLength = 0;\n    const viewMatrix = camera.matrixWorldInverse;\n\n    for (let i = 0, l = lights.length; i < l; i++) {\n      const light = lights[i];\n\n      if (light.isDirectionalLight) {\n        const uniforms = state.directional[directionalLength];\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        const uniforms = state.spot[spotLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        const uniforms = state.rectArea[rectAreaLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        uniforms.halfWidth.applyMatrix4(matrix42);\n        uniforms.halfHeight.applyMatrix4(matrix42);\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        const uniforms = state.point[pointLength];\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        const uniforms = state.hemi[hemiLength];\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        hemiLength++;\n      }\n    }\n  }\n\n  return {\n    setup: setup,\n    setupView: setupView,\n    state: state\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","UniformsCache","lights","get","light","undefined","id","uniforms","type","direction","_Vector2","Vector3","color","_Color","Color","position","distance","coneCos","penumbraCos","decay","skyColor","groundColor","halfWidth","halfHeight","ShadowUniformsCache","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","_Vector","Vector2","shadowCameraNear","shadowCameraFar","shadowCastingAndTexturingLightsFirst","lightA","lightB","castShadow","map","Object","defineProperty","value","WebGLLights","extensions","capabilities","cache","shadowCache","state","version","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directional","directionalShadow","directionalShadowMap","directionalShadowMatrix","spot","spotLightMap","spotShadow","spotShadowMap","spotLightMatrix","rectArea","rectAreaLTC1","rectAreaLTC2","point","pointShadow","pointShadowMap","pointShadowMatrix","hemi","numSpotLightShadowsWithMaps","i","push","vector3","matrix4","_Matrix","Matrix4","matrix42","setup","physicallyCorrectLights","r","g","b","set","numSpotShadowsWithMaps","sort","scaleFactor","Math","PI","l","length","intensity","shadowMap","shadow","texture","isAmbientLight","isLightProbe","j","addScaledVector","sh","coefficients","isDirectionalLight","copy","multiplyScalar","shadowUniforms","bias","normalBias","radius","mapSize","matrix","isSpotLight","setFromMatrixPosition","matrixWorld","cos","angle","penumbra","updateMatrices","isRectAreaLight","width","height","isPointLight","camera","near","far","isHemisphereLight","isWebGL2","_UniformsLib","UniformsLib","LTC_FLOAT_1","LTC_FLOAT_2","has","LTC_HALF_1","LTC_HALF_2","console","error","nextVersion","setupView","viewMatrix","matrixWorldInverse","target","sub","transformDirection","applyMatrix4","identity","premultiply","extractRotation"]
}
