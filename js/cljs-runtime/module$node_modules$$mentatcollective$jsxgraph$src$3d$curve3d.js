shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$3d$curve3d=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_constants=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$base$constants")),_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type"));
_jxg.default.Curve3D=function(view,F,X,Y,Z,range,attributes){this.constructor(view.board,attributes,_constants.default.OBJECT_TYPE_CURVE3D,_constants.default.OBJECT_CLASS_3D);this.constructor3D(view,"surface3d");this.id=this.view.board.setId(this,"S3D");this.board.finalizeAdding(this);this.F=F;this.X=X;this.Y=Y;this.Z=Z;null!==this.F&&(this.X=function(u){return this.F(u)[0]},this.Y=function(u){return this.F(u)[1]},this.Z=function(u){return this.F(u)[2]});this.range=range;this.methodMap=_type.default.deepCopy(this.methodMap,
{})};_jxg.default.Curve3D.prototype=new _jxg.default.GeometryElement;_type.default.copyPrototypeMethods(_jxg.default.Curve3D,_jxg.default.GeometryElement3D,"constructor3D");_jxg.default.extend(_jxg.default.Curve3D.prototype,{updateDataArray:function(){var steps=_type.default.evaluate(this.visProp.numberpointshigh),s;var dataX=[];var dataY=[];if(_type.default.isArray(this.X))for(steps=this.X.length,s=0;s<steps;s++){var c2d=[this.X[s],this.Y[s],this.Z[s]];c2d=this.view.project3DTo2D(c2d);dataX.push(c2d[1]);
dataY.push(c2d[2])}else{var r=_type.default.evaluate(this.range);s=_type.default.evaluate(r[0]);r=_type.default.evaluate(r[1]);for(steps=(r-s)/(steps-1);s<=r;s+=steps)c2d=null!==this.F?this.F(s):[this.X(s),this.Y(s),this.Z(s)],c2d=this.view.project3DTo2D(c2d),dataX.push(c2d[1]),dataY.push(c2d[2])}return{X:dataX,Y:dataY}},update:function(){return this},updateRenderer:function(){this.needsUpdate=!1;return this}});_jxg.default.createCurve3D=function(board,parents,attributes){var view=parents[0],X,Y;
if(3===parents.length){var F=parents[1];parents=parents[2];var Z=Y=X=null}else X=parents[1],Y=parents[2],Z=parents[3],parents=parents[4],F=null;attributes=_type.default.copyAttributes(attributes,board.options,"curve3d");var el=new _jxg.default.Curve3D(view,F,X,Y,Z,parents,attributes);el.element2D=board.create("curve",[[],[]],attributes);el.element2D.updateDataArray=function(){var ret=el.updateDataArray();this.dataX=ret.X;this.dataY=ret.Y};el.addChild(el.element2D);el.inherits.push(el.element2D);el.element2D.setParents(el);
el.element2D.prepareUpdate().update();board.isSuspendedUpdate||el.element2D.updateVisibility().updateRenderer();return el};_jxg.default.registerElement("curve3d",_jxg.default.createCurve3D)}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$3d$curve3d.js.map
