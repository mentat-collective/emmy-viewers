{
"version":3,
"file":"module$node_modules$three$src$objects$Mesh.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/three/src/objects/Mesh.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$objects$Mesh\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mesh = void 0;\n\nvar _Vector = require(\"../math/Vector3.js\");\n\nvar _Vector2 = require(\"../math/Vector2.js\");\n\nvar _Sphere = require(\"../math/Sphere.js\");\n\nvar _Ray = require(\"../math/Ray.js\");\n\nvar _Matrix = require(\"../math/Matrix4.js\");\n\nvar _Object3D = require(\"../core/Object3D.js\");\n\nvar _Triangle = require(\"../math/Triangle.js\");\n\nvar _constants = require(\"../constants.js\");\n\nvar _MeshBasicMaterial = require(\"../materials/MeshBasicMaterial.js\");\n\nvar _BufferGeometry = require(\"../core/BufferGeometry.js\");\n\nconst _inverseMatrix = /*@__PURE__*/new _Matrix.Matrix4();\n\nconst _ray = /*@__PURE__*/new _Ray.Ray();\n\nconst _sphere = /*@__PURE__*/new _Sphere.Sphere();\n\nconst _vA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _vB = /*@__PURE__*/new _Vector.Vector3();\n\nconst _vC = /*@__PURE__*/new _Vector.Vector3();\n\nconst _tempA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _tempB = /*@__PURE__*/new _Vector.Vector3();\n\nconst _tempC = /*@__PURE__*/new _Vector.Vector3();\n\nconst _morphA = /*@__PURE__*/new _Vector.Vector3();\n\nconst _morphB = /*@__PURE__*/new _Vector.Vector3();\n\nconst _morphC = /*@__PURE__*/new _Vector.Vector3();\n\nconst _uvA = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _uvB = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _uvC = /*@__PURE__*/new _Vector2.Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/new _Vector.Vector3();\n\nconst _intersectionPointWorld = /*@__PURE__*/new _Vector.Vector3();\n\nclass Mesh extends _Object3D.Object3D {\n  constructor(geometry = new _BufferGeometry.BufferGeometry(), material = new _MeshBasicMaterial.MeshBasicMaterial()) {\n    super();\n    this.isMesh = true;\n    this.type = 'Mesh';\n    this.geometry = geometry;\n    this.material = material;\n    this.updateMorphTargets();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n\n    if (source.morphTargetInfluences !== undefined) {\n      this.morphTargetInfluences = source.morphTargetInfluences.slice();\n    }\n\n    if (source.morphTargetDictionary !== undefined) {\n      this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n    }\n\n    this.material = source.material;\n    this.geometry = source.geometry;\n    return this;\n  }\n\n  updateMorphTargets() {\n    const geometry = this.geometry;\n    const morphAttributes = geometry.morphAttributes;\n    const keys = Object.keys(morphAttributes);\n\n    if (keys.length > 0) {\n      const morphAttribute = morphAttributes[keys[0]];\n\n      if (morphAttribute !== undefined) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n\n        for (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n          const name = morphAttribute[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  }\n\n  raycast(raycaster, intersects) {\n    const geometry = this.geometry;\n    const material = this.material;\n    const matrixWorld = this.matrixWorld;\n    if (material === undefined) return; // Checking boundingSphere distance to ray\n\n    if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n    _sphere.copy(geometry.boundingSphere);\n\n    _sphere.applyMatrix4(matrixWorld);\n\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n    _inverseMatrix.copy(matrixWorld).invert();\n\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n    if (geometry.boundingBox !== null) {\n      if (_ray.intersectsBox(geometry.boundingBox) === false) return;\n    }\n\n    let intersection;\n    const index = geometry.index;\n    const position = geometry.attributes.position;\n    const morphPosition = geometry.morphAttributes.position;\n    const morphTargetsRelative = geometry.morphTargetsRelative;\n    const uv = geometry.attributes.uv;\n    const uv2 = geometry.attributes.uv2;\n    const groups = geometry.groups;\n    const drawRange = geometry.drawRange;\n\n    if (index !== null) {\n      // indexed buffer geometry\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(index.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = index.getX(j);\n            const b = index.getX(j + 1);\n            const c = index.getX(j + 2);\n            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(index.count, drawRange.start + drawRange.count);\n\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = index.getX(i);\n          const b = index.getX(i + 1);\n          const c = index.getX(i + 2);\n          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    } else if (position !== undefined) {\n      // non-indexed buffer geometry\n      if (Array.isArray(material)) {\n        for (let i = 0, il = groups.length; i < il; i++) {\n          const group = groups[i];\n          const groupMaterial = material[group.materialIndex];\n          const start = Math.max(group.start, drawRange.start);\n          const end = Math.min(position.count, Math.min(group.start + group.count, drawRange.start + drawRange.count));\n\n          for (let j = start, jl = end; j < jl; j += 3) {\n            const a = j;\n            const b = j + 1;\n            const c = j + 2;\n            intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n            if (intersection) {\n              intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n              intersection.face.materialIndex = group.materialIndex;\n              intersects.push(intersection);\n            }\n          }\n        }\n      } else {\n        const start = Math.max(0, drawRange.start);\n        const end = Math.min(position.count, drawRange.start + drawRange.count);\n\n        for (let i = start, il = end; i < il; i += 3) {\n          const a = i;\n          const b = i + 1;\n          const c = i + 2;\n          intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n          if (intersection) {\n            intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n            intersects.push(intersection);\n          }\n        }\n      }\n    }\n  }\n\n}\n\nexports.Mesh = Mesh;\n\nfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n  let intersect;\n\n  if (material.side === _constants.BackSide) {\n    intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n  } else {\n    intersect = ray.intersectTriangle(pA, pB, pC, material.side !== _constants.DoubleSide, point);\n  }\n\n  if (intersect === null) return null;\n\n  _intersectionPointWorld.copy(point);\n\n  _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n  const distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n  if (distance < raycaster.near || distance > raycaster.far) return null;\n  return {\n    distance: distance,\n    point: _intersectionPointWorld.clone(),\n    object: object\n  };\n}\n\nfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n  _vA.fromBufferAttribute(position, a);\n\n  _vB.fromBufferAttribute(position, b);\n\n  _vC.fromBufferAttribute(position, c);\n\n  const morphInfluences = object.morphTargetInfluences;\n\n  if (morphPosition && morphInfluences) {\n    _morphA.set(0, 0, 0);\n\n    _morphB.set(0, 0, 0);\n\n    _morphC.set(0, 0, 0);\n\n    for (let i = 0, il = morphPosition.length; i < il; i++) {\n      const influence = morphInfluences[i];\n      const morphAttribute = morphPosition[i];\n      if (influence === 0) continue;\n\n      _tempA.fromBufferAttribute(morphAttribute, a);\n\n      _tempB.fromBufferAttribute(morphAttribute, b);\n\n      _tempC.fromBufferAttribute(morphAttribute, c);\n\n      if (morphTargetsRelative) {\n        _morphA.addScaledVector(_tempA, influence);\n\n        _morphB.addScaledVector(_tempB, influence);\n\n        _morphC.addScaledVector(_tempC, influence);\n      } else {\n        _morphA.addScaledVector(_tempA.sub(_vA), influence);\n\n        _morphB.addScaledVector(_tempB.sub(_vB), influence);\n\n        _morphC.addScaledVector(_tempC.sub(_vC), influence);\n      }\n    }\n\n    _vA.add(_morphA);\n\n    _vB.add(_morphB);\n\n    _vC.add(_morphC);\n  }\n\n  if (object.isSkinnedMesh) {\n    object.boneTransform(a, _vA);\n    object.boneTransform(b, _vB);\n    object.boneTransform(c, _vC);\n  }\n\n  const intersection = checkIntersection(object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint);\n\n  if (intersection) {\n    if (uv) {\n      _uvA.fromBufferAttribute(uv, a);\n\n      _uvB.fromBufferAttribute(uv, b);\n\n      _uvC.fromBufferAttribute(uv, c);\n\n      intersection.uv = _Triangle.Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new _Vector2.Vector2());\n    }\n\n    if (uv2) {\n      _uvA.fromBufferAttribute(uv2, a);\n\n      _uvB.fromBufferAttribute(uv2, b);\n\n      _uvC.fromBufferAttribute(uv2, c);\n\n      intersection.uv2 = _Triangle.Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new _Vector2.Vector2());\n    }\n\n    const face = {\n      a: a,\n      b: b,\n      c: c,\n      normal: new _Vector.Vector3(),\n      materialIndex: 0\n    };\n\n    _Triangle.Triangle.getNormal(_vA, _vB, _vC, face.normal);\n\n    intersection.face = face;\n  }\n\n  return intersection;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","checkBufferGeometryIntersection","object","material","raycaster","ray","position","morphPosition","morphTargetsRelative","uv","uv2","a","b","c","_vA","fromBufferAttribute","_vB","_vC","morphInfluences","morphTargetInfluences","_morphA","set","_morphB","_morphC","i","il","length","influence","morphAttribute","_tempA","_tempB","_tempC","addScaledVector","sub","add","isSkinnedMesh","boneTransform","_intersectionPoint","side","intersect","_constants","BackSide","intersectTriangle","pC","pB","pA","point","DoubleSide","_intersectionPointWorld","copy","applyMatrix4","matrixWorld","distance","origin","distanceTo","near","far","clone","intersection","_uvA","_uvB","_uvC","_Triangle","Triangle","getUV","_Vector2","Vector2","face","normal","_Vector","Vector3","materialIndex","getNormal","Object","defineProperty","value","Mesh","_Sphere","_Ray","_Matrix","_Object3D","_MeshBasicMaterial","_BufferGeometry","_inverseMatrix","Matrix4","_ray","Ray","_sphere","Sphere","Object3D","constructor","geometry","BufferGeometry","MeshBasicMaterial","isMesh","type","updateMorphTargets","source","recursive","undefined","slice","morphTargetDictionary","assign","morphAttributes","keys","m","ml","name","String","push","raycast","intersects","boundingSphere","computeBoundingSphere","intersectsSphere","invert","boundingBox","intersectsBox","index","attributes","groups","drawRange","Array","isArray","group","groupMaterial","start","Math","max","end","min","count","j","jl","getX","faceIndex","floor"]
}
