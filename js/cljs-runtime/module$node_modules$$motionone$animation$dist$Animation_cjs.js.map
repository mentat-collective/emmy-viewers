{
"version":3,
"file":"module$node_modules$$motionone$animation$dist$Animation_cjs.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/@motionone/animation/dist/Animation.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$animation$dist$Animation_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar easing = require('./utils/easing.cjs.js');\n\nclass Animation {\n    constructor(output, keyframes = [0, 1], { easing: easing$1, duration: initialDuration = utils.defaults.duration, delay = utils.defaults.delay, endDelay = utils.defaults.endDelay, repeat = utils.defaults.repeat, offset, direction = \"normal\", } = {}) {\n        this.startTime = null;\n        this.rate = 1;\n        this.t = 0;\n        this.cancelTimestamp = null;\n        this.easing = utils.noopReturn;\n        this.duration = 0;\n        this.totalDuration = 0;\n        this.repeat = 0;\n        this.playState = \"idle\";\n        this.finished = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        easing$1 = easing$1 || utils.defaults.easing;\n        if (utils.isEasingGenerator(easing$1)) {\n            const custom = easing$1.createAnimation(keyframes);\n            easing$1 = custom.easing;\n            keyframes = custom.keyframes || keyframes;\n            initialDuration = custom.duration || initialDuration;\n        }\n        this.repeat = repeat;\n        this.easing = utils.isEasingList(easing$1) ? utils.noopReturn : easing.getEasingFunction(easing$1);\n        this.updateDuration(initialDuration);\n        const interpolate = utils.interpolate(keyframes, offset, utils.isEasingList(easing$1) ? easing$1.map(easing.getEasingFunction) : utils.noopReturn);\n        this.tick = (timestamp) => {\n            var _a;\n            // TODO: Temporary fix for OptionsResolver typing\n            delay = delay;\n            let t = 0;\n            if (this.pauseTime !== undefined) {\n                t = this.pauseTime;\n            }\n            else {\n                t = (timestamp - this.startTime) * this.rate;\n            }\n            this.t = t;\n            // Convert to seconds\n            t /= 1000;\n            // Rebase on delay\n            t = Math.max(t - delay, 0);\n            /**\n             * If this animation has finished, set the current time\n             * to the total duration.\n             */\n            if (this.playState === \"finished\" && this.pauseTime === undefined) {\n                t = this.totalDuration;\n            }\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = t / this.duration;\n            // TODO progress += iterationStart\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (direction === \"reverse\" ||\n                (direction === \"alternate\" && iterationIsOdd) ||\n                (direction === \"alternate-reverse\" && !iterationIsOdd)) {\n                iterationProgress = 1 - iterationProgress;\n            }\n            const p = t >= this.totalDuration ? 1 : Math.min(iterationProgress, 1);\n            const latest = interpolate(this.easing(p));\n            output(latest);\n            const isAnimationFinished = this.pauseTime === undefined &&\n                (this.playState === \"finished\" || t >= this.totalDuration + endDelay);\n            if (isAnimationFinished) {\n                this.playState = \"finished\";\n                (_a = this.resolve) === null || _a === void 0 ? void 0 : _a.call(this, latest);\n            }\n            else if (this.playState !== \"idle\") {\n                this.frameRequestId = requestAnimationFrame(this.tick);\n            }\n        };\n        this.play();\n    }\n    play() {\n        const now = performance.now();\n        this.playState = \"running\";\n        if (this.pauseTime !== undefined) {\n            this.startTime = now - this.pauseTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = now;\n        }\n        this.cancelTimestamp = this.startTime;\n        this.pauseTime = undefined;\n        this.frameRequestId = requestAnimationFrame(this.tick);\n    }\n    pause() {\n        this.playState = \"paused\";\n        this.pauseTime = this.t;\n    }\n    finish() {\n        this.playState = \"finished\";\n        this.tick(0);\n    }\n    stop() {\n        var _a;\n        this.playState = \"idle\";\n        if (this.frameRequestId !== undefined) {\n            cancelAnimationFrame(this.frameRequestId);\n        }\n        (_a = this.reject) === null || _a === void 0 ? void 0 : _a.call(this, false);\n    }\n    cancel() {\n        this.stop();\n        this.tick(this.cancelTimestamp);\n    }\n    reverse() {\n        this.rate *= -1;\n    }\n    commitStyles() { }\n    updateDuration(duration) {\n        this.duration = duration;\n        this.totalDuration = duration * (this.repeat + 1);\n    }\n    get currentTime() {\n        return this.t;\n    }\n    set currentTime(t) {\n        if (this.pauseTime !== undefined || this.rate === 0) {\n            this.pauseTime = t;\n        }\n        else {\n            this.startTime = performance.now() - t / this.rate;\n        }\n    }\n    get playbackRate() {\n        return this.rate;\n    }\n    set playbackRate(rate) {\n        this.rate = rate;\n    }\n}\n\nexports.Animation = Animation;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","easing","Animation","constructor","output","keyframes","easing$1","initialDuration","defaults","duration","delay","endDelay","repeat","offset","direction","startTime","rate","t","cancelTimestamp","noopReturn","totalDuration","playState","finished","Promise","resolve","reject","isEasingGenerator","custom","createAnimation","isEasingList","getEasingFunction","updateDuration","interpolate","map","tick","timestamp","this.tick","_a","undefined","pauseTime","Math","max","progress","currentIteration","floor","iterationProgress","iterationIsOdd","latest","p","min","call","frameRequestId","requestAnimationFrame","play","now","performance","pause","finish","stop","cancelAnimationFrame","cancel","reverse","commitStyles"]
}
