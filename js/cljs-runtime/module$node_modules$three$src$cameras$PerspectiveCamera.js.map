{
"version":3,
"file":"module$node_modules$three$src$cameras$PerspectiveCamera.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/three/src/cameras/PerspectiveCamera.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$cameras$PerspectiveCamera\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PerspectiveCamera = void 0;\n\nvar _Camera = require(\"./Camera.js\");\n\nvar MathUtils = _interopRequireWildcard(require(\"../math/MathUtils.js\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nclass PerspectiveCamera extends _Camera.Camera {\n  constructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n    super();\n    this.isPerspectiveCamera = true;\n    this.type = 'PerspectiveCamera';\n    this.fov = fov;\n    this.zoom = 1;\n    this.near = near;\n    this.far = far;\n    this.focus = 10;\n    this.aspect = aspect;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  }\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n\n\n  setFocalLength(focalLength) {\n    /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n    const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = MathUtils.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  }\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n\n\n  getFocalLength() {\n    const vExtentSlope = Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  }\n\n  getEffectiveFOV() {\n    return MathUtils.RAD2DEG * 2 * Math.atan(Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  }\n\n  getFilmWidth() {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  }\n\n  getFilmHeight() {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  }\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   const w = 1920;\n   *   const h = 1080;\n   *   const fullWidth = w * 3;\n   *   const fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n   *   --B--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n   *   --C--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n   *   --D--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n   *   --E--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n   *   --F--\n   *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n\n\n  setViewOffset(fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  }\n\n  clearViewOffset() {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  }\n\n  updateProjectionMatrix() {\n    const near = this.near;\n    let top = near * Math.tan(MathUtils.DEG2RAD * 0.5 * this.fov) / this.zoom;\n    let height = 2 * top;\n    let width = this.aspect * height;\n    let left = -0.5 * width;\n    const view = this.view;\n\n    if (this.view !== null && this.view.enabled) {\n      const fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    const skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n    this.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n  }\n\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n\n}\n\nexports.PerspectiveCamera = PerspectiveCamera;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","PerspectiveCamera","_Camera","MathUtils","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Camera","constructor","fov","aspect","near","far","isPerspectiveCamera","type","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","copy","source","recursive","assign","setFocalLength","focalLength","vExtentSlope","getFilmHeight","RAD2DEG","Math","atan","getFocalLength","tan","DEG2RAD","getEffectiveFOV","getFilmWidth","min","max","setViewOffset","fullWidth","fullHeight","x","y","width","height","enabled","offsetX","offsetY","clearViewOffset","top","left","skew","projectionMatrix","makePerspective","projectionMatrixInverse","invert","toJSON","meta","data","object"]
}
