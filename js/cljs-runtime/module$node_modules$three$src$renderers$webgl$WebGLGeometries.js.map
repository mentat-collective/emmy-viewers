{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLGeometries.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/renderers/webgl/WebGLGeometries.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLGeometries\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLGeometries = WebGLGeometries;\n\nvar _BufferAttribute = require(\"../../core/BufferAttribute.js\");\n\nvar _utils = require(\"../../utils.js\");\n\nfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n  const geometries = {};\n  const wireframeAttributes = new WeakMap();\n\n  function onGeometryDispose(event) {\n    const geometry = event.target;\n\n    if (geometry.index !== null) {\n      attributes.remove(geometry.index);\n    }\n\n    for (const name in geometry.attributes) {\n      attributes.remove(geometry.attributes[name]);\n    }\n\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id];\n    const attribute = wireframeAttributes.get(geometry);\n\n    if (attribute) {\n      attributes.remove(attribute);\n      wireframeAttributes.delete(geometry);\n    }\n\n    bindingStates.releaseStatesOfGeometry(geometry);\n\n    if (geometry.isInstancedBufferGeometry === true) {\n      delete geometry._maxInstanceCount;\n    } //\n\n\n    info.memory.geometries--;\n  }\n\n  function get(object, geometry) {\n    if (geometries[geometry.id] === true) return geometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n    geometries[geometry.id] = true;\n    info.memory.geometries++;\n    return geometry;\n  }\n\n  function update(geometry) {\n    const geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n    for (const name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    const morphAttributes = geometry.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const array = morphAttributes[name];\n\n      for (let i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n  }\n\n  function updateWireframeAttribute(geometry) {\n    const indices = [];\n    const geometryIndex = geometry.index;\n    const geometryPosition = geometry.attributes.position;\n    let version = 0;\n\n    if (geometryIndex !== null) {\n      const array = geometryIndex.array;\n      version = geometryIndex.version;\n\n      for (let i = 0, l = array.length; i < l; i += 3) {\n        const a = array[i + 0];\n        const b = array[i + 1];\n        const c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      const array = geometryPosition.array;\n      version = geometryPosition.version;\n\n      for (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        const a = i + 0;\n        const b = i + 1;\n        const c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n\n    const attribute = new ((0, _utils.arrayNeedsUint32)(indices) ? _BufferAttribute.Uint32BufferAttribute : _BufferAttribute.Uint16BufferAttribute)(indices, 1);\n    attribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n    //\n\n    const previousAttribute = wireframeAttributes.get(geometry);\n    if (previousAttribute) attributes.remove(previousAttribute); //\n\n    wireframeAttributes.set(geometry, attribute);\n  }\n\n  function getWireframeAttribute(geometry) {\n    const currentAttribute = wireframeAttributes.get(geometry);\n\n    if (currentAttribute) {\n      const geometryIndex = geometry.index;\n\n      if (geometryIndex !== null) {\n        // if the attribute is obsolete, create a new one\n        if (currentAttribute.version < geometryIndex.version) {\n          updateWireframeAttribute(geometry);\n        }\n      }\n    } else {\n      updateWireframeAttribute(geometry);\n    }\n\n    return wireframeAttributes.get(geometry);\n  }\n\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLGeometries","gl","attributes","info","bindingStates","onGeometryDispose","event","geometry","target","index","remove","name","removeEventListener","geometries","id","attribute","wireframeAttributes","get","delete","releaseStatesOfGeometry","isInstancedBufferGeometry","_maxInstanceCount","memory","updateWireframeAttribute","indices","geometryIndex","geometryPosition","position","array","version","i","l","length","a","b","c","push","_utils","arrayNeedsUint32","_BufferAttribute","Uint32BufferAttribute","Uint16BufferAttribute","previousAttribute","set","WeakMap","object","addEventListener","update","geometryAttributes","ARRAY_BUFFER","morphAttributes","getWireframeAttribute","currentAttribute"]
}
