shadow$provide.module$node_modules$mathbox$build$esm$render$meshes$line=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Line=void 0;global=require("module$node_modules$mathbox$build$esm$render$meshes$base");var _constants=require("module$node_modules$three$src$constants"),_linegeometry=require("module$node_modules$mathbox$build$esm$render$geometry$linegeometry"),_Mesh=require("module$node_modules$three$src$objects$Mesh");class Line extends global.Base{constructor(renderer,
shaders,options){var left;super(renderer,shaders,options);let {uniforms,stroke,join}=options;const {material,position,color,mask,map,combine,stpq,linear,clip,proximity,closed}=options;null==uniforms&&(uniforms={});stroke=[null,"dotted","dashed"][stroke];renderer=null!=uniforms.styleColor;join=null!=(left=["miter","round","bevel"][join])?left:"miter";left={miter:1,round:4,bevel:2}[join];this.geometry=new _linegeometry.LineGeometry({samples:options.samples,strips:options.strips,ribbons:options.ribbons,
layers:options.layers,anchor:options.anchor,closed:options.closed,detail:left});this._adopt(uniforms);this._adopt(this.geometry.uniforms);shaders=shaders.material();options={};stroke&&(options.LINE_STROKE="");clip&&(options.LINE_CLIP="");null!=proximity&&(options.LINE_PROXIMITY="");options["LINE_JOIN_"+join.toUpperCase()]="";1<left&&(options.LINE_JOIN_DETAIL=left);closed&&(options.LINE_CLOSED="");left=shaders.vertex;left.pipe(this._vertexColor(color,mask));left.require(this._vertexPosition(position,
material,map,2,stpq));left.pipe("line.position",this.uniforms,options);left.pipe("project.position",this.uniforms);options=shaders.fragment;stroke&&options.pipe(`fragment.clip.${stroke}`,this.uniforms);clip&&options.pipe("fragment.clip.ends",this.uniforms);null!=proximity&&options.pipe("fragment.clip.proximity",this.uniforms);options.pipe(this._fragmentColor(renderer,material,color,mask,map,2,stpq,combine,linear));options.pipe("fragment.color",this.uniforms);renderer=shaders.link({side:_constants.DoubleSide});
this.material=this._material(renderer);shaders=new _Mesh.Mesh(this.geometry,this.material);shaders.userData=renderer;this._raw(shaders);this.renders=[shaders]}dispose(){this.geometry.dispose();this.material.dispose();this.renders=this.geometry=this.material=null;return super.dispose()}}exports.Line=Line}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$meshes$line.js.map
