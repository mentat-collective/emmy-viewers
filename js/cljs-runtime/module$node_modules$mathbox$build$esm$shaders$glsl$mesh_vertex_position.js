shadow$provide.module$node_modules$mathbox$build$esm$shaders$glsl$mesh_vertex_position=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;exports.default="uniform vec4 geometryResolution;\n\n#ifdef POSITION_STPQ\nvarying vec4 vSTPQ;\n#endif\n#ifdef POSITION_U\nvarying float vU;\n#endif\n#ifdef POSITION_UV\nvarying vec2 vUV;\n#endif\n#ifdef POSITION_UVW\nvarying vec3 vUVW;\n#endif\n#ifdef POSITION_UVWO\nvarying vec4 vUVWO;\n#endif\n\n// External\nvec3 getPosition(vec4 xyzw, in vec4 stpqIn, out vec4 stpqOut);\n\nvec3 getMeshPosition(vec4 xyzw, float canonical) {\n  vec4 stpqOut, stpqIn \x3d xyzw * geometryResolution;\n  vec3 xyz \x3d getPosition(xyzw, stpqIn, stpqOut);\n\n  #ifdef POSITION_MAP\n  if (canonical \x3e 0.5) {\n    #ifdef POSITION_STPQ\n    vSTPQ \x3d stpqOut;\n    #endif\n    #ifdef POSITION_U\n    vU \x3d stpqOut.x;\n    #endif\n    #ifdef POSITION_UV\n    vUV \x3d stpqOut.xy;\n    #endif\n    #ifdef POSITION_UVW\n    vUVW \x3d stpqOut.xyz;\n    #endif\n    #ifdef POSITION_UVWO\n    vUVWO \x3d stpqOut;\n    #endif\n  }\n  #endif\n  return xyz;\n}\n"}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$shaders$glsl$mesh_vertex_position.js.map
