{"version":3,"sources":["sicmutils/env/sci/macros.cljc"],"mappings":"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","names":["var_args","G__103933","sicmutils.env.sci.macros/pattern","js/Error","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","_","form","pattern.syntax/compile-pattern","pred","sicmutils.env.sci.macros/consequence","cljs.core/vec","sym","cljs.core.gensym","pattern.consequence/compile-skeleton","G__103935","sicmutils.env.sci.macros/template","m","G__103937","sicmutils.env.sci.macros/rule","pattern","consequent-fn","pattern.rule.compile_rule","skeleton","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","sicmutils.env.sci.macros/ruleset","seq103939","G__103940","cljs.core/first","cljs.core/next","G__103941","self__4851__auto__","patterns-and-consequences","cljs.core/zero?","cljs.core/mod","cljs.core/count","inputs","cljs.core.partition","rules","p1__103938#","cljs.core.map","cljs.core.apply","pattern.rule/compile-rule","sicmutils.env.sci.macros/kbk-n","n","sicmutils.algebra.fold/kbk-n-body","sicmutils.env.sci.macros/fork","p__103945","map__103946","cljs.core/--destructure-map","cljs.core.get","seq103942","G__103943","G__103944","_&env","cljs","clj","cljs.core/contains?","G__103948","sicmutils.env.sci.macros/literal-function","f","sicm-signature","cljs.core/list?","cljs.core._EQ_","domain","range","sicmutils.env.sci.macros/with-literal-functions","seq103949","G__103950","G__103951","G__103952","litfns","body","pairs","sicmutils.abstract.function/binding-pairs","bindings","cljs.core.into","cljs.core/cat","sicmutils.env.sci.macros/let-coordinates","seq103954","G__103955","G__103956","G__103957","cljs.core/even?","sicmutils.util/illegal","prototypes","c-systems","cljs.core/second","system-names","cljs.core.comp","cljs.core/symbol","cljs.core/name","coordinate-names","cljs.core.mapcat","sicmutils.calculus.coordinate/symbols-from-prototype","coordinate-vector-field-names","sicmutils.calculus.vector-field/coordinate-name->vf-name","coordinate-form-field-names","sicmutils.calculus.form-field/coordinate-name->ff-name","cljs.core.mapv","sicmutils.calculus.coordinate/quotify-coordinate-prototype","sicmutils.env.sci.macros/using-coordinates","seq103958","G__103959","G__103960","G__103961","G__103962","env","coordinate-prototype","coordinate-system","sicmutils.env.sci.macros/define-coordinates","sys-name","cljs.core.symbol","coord-names","vector-field-names","form-field-names","sys-sym","value-sym","bind","cljs.core.map_indexed","i","sicmutils.env.sci.macros/tag-as-macro","cljs.core.vary_meta","cljs.core/assoc","sicmutils.env.sci.macros/all","sicmutils.env.sci.macros/pattern-macros","sicmutils.env.sci.macros/ns-bindings","cljs.core/select-keys"],"sourcesContent":["#_\"SPDX-License-Identifier: GPL-3.0\"\n\n(ns sicmutils.env.sci.macros\n  \"This namespace contains reimplementations of various macros from sicmutils,\n  defined in the form required by SCI.\"\n  (:require [pattern.consequence :as pc]\n            [pattern.rule :as r]\n            [pattern.syntax :as ps]\n            [sicmutils.abstract.function :as af]\n            [sicmutils.algebra.fold :as fold]\n            [sicmutils.calculus.coordinate :as cc]\n            [sicmutils.calculus.form-field :as ff]\n            [sicmutils.calculus.manifold :as m]\n            [sicmutils.calculus.vector-field :as vf]\n            [sicmutils.util :as u]))\n\n;; ## Pattern Matching Macros\n\n(defn pattern\n  \"Originally defined in `pattern.rule`.\"\n  ([_ _ form]\n   `(r/pattern*\n     ~(ps/compile-pattern form)))\n  ([_ _ form pred]\n   `(r/pattern*\n     ~(ps/compile-pattern form)\n     ~@(when pred [pred]))))\n\n(defn consequence\n  \"Originally defined in `pattern.rule`.\"\n  [_ _ form]\n  (let [sym (gensym)]\n    `(fn [~sym]\n       ~(pc/compile-skeleton sym form))))\n\n(defn template\n  \"Originally defined in `pattern.rule`.\"\n  ([_ _ form]\n   (pc/compile-skeleton (gensym) form))\n  ([_ _ m form]\n   (let [sym (gensym)]\n     `(let [~sym ~m]\n        ~(pc/compile-skeleton sym form)))))\n\n(defn rule\n  ([_ _ pattern consequent-fn]\n   (r/compile-rule pattern consequent-fn))\n  ([_ _ pattern pred skeleton]\n   (r/compile-rule pattern pred skeleton)))\n\n(defn ruleset\n  \"Originally defined in `pattern.rule`.\"\n  [_ _ & patterns-and-consequences]\n  {:pre (zero? (mod (count patterns-and-consequences) 3))}\n  (let [inputs (partition 3 patterns-and-consequences)\n        rules  (map #(apply r/compile-rule %) inputs)]\n    `(r/ruleset* ~@rules)))\n\n;; ## Fold Macros\n\n(defn kbk-n\n  \"Originally defined in `sicmutils.algebra.fold`.\"\n  [_ _ n]\n  `(fn ~@(fold/kbk-n-body n)))\n\n(defn fork\n  \"Originally defined in `sicmutils.util.def`.\"\n  [_ _&env & {:keys [cljs clj]}]\n  (if (contains? _&env '&env)\n    `(if (:ns ~'&env) ~cljs ~clj)\n    (if #?(:clj (:ns _&env) :cljs true)\n      cljs\n      clj)))\n\n;; ## SICMUtils Macros\n\n(defn literal-function\n  \"Originally defined in `sicmutils.env`.\"\n  ([_ _ f] `(af/literal-function ~f))\n  ([_ _ f sicm-signature]\n   (if (and (list? sicm-signature)\n            (= '-> (first sicm-signature)))\n     `(af/literal-function ~f '~sicm-signature)\n     `(af/literal-function ~f ~sicm-signature)))\n  ([_ _ f domain range]\n   `(af/literal-function ~f ~domain ~range)))\n\n(defn with-literal-functions\n  \"Originally defined in `sicmutils.abstract.function`.\"\n  [_ _ litfns & body]\n  (let [pairs    (af/binding-pairs litfns)\n        bindings (into [] cat pairs)]\n    `(let ~bindings ~@body)))\n\n(defn let-coordinates\n  \"Originally defined in `sicmutils.calculus.coordinate`.\"\n  [_ _ bindings & body]\n  (when-not (even? (count bindings))\n    (u/illegal \"let-coordinates requires an even number of bindings\"))\n  (let [pairs                         (partition 2 bindings)\n        prototypes                    (map first pairs)\n        c-systems                     (map second pairs)\n        system-names                  (map (comp symbol name) c-systems)\n        coordinate-names              (mapcat cc/symbols-from-prototype prototypes)\n        coordinate-vector-field-names (map vf/coordinate-name->vf-name coordinate-names)\n        coordinate-form-field-names   (map ff/coordinate-name->ff-name coordinate-names)]\n    `(let [[~@system-names :as c-systems#]\n           (mapv m/with-coordinate-prototype\n                 ~(into [] c-systems)\n                 ~(mapv cc/quotify-coordinate-prototype prototypes))\n\n           ~(into [] coordinate-names)\n           (flatten\n            (map cc/coordinate-functions c-systems#))\n\n           ~(into [] coordinate-vector-field-names)\n           (flatten\n            (map vf/coordinate-system->vector-basis c-systems#))\n\n           ~(into [] coordinate-form-field-names)\n           (flatten\n            (map ff/coordinate-system->oneform-basis c-systems#))]\n       ~@body)))\n\n(defn using-coordinates\n  \"Originally defined in `sicmutils.calculus.coordinate`.\"\n  [env form coordinate-prototype coordinate-system & body]\n  (apply let-coordinates\n         env form\n         [coordinate-prototype coordinate-system]\n         body))\n\n(defn define-coordinates\n  \"Originally defined in `sicmutils.calculus.coordinate`.\"\n  [_ _ coordinate-prototype coordinate-system]\n  (let [sys-name           (symbol (name coordinate-system))\n        coord-names        (cc/symbols-from-prototype coordinate-prototype)\n        vector-field-names (map vf/coordinate-name->vf-name coord-names)\n        form-field-names   (map ff/coordinate-name->ff-name coord-names)\n        sys-sym            (gensym)\n        value-sym          (gensym)\n        bind               (fn [sym form]\n                             `(do (clojure.core/ns-unmap *ns* '~sym)\n                                  (clojure.core/intern *ns* '~sym ~form)))]\n    `(let [~sys-sym (m/with-coordinate-prototype\n                      ~coordinate-system\n                      ~(cc/quotify-coordinate-prototype coordinate-prototype))]\n       ~(bind sys-name sys-sym)\n       (let [~value-sym\n             (into [] (flatten\n                       [(cc/coordinate-functions ~sys-sym)\n                        (vf/coordinate-system->vector-basis ~sys-sym)\n                        (ff/coordinate-system->oneform-basis ~sys-sym)]))]\n         ~@(map-indexed\n            (fn [i sym]\n              (bind sym `(nth ~value-sym ~i)))\n            (concat coord-names vector-field-names form-field-names))))))\n\n(defn- tag-as-macro [f]\n  (vary-meta f assoc :sci/macro true))\n\n(def all\n  {'kbk-n                  (tag-as-macro kbk-n)\n   'literal-function       (tag-as-macro literal-function)\n   'with-literal-functions (tag-as-macro with-literal-functions)\n   'let-coordinates        (tag-as-macro let-coordinates)\n   'using-coordinates      (tag-as-macro using-coordinates)\n   'define-coordinates     (tag-as-macro define-coordinates)\n   'fork                   (tag-as-macro fork)})\n\n(def pattern-macros\n  {'pattern     (tag-as-macro pattern)\n   'consequence (tag-as-macro consequence)\n   'template    (tag-as-macro template)\n   'rule        (tag-as-macro rule)\n   'ruleset     (tag-as-macro ruleset)})\n\n(def ns-bindings\n  {'pattern.rule pattern-macros\n\n   'sicmutils.env all\n\n   'sicmutils.abstract.function\n   (select-keys all ['with-literal-functions])\n\n   'sicmutils.algebra.fold\n   (select-keys all ['kbk-n])\n\n   'sicmutils.calculus.coordinate\n   (select-keys all ['let-coordinates 'using-coordinates\n                     'define-coordinates])\n\n   'sicmutils.util.def\n   (select-keys all ['fork])})\n"]}