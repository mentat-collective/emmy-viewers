shadow$provide.module$node_modules$three$src$geometries$PlaneGeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.PlaneBufferGeometry=exports.PlaneGeometry=void 0;global=require("module$node_modules$three$src$core$BufferGeometry");var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute");class PlaneGeometry extends global.BufferGeometry{constructor(width=1,height=1,widthSegments=1,heightSegments=1){super();this.type=
"PlaneGeometry";this.parameters={width,height,widthSegments,heightSegments};var width_half=width/2,height_half=height/2;widthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);const gridX1=widthSegments+1;var gridY1=heightSegments+1,segment_width=width/widthSegments,segment_height=height/heightSegments;height=[];width=[];const normals=[],uvs=[];for(let iy=0;iy<gridY1;iy++){const y=iy*segment_height-height_half;for(let ix=0;ix<gridX1;ix++)width.push(ix*segment_width-width_half,
-y,0),normals.push(0,0,1),uvs.push(ix/widthSegments),uvs.push(1-iy/heightSegments)}for(width_half=0;width_half<heightSegments;width_half++)for(height_half=0;height_half<widthSegments;height_half++)gridY1=height_half+gridX1*(width_half+1),segment_width=height_half+1+gridX1*(width_half+1),segment_height=height_half+1+gridX1*width_half,height.push(height_half+gridX1*width_half,gridY1,segment_height),height.push(gridY1,segment_width,segment_height);this.setIndex(height);this.setAttribute("position",new _BufferAttribute.Float32BufferAttribute(width,
3));this.setAttribute("normal",new _BufferAttribute.Float32BufferAttribute(normals,3));this.setAttribute("uv",new _BufferAttribute.Float32BufferAttribute(uvs,2))}static fromJSON(data){return new PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments)}}exports.PlaneBufferGeometry=exports.PlaneGeometry=PlaneGeometry}
//# sourceMappingURL=module$node_modules$three$src$geometries$PlaneGeometry.js.map
