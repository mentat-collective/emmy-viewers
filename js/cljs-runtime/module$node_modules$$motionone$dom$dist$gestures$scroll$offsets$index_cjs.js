shadow$provide.module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$index_cjs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$motionone$utils$dist$index_cjs"),inset=require("module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$inset_cjs"),presets=require("module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$presets_cjs"),offset=require("module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$offset_cjs");
const point={x:0,y:0};exports.resolveOffsets=function(container,info,options){let {offset:offsetDefinition=presets.ScrollOffset.All}=options;const {target=container,axis="y"}=options;options="y"===axis?"height":"width";const inset$1=target!==container?inset.calcInset(target,container):point,targetSize=target===container?{width:container.scrollWidth,height:container.scrollHeight}:{width:target.clientWidth,height:target.clientHeight};container={width:container.clientWidth,height:container.clientHeight};
info[axis].offset.length=0;let hasChanged=!info[axis].interpolate;const numOffsets=offsetDefinition.length;for(let i=0;i<numOffsets;i++){const offset$1=offset.resolveOffset(offsetDefinition[i],container[options],targetSize[options],inset$1[axis]);hasChanged||offset$1===info[axis].interpolatorOffsets[i]||(hasChanged=!0);info[axis].offset[i]=offset$1}hasChanged&&(info[axis].interpolate=utils.interpolate(utils.defaultOffset(numOffsets),info[axis].offset),info[axis].interpolatorOffsets=[...info[axis].offset]);
info[axis].progress=info[axis].interpolate(info[axis].current)}}
//# sourceMappingURL=module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$index_cjs.js.map
