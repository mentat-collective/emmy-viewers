shadow$provide.module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs=function(global,require,module,exports){function measure(container,target=container,info){info.x.targetOffset=0;info.y.targetOffset=0;if(target!==container){let node=target;for(;node&&node!=container;)info.x.targetOffset+=node.offsetLeft,info.y.targetOffset+=node.offsetTop,node=node.offsetParent}info.x.targetLength=target===container?target.scrollWidth:target.clientWidth;info.y.targetLength=target===container?
target.scrollHeight:target.clientHeight;info.x.containerLength=container.clientWidth;info.y.containerLength=container.clientHeight}function scrubAnimation(controls,axisInfo){controls.pause();controls.forEachNative((animation,{easing})=>{var _a,_b;if(animation.updateDuration)easing||(animation.easing=utils.noopReturn),animation.updateDuration(1);else{const timingOptions={duration:1E3};easing||(timingOptions.easing="linear");null===(_b=null===(_a=animation.effect)||void 0===_a?void 0:_a.updateTiming)||
void 0===_b?void 0:_b.call(_a,timingOptions)}});return()=>{controls.currentTime=axisInfo.progress}}Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$motionone$utils$dist$index_cjs"),info$jscomp$0=require("module$node_modules$$motionone$dom$dist$gestures$scroll$info_cjs"),index=require("module$node_modules$$motionone$dom$dist$gestures$scroll$offsets$index_cjs");exports.createOnScrollHandler=function(element,onScroll,info$1,options={}){const axis=options.axis||
"y";return{measure:()=>measure(element,options.target,info$1),update:time=>{info$jscomp$0.updateScrollInfo(element,info$1,time);(options.offset||options.target)&&index.resolveOffsets(element,info$1,options)},notify:"function"===typeof onScroll?()=>onScroll(info$1):scrubAnimation(onScroll,info$1[axis])}}}
//# sourceMappingURL=module$node_modules$$motionone$dom$dist$gestures$scroll$on_scroll_handler_cjs.js.map
