shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLGeometries=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLGeometries=function(gl,attributes,info,bindingStates){function onGeometryDispose(event){event=event.target;null!==event.index&&attributes.remove(event.index);for(var name in event.attributes)attributes.remove(event.attributes[name]);event.removeEventListener("dispose",onGeometryDispose);delete geometries[event.id];
if(name=wireframeAttributes.get(event))attributes.remove(name),wireframeAttributes.delete(event);bindingStates.releaseStatesOfGeometry(event);!0===event.isInstancedBufferGeometry&&delete event._maxInstanceCount;info.memory.geometries--}function updateWireframeAttribute(geometry){var indices=[],geometryIndex=geometry.index,geometryPosition=geometry.attributes.position;if(null!==geometryIndex){geometryPosition=geometryIndex.array;geometryIndex=geometryIndex.version;for(let i=0,l=geometryPosition.length;i<
l;i+=3){var a=geometryPosition[i+0],b=geometryPosition[i+1];const c=geometryPosition[i+2];indices.push(a,b,b,c,c,a)}}else{a=geometryPosition.array;geometryIndex=geometryPosition.version;for(let i=0,l=a.length/3-1;i<l;i+=3)geometryPosition=i+0,a=i+1,b=i+2,indices.push(geometryPosition,a,a,b,b,geometryPosition)}indices=new ((0,_utils.arrayNeedsUint32)(indices)?_BufferAttribute.Uint32BufferAttribute:_BufferAttribute.Uint16BufferAttribute)(indices,1);indices.version=geometryIndex;(geometryIndex=wireframeAttributes.get(geometry))&&
attributes.remove(geometryIndex);wireframeAttributes.set(geometry,indices)}const geometries={},wireframeAttributes=new WeakMap;return{get:function(object,geometry){if(!0===geometries[geometry.id])return geometry;geometry.addEventListener("dispose",onGeometryDispose);geometries[geometry.id]=!0;info.memory.geometries++;return geometry},update:function(geometry){var geometryAttributes=geometry.attributes;for(const name in geometryAttributes)attributes.update(geometryAttributes[name],gl.ARRAY_BUFFER);
geometry=geometry.morphAttributes;for(const name in geometry){geometryAttributes=geometry[name];for(let i=0,l=geometryAttributes.length;i<l;i++)attributes.update(geometryAttributes[i],gl.ARRAY_BUFFER)}},getWireframeAttribute:function(geometry){const currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){const geometryIndex=geometry.index;null!==geometryIndex&&currentAttribute.version<geometryIndex.version&&updateWireframeAttribute(geometry)}else updateWireframeAttribute(geometry);
return wireframeAttributes.get(geometry)}}};var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute"),_utils=require("module$node_modules$three$src$utils")}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLGeometries.js.map
