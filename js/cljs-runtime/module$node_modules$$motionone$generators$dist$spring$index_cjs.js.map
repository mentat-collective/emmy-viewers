{
"version":3,
"file":"module$node_modules$$motionone$generators$dist$spring$index_cjs.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/@motionone/generators/dist/spring/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$motionone$generators$dist$spring$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar defaults = require('./defaults.cjs.js');\nvar utils$1 = require('./utils.cjs.js');\nvar hasReachedTarget = require('../utils/has-reached-target.cjs.js');\nvar velocity = require('../utils/velocity.cjs.js');\n\nconst spring = ({ stiffness = defaults.defaults.stiffness, damping = defaults.defaults.damping, mass = defaults.defaults.mass, from = 0, to = 1, velocity: velocity$1 = 0.0, restSpeed = 2, restDistance = 0.5, } = {}) => {\n    velocity$1 = velocity$1 ? utils.time.s(velocity$1) : 0.0;\n    const state = {\n        done: false,\n        hasReachedTarget: false,\n        current: from,\n        target: to,\n    };\n    const initialDelta = to - from;\n    const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n    const dampingRatio = utils$1.calcDampingRatio(stiffness, damping, mass);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = undampedAngularFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n        // Underdamped spring (bouncy)\n        resolveSpring = (t) => to -\n            Math.exp(-dampingRatio * undampedAngularFreq * t) *\n                (((-velocity$1 + dampingRatio * undampedAngularFreq * initialDelta) /\n                    angularFreq) *\n                    Math.sin(angularFreq * t) +\n                    initialDelta * Math.cos(angularFreq * t));\n    }\n    else {\n        // Critically damped spring\n        resolveSpring = (t) => {\n            return (to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta + (-velocity$1 + undampedAngularFreq * initialDelta) * t));\n        };\n    }\n    return (t) => {\n        state.current = resolveSpring(t);\n        const currentVelocity = t === 0\n            ? velocity$1\n            : velocity.calcGeneratorVelocity(resolveSpring, t, state.current);\n        const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n        const isBelowDisplacementThreshold = Math.abs(to - state.current) <= restDistance;\n        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;\n        state.hasReachedTarget = hasReachedTarget.hasReachedTarget(from, to, state.current);\n        return state;\n    };\n};\n\nexports.spring = spring;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","utils","defaults","utils$1","hasReachedTarget","velocity","spring","stiffness","damping","mass","from","to","velocity$1","restSpeed","restDistance","time","s","state","done","current","target","initialDelta","undampedAngularFreq","Math","sqrt","dampingRatio","calcDampingRatio","resolveSpring","angularFreq","t","exp","sin","cos","currentVelocity","calcGeneratorVelocity","isBelowDisplacementThreshold","abs"]
}
