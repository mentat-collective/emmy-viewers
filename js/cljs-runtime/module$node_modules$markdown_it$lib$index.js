shadow$provide.module$node_modules$markdown_it$lib$index=function(global,require,module,exports){function validateLink(url){url=url.trim().toLowerCase();return BAD_PROTO_RE.test(url)?GOOD_DATA_RE.test(url)?!0:!1:!0}function normalizeLink(url){url=mdurl.parse(url,!0);if(url.hostname&&(!url.protocol||0<=RECODE_HOSTNAME_FOR.indexOf(url.protocol)))try{url.hostname=punycode.toASCII(url.hostname)}catch(er){}return mdurl.encode(mdurl.format(url))}function normalizeLinkText(url){url=mdurl.parse(url,!0);if(url.hostname&&
(!url.protocol||0<=RECODE_HOSTNAME_FOR.indexOf(url.protocol)))try{url.hostname=punycode.toUnicode(url.hostname)}catch(er){}return mdurl.decode(mdurl.format(url),mdurl.decode.defaultChars+"%")}function MarkdownIt(presetName,options){if(!(this instanceof MarkdownIt))return new MarkdownIt(presetName,options);options||utils.isString(presetName)||(options=presetName||{},presetName="default");this.inline=new ParserInline;this.block=new ParserBlock;this.core=new ParserCore;this.renderer=new Renderer;this.linkify=
new LinkifyIt;this.validateLink=validateLink;this.normalizeLink=normalizeLink;this.normalizeLinkText=normalizeLinkText;this.utils=utils;this.helpers=utils.assign({},helpers);this.options={};this.configure(presetName);options&&this.set(options)}var utils=require("module$node_modules$markdown_it$lib$common$utils"),helpers=require("module$node_modules$markdown_it$lib$helpers$index"),Renderer=require("module$node_modules$markdown_it$lib$renderer"),ParserCore=require("module$node_modules$markdown_it$lib$parser_core"),
ParserBlock=require("module$node_modules$markdown_it$lib$parser_block"),ParserInline=require("module$node_modules$markdown_it$lib$parser_inline"),LinkifyIt=require("module$node_modules$linkify_it$index"),mdurl=require("module$node_modules$mdurl$index"),punycode=require("module$node_modules$punycode$punycode"),config={default:require("module$node_modules$markdown_it$lib$presets$default"),zero:require("module$node_modules$markdown_it$lib$presets$zero"),commonmark:require("module$node_modules$markdown_it$lib$presets$commonmark")},
BAD_PROTO_RE=/^(vbscript|javascript|file|data):/,GOOD_DATA_RE=/^data:image\/(gif|png|jpeg|webp);/,RECODE_HOSTNAME_FOR=["http:","https:","mailto:"];MarkdownIt.prototype.set=function(options){utils.assign(this.options,options);return this};MarkdownIt.prototype.configure=function(presets){var self=this;if(utils.isString(presets)){var presetName=presets;presets=config[presetName];if(!presets)throw Error('Wrong `markdown-it` preset "'+presetName+'", check name');}if(!presets)throw Error("Wrong `markdown-it` preset, can't be empty");
presets.options&&self.set(presets.options);presets.components&&Object.keys(presets.components).forEach(function(name){presets.components[name].rules&&self[name].ruler.enableOnly(presets.components[name].rules);presets.components[name].rules2&&self[name].ruler2.enableOnly(presets.components[name].rules2)});return this};MarkdownIt.prototype.enable=function(list,ignoreInvalid){var result=[];Array.isArray(list)||(list=[list]);["core","block","inline"].forEach(function(chain){result=result.concat(this[chain].ruler.enable(list,
!0))},this);result=result.concat(this.inline.ruler2.enable(list,!0));var missed=list.filter(function(name){return 0>result.indexOf(name)});if(missed.length&&!ignoreInvalid)throw Error("MarkdownIt. Failed to enable unknown rule(s): "+missed);return this};MarkdownIt.prototype.disable=function(list,ignoreInvalid){var result=[];Array.isArray(list)||(list=[list]);["core","block","inline"].forEach(function(chain){result=result.concat(this[chain].ruler.disable(list,!0))},this);result=result.concat(this.inline.ruler2.disable(list,
!0));var missed=list.filter(function(name){return 0>result.indexOf(name)});if(missed.length&&!ignoreInvalid)throw Error("MarkdownIt. Failed to disable unknown rule(s): "+missed);return this};MarkdownIt.prototype.use=function(plugin){var args=[this].concat(Array.prototype.slice.call(arguments,1));plugin.apply(plugin,args);return this};MarkdownIt.prototype.parse=function(src,env){if("string"!==typeof src)throw Error("Input data should be a String");src=new this.core.State(src,this,env);this.core.process(src);
return src.tokens};MarkdownIt.prototype.render=function(src,env){env=env||{};return this.renderer.render(this.parse(src,env),this.options,env)};MarkdownIt.prototype.parseInline=function(src,env){src=new this.core.State(src,this,env);src.inlineMode=!0;this.core.process(src);return src.tokens};MarkdownIt.prototype.renderInline=function(src,env){env=env||{};return this.renderer.render(this.parseInline(src,env),this.options,env)};module.exports=MarkdownIt}
//# sourceMappingURL=module$node_modules$markdown_it$lib$index.js.map
