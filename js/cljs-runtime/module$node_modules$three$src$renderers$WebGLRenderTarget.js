shadow$provide.module$node_modules$three$src$renderers$WebGLRenderTarget=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLRenderTarget=void 0;global=require("module$node_modules$three$src$core$EventDispatcher");var _Texture=require("module$node_modules$three$src$textures$Texture"),_constants=require("module$node_modules$three$src$constants"),_Vector=require("module$node_modules$three$src$math$Vector4");class WebGLRenderTarget extends global.EventDispatcher{constructor(width,
height,options={}){super();this.width=width;this.height=height;this.depth=1;this.scissor=new _Vector.Vector4(0,0,width,height);this.scissorTest=!1;this.viewport=new _Vector.Vector4(0,0,width,height);this.texture=new _Texture.Texture(void 0,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.isRenderTargetTexture=!0;this.texture.image={width,height,depth:1};this.texture.generateMipmaps=void 0!==
options.generateMipmaps?options.generateMipmaps:!1;this.texture.internalFormat=void 0!==options.internalFormat?options.internalFormat:null;this.texture.minFilter=void 0!==options.minFilter?options.minFilter:_constants.LinearFilter;this.depthBuffer=void 0!==options.depthBuffer?options.depthBuffer:!0;this.stencilBuffer=void 0!==options.stencilBuffer?options.stencilBuffer:!1;this.depthTexture=void 0!==options.depthTexture?options.depthTexture:null}setTexture(texture){texture.image={width:this.width,
height:this.height,depth:this.depth};this.texture=texture}setSize(width,height,depth=1){if(this.width!==width||this.height!==height||this.depth!==depth)this.width=width,this.height=height,this.depth=depth,this.texture.image.width=width,this.texture.image.height=height,this.texture.image.depth=depth,this.dispose();this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height)}clone(){return(new this.constructor).copy(this)}copy(source){this.width=source.width;this.height=source.height;this.depth=
source.depth;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.texture.image=Object.assign({},source.texture.image);this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this}dispose(){this.dispatchEvent({type:"dispose"})}}exports.WebGLRenderTarget=WebGLRenderTarget;WebGLRenderTarget.prototype.isWebGLRenderTarget=!0}
//# sourceMappingURL=module$node_modules$three$src$renderers$WebGLRenderTarget.js.map
