{
"version":3,
"file":"module$node_modules$lodash$isTypedArray.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChGC,MAAAA,CAAmBH,OAAA,CAAQ,8CAAR,CACnBI,QAAAA,CAAYJ,OAAA,CAAQ,uCAAR,CAuBZK,QAAAA,CAAe,CAnBfC,OAmBe,EAtBfC,OAsBe,CAtBJP,OAAA,CAAQ,sCAAR,CAsBI,GAnBgBO,OAASF,CAAAA,YAmBzB,EAAmBD,OAAA,CAAUE,OAAV,CAAnB,CAAiDH,MAEpEF,OAAOC,CAAAA,OAAP,CAAiBG,OA3BmF;",
"sources":["node_modules/lodash/isTypedArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isTypedArray\"] = function(global,require,module,exports) {\nvar baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseIsTypedArray","baseUnary","isTypedArray","nodeIsTypedArray","nodeUtil"]
}
