shadow$provide.module$node_modules$$motionone$animation$dist$Animation_cjs=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});var utils=require("module$node_modules$$motionone$utils$dist$index_cjs"),easing=require("module$node_modules$$motionone$animation$dist$utils$easing_cjs");class Animation{constructor(output,keyframes=[0,1],{easing:easing$1,duration:initialDuration=utils.defaults.duration,delay=utils.defaults.delay,endDelay=utils.defaults.endDelay,
repeat=utils.defaults.repeat,offset,direction="normal"}={}){this.startTime=null;this.rate=1;this.t=0;this.cancelTimestamp=null;this.easing=utils.noopReturn;this.repeat=this.totalDuration=this.duration=0;this.playState="idle";this.finished=new Promise((resolve,reject)=>{this.resolve=resolve;this.reject=reject});easing$1=easing$1||utils.defaults.easing;if(utils.isEasingGenerator(easing$1)){const custom=easing$1.createAnimation(keyframes);easing$1=custom.easing;keyframes=custom.keyframes||keyframes;
initialDuration=custom.duration||initialDuration}this.repeat=repeat;this.easing=utils.isEasingList(easing$1)?utils.noopReturn:easing.getEasingFunction(easing$1);this.updateDuration(initialDuration);const interpolate=utils.interpolate(keyframes,offset,utils.isEasingList(easing$1)?easing$1.map(easing.getEasingFunction):utils.noopReturn);this.tick=timestamp=>{var _a;this.t=timestamp=void 0!==this.pauseTime?this.pauseTime:(timestamp-this.startTime)*this.rate;timestamp=Math.max(timestamp/1E3-delay,0);
"finished"===this.playState&&void 0===this.pauseTime&&(timestamp=this.totalDuration);var progress=timestamp/this.duration;let currentIteration=Math.floor(progress);var iterationProgress=progress%1;!iterationProgress&&1<=progress&&(iterationProgress=1);1===iterationProgress&&currentIteration--;progress=currentIteration%2;if("reverse"===direction||"alternate"===direction&&progress||"alternate-reverse"===direction&&!progress)iterationProgress=1-iterationProgress;iterationProgress=interpolate(this.easing(timestamp>=
this.totalDuration?1:Math.min(iterationProgress,1)));output(iterationProgress);void 0===this.pauseTime&&("finished"===this.playState||timestamp>=this.totalDuration+endDelay)?(this.playState="finished",null===(_a=this.resolve)||void 0===_a?void 0:_a.call(this,iterationProgress)):"idle"!==this.playState&&(this.frameRequestId=requestAnimationFrame(this.tick))};this.play()}play(){const now=performance.now();this.playState="running";void 0!==this.pauseTime?this.startTime=now-this.pauseTime:this.startTime||
(this.startTime=now);this.cancelTimestamp=this.startTime;this.pauseTime=void 0;this.frameRequestId=requestAnimationFrame(this.tick)}pause(){this.playState="paused";this.pauseTime=this.t}finish(){this.playState="finished";this.tick(0)}stop(){var _a;this.playState="idle";void 0!==this.frameRequestId&&cancelAnimationFrame(this.frameRequestId);null===(_a=this.reject)||void 0===_a?void 0:_a.call(this,!1)}cancel(){this.stop();this.tick(this.cancelTimestamp)}reverse(){this.rate*=-1}commitStyles(){}updateDuration(duration){this.duration=
duration;this.totalDuration=duration*(this.repeat+1)}get currentTime(){return this.t}set currentTime(t){void 0!==this.pauseTime||0===this.rate?this.pauseTime=t:this.startTime=performance.now()-t/this.rate}get playbackRate(){return this.rate}set playbackRate(rate){this.rate=rate}}exports.Animation=Animation}
//# sourceMappingURL=module$node_modules$$motionone$animation$dist$Animation_cjs.js.map
