{
"version":3,
"file":"module$node_modules$css_what$lib$commonjs$parse.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/css-what/lib/commonjs/parse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$css_what$lib$commonjs$parse\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = exports.isTraversal = void 0;\nvar types_1 = require(\"./types\");\nvar reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nvar actionTypes = new Map([\n    [126 /* Tilde */, types_1.AttributeAction.Element],\n    [94 /* Circumflex */, types_1.AttributeAction.Start],\n    [36 /* Dollar */, types_1.AttributeAction.End],\n    [42 /* Asterisk */, types_1.AttributeAction.Any],\n    [33 /* ExclamationMark */, types_1.AttributeAction.Not],\n    [124 /* Pipe */, types_1.AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nvar unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nfunction isTraversal(selector) {\n    switch (selector.type) {\n        case types_1.SelectorType.Adjacent:\n        case types_1.SelectorType.Child:\n        case types_1.SelectorType.Descendant:\n        case types_1.SelectorType.Parent:\n        case types_1.SelectorType.Sibling:\n        case types_1.SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nexports.isTraversal = isTraversal;\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nfunction parse(selector) {\n    var subselects = [];\n    var endIndex = parseSelector(subselects, \"\".concat(selector), 0);\n    if (endIndex < selector.length) {\n        throw new Error(\"Unmatched selector: \".concat(selector.slice(endIndex)));\n    }\n    return subselects;\n}\nexports.parse = parse;\nfunction parseSelector(subselects, selector, selectorIndex) {\n    var tokens = [];\n    function getName(offset) {\n        var match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \".concat(selector.slice(selectorIndex)));\n        }\n        var name = match[0];\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        var start = selectorIndex;\n        var counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type: type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: types_1.SelectorType.Attribute,\n            name: name,\n            action: action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === types_1.SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        var firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== types_1.SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: types_1.SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(types_1.SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(types_1.SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(types_1.SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(types_1.SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", types_1.AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", types_1.AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                var name_1 = void 0;\n                var namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name_1 = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name_1 = getName(2);\n                }\n                else {\n                    name_1 = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name_1;\n                        name_1 = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                var action = types_1.AttributeAction.Exists;\n                var possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = types_1.AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                var value = \"\";\n                var ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        var quote = selector.charCodeAt(selectorIndex);\n                        var sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        var valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    var forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                var attributeSelector = {\n                    type: types_1.SelectorType.Attribute,\n                    name: name_1,\n                    action: action,\n                    value: value,\n                    namespace: namespace,\n                    ignoreCase: ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: types_1.SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                var name_2 = getName(1).toLowerCase();\n                var data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name_2)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(\"Pseudo-selector \".concat(name_2, \" cannot be quoted\"));\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(\"Missing closing parenthesis in :\".concat(name_2, \" (\").concat(selector, \")\"));\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name_2)) {\n                            var quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: types_1.SelectorType.Pseudo, name: name_2, data: data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    var endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                var namespace = null;\n                var name_3 = void 0;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name_3 = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name_3 = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(types_1.SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name_3 = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name_3;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name_3 = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name_3 = getName(1);\n                    }\n                }\n                tokens.push(name_3 === \"*\"\n                    ? { type: types_1.SelectorType.Universal, namespace: namespace }\n                    : { type: types_1.SelectorType.Tag, name: name_3, namespace: namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","isTraversal","selector","type","types_1","SelectorType","Adjacent","Child","Descendant","Parent","Sibling","ColumnCombinator","funescape","_","escaped","escapedWhitespace","high","parseInt","String","fromCharCode","isQuote","c","isWhitespace","parseSelector","subselects","selectorIndex","getName","offset","match","slice","reName","Error","concat","name","length","replace","reEscape","stripWhitespace","charCodeAt","readValueWithParenthesis","start","counter","isEscaped","str","pos","slashCount","ensureNotTraversal","tokens","addTraversal","push","addSpecialAttribute","action","Attribute","value","namespace","ignoreCase","finalizeSubselector","pop","firstChar","AttributeAction","Element","Equals","name_1","startsWith","Exists","possibleAction","actionTypes","get","quote","sectionEnd","valueStart","forceIgnore","attributeSelector","PseudoElement","toLowerCase","data","name_2","unpackPseudos","has","stripQuotesFromPseudos","quot","Pseudo","endIndex","indexOf","name_3","test","Universal","Tag","Object","defineProperty","parse","Map","Start","End","Any","Not","Hyphen","Set"]
}
