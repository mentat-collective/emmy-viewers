shadow$provide.module$node_modules$mathbox$build$esm$render$buffer$arraybuffer=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.ArrayBuffer_=void 0;var UData=
function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$data"));global=require("module$node_modules$mathbox$build$esm$render$buffer$databuffer");class ArrayBuffer_ extends global.DataBuffer{constructor(renderer,shaders,options){const width=options.width||1,history=options.history||1;options.width=width;options.height=history;options.depth=
1;super(renderer,shaders,options,!1);this.width=width;this.history=history;this.samples=width;this.wrap=1<history;this.build(options)}build(_options){super.build();this.pad=this.index=0;return this.streamer=this.generate(this.data)}setActive(i){return this.pad=Math.max(0,this.width-i)}fill(){const {callback}=this;"function"===typeof callback.reset&&callback.reset();const {emit,count,done,reset}=this.streamer;reset();const limit=this.samples-this.pad;let i=0;for(;!done()&&i<limit&&!1!==callback(emit,
i++);)!0;return Math.floor(count()/this.items)}write(n){null==n&&(n=this.samples);n*=this.items;this.texture.write(this.data,0,this.index,n,1);this.dataPointer.set(.5,this.index+.5);this.index=(this.index+this.history-1)%this.history;return this.filled=Math.min(this.history,this.filled+1)}through(callback,target){let dst,src;const {consume,done}=src=this.streamer,{emit}=dst=target.streamer;let i=0,pipe=()=>consume((x,y,z,w)=>callback(emit,x,y,z,w,i));pipe=UData.repeatCall(pipe,this.items);return()=>
{src.reset();dst.reset();const limit=this.samples-this.pad;for(i=0;!done()&&i<limit;)pipe(),i++;return src.count()}}}exports.ArrayBuffer_=ArrayBuffer_}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$buffer$arraybuffer.js.map
