{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$meshes$sprite.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/meshes/sprite.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$meshes$sprite\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sprite = void 0;\n\nvar _base = require(\"./base.js\");\n\nvar _constants = require(\"three/src/constants.js\");\n\nvar _Mesh = require(\"three/src/objects/Mesh.js\");\n\nvar _spritegeometry = require(\"../geometry/spritegeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Sprite extends _base.Base {\n  constructor(renderer, shaders, options) {\n    let f;\n    super(renderer, shaders, options);\n    let {\n      uniforms\n    } = options;\n    const {\n      material,\n      position,\n      sprite,\n      map,\n      combine,\n      linear,\n      color,\n      mask,\n      stpq\n    } = options;\n\n    if (uniforms == null) {\n      uniforms = {};\n    }\n\n    const hasStyle = uniforms.styleColor != null;\n    this.geometry = new _spritegeometry.SpriteGeometry({\n      items: options.items,\n      width: options.width,\n      height: options.height,\n      depth: options.depth\n    });\n\n    this._adopt(uniforms);\n\n    this._adopt(this.geometry.uniforms); // Shared vertex shader\n\n\n    const factory = shaders.material();\n    const v = factory.vertex;\n    v.pipe(this._vertexColor(color, mask));\n\n    v.require(this._vertexPosition(position, material, map, 2, stpq));\n\n    v.require(sprite);\n\n    v.pipe(\"sprite.position\", this.uniforms);\n    v.pipe(\"project.position\", this.uniforms); // Shared fragment shader\n\n    factory.fragment = f = this._fragmentColor(hasStyle, material, color, mask, map, 2, stpq, combine, linear); // Split fragment into edge and fill pass for better z layering\n\n    const edgeFactory = shaders.material();\n    edgeFactory.vertex.pipe(v);\n    edgeFactory.fragment.pipe(f);\n    edgeFactory.fragment.pipe(\"fragment.transparent\", this.uniforms);\n    const fillFactory = shaders.material();\n    fillFactory.vertex.pipe(v);\n    fillFactory.fragment.pipe(f);\n    fillFactory.fragment.pipe(\"fragment.solid\", this.uniforms);\n    const fillOpts = fillFactory.link({\n      side: _constants.DoubleSide\n    });\n    this.fillMaterial = this._material(fillOpts);\n    const edgeOpts = edgeFactory.link({\n      side: _constants.DoubleSide\n    });\n    this.edgeMaterial = this._material(edgeOpts);\n    this.fillObject = new _Mesh.Mesh(this.geometry, this.fillMaterial);\n    this.edgeObject = new _Mesh.Mesh(this.geometry, this.edgeMaterial);\n\n    this._raw(this.fillObject);\n\n    this.fillObject.userData = fillOpts;\n\n    this._raw(this.edgeObject);\n\n    this.edgeObject.userData = edgeOpts;\n    this.renders = [this.fillObject, this.edgeObject];\n  }\n\n  show(transparent, blending, order, depth) {\n    this._show(this.edgeObject, true, blending, order, depth);\n\n    return this._show(this.fillObject, transparent, blending, order, depth);\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.edgeMaterial.dispose();\n    this.fillMaterial.dispose();\n    this.renders = this.geometry = this.edgeMaterial = this.fillMaterial = this.edgeObject = this.fillObject = null;\n    return super.dispose();\n  }\n\n}\n\nexports.Sprite = Sprite;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Sprite","_base","_constants","_Mesh","_spritegeometry","Base","constructor","renderer","shaders","options","f","uniforms","material","position","sprite","map","combine","linear","color","mask","stpq","hasStyle","styleColor","geometry","SpriteGeometry","items","width","height","depth","_adopt","factory","v","vertex","pipe","_vertexColor","_vertexPosition","fragment","_fragmentColor","edgeFactory","fillFactory","fillOpts","link","side","DoubleSide","fillMaterial","_material","edgeOpts","edgeMaterial","fillObject","Mesh","edgeObject","_raw","userData","renders","show","transparent","blending","order","_show","dispose"]
}
