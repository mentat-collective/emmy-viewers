{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$operator$slice.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/primitives/types/operator/slice.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$operator$slice\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Slice = void 0;\n\nvar _operator = require(\"./operator.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Slice extends _operator.Operator {\n  static initClass() {\n    this.traits = [\"node\", \"bind\", \"operator\", \"source\", \"index\", \"slice\"];\n  }\n\n  getDimensions() {\n    return this._resample(this.bind.source.getDimensions());\n  }\n\n  getActiveDimensions() {\n    return this._resample(this.bind.source.getActiveDimensions());\n  }\n\n  getFutureDimensions() {\n    return this._resample(this.bind.source.getFutureDimensions());\n  }\n\n  getIndexDimensions() {\n    return this._resample(this.bind.source.getIndexDimensions());\n  }\n\n  sourceShader(shader) {\n    shader.pipe(\"slice.position\", this.uniforms);\n    return this.bind.source.sourceShader(shader);\n  }\n\n  _resolve(key, dims) {\n    const range = this.props[key];\n    const dim = dims[key];\n\n    if (range == null) {\n      return [0, dim];\n    }\n\n    const index = function (i, dim) {\n      if (i < 0) {\n        return dim + i;\n      } else {\n        return i;\n      }\n    };\n\n    const start = index(Math.round(range.x), dim);\n    let end = index(Math.round(range.y), dim);\n    end = Math.max(start, end);\n    return [start, end - start];\n  }\n\n  _resample(dims) {\n    dims.width = this._resolve(\"width\", dims)[1];\n    dims.height = this._resolve(\"height\", dims)[1];\n    dims.depth = this._resolve(\"depth\", dims)[1];\n    dims.items = this._resolve(\"items\", dims)[1];\n    return dims;\n  }\n\n  make() {\n    super.make();\n\n    if (this.bind.source == null) {\n      return;\n    }\n\n    return this.uniforms = {\n      sliceOffset: this._attributes.make(this._types.vec4())\n    };\n  }\n\n  unmake() {\n    return super.unmake();\n  }\n\n  resize() {\n    if (this.bind.source == null) {\n      return;\n    }\n\n    const dims = this.bind.source.getActiveDimensions();\n    this.uniforms.sliceOffset.value.set(this._resolve(\"width\", dims)[0], this._resolve(\"height\", dims)[0], this._resolve(\"depth\", dims)[0], this._resolve(\"items\", dims)[0]);\n    return super.resize();\n  }\n\n  change(changed, touched, _init) {\n    if (touched[\"operator\"]) {\n      return this.rebuild();\n    }\n\n    if (touched[\"slice\"]) {\n      return this.resize();\n    }\n  }\n\n}\n\nexports.Slice = Slice;\nSlice.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Slice","_operator","Operator","initClass","traits","getDimensions","_resample","bind","source","getActiveDimensions","getFutureDimensions","getIndexDimensions","sourceShader","shader","pipe","uniforms","_resolve","key","dims","range","props","dim","Math","round","x","i","y","end","max","start","width","height","depth","items","make","sliceOffset","_attributes","_types","vec4","unmake","resize","set","change","changed","touched","_init","rebuild"]
}
