shadow$provide.module$node_modules$$mentatcollective$jsxgraph$src$3d$box3d=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var _jxg=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$jxg")),_type=_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$utils$type"));_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$math"));_interopRequireDefault(require("module$node_modules$$mentatcollective$jsxgraph$src$math$geometry"));
_jxg.default.createAxes3D=function(board,parents,attributes){var view=parents[0],i,directions=["x","y","z"],sides=["Rear","Front"],rear=[0,0,0],front=[0,0,0],axes={};if(_type.default.exists(view.bbox3D))for(i=0;i<directions.length;i++)rear[i]=view.bbox3D[i][0],front[i]=view.bbox3D[i][1];else for(i=0;i<directions.length;i++)rear[i]=parents[1][i],front[i]=parents[2][1];parents=_type.default.copyAttributes(attributes,board.options,"axes3d");var j=parents.axesposition;for(i=0;i<directions.length;i++){var dir=
directions[i];var na=dir+"Axis";if("center"===j){var from=[0,0,0];var to=[0,0,0];to[i]=front[i];axes[na]=view.create("axis3d",[from,to],parents[na.toLowerCase()])}else na+="Border",from=rear.slice(),to=front.slice(),2===i?(from[1]=front[1],to[0]=rear[0]):(from[i]=front[i],to[2]=rear[2]),to[i]=front[i],parents[na.toLowerCase()].lastArrow=!1,axes[na]=view.create("axis3d",[from,to],parents[na.toLowerCase()]),dir={visible:!0,minorTicks:0,tickEndings:[0,1],drawLabels:!1},2===i&&(dir.tickEndings=[1,0]),
axes[na+"Ticks"]=view.create("ticks",[axes[na],1],dir)}axes.O=view.create("intersection",[axes[directions[0]+"Axis"],axes[directions[1]+"Axis"]],{name:"",visible:!1,withLabel:!1});for(i=0;i<directions.length;i++){var i1=(i+1)%3;var k=(i+2)%3;dir=directions[i];for(j=0;j<sides.length;j++){from=[0,0,0];from[i]=0===j?rear[i]:front[i];to=[0,0,0];var vec2=[0,0,0];to[i1]=1;vec2[k]=1;var range1=[rear[i1],front[i1]];var range2=[rear[k],front[k]];na=dir+"Plane"+sides[j];parents=_type.default.copyAttributes(attributes,
board.options,"axes3d",na);axes[na]=view.create("plane3d",[from,to,vec2,range1,range2],parents);axes[na].elType="axisplane3d"}}for(i=0;i<directions.length;i++)for(dir=directions[i],j=0;j<sides.length;j++)for(k=1;2>=k;k++)i1=(i+k)%3,parents=directions[i1],na=dir+"Plane"+sides[j]+parents.toUpperCase()+"Axis",vec2=dir+"Plane"+sides[j],from=[0,0,0],to=[0,0,0],from[i]=to[i]=0===j?rear[i]:front[i],from[i1]=rear[i1],to[i1]=front[i1],parents=_type.default.copyAttributes(attributes,board.options,"axes3d",
na),axes[na]=view.create("axis3d",[from,to],parents),axes[vec2].addChild(axes[na]),axes[vec2].element2D.inherits.push(axes[na]);return axes};_jxg.default.registerElement("axes3d",_jxg.default.createAxes3D);_jxg.default.createAxis3D=function(board,parents,attributes){var view=parents[0],start=parents[1],end=parents[2];parents=_type.default.copyAttributes(attributes.point1,board.options,"axis3d","point1");start=view.create("point",[function(xx,yy,zz){return function(){return view.project3DTo2D(xx,yy,
zz)[1]}}(start[0],start[1],start[2]),function(xx,yy,zz){return function(){return view.project3DTo2D(xx,yy,zz)[2]}}(start[0],start[1],start[2])],parents);parents=_type.default.copyAttributes(attributes.point2,board.options,"axis3d","point2");end=view.create("point",[function(xx,yy,zz){return function(){return view.project3DTo2D(xx,yy,zz)[1]}}(end[0],end[1],end[2]),function(xx,yy,zz){return function(){return view.project3DTo2D(xx,yy,zz)[2]}}(end[0],end[1],end[2])],parents);parents=_type.default.copyAttributes(attributes,
board.options,"axis3d");return view.create("arrow",[start,end],parents)};_jxg.default.registerElement("axis3d",_jxg.default.createAxis3D);_jxg.default.createMesh3D=function(board,parents,attr){var view=parents[0],point=parents[1],dir1=parents[2],range1=parents[3],dir2=parents[4],range2=parents[5];board=view.create("curve",[[],[]],attr);board.updateDataArray=function(){var s1=range1[0],e1=range1[1],s2=range2[0],e2=range2[1],i,v1=[0,0,0],v2=[0,0,0],q=[0,0,0];this.dataX=[];this.dataY=[];if(_type.default.isFunction(point))q=
point().slice(1);else for(i=0;3>i;i++)q[i]=_type.default.evaluate(point[i]);for(i=0;3>i;i++)v1[i]=_type.default.evaluate(dir1[i]),v2[i]=_type.default.evaluate(dir2[i]);var l1=_jxg.default.Math.norm(v1,3);var l2=_jxg.default.Math.norm(v2,3);for(i=0;3>i;i++)v1[i]/=l1,v2[i]/=l2;s1=view.getMesh([function(u,v){return q[0]+u*v1[0]+v*v2[0]},function(u,v){return q[1]+u*v1[1]+v*v2[1]},function(u,v){return q[2]+u*v1[2]+v*v2[2]}],[Math.ceil(s1),Math.floor(e1),Math.ceil(e1)-Math.floor(s1)],[Math.ceil(s2),Math.floor(e2),
Math.ceil(e2)-Math.floor(s2)]);this.dataX=s1[0];this.dataY=s1[1]};return board};_jxg.default.registerElement("mesh3d",_jxg.default.createMesh3D)}
//# sourceMappingURL=module$node_modules$$mentatcollective$jsxgraph$src$3d$box3d.js.map
