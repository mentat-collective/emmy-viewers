{
"version":3,
"file":"module$node_modules$mathbox$build$esm$util$data.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/util/data.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$util$data\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLerpThunk = exports.getLerpEmitter = exports.getStreamer = exports.getThunk = exports.makeEmitter = exports.repeatCall = exports.getDimensions = exports.getSizes = void 0;\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS202: Simplify dynamic range loops\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nconst getSizes = function (data) {\n  const sizes = [];\n  let array = data;\n\n  while (typeof array !== \"string\" && (array != null ? array.length : undefined) != null) {\n    sizes.push(array.length);\n    array = array[0];\n  }\n\n  return sizes;\n};\n\nexports.getSizes = getSizes;\n\nconst getDimensions = function (data, spec) {\n  let left;\n\n  if (spec == null) {\n    spec = {};\n  }\n\n  const {\n    items,\n    channels,\n    width,\n    height,\n    depth\n  } = spec;\n  const dims = {};\n\n  if (!data || !data.length) {\n    return {\n      items,\n      channels,\n      width: width != null ? width : 0,\n      height: height != null ? height : 0,\n      depth: depth != null ? depth : 0\n    };\n  }\n\n  const sizes = getSizes(data);\n  const nesting = sizes.length;\n  dims.channels = channels !== 1 && sizes.length > 1 ? sizes.pop() : channels;\n  dims.items = items !== 1 && sizes.length > 1 ? sizes.pop() : items;\n  dims.width = width !== 1 && sizes.length > 1 ? sizes.pop() : width;\n  dims.height = height !== 1 && sizes.length > 1 ? sizes.pop() : height;\n  dims.depth = depth !== 1 && sizes.length > 1 ? sizes.pop() : depth;\n  let levels = nesting;\n\n  if (channels === 1) {\n    levels++;\n  }\n\n  if (items === 1 && levels > 1) {\n    levels++;\n  }\n\n  if (width === 1 && levels > 2) {\n    levels++;\n  }\n\n  if (height === 1 && levels > 3) {\n    levels++;\n  }\n\n  let n = (left = sizes.pop()) != null ? left : 1;\n\n  if (levels <= 1) {\n    n /= dims.channels != null ? dims.channels : 1;\n  }\n\n  if (levels <= 2) {\n    n /= dims.items != null ? dims.items : 1;\n  }\n\n  if (levels <= 3) {\n    n /= dims.width != null ? dims.width : 1;\n  }\n\n  if (levels <= 4) {\n    n /= dims.height != null ? dims.height : 1;\n  }\n\n  n = Math.floor(n);\n\n  if (dims.width == null) {\n    dims.width = n;\n    n = 1;\n  }\n\n  if (dims.height == null) {\n    dims.height = n;\n    n = 1;\n  }\n\n  if (dims.depth == null) {\n    dims.depth = n;\n    n = 1;\n  }\n\n  return dims;\n};\n\nexports.getDimensions = getDimensions;\n\nconst repeatCall = function (call, times) {\n  switch (times) {\n    case 0:\n      return () => true;\n\n    case 1:\n      return () => call();\n\n    case 2:\n      return function () {\n        call();\n        return call();\n      };\n\n    case 3:\n      return function () {\n        call();\n        call();\n        call();\n        return call();\n      };\n\n    case 4:\n      return function () {\n        call();\n        call();\n        call();\n        return call();\n      };\n\n    case 6:\n      return function () {\n        call();\n        call();\n        call();\n        call();\n        call();\n        return call();\n      };\n\n    case 8:\n      return function () {\n        call();\n        call();\n        call();\n        call();\n        call();\n        return call();\n      };\n  }\n};\n\nexports.repeatCall = repeatCall;\n\nconst makeEmitter = function (thunk, items, channels) {\n  let outer;\n\n  const inner = (() => {\n    switch (channels) {\n      case 0:\n        return () => true;\n\n      case 1:\n        return emit => emit(thunk());\n\n      case 2:\n        return emit => emit(thunk(), thunk());\n\n      case 3:\n        return emit => emit(thunk(), thunk(), thunk());\n\n      case 4:\n        return emit => emit(thunk(), thunk(), thunk(), thunk());\n\n      case 6:\n        return emit => emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk());\n\n      case 8:\n        return emit => emit(thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk(), thunk());\n    }\n  })();\n\n  let next = null;\n\n  while (items > 0) {\n    const n = Math.min(items, 8);\n\n    outer = (() => {\n      switch (n) {\n        case 1:\n          return emit => inner(emit);\n\n        case 2:\n          return function (emit) {\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 3:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 4:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 5:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 6:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 7:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n\n        case 8:\n          return function (emit) {\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            inner(emit);\n            return inner(emit);\n          };\n      }\n    })();\n\n    if (next != null) {\n      next = ((outer, next) => function (emit) {\n        outer(emit);\n        return next(emit);\n      })(outer, next);\n    } else {\n      next = outer;\n    }\n\n    items -= n;\n  }\n\n  outer = next != null ? next : () => true;\n  outer.reset = thunk.reset;\n  outer.rebind = thunk.rebind;\n  return outer;\n};\n\nexports.makeEmitter = makeEmitter;\n\nconst getThunk = function (data) {\n  let thunk;\n  let j, k, l, m;\n  let sizes = getSizes(data);\n  const nesting = sizes.length;\n  let a = sizes.pop();\n  let b = sizes.pop();\n  let c = sizes.pop();\n  const d = sizes.pop();\n  let i, first, second, third, fourth;\n\n  switch (nesting) {\n    case 0:\n      thunk = () => 0;\n\n      thunk.reset = function () {};\n\n      break;\n\n    case 1:\n      i = 0;\n\n      thunk = () => data[i++];\n\n      thunk.reset = () => i = 0;\n\n      break;\n\n    case 2:\n      i = j = 0;\n      first = data[j] != null ? data[j] : [];\n\n      thunk = function () {\n        const x = first[i++];\n\n        if (i === a) {\n          i = 0;\n          j++;\n          first = data[j] != null ? data[j] : [];\n        }\n\n        return x;\n      };\n\n      thunk.reset = function () {\n        i = j = 0;\n        first = data[j] != null ? data[j] : [];\n      };\n\n      break;\n\n    case 3:\n      i = j = k = 0;\n      second = data[k] != null ? data[k] : [];\n      first = second[j] != null ? second[j] : [];\n\n      thunk = function () {\n        const x = first[i++];\n\n        if (i === a) {\n          i = 0;\n          j++;\n\n          if (j === b) {\n            j = 0;\n            k++;\n            second = data[k] != null ? data[k] : [];\n          }\n\n          first = second[j] != null ? second[j] : [];\n        }\n\n        return x;\n      };\n\n      thunk.reset = function () {\n        i = j = k = 0;\n        second = data[k] != null ? data[k] : [];\n        first = second[j] != null ? second[j] : [];\n      };\n\n      break;\n\n    case 4:\n      i = j = k = l = 0;\n      third = data[l] != null ? data[l] : [];\n      second = third[k] != null ? third[k] : [];\n      first = second[j] != null ? second[j] : [];\n\n      thunk = function () {\n        const x = first[i++];\n\n        if (i === a) {\n          i = 0;\n          j++;\n\n          if (j === b) {\n            j = 0;\n            k++;\n\n            if (k === c) {\n              k = 0;\n              l++;\n              third = data[l] != null ? data[l] : [];\n            }\n\n            second = third[k] != null ? third[k] : [];\n          }\n\n          first = second[j] != null ? second[j] : [];\n        }\n\n        return x;\n      };\n\n      thunk.reset = function () {\n        i = j = k = l = 0;\n        third = data[l] != null ? data[l] : [];\n        second = third[k] != null ? third[k] : [];\n        first = second[j] != null ? second[j] : [];\n      };\n\n      break;\n\n    case 5:\n      i = j = k = l = m = 0;\n      fourth = data[m] != null ? data[m] : [];\n      third = fourth[l] != null ? fourth[l] : [];\n      second = third[k] != null ? third[k] : [];\n      first = second[j] != null ? second[j] : [];\n\n      thunk = function () {\n        const x = first[i++];\n\n        if (i === a) {\n          i = 0;\n          j++;\n\n          if (j === b) {\n            j = 0;\n            k++;\n\n            if (k === c) {\n              k = 0;\n              l++;\n\n              if (l === d) {\n                l = 0;\n                m++;\n                fourth = data[m] != null ? data[m] : [];\n              }\n\n              third = fourth[l] != null ? fourth[l] : [];\n            }\n\n            second = third[k] != null ? third[k] : [];\n          }\n\n          first = second[j] != null ? second[j] : [];\n        }\n\n        return x;\n      };\n\n      thunk.reset = function () {\n        i = j = k = l = m = 0;\n        fourth = data[m] != null ? data[m] : [];\n        third = fourth[l] != null ? fourth[l] : [];\n        second = third[k] != null ? third[k] : [];\n        first = second[j] != null ? second[j] : [];\n      };\n\n      break;\n  }\n\n  thunk.rebind = function (d) {\n    data = d;\n    sizes = getSizes(data);\n\n    if (sizes.length) {\n      a = sizes.pop();\n    }\n\n    if (sizes.length) {\n      b = sizes.pop();\n    }\n\n    if (sizes.length) {\n      c = sizes.pop();\n    }\n\n    if (sizes.length) {\n      return d = sizes.pop();\n    }\n  };\n\n  return thunk;\n};\n\nexports.getThunk = getThunk;\n\nconst getStreamer = function (array, samples, channels, items) {\n  let i, j;\n  let limit = i = j = 0;\n\n  const reset = function () {\n    limit = samples * channels * items;\n    return i = j = 0;\n  };\n\n  const count = () => j;\n\n  const done = () => limit - i <= 0;\n\n  const skip = (() => {\n    switch (channels) {\n      case 1:\n        return function (n) {\n          i += n;\n          j += n;\n        };\n\n      case 2:\n        return function (n) {\n          i += n * 2;\n          j += n;\n        };\n\n      case 3:\n        return function (n) {\n          i += n * 3;\n          j += n;\n        };\n\n      case 4:\n        return function (n) {\n          i += n * 4;\n          j += n;\n        };\n    }\n  })();\n\n  const consume = (() => {\n    switch (channels) {\n      case 1:\n        return function (emit) {\n          emit(array[i++]);\n          ++j;\n        };\n\n      case 2:\n        return function (emit) {\n          emit(array[i++], array[i++]);\n          ++j;\n        };\n\n      case 3:\n        return function (emit) {\n          emit(array[i++], array[i++], array[i++]);\n          ++j;\n        };\n\n      case 4:\n        return function (emit) {\n          emit(array[i++], array[i++], array[i++], array[i++]);\n          ++j;\n        };\n    }\n  })();\n\n  const emit = (() => {\n    switch (channels) {\n      case 1:\n        return function (x) {\n          array[i++] = x;\n          ++j;\n        };\n\n      case 2:\n        return function (x, y) {\n          array[i++] = x;\n          array[i++] = y;\n          ++j;\n        };\n\n      case 3:\n        return function (x, y, z) {\n          array[i++] = x;\n          array[i++] = y;\n          array[i++] = z;\n          ++j;\n        };\n\n      case 4:\n        return function (x, y, z, w) {\n          array[i++] = x;\n          array[i++] = y;\n          array[i++] = z;\n          array[i++] = w;\n          ++j;\n        };\n    }\n  })();\n\n  consume.reset = reset;\n  emit.reset = reset;\n  reset();\n  return {\n    emit,\n    consume,\n    skip,\n    count,\n    done,\n    reset\n  };\n};\n\nexports.getStreamer = getStreamer;\n\nconst getLerpEmitter = function (expr1, expr2) {\n  let emitter, lerp2, q, r, s;\n  const scratch = new Float32Array(4096);\n  let lerp1 = lerp2 = 0.5;\n  let p = q = r = s = 0;\n\n  const emit1 = function (x, y, z, w) {\n    r++;\n    scratch[p++] = x * lerp1;\n    scratch[p++] = y * lerp1;\n    scratch[p++] = z * lerp1;\n    return scratch[p++] = w * lerp1;\n  };\n\n  const emit2 = function (x, y, z, w) {\n    s++;\n    scratch[q++] += x * lerp2;\n    scratch[q++] += y * lerp2;\n    scratch[q++] += z * lerp2;\n    return scratch[q++] += w * lerp2;\n  };\n\n  const args = Math.max(expr1.length, expr2.length);\n\n  if (args <= 3) {\n    emitter = function (emit, x, i) {\n      p = q = r = s = 0;\n      expr1(emit1, x, i);\n      expr2(emit2, x, i);\n      const n = Math.min(r, s);\n      let l = 0;\n      return __range__(0, n, false).map(_k => emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));\n    };\n  } else if (args <= 5) {\n    emitter = function (emit, x, y, i, j) {\n      p = q = r = s = 0;\n      expr1(emit1, x, y, i, j);\n      expr2(emit2, x, y, i, j);\n      const n = Math.min(r, s);\n      let l = 0;\n      return __range__(0, n, false).map(_k => emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));\n    };\n  } else if (args <= 7) {\n    emitter = function (emit, x, y, z, i, j, k) {\n      p = q = r = s = 0;\n      expr1(emit1, x, y, z, i, j, k);\n      expr2(emit2, x, y, z, i, j, k);\n      const n = Math.min(r, s);\n      let l = 0;\n      return (() => {\n        let asc, end;\n        const result = [];\n\n        for (k = 0, end = n, asc = 0 <= end; asc ? k < end : k > end; asc ? k++ : k--) {\n          result.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));\n        }\n\n        return result;\n      })();\n    };\n  } else if (args <= 9) {\n    emitter = function (emit, x, y, z, w, i, j, k, l) {\n      p = q = r = s = 0;\n      expr1(emit1, x, y, z, w, i, j, k, l);\n      expr2(emit2, x, y, z, w, i, j, k, l);\n      const n = Math.min(r, s);\n      l = 0;\n      return (() => {\n        let asc, end;\n        const result = [];\n\n        for (k = 0, end = n, asc = 0 <= end; asc ? k < end : k > end; asc ? k++ : k--) {\n          result.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));\n        }\n\n        return result;\n      })();\n    };\n  } else {\n    emitter = function (emit, x, y, z, w, i, j, k, l, d, t) {\n      p = q = 0;\n      expr1(emit1, x, y, z, w, i, j, k, l, d, t);\n      expr2(emit2, x, y, z, w, i, j, k, l, d, t);\n      const n = Math.min(r, s);\n      l = 0;\n      return (() => {\n        let asc, end;\n        const result = [];\n\n        for (k = 0, end = n, asc = 0 <= end; asc ? k < end : k > end; asc ? k++ : k--) {\n          result.push(emit(scratch[l++], scratch[l++], scratch[l++], scratch[l++]));\n        }\n\n        return result;\n      })();\n    };\n  }\n\n  emitter.lerp = function (f) {\n    let ref;\n    return [lerp1, lerp2] = Array.from(ref = [1 - f, f]), ref;\n  };\n\n  return emitter;\n};\n\nexports.getLerpEmitter = getLerpEmitter;\n\nconst getLerpThunk = function (data1, data2) {\n  // Get sizes\n  const n1 = getSizes(data1).reduce((a, b) => a * b);\n  const n2 = getSizes(data2).reduce((a, b) => a * b);\n  const n = Math.min(n1, n2); // Create data thunks to copy (multi-)array\n\n  const thunk1 = getThunk(data1);\n  const thunk2 = getThunk(data2); // Create scratch array\n\n  const scratch = new Float32Array(n);\n\n  scratch.lerp = function (f) {\n    thunk1.reset();\n    thunk2.reset();\n    let i = 0;\n    return (() => {\n      const result = [];\n\n      while (i < n) {\n        const a = thunk1();\n        const b = thunk2();\n        result.push(scratch[i++] = a + (b - a) * f);\n      }\n\n      return result;\n    })();\n  };\n\n  return scratch;\n};\n\nexports.getLerpThunk = getLerpThunk;\n\nfunction __range__(left, right, inclusive) {\n  const range = [];\n  const ascending = left < right;\n  const end = !inclusive ? right : ascending ? right + 1 : right - 1;\n\n  for (let i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n    range.push(i);\n  }\n\n  return range;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__range__","left","right","inclusive","range","ascending","end","i","push","Object","defineProperty","value","getLerpThunk","getLerpEmitter","getStreamer","getThunk","makeEmitter","repeatCall","getDimensions","getSizes","data","sizes","array","length","undefined","spec","items","channels","width","height","depth","dims","nesting","pop","levels","n","Math","floor","call","times","thunk","outer","inner","emit","next","min","reset","rebind","j","k","l","m","a","b","c","d","first","second","third","fourth","thunk.reset","x","thunk.rebind","samples","limit","skip","consume","y","z","w","count","done","expr1","expr2","lerp2","q","r","s","scratch","Float32Array","lerp1","p","emit1","emit2","args","max","emitter","map","_k","result","asc","t","lerp","emitter.lerp","f","ref","Array","from","data1","data2","n1","reduce","n2","thunk1","thunk2","scratch.lerp"]
}
