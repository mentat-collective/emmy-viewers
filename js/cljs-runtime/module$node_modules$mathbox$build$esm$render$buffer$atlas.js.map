{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$buffer$atlas.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/buffer/atlas.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$buffer$atlas\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Atlas = void 0;\n\nvar UGLSL = _interopRequireWildcard(require(\"../../util/glsl.js\"));\n\nvar _backedtexture = require(\"./texture/backedtexture.js\");\n\nvar _datatexture = require(\"./texture/datatexture.js\");\n\nvar _renderable = require(\"../renderable.js\");\n\nvar _Vector = require(\"three/src/math/Vector2.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS103: Rewrite code to no longer use __guard__, or convert again using --optional-chaining\n * DS104: Avoid inline assignments\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\n * Dynamic sprite atlas\n *\n * - Allocates variable-sized sprites in rows\n * - Will grow itself when full\n */\nclass Atlas extends _renderable.Renderable {\n  constructor(renderer, shaders, options, build) {\n    if (build == null) {\n      build = true;\n    }\n\n    super(renderer, shaders);\n\n    if (this.width == null) {\n      this.width = options.width || 512;\n    }\n\n    if (this.height == null) {\n      this.height = options.height || 512;\n    }\n\n    if (this.channels == null) {\n      this.channels = options.channels || 4;\n    }\n\n    if (this.backed == null) {\n      this.backed = options.backed || false;\n    }\n\n    this.samples = this.width * this.height;\n\n    if (build) {\n      this.build(options);\n    }\n  }\n\n  shader(shader) {\n    shader.pipe(\"map.2d.data\", this.uniforms);\n    shader.pipe(\"sample.2d\", this.uniforms);\n\n    if (this.channels < 4) {\n      shader.pipe(UGLSL.swizzleVec4([\"0000\", \"x000\", \"xw00\", \"xyz0\"][this.channels]));\n    }\n\n    return shader;\n  }\n\n  build(options) {\n    let klass;\n    this.klass = klass = this.backed ? _backedtexture.BackedTexture : _datatexture.DataTexture;\n    this.texture = new klass(this.renderer, this.width, this.height, this.channels, options);\n    this.uniforms = {\n      dataPointer: {\n        type: \"v2\",\n        value: new _Vector.Vector2(0, 0)\n      }\n    };\n\n    this._adopt(this.texture.uniforms);\n\n    return this.reset();\n  }\n\n  reset() {\n    this.rows = [];\n    return this.bottom = 0;\n  }\n\n  resize(width, height) {\n    if (!this.backed) {\n      throw new Error(\"Cannot resize unbacked texture atlas\");\n    }\n\n    if (width > 2048 && height > 2048) {\n      console.warn(`Giant text atlas ${width}x${height}.`);\n    } else {\n      console.info(`Resizing text atlas ${width}x${height}.`);\n    }\n\n    this.texture.resize(width, height);\n    this.width = width;\n    this.height = height;\n    return this.samples = width * height;\n  }\n\n  collapse(row) {\n    let left;\n    const {\n      rows\n    } = this;\n    rows.splice(rows.indexOf(row), 1);\n    this.bottom = (left = __guard__(rows[rows.length - 1], x => x.bottom)) != null ? left : 0;\n\n    if (this.last === row) {\n      return this.last = null;\n    }\n  }\n\n  allocate(key, width, height, emit) {\n    const w = this.width;\n    const h = this.height;\n    const max = height * 2;\n\n    if (width > w) {\n      this.resize(w * 2, h * 2);\n      this.last = null; // Try again\n\n      return this.allocate(key, width, height, emit);\n    } // See if we can append to the last used row (fast code path)\n\n\n    let row = this.last;\n\n    if (row != null) {\n      if (row.height >= height && row.height < max && row.width + width <= w) {\n        row.append(key, width, height, emit);\n        return;\n      }\n    } // Scan all rows and append to the first suitable one (slower code path)\n\n\n    let bottom = 0;\n    let index = -1;\n    let top = 0;\n\n    for (let i = 0; i < this.rows.length; i++) {\n      // Measure gap between rows\n      // Note suitable holes for later\n      row = this.rows[i];\n      const gap = row.top - bottom;\n\n      if (gap >= height && index < 0) {\n        index = i;\n        top = bottom;\n      }\n\n      ({\n        bottom\n      } = row);\n\n      if (row.height >= height && row.height < max && row.width + width <= w) {\n        row.append(key, width, height, emit);\n        this.last = row;\n        return;\n      }\n    } // New row (slowest path)\n\n\n    if (index >= 0) {\n      // Fill a gap\n      row = new Row(top, height);\n      this.rows.splice(index, 0, row); //console.log 'fill gap', row\n    } else {\n      // Append to bottom\n      top = bottom;\n      bottom += height; // Resize if atlas is full\n\n      if (bottom >= h) {\n        this.resize(w * 2, h * 2);\n        this.last = null; // Try again\n\n        return this.allocate(key, width, height, emit);\n      } // Add new row to the end\n\n\n      row = new Row(top, height);\n      this.rows.push(row);\n      this.bottom = bottom;\n    }\n\n    row.append(key, width, height, emit);\n    this.last = row;\n  }\n\n  read() {\n    return this.texture.textureObject;\n  }\n\n  write(data, x, y, w, h) {\n    return this.texture.write(data, x, y, w, h);\n  }\n\n  dispose() {\n    this.texture.dispose();\n    this.data = null;\n    return super.dispose();\n  }\n\n}\n\nexports.Atlas = Atlas;\n\nclass Row {\n  constructor(top, height) {\n    this.top = top;\n    this.bottom = top + height;\n    this.width = 0;\n    this.height = height;\n    this.alive = 0;\n    this.keys = [];\n  }\n\n  append(key, width, height, emit) {\n    const x = this.width;\n    const y = this.top;\n    this.alive++;\n    this.width += width;\n    this.keys.push(key);\n    return emit(this, x, y);\n  }\n\n}\n\nfunction __guard__(value, transform) {\n  return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__guard__","value","transform","undefined","Object","defineProperty","Atlas","UGLSL","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_backedtexture","_datatexture","_renderable","_Vector","Renderable","constructor","renderer","shaders","options","build","width","height","channels","backed","samples","shader","pipe","uniforms","swizzleVec4","klass","BackedTexture","DataTexture","texture","dataPointer","type","Vector2","_adopt","reset","rows","bottom","resize","Error","console","warn","info","collapse","row","left","splice","indexOf","length","x","last","allocate","emit","w","h","max","append","index","top","i","Row","push","read","textureObject","write","data","y","dispose","alive","keys"]
}
