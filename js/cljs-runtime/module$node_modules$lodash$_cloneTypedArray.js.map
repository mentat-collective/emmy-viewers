{
"version":3,
"file":"module$node_modules$lodash$_cloneTypedArray.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACxG,IAAIC,iBAAmBH,OAAA,CAAQ,8CAAR,CAevBC,OAAOC,CAAAA,OAAP,CALAE,QAAwB,CAACC,UAAD,CAAaC,MAAb,CAAqB,CACvCC,MAAAA,CAASD,MAAA,CAASH,gBAAA,CAAiBE,UAAWE,CAAAA,MAA5B,CAAT,CAA+CF,UAAWE,CAAAA,MACvE,OAAO,KAAIF,UAAWG,CAAAA,WAAf,CAA2BD,MAA3B,CAAmCF,UAAWI,CAAAA,UAA9C,CAA0DJ,UAAWK,CAAAA,MAArE,CAFoC,CAX2D;",
"sources":["node_modules/lodash/_cloneTypedArray.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_cloneTypedArray\"] = function(global,require,module,exports) {\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n};"],
"names":["shadow$provide","global","require","module","exports","cloneArrayBuffer","cloneTypedArray","typedArray","isDeep","buffer","constructor","byteOffset","length"]
}
