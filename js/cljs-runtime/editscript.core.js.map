{"version":3,"sources":["editscript/core.cljc"],"mappings":";;AAmBA,AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAAA,+BAAAA,tDAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,mDAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,qDAAA,rDAAMD,gEAoCFM,EAAEC;AApCN,AAqCG,8DAAA,vDAACC,mDAAKF,EAAEC;;;AArCX,CAAA,qDAAA,eAAAL,pEAAMF,gEAsCFM,EAAEC;AAtCN,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;WAAAA,PAwCeO;WAxCf,AAAAL,4CAAAF,eAAA,qDAAA,vHAsCgBM;AAtChB,AAyCG,GAAI,kDAAA,lDAACE,6CAAEF;AACL,OAACG,0DAAON,EAAEC,EAAEG;;AACZ,OAACG,yDAAOP,EAAEC,EAAEG;;;;AA3CjB,CAAA,+CAAA,/CAAMV;;AAAN,AA6CA;;;;;wBAAA,xBAAMc,wDAIHR,EAAES;AAJL,AAAA,GAKS,mBAAWC,lBAA2BD;AAL/C;AAAA,AAAA,MAAA,KAAAd,MAAA;;;AAME,sDAAA,WAAAgB,iBAAAC,3EAACC;AAAD,AACG,oCAAAF,iBAAAC,9CAACE;GACFd,EACA,AAACe,0BAAYN;;AAEjB;;;;AAGEO,qCAAaC;AAEf;;;;AAGEC,0BAAQC;AAEV;;;AAEEC,2BAASC;AAEX;;;;AAGEC,gCAAcC;AAEhB;;;AAEEC,4BAAUT;AAEZ;;;AAEEU,+BAAaC;AAEf;;;AAEEC,+BAAaC;AAEf;;;AAEEC,+BAAaC;AAEf;;;;AAGEC,mCAAcC","names":["var_args","G__75931","editscript.core/diff","js/Error","p__75933","map__75934","cljs.core/--destructure-map","cljs.core.get","a","b","editscript.core.diff","algo","opts","cljs.core._EQ_","editscript.diff.a_star.diff","editscript.diff.quick.diff","editscript.core/patch","script","editscript.edit/EditScript","p1__75974#","p2__75975#","cljs.core.reduce","editscript.patch/patch*","editscript.edit/get-edits","editscript.core/valid-edits?","editscript.edit/valid-edits?","editscript.core/combine","editscript.edit/combine","editscript.core/get-size","editscript.edit/get-size","editscript.core/edit-distance","editscript.edit/edit-distance","editscript.core/get-edits","editscript.core/get-adds-num","editscript.edit/get-adds-num","editscript.core/get-dels-num","editscript.edit/get-dels-num","editscript.core/get-reps-num","editscript.edit/get-reps-num","editscript.core/edits->script","editscript.edit/edits->script"],"sourcesContent":[";;\n;; Copyright (c) Huahai Yang. All rights reserved.\n;; The use and distribution terms for this software are covered by the\n;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;; which can be found in the file LICENSE at the root of this distribution.\n;; By using this software in any fashion, you are agreeing to be bound by\n;; the terms of this license.\n;; You must not remove this notice, or any other, from this software.\n;;\n\n(ns editscript.core\n  (:require [editscript.edit :as e]\n            [editscript.patch :as p]\n            [editscript.util.common :as c]\n            [editscript.diff.quick :as q]\n            [editscript.diff.a-star :as a])\n  #?(:clj (:import [editscript.edit EditScript]\n                   [clojure.lang MapEntry])))\n\n(defn diff\n  \"Create an editscript to represent the transformations needed to turn a\n  Clojure data structure `a` into another Clojure data structure `b`.\n\n  This function accepts any nested Clojure data structures. In Clojure, those\n  implement `IPersistentVector`, `IPersistentMap`, `IPersistentList`,\n  and `IPersistentSet` will be treated as collections. The same are true for\n  the corresponding deftypes in Clojurescript, such as `PersistentVector`,\n  `PersistentMap`, and so on. Anything else are treated as atomic values.\n\n  The editscript is represented as a vector of basic operations: add `:+`,\n  delete `:-`, and replace `:r`. Each operation also include a path to the\n  location of the operation, which is similar to the path vector in `update-in`.\n  However, editscript path works for all above four collection types, not just\n  associative ones. For `:+` and `:r`, a new value is also required.\n\n  The following options are supported in the option map of the last argument:\n\n  * `:algo`  chooses the diff algorithm. The value can be `:a-star` (default) or\n  `:quick`; `:a-star` algorithm minimize the size of the resulting editscript,\n  `:quick` algorithm is much faster, but does not producing diff with minimal size.\n\n  * `:str-diff` specifies the granularity of string diffing. It may have one of\n  the following values:\n       - `:none`  (default), do not perform string diffing, the fastest.\n       - `:line`, diff by line.\n       - `:word`, diff by word,\n       - `:character`, diff by character, the slowest.\n\n  * `:str-change-limit`, a less than `1.0` and greater than `0.0` double value,\n  representing percentage (default `0.2`). Only diff string when less than given\n  percentage is changed, otherwise replace the string.\n\n  * `:vec-timeout` specifies a timeout in milliseconds (default `1000`),\n  for diffing vectors, lists or strings, as it has O(n^2) running time. When\n  timed-out, a replacement operation will be used.\"\n  ([a b]\n   (diff a b nil))\n  ([a b {:keys [algo]\n         :or   {algo :a-star}\n         :as   opts}]\n   (if (= algo :a-star)\n     (a/diff a b opts)\n     (q/diff a b opts))))\n\n(defn patch\n  \"Apply the editscript `script` on `a` to produce `b`, assuming the\n  script is the results of running  `(diff a b)`, such that\n  `(= b (patch a (diff a b)))` is true\"\n  [a script]\n  {:pre [(instance? editscript.edit.EditScript script)]}\n  (reduce\n    #(p/patch* %1 %2)\n    a\n    (e/get-edits script)))\n\n(def ^{:arglists '([edits])\n       :doc      \"Check if the given vector represents valid edits that can be turned\ninto an EditScript\"}\n  valid-edits? e/valid-edits?)\n\n(def ^{:arglists '([this that])\n       :doc      \"Concate that editscript onto this editscript, return the new\neditscript\"}\n  combine e/combine)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the size of the editscript\"}\n  get-size e/get-size)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the edit distance of the editscript, i.e. number of\noperations\"}\n  edit-distance e/edit-distance)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the edits of the editscript as a vector\"}\n  get-edits e/get-edits)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the number of additions in the editscript\"}\n  get-adds-num e/get-adds-num)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the number of deletes in the editscript\"}\n  get-dels-num e/get-dels-num)\n\n(def ^{:arglists '([es])\n       :doc      \"Report the edits of replacements in the editscript\"}\n  get-reps-num e/get-reps-num)\n\n(def ^{:arglists '([edits])\n       :doc      \"Create an EditScript instance from a vector of edits, like those\nobtained through calling `get-edits` on an EditScript\"}\n  edits->script e/edits->script)\n\n\n;; (diff (MapEntry/create 1 (MapEntry/create 2 (MapEntry/create 3 4)))\n;;       (MapEntry/create 1 (MapEntry/create 2 (MapEntry/create 3 \"ok\"))))\n"]}