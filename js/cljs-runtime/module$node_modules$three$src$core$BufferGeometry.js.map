{
"version":3,
"file":"module$node_modules$three$src$core$BufferGeometry.js",
"lineCount":32,
"mappings":"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",
"sources":["node_modules/three/src/core/BufferGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$core$BufferGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BufferGeometry = void 0;\n\nvar _Vector = require(\"../math/Vector3.js\");\n\nvar _Vector2 = require(\"../math/Vector2.js\");\n\nvar _Box = require(\"../math/Box3.js\");\n\nvar _EventDispatcher = require(\"./EventDispatcher.js\");\n\nvar _BufferAttribute = require(\"./BufferAttribute.js\");\n\nvar _Sphere = require(\"../math/Sphere.js\");\n\nvar _Object3D = require(\"./Object3D.js\");\n\nvar _Matrix = require(\"../math/Matrix4.js\");\n\nvar _Matrix2 = require(\"../math/Matrix3.js\");\n\nvar MathUtils = _interopRequireWildcard(require(\"../math/MathUtils.js\"));\n\nvar _utils = require(\"../utils.js\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet _id = 0;\n\nconst _m1 = /*@__PURE__*/new _Matrix.Matrix4();\n\nconst _obj = /*@__PURE__*/new _Object3D.Object3D();\n\nconst _offset = /*@__PURE__*/new _Vector.Vector3();\n\nconst _box = /*@__PURE__*/new _Box.Box3();\n\nconst _boxMorphTargets = /*@__PURE__*/new _Box.Box3();\n\nconst _vector = /*@__PURE__*/new _Vector.Vector3();\n\nclass BufferGeometry extends _EventDispatcher.EventDispatcher {\n  constructor() {\n    super();\n    this.isBufferGeometry = true;\n    Object.defineProperty(this, 'id', {\n      value: _id++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.morphTargetsRelative = false;\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n\n  getIndex() {\n    return this.index;\n  }\n\n  setIndex(index) {\n    if (Array.isArray(index)) {\n      this.index = new ((0, _utils.arrayNeedsUint32)(index) ? _BufferAttribute.Uint32BufferAttribute : _BufferAttribute.Uint16BufferAttribute)(index, 1);\n    } else {\n      this.index = index;\n    }\n\n    return this;\n  }\n\n  getAttribute(name) {\n    return this.attributes[name];\n  }\n\n  setAttribute(name, attribute) {\n    this.attributes[name] = attribute;\n    return this;\n  }\n\n  deleteAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  }\n\n  hasAttribute(name) {\n    return this.attributes[name] !== undefined;\n  }\n\n  addGroup(start, count, materialIndex = 0) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex\n    });\n  }\n\n  clearGroups() {\n    this.groups = [];\n  }\n\n  setDrawRange(start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  }\n\n  applyMatrix4(matrix) {\n    const position = this.attributes.position;\n\n    if (position !== undefined) {\n      position.applyMatrix4(matrix);\n      position.needsUpdate = true;\n    }\n\n    const normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      const normalMatrix = new _Matrix2.Matrix3().getNormalMatrix(matrix);\n      normal.applyNormalMatrix(normalMatrix);\n      normal.needsUpdate = true;\n    }\n\n    const tangent = this.attributes.tangent;\n\n    if (tangent !== undefined) {\n      tangent.transformDirection(matrix);\n      tangent.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  applyQuaternion(q) {\n    _m1.makeRotationFromQuaternion(q);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  rotateX(angle) {\n    // rotate geometry around world x-axis\n    _m1.makeRotationX(angle);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  rotateY(angle) {\n    // rotate geometry around world y-axis\n    _m1.makeRotationY(angle);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  rotateZ(angle) {\n    // rotate geometry around world z-axis\n    _m1.makeRotationZ(angle);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  translate(x, y, z) {\n    // translate geometry\n    _m1.makeTranslation(x, y, z);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  scale(x, y, z) {\n    // scale geometry\n    _m1.makeScale(x, y, z);\n\n    this.applyMatrix4(_m1);\n    return this;\n  }\n\n  lookAt(vector) {\n    _obj.lookAt(vector);\n\n    _obj.updateMatrix();\n\n    this.applyMatrix4(_obj.matrix);\n    return this;\n  }\n\n  center() {\n    this.computeBoundingBox();\n    this.boundingBox.getCenter(_offset).negate();\n    this.translate(_offset.x, _offset.y, _offset.z);\n    return this;\n  }\n\n  setFromPoints(points) {\n    const position = [];\n\n    for (let i = 0, l = points.length; i < l; i++) {\n      const point = points[i];\n      position.push(point.x, point.y, point.z || 0);\n    }\n\n    this.setAttribute('position', new _BufferAttribute.Float32BufferAttribute(position, 3));\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new _Box.Box3();\n    }\n\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n\n    if (position && position.isGLBufferAttribute) {\n      console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n      this.boundingBox.set(new _Vector.Vector3(-Infinity, -Infinity, -Infinity), new _Vector.Vector3(+Infinity, +Infinity, +Infinity));\n      return;\n    }\n\n    if (position !== undefined) {\n      this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n\n          _box.setFromBufferAttribute(morphAttribute);\n\n          if (this.morphTargetsRelative) {\n            _vector.addVectors(this.boundingBox.min, _box.min);\n\n            this.boundingBox.expandByPoint(_vector);\n\n            _vector.addVectors(this.boundingBox.max, _box.max);\n\n            this.boundingBox.expandByPoint(_vector);\n          } else {\n            this.boundingBox.expandByPoint(_box.min);\n            this.boundingBox.expandByPoint(_box.max);\n          }\n        }\n      }\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new _Sphere.Sphere();\n    }\n\n    const position = this.attributes.position;\n    const morphAttributesPosition = this.morphAttributes.position;\n\n    if (position && position.isGLBufferAttribute) {\n      console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n      this.boundingSphere.set(new _Vector.Vector3(), Infinity);\n      return;\n    }\n\n    if (position) {\n      // first, find the center of the bounding sphere\n      const center = this.boundingSphere.center;\n\n      _box.setFromBufferAttribute(position); // process morph attributes if present\n\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n\n          _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n          if (this.morphTargetsRelative) {\n            _vector.addVectors(_box.min, _boxMorphTargets.min);\n\n            _box.expandByPoint(_vector);\n\n            _vector.addVectors(_box.max, _boxMorphTargets.max);\n\n            _box.expandByPoint(_vector);\n          } else {\n            _box.expandByPoint(_boxMorphTargets.min);\n\n            _box.expandByPoint(_boxMorphTargets.max);\n          }\n        }\n      }\n\n      _box.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n      // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = position.count; i < il; i++) {\n        _vector.fromBufferAttribute(position, i);\n\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n      } // process morph attributes if present\n\n\n      if (morphAttributesPosition) {\n        for (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n          const morphAttribute = morphAttributesPosition[i];\n          const morphTargetsRelative = this.morphTargetsRelative;\n\n          for (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n            _vector.fromBufferAttribute(morphAttribute, j);\n\n            if (morphTargetsRelative) {\n              _offset.fromBufferAttribute(position, j);\n\n              _vector.add(_offset);\n            }\n\n            maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n          }\n        }\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    }\n  }\n\n  computeTangents() {\n    const index = this.index;\n    const attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n    // (per vertex tangents)\n\n    if (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n      console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n      return;\n    }\n\n    const indices = index.array;\n    const positions = attributes.position.array;\n    const normals = attributes.normal.array;\n    const uvs = attributes.uv.array;\n    const nVertices = positions.length / 3;\n\n    if (this.hasAttribute('tangent') === false) {\n      this.setAttribute('tangent', new _BufferAttribute.BufferAttribute(new Float32Array(4 * nVertices), 4));\n    }\n\n    const tangents = this.getAttribute('tangent').array;\n    const tan1 = [],\n          tan2 = [];\n\n    for (let i = 0; i < nVertices; i++) {\n      tan1[i] = new _Vector.Vector3();\n      tan2[i] = new _Vector.Vector3();\n    }\n\n    const vA = new _Vector.Vector3(),\n          vB = new _Vector.Vector3(),\n          vC = new _Vector.Vector3(),\n          uvA = new _Vector2.Vector2(),\n          uvB = new _Vector2.Vector2(),\n          uvC = new _Vector2.Vector2(),\n          sdir = new _Vector.Vector3(),\n          tdir = new _Vector.Vector3();\n\n    function handleTriangle(a, b, c) {\n      vA.fromArray(positions, a * 3);\n      vB.fromArray(positions, b * 3);\n      vC.fromArray(positions, c * 3);\n      uvA.fromArray(uvs, a * 2);\n      uvB.fromArray(uvs, b * 2);\n      uvC.fromArray(uvs, c * 2);\n      vB.sub(vA);\n      vC.sub(vA);\n      uvB.sub(uvA);\n      uvC.sub(uvA);\n      const r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n      if (!isFinite(r)) return;\n      sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n      tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n      tan1[a].add(sdir);\n      tan1[b].add(sdir);\n      tan1[c].add(sdir);\n      tan2[a].add(tdir);\n      tan2[b].add(tdir);\n      tan2[c].add(tdir);\n    }\n\n    let groups = this.groups;\n\n    if (groups.length === 0) {\n      groups = [{\n        start: 0,\n        count: indices.length\n      }];\n    }\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n      const start = group.start;\n      const count = group.count;\n\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n      }\n    }\n\n    const tmp = new _Vector.Vector3(),\n          tmp2 = new _Vector.Vector3();\n    const n = new _Vector.Vector3(),\n          n2 = new _Vector.Vector3();\n\n    function handleVertex(v) {\n      n.fromArray(normals, v * 3);\n      n2.copy(n);\n      const t = tan1[v]; // Gram-Schmidt orthogonalize\n\n      tmp.copy(t);\n      tmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n      tmp2.crossVectors(n2, t);\n      const test = tmp2.dot(tan2[v]);\n      const w = test < 0.0 ? -1.0 : 1.0;\n      tangents[v * 4] = tmp.x;\n      tangents[v * 4 + 1] = tmp.y;\n      tangents[v * 4 + 2] = tmp.z;\n      tangents[v * 4 + 3] = w;\n    }\n\n    for (let i = 0, il = groups.length; i < il; ++i) {\n      const group = groups[i];\n      const start = group.start;\n      const count = group.count;\n\n      for (let j = start, jl = start + count; j < jl; j += 3) {\n        handleVertex(indices[j + 0]);\n        handleVertex(indices[j + 1]);\n        handleVertex(indices[j + 2]);\n      }\n    }\n  }\n\n  computeVertexNormals() {\n    const index = this.index;\n    const positionAttribute = this.getAttribute('position');\n\n    if (positionAttribute !== undefined) {\n      let normalAttribute = this.getAttribute('normal');\n\n      if (normalAttribute === undefined) {\n        normalAttribute = new _BufferAttribute.BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n        this.setAttribute('normal', normalAttribute);\n      } else {\n        // reset existing normals to zero\n        for (let i = 0, il = normalAttribute.count; i < il; i++) {\n          normalAttribute.setXYZ(i, 0, 0, 0);\n        }\n      }\n\n      const pA = new _Vector.Vector3(),\n            pB = new _Vector.Vector3(),\n            pC = new _Vector.Vector3();\n      const nA = new _Vector.Vector3(),\n            nB = new _Vector.Vector3(),\n            nC = new _Vector.Vector3();\n      const cb = new _Vector.Vector3(),\n            ab = new _Vector.Vector3(); // indexed elements\n\n      if (index) {\n        for (let i = 0, il = index.count; i < il; i += 3) {\n          const vA = index.getX(i + 0);\n          const vB = index.getX(i + 1);\n          const vC = index.getX(i + 2);\n          pA.fromBufferAttribute(positionAttribute, vA);\n          pB.fromBufferAttribute(positionAttribute, vB);\n          pC.fromBufferAttribute(positionAttribute, vC);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          nA.fromBufferAttribute(normalAttribute, vA);\n          nB.fromBufferAttribute(normalAttribute, vB);\n          nC.fromBufferAttribute(normalAttribute, vC);\n          nA.add(cb);\n          nB.add(cb);\n          nC.add(cb);\n          normalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n          normalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n          normalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n          pA.fromBufferAttribute(positionAttribute, i + 0);\n          pB.fromBufferAttribute(positionAttribute, i + 1);\n          pC.fromBufferAttribute(positionAttribute, i + 2);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n          normalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n        }\n      }\n\n      this.normalizeNormals();\n      normalAttribute.needsUpdate = true;\n    }\n  } // @deprecated since r144\n\n\n  merge() {\n    console.error('THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead.');\n    return this;\n  }\n\n  normalizeNormals() {\n    const normals = this.attributes.normal;\n\n    for (let i = 0, il = normals.count; i < il; i++) {\n      _vector.fromBufferAttribute(normals, i);\n\n      _vector.normalize();\n\n      normals.setXYZ(i, _vector.x, _vector.y, _vector.z);\n    }\n  }\n\n  toNonIndexed() {\n    function convertBufferAttribute(attribute, indices) {\n      const array = attribute.array;\n      const itemSize = attribute.itemSize;\n      const normalized = attribute.normalized;\n      const array2 = new array.constructor(indices.length * itemSize);\n      let index = 0,\n          index2 = 0;\n\n      for (let i = 0, l = indices.length; i < l; i++) {\n        if (attribute.isInterleavedBufferAttribute) {\n          index = indices[i] * attribute.data.stride + attribute.offset;\n        } else {\n          index = indices[i] * itemSize;\n        }\n\n        for (let j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      return new _BufferAttribute.BufferAttribute(array2, itemSize, normalized);\n    } //\n\n\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n      return this;\n    }\n\n    const geometry2 = new BufferGeometry();\n    const indices = this.index.array;\n    const attributes = this.attributes; // attributes\n\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      const newAttribute = convertBufferAttribute(attribute, indices);\n      geometry2.setAttribute(name, newAttribute);\n    } // morph attributes\n\n\n    const morphAttributes = this.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const morphArray = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, il = morphAttribute.length; i < il; i++) {\n        const attribute = morphAttribute[i];\n        const newAttribute = convertBufferAttribute(attribute, indices);\n        morphArray.push(newAttribute);\n      }\n\n      geometry2.morphAttributes[name] = morphArray;\n    }\n\n    geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n    const groups = this.groups;\n\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      geometry2.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return geometry2;\n  }\n\n  toJSON() {\n    const data = {\n      metadata: {\n        version: 4.5,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n    if (this.parameters !== undefined) {\n      const parameters = this.parameters;\n\n      for (const key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    } // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n    data.data = {\n      attributes: {}\n    };\n    const index = this.index;\n\n    if (index !== null) {\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: Array.prototype.slice.call(index.array)\n      };\n    }\n\n    const attributes = this.attributes;\n\n    for (const key in attributes) {\n      const attribute = attributes[key];\n      data.data.attributes[key] = attribute.toJSON(data.data);\n    }\n\n    const morphAttributes = {};\n    let hasMorphAttributes = false;\n\n    for (const key in this.morphAttributes) {\n      const attributeArray = this.morphAttributes[key];\n      const array = [];\n\n      for (let i = 0, il = attributeArray.length; i < il; i++) {\n        const attribute = attributeArray[i];\n        array.push(attribute.toJSON(data.data));\n      }\n\n      if (array.length > 0) {\n        morphAttributes[key] = array;\n        hasMorphAttributes = true;\n      }\n    }\n\n    if (hasMorphAttributes) {\n      data.data.morphAttributes = morphAttributes;\n      data.data.morphTargetsRelative = this.morphTargetsRelative;\n    }\n\n    const groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    const boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(source) {\n    // reset\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // used for storing cloned, shared data\n\n    const data = {}; // name\n\n    this.name = source.name; // index\n\n    const index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone(data));\n    } // attributes\n\n\n    const attributes = source.attributes;\n\n    for (const name in attributes) {\n      const attribute = attributes[name];\n      this.setAttribute(name, attribute.clone(data));\n    } // morph attributes\n\n\n    const morphAttributes = source.morphAttributes;\n\n    for (const name in morphAttributes) {\n      const array = [];\n      const morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (let i = 0, l = morphAttribute.length; i < l; i++) {\n        array.push(morphAttribute[i].clone(data));\n      }\n\n      this.morphAttributes[name] = array;\n    }\n\n    this.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n    const groups = source.groups;\n\n    for (let i = 0, l = groups.length; i < l; i++) {\n      const group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    } // bounding box\n\n\n    const boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    } // bounding sphere\n\n\n    const boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    } // draw range\n\n\n    this.drawRange.start = source.drawRange.start;\n    this.drawRange.count = source.drawRange.count; // user data\n\n    this.userData = source.userData; // geometry generator parameters\n\n    if (source.parameters !== undefined) this.parameters = Object.assign({}, source.parameters);\n    return this;\n  }\n\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n\n}\n\nexports.BufferGeometry = BufferGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","Object","defineProperty","value","BufferGeometry","_Vector","_Vector2","_Box","_EventDispatcher","_BufferAttribute","_Sphere","_Object3D","_Matrix","_Matrix2","MathUtils","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_utils","_id","_m1","Matrix4","_obj","Object3D","_offset","Vector3","_box","Box3","_boxMorphTargets","_vector","EventDispatcher","constructor","isBufferGeometry","uuid","generateUUID","name","type","index","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","boundingBox","drawRange","start","count","Infinity","userData","getIndex","setIndex","Array","isArray","arrayNeedsUint32","Uint32BufferAttribute","Uint16BufferAttribute","getAttribute","setAttribute","attribute","deleteAttribute","hasAttribute","undefined","addGroup","materialIndex","push","clearGroups","setDrawRange","applyMatrix4","matrix","position","needsUpdate","normal","normalMatrix","getNormalMatrix","Matrix3","applyNormalMatrix","tangent","transformDirection","computeBoundingBox","computeBoundingSphere","applyQuaternion","q","makeRotationFromQuaternion","rotateX","angle","makeRotationX","rotateY","makeRotationY","rotateZ","makeRotationZ","translate","x","y","z","makeTranslation","scale","makeScale","lookAt","vector","updateMatrix","center","getCenter","negate","setFromPoints","points","i","l","length","point","Float32BufferAttribute","morphAttributesPosition","isGLBufferAttribute","console","error","setFromBufferAttribute","il","morphAttribute","addVectors","min","expandByPoint","max","makeEmpty","isNaN","Sphere","maxRadiusSq","fromBufferAttribute","Math","distanceToSquared","j","jl","add","radius","sqrt","computeTangents","handleTriangle","a","b","c","vA","fromArray","positions","vB","vC","uvA","uvs","uvB","uvC","sub","r","isFinite","sdir","copy","multiplyScalar","addScaledVector","tdir","tan1","tan2","handleVertex","v","n","normals","n2","t","tmp","dot","normalize","tmp2","crossVectors","test","tangents","w","uv","indices","array","nVertices","BufferAttribute","Float32Array","Vector2","group","computeVertexNormals","positionAttribute","normalAttribute","setXYZ","pA","pB","pC","nA","nB","nC","cb","ab","getX","subVectors","cross","normalizeNormals","merge","toNonIndexed","convertBufferAttribute","itemSize","normalized","array2","index2","isInterleavedBufferAttribute","data","stride","offset","warn","geometry2","newAttribute","morphArray","toJSON","metadata","version","generator","keys","parameters","slice","hasMorphAttributes","attributeArray","JSON","parse","stringify","toArray","clone","source","assign","dispose","dispatchEvent"]
}
