{
"version":3,
"file":"module$node_modules$shadergraph$src$linker$snippet.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/shadergraph/src/linker/snippet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$linker$snippet\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Snippet = void 0;\n\n/*\n * decaffeinate suggestions:\n * DS101: Remove unnecessary use of Array.from\n * DS102: Remove unnecessary code created because of implicit returns\n * DS104: Avoid inline assignments\n * DS205: Consider reworking code to avoid use of IIFEs\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Snippet {\n  static initClass() {\n    this.index = 0;\n  }\n\n  static namespace() {\n    return `_sn_${++Snippet.index}_`;\n  }\n\n  static load(language, name, code) {\n    const program = language.parse(name, code);\n    const [sigs, compiler] = Array.from(language.compile(program));\n    return new Snippet(language, sigs, compiler, name, code);\n  }\n\n  constructor(language, _signatures, _compiler, _name, _original) {\n    this.language = language;\n    this._signatures = _signatures;\n    this._compiler = _compiler;\n    this._name = _name;\n    this._original = _original;\n    this.namespace = null;\n    this.code = null;\n    this.main = null;\n    this.entry = null;\n    this.uniforms = null;\n    this.externals = null;\n    this.symbols = null;\n    this.attributes = null;\n    this.varyings = null; // Tidy up object for export\n\n    if (!this.language) {\n      delete this.language;\n    }\n\n    if (!this._signatures) {\n      delete this._signatures;\n    }\n\n    if (!this._compiler) {\n      delete this._compiler;\n    }\n\n    if (!this._original) {\n      delete this._original;\n    } // Insert snippet name if not provided\n\n\n    if (!this._name) {\n      this._name = this._signatures != null ? this._signatures.main.name : undefined;\n    }\n  }\n\n  clone() {\n    return new Snippet(this.language, this._signatures, this._compiler, this._name, this._original);\n  }\n\n  bind(config, uniforms, namespace, defines) {\n    // Alt syntax (namespace, uniforms, defines)\n    let def, left;\n    let v;\n\n    if (uniforms === \"\" + uniforms) {\n      [namespace, uniforms, defines] = Array.from([uniforms, namespace != null ? namespace : {}, defines != null ? defines : {}]); // Alt syntax (uniforms, defines)\n    } else if (namespace !== \"\" + namespace) {\n      [defines, namespace] = Array.from([namespace != null ? namespace : {}, undefined]);\n    } // Prepare data structure\n\n\n    this.main = this._signatures.main;\n    this.namespace = (left = namespace != null ? namespace : this.namespace) != null ? left : Snippet.namespace();\n    this.entry = this.namespace + this.main.name;\n    this.uniforms = {};\n    this.varyings = {};\n    this.attributes = {};\n    this.externals = {};\n    this.symbols = [];\n    const exist = {};\n    const exceptions = {}; // Handle globals and locals for prefixing\n\n    const global = function (name) {\n      exceptions[name] = true;\n      return name;\n    };\n\n    const local = name => {\n      return this.namespace + name;\n    }; // Apply config\n\n\n    if (config.globals) {\n      for (const key of Array.from(config.globals)) {\n        global(key);\n      }\n    }\n\n    const _u = config.globalUniforms ? global : local;\n\n    const _v = config.globalVaryings ? global : local;\n\n    const _a = config.globalAttributes ? global : local;\n\n    const _e = local; // Build finalized properties\n\n    const x = def => {\n      return exist[def.name] = true;\n    };\n\n    const u = (def, name) => {\n      return this.uniforms[_u(name != null ? name : def.name)] = def;\n    };\n\n    v = def => {\n      return this.varyings[_v(def.name)] = def;\n    };\n\n    const a = def => {\n      return this.attributes[_a(def.name)] = def;\n    };\n\n    const e = def => {\n      const name = _e(def.name);\n\n      this.externals[name] = def;\n      return this.symbols.push(name);\n    };\n\n    const redef = def => ({\n      type: def.type,\n      name: def.name,\n      value: def.value\n    });\n\n    for (def of Array.from(this._signatures.uniform)) {\n      x(def);\n    }\n\n    for (def of Array.from(this._signatures.uniform)) {\n      u(redef(def));\n    }\n\n    for (def of Array.from(this._signatures.varying)) {\n      v(redef(def));\n    }\n\n    for (def of Array.from(this._signatures.external)) {\n      e(def);\n    }\n\n    for (def of Array.from(this._signatures.attribute)) {\n      a(redef(def));\n    }\n\n    for (const name in uniforms) {\n      def = uniforms[name];\n\n      if (exist[name]) {\n        u(def, name);\n      }\n    }\n\n    this.body = this.code = this._compiler(this.namespace, exceptions, defines); // Adds defs to original snippet for inspection\n\n    if (defines) {\n      const defs = (() => {\n        const result = [];\n\n        for (const k in defines) {\n          v = defines[k];\n          result.push(`#define ${k} ${v}`);\n        }\n\n        return result;\n      })().join(\"\\n\");\n\n      if (defs.length) {\n        this._original = [defs, \"//----------------------------------------\", this._original].join(\"\\n\");\n      }\n    }\n\n    return null;\n  }\n\n}\n\nexports.Snippet = Snippet;\nSnippet.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Snippet","initClass","index","namespace","load","language","name","code","program","parse","sigs","compiler","Array","from","compile","constructor","_signatures","_compiler","_name","_original","varyings","attributes","symbols","externals","uniforms","entry","main","undefined","clone","bind","config","defines","def","left","v","exist","exceptions","local","globals","key","_u","globalUniforms","_v","globalVaryings","_a","globalAttributes","u","a","e","push","redef","type","uniform","varying","external","attribute","body","defs","result","k","join","length"]
}
