shadow$provide.module$node_modules$mathbox$build$esm$render$meshes$surface=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Surface=void 0;global=require("module$node_modules$mathbox$build$esm$render$meshes$base");var _constants=require("module$node_modules$three$src$constants"),_Mesh=require("module$node_modules$three$src$objects$Mesh"),_surfacegeometry=require("module$node_modules$mathbox$build$esm$render$geometry$surfacegeometry");class Surface extends global.Base{constructor(renderer,
shaders,options){super(renderer,shaders,options);let {uniforms,material}=options;const {position,color,normal,mask,map,combine,linear,stpq,intUV}=options;null==uniforms&&(uniforms={});null==material&&(material=!0);renderer=null!=uniforms.styleColor;this.geometry=new _surfacegeometry.SurfaceGeometry({width:options.width,height:options.height,surfaces:options.surfaces,layers:options.layers,closedX:options.closedX,closedY:options.closedY});this._adopt(uniforms);this._adopt(this.geometry.uniforms);var defs=
{};options.closedX&&(defs.SURFACE_CLOSED_X="");options.closedY&&(defs.SURFACE_CLOSED_Y="");intUV&&(defs.POSITION_UV_INT="");shaders=shaders.material();options=shaders.vertex;options.pipe(this._vertexColor(color,mask));options.require(this._vertexPosition(position,material,map,2,stpq));normal?(options.require(normal),options.pipe("surface.position.normal",this.uniforms,defs)):(material||options.pipe("surface.position",this.uniforms,defs),material&&options.pipe("surface.position.shaded",this.uniforms,
defs));options.pipe("project.position",this.uniforms);shaders.fragment=renderer=this._fragmentColor(renderer,material,color,mask,map,2,stpq,combine,linear);renderer.pipe("fragment.color",this.uniforms);renderer=shaders.link({side:_constants.DoubleSide});this.material=this._material(renderer);defs=new _Mesh.Mesh(this.geometry,this.material);defs.userData=renderer;this._raw(defs);this.renders=[defs]}dispose(){this.geometry.dispose();this.material.dispose();this.renders=this.geometry=this.material=null;
return super.dispose()}}exports.Surface=Surface}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$meshes$surface.js.map
