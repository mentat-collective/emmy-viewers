{
"version":3,
"file":"module$node_modules$odex$src$odex.js",
"lineCount":25,
"mappings":"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",
"sources":["node_modules/odex/src/odex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$odex$src$odex\"] = function(global,require,module,exports) {\n\"use strict\";\n/**\n * An implementation of ODEX, by E. Hairer and G. Wanner, ported from the Fortran ODEX.F.\n * The original work carries the BSD 2-clause license, and so does this.\n *\n * Copyright (c) 2016 Colin Smith.\n * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following\n * disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n * following disclaimer in the documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Outcome;\n(function (Outcome) {\n    Outcome[Outcome[\"Converged\"] = 0] = \"Converged\";\n    Outcome[Outcome[\"MaxStepsExceeded\"] = 1] = \"MaxStepsExceeded\";\n    Outcome[Outcome[\"EarlyReturn\"] = 2] = \"EarlyReturn\";\n})(Outcome = exports.Outcome || (exports.Outcome = {}));\nvar Solver = (function () {\n    function Solver(n) {\n        this.n = n;\n        this.uRound = 2.3e-16;\n        this.maxSteps = 10000;\n        this.initialStepSize = 1e-4;\n        this.maxStepSize = 0;\n        this.maxExtrapolationColumns = 9;\n        this.stepSizeSequence = 0;\n        this.stabilityCheckCount = 1;\n        this.stabilityCheckTableLines = 2;\n        this.denseOutput = false;\n        this.denseOutputErrorEstimator = true;\n        this.denseComponents = undefined;\n        this.interpolationFormulaDegree = 4;\n        this.stepSizeReductionFactor = 0.5;\n        this.stepSizeFac1 = 0.02;\n        this.stepSizeFac2 = 4.0;\n        this.stepSizeFac3 = 0.8;\n        this.stepSizeFac4 = 0.9;\n        this.stepSafetyFactor1 = 0.65;\n        this.stepSafetyFactor2 = 0.94;\n        this.relativeTolerance = 1e-5;\n        this.absoluteTolerance = 1e-5;\n        this.debug = false;\n    }\n    Solver.prototype.grid = function (dt, out) {\n        if (!this.denseOutput)\n            throw new Error('Must set .denseOutput to true when using grid');\n        var components = this.denseComponents;\n        if (!components) {\n            components = [];\n            for (var i = 0; i < this.n; ++i)\n                components.push(i);\n        }\n        var t;\n        return function (n, xOld, x, y, interpolate) {\n            if (n === 1) {\n                var v = out(x, y);\n                t = x + dt;\n                return v;\n            }\n            while (t <= x) {\n                var yf = [];\n                for (var _i = 0, components_1 = components; _i < components_1.length; _i++) {\n                    var i = components_1[_i];\n                    yf.push(interpolate(i, t));\n                }\n                var v = out(t, yf);\n                if (v === false)\n                    return false;\n                t += dt;\n            }\n        };\n    };\n    // Make a 1-based 2D array, with r rows and c columns. The initial values are undefined.\n    Solver.dim2 = function (r, c) {\n        var a = new Array(r + 1);\n        for (var i = 1; i <= r; ++i)\n            a[i] = Solver.dim(c);\n        return a;\n    };\n    // Generate step size sequence and return as a 1-based array of length n.\n    Solver.stepSizeSequence = function (nSeq, n) {\n        var a = new Array(n + 1);\n        a[0] = 0;\n        switch (nSeq) {\n            case 1:\n                for (var i = 1; i <= n; ++i)\n                    a[i] = 2 * i;\n                break;\n            case 2:\n                a[1] = 2;\n                for (var i = 2; i <= n; ++i)\n                    a[i] = 4 * i - 4;\n                break;\n            case 3:\n                a[1] = 2;\n                a[2] = 4;\n                a[3] = 6;\n                for (var i = 4; i <= n; ++i)\n                    a[i] = 2 * a[i - 2];\n                break;\n            case 4:\n                for (var i = 1; i <= n; ++i)\n                    a[i] = 4 * i - 2;\n                break;\n            case 5:\n                for (var i = 1; i <= n; ++i)\n                    a[i] = 4 * i;\n                break;\n            default:\n                throw new Error('invalid stepSizeSequence selected');\n        }\n        return a;\n    };\n    // Integrate the differential system represented by f, from x to xEnd, with initial data y.\n    // solOut, if provided, is called at each integration step.\n    Solver.prototype.solve = function (f, x, y0, xEnd, solOut) {\n        var _this = this;\n        // Make a copy of y0, 1-based. We leave the user's parameters alone so that they may be reused if desired.\n        var y = [0].concat(y0);\n        var dz = Solver.dim(this.n);\n        var yh1 = Solver.dim(this.n);\n        var yh2 = Solver.dim(this.n);\n        if (this.maxSteps <= 0)\n            throw new Error('maxSteps must be positive');\n        var km = this.maxExtrapolationColumns;\n        if (km <= 2)\n            throw new Error('maxExtrapolationColumns must be > 2');\n        var nSeq = this.stepSizeSequence || (this.denseOutput ? 4 : 1);\n        if (nSeq <= 3 && this.denseOutput)\n            throw new Error('stepSizeSequence incompatible with denseOutput');\n        if (this.denseOutput && !solOut)\n            throw new Error('denseOutput requires a solution observer function');\n        if (this.interpolationFormulaDegree <= 0 || this.interpolationFormulaDegree >= 7)\n            throw new Error('bad interpolationFormulaDegree');\n        var icom = [0]; // icom will be 1-based, so start with a pad entry.\n        var nrdens = 0;\n        if (this.denseOutput) {\n            if (this.denseComponents) {\n                for (var _i = 0, _a = this.denseComponents; _i < _a.length; _i++) {\n                    var c = _a[_i];\n                    // convert dense components requested into one-based indexing.\n                    if (c < 0 || c > this.n)\n                        throw new Error('bad dense component: ' + c);\n                    icom.push(c + 1);\n                    ++nrdens;\n                }\n            }\n            else {\n                // if user asked for dense output but did not specify any denseComponents,\n                // request all of them.\n                for (var i = 1; i <= this.n; ++i) {\n                    icom.push(i);\n                }\n                nrdens = this.n;\n            }\n        }\n        if (this.uRound <= 1e-35 || this.uRound > 1)\n            throw new Error('suspicious value of uRound');\n        var hMax = Math.abs(this.maxStepSize || xEnd - x);\n        var lfSafe = 2 * km * km + km;\n        function expandToArray(x, n) {\n            // If x is an array, return a 1-based copy of it. If x is a number, return a new 1-based array\n            // consisting of n copies of the number.\n            var tolArray = [0];\n            if (Array.isArray(x)) {\n                return tolArray.concat(x);\n            }\n            else {\n                for (var i = 0; i < n; ++i)\n                    tolArray.push(x);\n                return tolArray;\n            }\n        }\n        var aTol = expandToArray(this.absoluteTolerance, this.n);\n        var rTol = expandToArray(this.relativeTolerance, this.n);\n        var _b = [0, 0, 0, 0], nEval = _b[0], nStep = _b[1], nAccept = _b[2], nReject = _b[3];\n        // call to core integrator\n        var nrd = Math.max(1, nrdens);\n        var ncom = Math.max(1, (2 * km + 5) * nrdens);\n        var dens = Solver.dim(ncom);\n        var fSafe = Solver.dim2(lfSafe, nrd);\n        // Wrap f in a function F which hides the one-based indexing from the customers.\n        var F = function (x, y, yp) {\n            var ret = f(x, y.slice(1));\n            for (var i = 0; i < ret.length; ++i)\n                yp[i + 1] = ret[i];\n        };\n        var odxcor = function () {\n            // The following three variables are COMMON/CONTEX/\n            var xOldd;\n            var hhh;\n            var kmit;\n            var acceptStep = function (n) {\n                // Returns true if we should continue the integration. The only time false\n                // is returned is when the user's solution observation function has returned false,\n                // indicating that she does not wish to continue the computation.\n                xOld = x;\n                x += h;\n                if (_this.denseOutput) {\n                    // kmit = mu of the paper\n                    kmit = 2 * kc - _this.interpolationFormulaDegree + 1;\n                    for (var i = 1; i <= nrd; ++i)\n                        dens[i] = y[icom[i]];\n                    xOldd = xOld;\n                    hhh = h; // note: xOldd and hhh are part of /CONODX/\n                    for (var i = 1; i <= nrd; ++i)\n                        dens[nrd + i] = h * dz[icom[i]];\n                    var kln = 2 * nrd;\n                    for (var i = 1; i <= nrd; ++i)\n                        dens[kln + i] = t[1][icom[i]];\n                    // compute solution at mid-point\n                    for (var j = 2; j <= kc; ++j) {\n                        var dblenj = nj[j];\n                        for (var l = j; l >= 2; --l) {\n                            var factor = Math.pow((dblenj / nj[l - 1]), 2) - 1;\n                            for (var i = 1; i <= nrd; ++i) {\n                                ySafe[l - 1][i] = ySafe[l][i] + (ySafe[l][i] - ySafe[l - 1][i]) / factor;\n                            }\n                        }\n                    }\n                    var krn = 4 * nrd;\n                    for (var i = 1; i <= nrd; ++i)\n                        dens[krn + i] = ySafe[1][i];\n                    // compute first derivative at right end\n                    for (var i = 1; i <= n; ++i)\n                        yh1[i] = t[1][i];\n                    F(x, yh1, yh2);\n                    krn = 3 * nrd;\n                    for (var i = 1; i <= nrd; ++i)\n                        dens[krn + i] = yh2[icom[i]] * h;\n                    // THE LOOP\n                    for (var kmi = 1; kmi <= kmit; ++kmi) {\n                        // compute kmi-th derivative at mid-point\n                        var kbeg = (kmi + 1) / 2 | 0;\n                        for (var kk = kbeg; kk <= kc; ++kk) {\n                            var facnj = Math.pow((nj[kk] / 2), (kmi - 1));\n                            iPt = iPoint[kk + 1] - 2 * kk + kmi;\n                            for (var i = 1; i <= nrd; ++i) {\n                                ySafe[kk][i] = fSafe[iPt][i] * facnj;\n                            }\n                        }\n                        for (var j = kbeg + 1; j <= kc; ++j) {\n                            var dblenj = nj[j];\n                            for (var l = j; l >= kbeg + 1; --l) {\n                                var factor = Math.pow((dblenj / nj[l - 1]), 2) - 1;\n                                for (var i = 1; i <= nrd; ++i) {\n                                    ySafe[l - 1][i] = ySafe[l][i] + (ySafe[l][i] - ySafe[l - 1][i]) / factor;\n                                }\n                            }\n                        }\n                        krn = (kmi + 4) * nrd;\n                        for (var i = 1; i <= nrd; ++i)\n                            dens[krn + i] = ySafe[kbeg][i] * h;\n                        if (kmi === kmit)\n                            continue;\n                        // compute differences\n                        for (var kk = (kmi + 2) / 2 | 0; kk <= kc; ++kk) {\n                            var lbeg = iPoint[kk + 1];\n                            var lend = iPoint[kk] + kmi + 1;\n                            if (kmi === 1 && nSeq === 4)\n                                lend += 2;\n                            var l = void 0;\n                            for (l = lbeg; l >= lend; l -= 2) {\n                                for (var i = 1; i <= nrd; ++i) {\n                                    fSafe[l][i] -= fSafe[l - 2][i];\n                                }\n                            }\n                            if (kmi === 1 && nSeq === 4) {\n                                l = lend - 2;\n                                for (var i = 1; i <= nrd; ++i)\n                                    fSafe[l][i] -= dz[icom[i]];\n                            }\n                        }\n                        // compute differences\n                        for (var kk = (kmi + 2) / 2 | 0; kk <= kc; ++kk) {\n                            var lbeg = iPoint[kk + 1] - 1;\n                            var lend = iPoint[kk] + kmi + 2;\n                            for (var l = lbeg; l >= lend; l -= 2) {\n                                for (var i = 1; i <= nrd; ++i) {\n                                    fSafe[l][i] -= fSafe[l - 2][i];\n                                }\n                            }\n                        }\n                    }\n                    interp(nrd, dens, kmit);\n                    // estimation of interpolation error\n                    if (_this.denseOutputErrorEstimator && kmit >= 1) {\n                        var errint = 0;\n                        for (var i = 1; i <= nrd; ++i)\n                            errint += Math.pow((dens[(kmit + 4) * nrd + i] / scal[icom[i]]), 2);\n                        errint = Math.sqrt(errint / nrd) * errfac[kmit];\n                        hoptde = h / Math.max(Math.pow(errint, (1 / (kmit + 4))), 0.01);\n                        if (errint > 10) {\n                            h = hoptde;\n                            x = xOld;\n                            ++nReject;\n                            reject = true;\n                            return true;\n                        }\n                    }\n                    for (var i = 1; i <= n; ++i)\n                        dz[i] = yh2[i];\n                }\n                for (var i = 1; i <= n; ++i)\n                    y[i] = t[1][i];\n                ++nAccept;\n                if (solOut) {\n                    // If denseOutput, we also want to supply the dense closure.\n                    if (solOut(nAccept + 1, xOld, x, y.slice(1), _this.denseOutput && contex(xOldd, hhh, kmit, dens, icom)) === false)\n                        return false;\n                }\n                // compute optimal order\n                var kopt;\n                if (kc === 2) {\n                    kopt = Math.min(3, km - 1);\n                    if (reject)\n                        kopt = 2;\n                }\n                else {\n                    if (kc <= k) {\n                        kopt = kc;\n                        if (w[kc - 1] < w[kc] * _this.stepSizeFac3)\n                            kopt = kc - 1;\n                        if (w[kc] < w[kc - 1] * _this.stepSizeFac4)\n                            kopt = Math.min(kc + 1, km - 1);\n                    }\n                    else {\n                        kopt = kc - 1;\n                        if (kc > 3 && w[kc - 2] < w[kc - 1] * _this.stepSizeFac3)\n                            kopt = kc - 2;\n                        if (w[kc] < w[kopt] * _this.stepSizeFac4)\n                            kopt = Math.min(kc, km - 1);\n                    }\n                }\n                // after a rejected step\n                if (reject) {\n                    k = Math.min(kopt, kc);\n                    h = posneg * Math.min(Math.abs(h), Math.abs(hh[k]));\n                    reject = false;\n                    return true; // goto 10\n                }\n                if (kopt <= kc) {\n                    h = hh[kopt];\n                }\n                else {\n                    if (kc < k && w[kc] < w[kc - 1] * _this.stepSizeFac4) {\n                        h = hh[kc] * a[kopt + 1] / a[kc];\n                    }\n                    else {\n                        h = hh[kc] * a[kopt] / a[kc];\n                    }\n                }\n                // compute stepsize for next step\n                k = kopt;\n                h = posneg * Math.abs(h);\n                return true;\n            };\n            var midex = function (j) {\n                var dy = Solver.dim(_this.n);\n                // Computes the jth line of the extrapolation table and\n                // provides an estimation of the optional stepsize\n                var hj = h / nj[j];\n                // Euler starting step\n                for (var i = 1; i <= _this.n; ++i) {\n                    yh1[i] = y[i];\n                    yh2[i] = y[i] + hj * dz[i];\n                }\n                // Explicit midpoint rule\n                var m = nj[j] - 1;\n                var njMid = (nj[j] / 2) | 0;\n                for (var mm = 1; mm <= m; ++mm) {\n                    if (_this.denseOutput && mm === njMid) {\n                        for (var i = 1; i <= nrd; ++i) {\n                            ySafe[j][i] = yh2[icom[i]];\n                        }\n                    }\n                    F(x + hj * mm, yh2, dy);\n                    if (_this.denseOutput && Math.abs(mm - njMid) <= 2 * j - 1) {\n                        ++iPt;\n                        for (var i = 1; i <= nrd; ++i) {\n                            fSafe[iPt][i] = dy[icom[i]];\n                        }\n                    }\n                    for (var i = 1; i <= _this.n; ++i) {\n                        var ys = yh1[i];\n                        yh1[i] = yh2[i];\n                        yh2[i] = ys + 2 * hj * dy[i];\n                    }\n                    if (mm <= _this.stabilityCheckCount && j <= _this.stabilityCheckTableLines) {\n                        // stability check\n                        var del1 = 0;\n                        for (var i = 1; i <= _this.n; ++i) {\n                            del1 += Math.pow((dz[i] / scal[i]), 2);\n                        }\n                        var del2 = 0;\n                        for (var i = 1; i <= _this.n; ++i) {\n                            del2 += Math.pow(((dy[i] - dz[i]) / scal[i]), 2);\n                        }\n                        var quot = del2 / Math.max(_this.uRound, del1);\n                        if (quot > 4) {\n                            ++nEval;\n                            atov = true;\n                            h *= _this.stepSizeReductionFactor;\n                            reject = true;\n                            return;\n                        }\n                    }\n                }\n                // final smoothing step\n                F(x + h, yh2, dy);\n                if (_this.denseOutput && njMid <= 2 * j - 1) {\n                    ++iPt;\n                    for (var i = 1; i <= nrd; ++i) {\n                        fSafe[iPt][i] = dy[icom[i]];\n                    }\n                }\n                for (var i = 1; i <= _this.n; ++i) {\n                    t[j][i] = (yh1[i] + yh2[i] + hj * dy[i]) / 2;\n                }\n                nEval += nj[j];\n                // polynomial extrapolation\n                if (j === 1)\n                    return; // was j.eq.1\n                var dblenj = nj[j];\n                var fac;\n                for (var l = j; l > 1; --l) {\n                    fac = Math.pow((dblenj / nj[l - 1]), 2) - 1;\n                    for (var i = 1; i <= _this.n; ++i) {\n                        t[l - 1][i] = t[l][i] + (t[l][i] - t[l - 1][i]) / fac;\n                    }\n                }\n                err = 0;\n                // scaling\n                for (var i = 1; i <= _this.n; ++i) {\n                    var t1i = Math.max(Math.abs(y[i]), Math.abs(t[1][i]));\n                    scal[i] = aTol[i] + rTol[i] * t1i;\n                    err += Math.pow(((t[1][i] - t[2][i]) / scal[i]), 2);\n                }\n                err = Math.sqrt(err / _this.n);\n                if (err * _this.uRound >= 1 || (j > 2 && err >= errOld)) {\n                    atov = true;\n                    h *= _this.stepSizeReductionFactor;\n                    reject = true;\n                    return;\n                }\n                errOld = Math.max(4 * err, 1);\n                // compute optimal stepsizes\n                var exp0 = 1 / (2 * j - 1);\n                var facMin = Math.pow(_this.stepSizeFac1, exp0);\n                fac = Math.min(_this.stepSizeFac2 / facMin, Math.max(facMin, Math.pow((err / _this.stepSafetyFactor1), exp0) / _this.stepSafetyFactor2));\n                fac = 1 / fac;\n                hh[j] = Math.min(Math.abs(h) * fac, hMax);\n                w[j] = a[j] / hh[j];\n            };\n            var interp = function (n, y, imit) {\n                // computes the coefficients of the interpolation formula\n                var a = new Array(31); // zero-based: 0:30\n                // begin with Hermite interpolation\n                for (var i = 1; i <= n; ++i) {\n                    var y0_1 = y[i];\n                    var y1 = y[2 * n + i];\n                    var yp0 = y[n + i];\n                    var yp1 = y[3 * n + i];\n                    var yDiff = y1 - y0_1;\n                    var aspl = -yp1 + yDiff;\n                    var bspl = yp0 - yDiff;\n                    y[n + i] = yDiff;\n                    y[2 * n + i] = aspl;\n                    y[3 * n + i] = bspl;\n                    if (imit < 0)\n                        continue;\n                    // compute the derivatives of Hermite at midpoint\n                    var ph0 = (y0_1 + y1) * 0.5 + 0.125 * (aspl + bspl);\n                    var ph1 = yDiff + (aspl - bspl) * 0.25;\n                    var ph2 = -(yp0 - yp1);\n                    var ph3 = 6 * (bspl - aspl);\n                    // compute the further coefficients\n                    if (imit >= 1) {\n                        a[1] = 16 * (y[5 * n + i] - ph1);\n                        if (imit >= 3) {\n                            a[3] = 16 * (y[7 * n + i] - ph3 + 3 * a[1]);\n                            if (imit >= 5) {\n                                for (var im = 5; im <= imit; im += 2) {\n                                    var fac1 = im * (im - 1) / 2;\n                                    var fac2 = fac1 * (im - 2) * (im - 3) * 2;\n                                    a[im] = 16 * (y[(im + 4) * n + i] + fac1 * a[im - 2] - fac2 * a[im - 4]);\n                                }\n                            }\n                        }\n                    }\n                    a[0] = (y[4 * n + i] - ph0) * 16;\n                    if (imit >= 2) {\n                        a[2] = (y[n * 6 + i] - ph2 + a[0]) * 16;\n                        if (imit >= 4) {\n                            for (var im = 4; im <= imit; im += 2) {\n                                var fac1 = im * (im - 1) / 2;\n                                var fac2 = im * (im - 1) * (im - 2) * (im - 3);\n                                a[im] = (y[n * (im + 4) + i] + a[im - 2] * fac1 - a[im - 4] * fac2) * 16;\n                            }\n                        }\n                    }\n                    for (var im = 0; im <= imit; ++im)\n                        y[n * (im + 4) + i] = a[im];\n                }\n            };\n            var contex = function (xOld, h, imit, y, icom) {\n                return function (c, x) {\n                    var i = 0;\n                    for (var j = 1; j <= nrd; ++j) {\n                        // careful: customers describe components 0-based. We record indices 1-based.\n                        if (icom[j] === c + 1)\n                            i = j;\n                    }\n                    if (i === 0)\n                        throw new Error('no dense output available for component ' + c);\n                    var theta = (x - xOld) / h;\n                    var theta1 = 1 - theta;\n                    var phthet = y[i] + theta * (y[nrd + i] + theta1 * (y[2 * nrd + i] * theta + y[3 * nrd + i] * theta1));\n                    if (imit < 0)\n                        return phthet;\n                    var thetah = theta - 0.5;\n                    var ret = y[nrd * (imit + 4) + i];\n                    for (var im = imit; im >= 1; --im) {\n                        ret = y[nrd * (im + 3) + i] + ret * thetah / im;\n                    }\n                    return phthet + Math.pow((theta * theta1), 2) * ret;\n                };\n            };\n            // preparation\n            var ySafe = Solver.dim2(km, nrd);\n            var hh = Solver.dim(km);\n            var t = Solver.dim2(km, _this.n);\n            // Define the step size sequence\n            var nj = Solver.stepSizeSequence(nSeq, km);\n            // Define the a[i] for order selection\n            var a = Solver.dim(km);\n            a[1] = 1 + nj[1];\n            for (var i = 2; i <= km; ++i) {\n                a[i] = a[i - 1] + nj[i];\n            }\n            // Initial Scaling\n            var scal = Solver.dim(_this.n);\n            for (var i = 1; i <= _this.n; ++i) {\n                scal[i] = aTol[i] + rTol[i] + Math.abs(y[i]);\n            }\n            // Initial preparations\n            var posneg = xEnd - x >= 0 ? 1 : -1;\n            var k = Math.max(2, Math.min(km - 1, Math.floor(-Solver.log10(rTol[1] + 1e-40) * 0.6 + 1.5)));\n            var h = Math.max(Math.abs(_this.initialStepSize), 1e-4);\n            h = posneg * Math.min(h, hMax, Math.abs(xEnd - x) / 2);\n            var iPoint = Solver.dim(km + 1);\n            var errfac = Solver.dim(2 * km);\n            var xOld = x;\n            var iPt = 0;\n            if (solOut) {\n                if (_this.denseOutput) {\n                    iPoint[1] = 0;\n                    for (var i = 1; i <= km; ++i) {\n                        var njAdd = 4 * i - 2;\n                        if (nj[i] > njAdd)\n                            ++njAdd;\n                        iPoint[i + 1] = iPoint[i] + njAdd;\n                    }\n                    for (var mu = 1; mu <= 2 * km; ++mu) {\n                        var errx = Math.sqrt(mu / (mu + 4)) * 0.5;\n                        var prod = Math.pow((1 / (mu + 4)), 2);\n                        for (var j = 1; j <= mu; ++j)\n                            prod *= errx / j;\n                        errfac[mu] = prod;\n                    }\n                    iPt = 0;\n                }\n                // check return value and abandon integration if called for\n                if (false === solOut(nAccept + 1, xOld, x, y.slice(1))) {\n                    return Outcome.EarlyReturn;\n                }\n            }\n            var err = 0;\n            var errOld = 1e10;\n            var hoptde = posneg * hMax;\n            var w = Solver.dim(km);\n            w[1] = 0;\n            var reject = false;\n            var last = false;\n            var atov;\n            var kc = 0;\n            var STATE;\n            (function (STATE) {\n                STATE[STATE[\"Start\"] = 0] = \"Start\";\n                STATE[STATE[\"BasicIntegrationStep\"] = 1] = \"BasicIntegrationStep\";\n                STATE[STATE[\"ConvergenceStep\"] = 2] = \"ConvergenceStep\";\n                STATE[STATE[\"HopeForConvergence\"] = 3] = \"HopeForConvergence\";\n                STATE[STATE[\"Accept\"] = 4] = \"Accept\";\n                STATE[STATE[\"Reject\"] = 5] = \"Reject\";\n            })(STATE || (STATE = {}));\n            var state = STATE.Start;\n            loop: while (true) {\n                _this.debug && console.log('STATE', STATE[state], nStep, xOld, x, h, k, kc, hoptde);\n                switch (state) {\n                    case STATE.Start:\n                        atov = false;\n                        // Is xEnd reached in the next step?\n                        if (0.1 * Math.abs(xEnd - x) <= Math.abs(x) * _this.uRound)\n                            break loop;\n                        h = posneg * Math.min(Math.abs(h), Math.abs(xEnd - x), hMax, Math.abs(hoptde));\n                        if ((x + 1.01 * h - xEnd) * posneg > 0) {\n                            h = xEnd - x;\n                            last = true;\n                        }\n                        if (nStep === 0 || !_this.denseOutput) {\n                            F(x, y, dz);\n                            ++nEval;\n                        }\n                        // The first and last step\n                        if (nStep === 0 || last) {\n                            iPt = 0;\n                            ++nStep;\n                            for (var j = 1; j <= k; ++j) {\n                                kc = j;\n                                midex(j);\n                                if (atov)\n                                    continue loop;\n                                if (j > 1 && err <= 1) {\n                                    state = STATE.Accept;\n                                    continue loop;\n                                }\n                            }\n                            state = STATE.HopeForConvergence;\n                            continue;\n                        }\n                        state = STATE.BasicIntegrationStep;\n                        continue;\n                    case STATE.BasicIntegrationStep:\n                        // basic integration step\n                        iPt = 0;\n                        ++nStep;\n                        if (nStep >= _this.maxSteps) {\n                            return Outcome.MaxStepsExceeded;\n                        }\n                        kc = k - 1;\n                        for (var j = 1; j <= kc; ++j) {\n                            midex(j);\n                            if (atov) {\n                                state = STATE.Start;\n                                continue loop;\n                            }\n                        }\n                        // convergence monitor\n                        if (k === 2 || reject) {\n                            state = STATE.ConvergenceStep;\n                        }\n                        else {\n                            if (err <= 1) {\n                                state = STATE.Accept;\n                            }\n                            else if (err > Math.pow(((nj[k + 1] * nj[k]) / 4), 2)) {\n                                state = STATE.Reject;\n                            }\n                            else\n                                state = STATE.ConvergenceStep;\n                        }\n                        continue;\n                    case STATE.ConvergenceStep:\n                        midex(k);\n                        if (atov) {\n                            state = STATE.Start;\n                            continue;\n                        }\n                        kc = k;\n                        if (err <= 1) {\n                            state = STATE.Accept;\n                            continue;\n                        }\n                        state = STATE.HopeForConvergence;\n                        continue;\n                    case STATE.HopeForConvergence:\n                        // hope for convergence in line k + 1\n                        if (err > Math.pow((nj[k + 1] / 2), 2)) {\n                            state = STATE.Reject;\n                            continue;\n                        }\n                        kc = k + 1;\n                        midex(kc);\n                        if (atov)\n                            state = STATE.Start;\n                        else if (err > 1)\n                            state = STATE.Reject;\n                        else\n                            state = STATE.Accept;\n                        continue;\n                    case STATE.Accept:\n                        if (!acceptStep(_this.n))\n                            return Outcome.EarlyReturn;\n                        state = STATE.Start;\n                        continue;\n                    case STATE.Reject:\n                        k = Math.min(k, kc, km - 1);\n                        if (k > 2 && w[k - 1] < w[k] * _this.stepSizeFac3)\n                            k -= 1;\n                        ++nReject;\n                        h = posneg * hh[k];\n                        reject = true;\n                        state = STATE.BasicIntegrationStep;\n                }\n            }\n            return Outcome.Converged;\n        };\n        var outcome = odxcor();\n        return {\n            y: y.slice(1),\n            outcome: outcome,\n            nStep: nStep,\n            xEnd: xEnd,\n            nAccept: nAccept,\n            nReject: nReject,\n            nEval: nEval\n        };\n    };\n    return Solver;\n}());\n// return a 1-based array of length n. Initial values undefined.\nSolver.dim = function (n) { return Array(n + 1); };\nSolver.log10 = function (x) { return Math.log(x) / Math.LN10; };\nexports.Solver = Solver;\n//# sourceMappingURL=odex.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Outcome","Solver","n","uRound","maxSteps","initialStepSize","maxStepSize","maxExtrapolationColumns","stepSizeSequence","stabilityCheckCount","stabilityCheckTableLines","denseOutput","denseOutputErrorEstimator","denseComponents","undefined","interpolationFormulaDegree","stepSizeReductionFactor","stepSizeFac1","stepSizeFac2","stepSizeFac3","stepSizeFac4","stepSafetyFactor1","stepSafetyFactor2","absoluteTolerance","relativeTolerance","debug","prototype","grid","Solver.prototype.grid","dt","out","Error","components","i","push","t","xOld","x","y","interpolate","v","yf","_i","components_1","length","dim2","Solver.dim2","r","c","a","Array","dim","Solver.stepSizeSequence","nSeq","solve","Solver.prototype.solve","f","y0","xEnd","solOut","expandToArray","tolArray","isArray","concat","_this","dz","yh1","yh2","km","icom","nrdens","_a","hMax","Math","abs","lfSafe","aTol","rTol","_b","nEval","nStep","nAccept","nReject","nrd","max","dens","ncom","fSafe","F","yp","ret","slice","outcome","odxcor","xOldd","hhh","kmit","acceptStep","h","kc","kln","j","dblenj","nj","l","factor","pow","ySafe","krn","kmi","kbeg","kk","facnj","iPt","iPoint","lbeg","lend","y0_1","y1","yp0","yp1","yDiff","aspl","bspl","imit","ph0","ph1","ph2","ph3","im","fac1","fac2","errint","scal","sqrt","errfac","hoptde","reject","contex","kopt","min","k","w","posneg","hh","midex","dy","hj","m","njMid","mm","ys","del1","del2","atov","fac","err","t1i","errOld","exp0","facMin","theta","theta1","phthet","thetah","floor","log10","njAdd","mu","errx","prod","EarlyReturn","last","STATE","state","Start","console","log","Accept","HopeForConvergence","BasicIntegrationStep","MaxStepsExceeded","ConvergenceStep","Reject","Converged","Solver.dim","Solver.log10","LN10"]
}
