{
"version":3,
"file":"module$node_modules$domutils$lib$legacy.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/domutils/lib/legacy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$domutils$lib$legacy\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElementsByTagType = exports.getElementsByTagName = exports.getElementById = exports.getElements = exports.testElement = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar querying_1 = require(\"./querying\");\nvar Checks = {\n    tag_name: function (name) {\n        if (typeof name === \"function\") {\n            return function (elem) { return (0, domhandler_1.isTag)(elem) && name(elem.name); };\n        }\n        else if (name === \"*\") {\n            return domhandler_1.isTag;\n        }\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.name === name; };\n    },\n    tag_type: function (type) {\n        if (typeof type === \"function\") {\n            return function (elem) { return type(elem.type); };\n        }\n        return function (elem) { return elem.type === type; };\n    },\n    tag_contains: function (data) {\n        if (typeof data === \"function\") {\n            return function (elem) { return (0, domhandler_1.isText)(elem) && data(elem.data); };\n        }\n        return function (elem) { return (0, domhandler_1.isText)(elem) && elem.data === data; };\n    },\n};\n/**\n * @param attrib Attribute to check.\n * @param value Attribute value to look for.\n * @returns A function to check whether the a node has an attribute with a particular value.\n */\nfunction getAttribCheck(attrib, value) {\n    if (typeof value === \"function\") {\n        return function (elem) { return (0, domhandler_1.isTag)(elem) && value(elem.attribs[attrib]); };\n    }\n    return function (elem) { return (0, domhandler_1.isTag)(elem) && elem.attribs[attrib] === value; };\n}\n/**\n * @param a First function to combine.\n * @param b Second function to combine.\n * @returns A function taking a node and returning `true` if either\n * of the input functions returns `true` for the node.\n */\nfunction combineFuncs(a, b) {\n    return function (elem) { return a(elem) || b(elem); };\n}\n/**\n * @param options An object describing nodes to look for.\n * @returns A function executing all checks in `options` and returning `true`\n * if any of them match a node.\n */\nfunction compileTest(options) {\n    var funcs = Object.keys(options).map(function (key) {\n        var value = options[key];\n        return Object.prototype.hasOwnProperty.call(Checks, key)\n            ? Checks[key](value)\n            : getAttribCheck(key, value);\n    });\n    return funcs.length === 0 ? null : funcs.reduce(combineFuncs);\n}\n/**\n * @param options An object describing nodes to look for.\n * @param node The element to test.\n * @returns Whether the element matches the description in `options`.\n */\nfunction testElement(options, node) {\n    var test = compileTest(options);\n    return test ? test(node) : true;\n}\nexports.testElement = testElement;\n/**\n * @param options An object describing nodes to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes that match `options`.\n */\nfunction getElements(options, nodes, recurse, limit) {\n    if (limit === void 0) { limit = Infinity; }\n    var test = compileTest(options);\n    return test ? (0, querying_1.filter)(test, nodes, recurse, limit) : [];\n}\nexports.getElements = getElements;\n/**\n * @param id The unique ID attribute value to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @returns The node with the supplied ID.\n */\nfunction getElementById(id, nodes, recurse) {\n    if (recurse === void 0) { recurse = true; }\n    if (!Array.isArray(nodes))\n        nodes = [nodes];\n    return (0, querying_1.findOne)(getAttribCheck(\"id\", id), nodes, recurse);\n}\nexports.getElementById = getElementById;\n/**\n * @param tagName Tag name to search for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `tagName`.\n */\nfunction getElementsByTagName(tagName, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_name(tagName), nodes, recurse, limit);\n}\nexports.getElementsByTagName = getElementsByTagName;\n/**\n * @param type Element type to look for.\n * @param nodes Nodes to search through.\n * @param recurse Also consider child nodes.\n * @param limit Maximum number of nodes to return.\n * @returns All nodes with the supplied `type`.\n */\nfunction getElementsByTagType(type, nodes, recurse, limit) {\n    if (recurse === void 0) { recurse = true; }\n    if (limit === void 0) { limit = Infinity; }\n    return (0, querying_1.filter)(Checks.tag_type(type), nodes, recurse, limit);\n}\nexports.getElementsByTagType = getElementsByTagType;\n\n};"],
"names":["shadow$provide","global","require","module","exports","getAttribCheck","attrib","value","elem","domhandler_1","isTag","attribs","combineFuncs","a","b","compileTest","options","funcs","Object","keys","map","key","prototype","hasOwnProperty","call","Checks","length","reduce","defineProperty","getElementsByTagType","getElementsByTagName","getElementById","getElements","testElement","querying_1","tag_name","name","tag_type","type","tag_contains","data","isText","node","test","nodes","recurse","limit","Infinity","filter","id","Array","isArray","findOne","tagName"]
}
