{
"version":3,
"file":"module$node_modules$markdown_it$lib$rules_core$replacements.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/markdown-it/lib/rules_core/replacements.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$markdown_it$lib$rules_core$replacements\"] = function(global,require,module,exports) {\n// Simple typographic replacements\n//\n// (c) (C) \u2192 \u00a9\n// (tm) (TM) \u2192 \u2122\n// (r) (R) \u2192 \u00ae\n// +- \u2192 \u00b1\n// (p) (P) -> \u00a7\n// ... \u2192 \u2026 (also ?.... \u2192 ?.., !.... \u2192 !..)\n// ???????? \u2192 ???, !!!!! \u2192 !!!, `,,` \u2192 `,`\n// -- \u2192 &ndash;, --- \u2192 &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> \u00bd, \u00bc, \u00be\n// - miltiplication 2 x 4 -> 2 \u00d7 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '\u00a9',\n  r: '\u00ae',\n  p: '\u00a7',\n  tm: '\u2122'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '\u00b1')\n          // .., ..., ....... -> \u2026\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '\u2026').replace(/([?!])\u2026/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","replaceFn","match","name","SCOPED_ABBR","toLowerCase","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","c","r","p","tm","module.exports","state","blkIdx","md","options","typographer","tokens","length","type","test","content","i","children","inside_autolink","inlineTokens","token","replace","info"]
}
