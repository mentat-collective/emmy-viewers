{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$data$interval.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/primitives/types/data/interval.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$data$interval\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Interval = void 0;\n\nvar _array = require(\"./array.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS206: Consider reworking classes to avoid initClass\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Interval extends _array.Array_ {\n  static initClass() {\n    this.traits = [\"node\", \"buffer\", \"active\", \"data\", \"source\", \"index\", \"texture\", \"array\", \"span\", \"interval\", \"sampler\", \"raw\"];\n  }\n\n  updateSpan() {\n    let inverse;\n    const dimension = this.props.axis;\n    let {\n      width\n    } = this.props;\n    const {\n      centered\n    } = this.props;\n    const pad = this.props.padding;\n\n    const range = this._helpers.span.get(\"\", dimension);\n\n    width += pad * 2;\n    this.a = range.x;\n    const span = range.y - range.x;\n\n    if (centered) {\n      inverse = 1 / Math.max(1, width);\n      this.a += span * inverse / 2;\n    } else {\n      inverse = 1 / Math.max(1, width - 1);\n    }\n\n    this.b = span * inverse;\n    return this.a += pad * this.b;\n  }\n\n  callback(callback) {\n    this.updateSpan();\n\n    if (this.last === callback) {\n      return this._callback;\n    }\n\n    this.last = callback;\n\n    if (callback.length <= 3) {\n      return this._callback = (emit, i) => {\n        const x = this.a + this.b * i;\n        return callback(emit, x, i);\n      };\n    } else {\n      return this._callback = (emit, i) => {\n        const x = this.a + this.b * i;\n        return callback(emit, x, i, this.bufferClock, this.bufferStep);\n      };\n    }\n  }\n\n  make() {\n    super.make();\n\n    this._helpers.span.make();\n\n    return this._listen(this, \"span.range\", this.updateSpan);\n  }\n\n  unmake() {\n    super.unmake();\n    return this._helpers.span.unmake();\n  }\n\n  change(changed, touched, init) {\n    super.change(changed, touched, init);\n\n    if (touched[\"span\"]) {\n      this.updateSpan();\n    }\n  }\n\n}\n\nexports.Interval = Interval;\nInterval.initClass();\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","Interval","_array","Array_","initClass","traits","updateSpan","dimension","props","axis","width","centered","pad","padding","range","_helpers","span","get","a","x","y","inverse","Math","max","b","callback","last","_callback","length","emit","i","this._callback","bufferClock","bufferStep","make","_listen","unmake","change","changed","touched","init"]
}
