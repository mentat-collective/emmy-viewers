shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$base$root=function(global,require,module,exports){function __guard__(value,transform){return"undefined"!==typeof value&&null!==value?transform(value):void 0}Object.defineProperty(exports,"__esModule",{value:!0});exports.Root=void 0;global=require("module$node_modules$mathbox$build$esm$primitives$types$base$parent");class Root extends global.Parent{static initClass(){this.traits="node root clock scene vertex unit".split(" ")}init(){this.size=
null;this.cameraEvent={type:"root.camera"};this.preEvent={type:"root.pre"};this.updateEvent={type:"root.update"};this.renderEvent={type:"root.render"};this.postEvent={type:"root.post"};this.clockEvent={type:"clock.tick"};return this.camera=null}make(){return this._helpers.unit.make()}unmake(){return this._helpers.unit.unmake()}change(changed,touched,init){if(changed["root.camera"]||init)return this._unattach(),this._attach(this.props.camera,"camera",this.setCamera,this,this,!0),this.setCamera()}adopt(renderable){return Array.from(renderable.renders).map(object=>
this._context.scene.add(object))}unadopt(renderable){return Array.from(renderable.renders).map(object=>this._context.scene.remove(object))}select(selector){return this.node.model.select(selector)}watch(selector,handler){return this.node.model.watch(selector,handler)}unwatch(handler){return this.node.model.unwatch(handler)}resize(size){this.size=size;return this.trigger({type:"root.resize",size})}getSize(){return this.size}getSpeed(){return this.props.speed}getUnit(){return this._helpers.unit.get()}getUnitUniforms(){return this._helpers.unit.uniforms()}pre(){this.getCamera().updateProjectionMatrix();
this.trigger(this.clockEvent);return this.trigger(this.preEvent)}update(){return this.trigger(this.updateEvent)}render(){return this.trigger(this.renderEvent)}post(){return this.trigger(this.postEvent)}setCamera(){const camera=__guard__(this.select(this.props.camera)[0],x=>x.controller);if(this.camera!==camera)return this.camera=camera,this.trigger({type:"root.camera"})}getCamera(){let left;return null!=(left=null!=this.camera?this.camera.getCamera():void 0)?left:this._context.defaultCamera}getTime(){return this._context.time}vertex(shader,
pass){return 2===pass?shader.pipe("view.position"):3===pass?shader.pipe("root.position"):shader}}exports.Root=Root;Root.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$base$root.js.map
