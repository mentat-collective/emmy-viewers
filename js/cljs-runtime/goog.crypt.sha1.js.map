{
"version":3,
"file":"goog.crypt.sha1.js",
"lineCount":152,
"mappings":"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",
"sources":["goog/crypt/sha1.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new goog.crypt.sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n */\n\ngoog.provide('goog.crypt.Sha1');\n\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Sha1 = function() {\n  'use strict';\n  goog.crypt.Sha1.base(this, 'constructor');\n\n  this.blockSize = 512 / 8;\n\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.chain_ = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.buf_ = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.W_ = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.pad_ = [];\n\n  this.pad_[0] = 128;\n  for (var i = 1; i < this.blockSize; ++i) {\n    this.pad_[i] = 0;\n  }\n\n  /**\n   * @private {number}\n   */\n  this.inbuf_ = 0;\n\n  /**\n   * @private {number}\n   */\n  this.total_ = 0;\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Sha1, goog.crypt.Hash);\n\n\n/** @override */\ngoog.crypt.Sha1.prototype.reset = function() {\n  'use strict';\n  this.chain_[0] = 0x67452301;\n  this.chain_[1] = 0xefcdab89;\n  this.chain_[2] = 0x98badcfe;\n  this.chain_[3] = 0x10325476;\n  this.chain_[4] = 0xc3d2e1f0;\n\n  this.inbuf_ = 0;\n  this.total_ = 0;\n};\n\n\n/**\n * Internal compress helper function.\n * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\n * @param {number=} opt_offset Offset of the block in the buffer.\n * @private\n */\ngoog.crypt.Sha1.prototype.compress_ = function(buf, opt_offset) {\n  'use strict';\n  if (!opt_offset) {\n    opt_offset = 0;\n  }\n\n  var W = this.W_;\n\n  // get 16 big endian words\n  if (typeof buf === 'string') {\n    for (var i = 0; i < 16; i++) {\n      // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n      // have a bug that turns the post-increment ++ operator into pre-increment\n      // during JIT compilation.  We have code that depends heavily on SHA-1 for\n      // correctness and which is affected by this bug, so I've removed all uses\n      // of post-increment ++ in which the result value is used.  We can revert\n      // this change once the Safari bug\n      // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n      // most clients have been updated.\n      W[i] = (buf.charCodeAt(opt_offset) << 24) |\n          (buf.charCodeAt(opt_offset + 1) << 16) |\n          (buf.charCodeAt(opt_offset + 2) << 8) |\n          (buf.charCodeAt(opt_offset + 3));\n      opt_offset += 4;\n    }\n  } else {\n    for (var i = 0; i < 16; i++) {\n      W[i] = (buf[opt_offset] << 24) | (buf[opt_offset + 1] << 16) |\n          (buf[opt_offset + 2] << 8) | (buf[opt_offset + 3]);\n      opt_offset += 4;\n    }\n  }\n\n  // expand to 80 words\n  for (var i = 16; i < 80; i++) {\n    var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n    W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n  }\n\n  var a = this.chain_[0];\n  var b = this.chain_[1];\n  var c = this.chain_[2];\n  var d = this.chain_[3];\n  var e = this.chain_[4];\n  var f, k;\n\n  // TODO(user): Try to unroll this loop to speed up the computation.\n  for (var i = 0; i < 80; i++) {\n    if (i < 40) {\n      if (i < 20) {\n        f = d ^ (b & (c ^ d));\n        k = 0x5a827999;\n      } else {\n        f = b ^ c ^ d;\n        k = 0x6ed9eba1;\n      }\n    } else {\n      if (i < 60) {\n        f = (b & c) | (d & (b | c));\n        k = 0x8f1bbcdc;\n      } else {\n        f = b ^ c ^ d;\n        k = 0xca62c1d6;\n      }\n    }\n\n    var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n    e = d;\n    d = c;\n    c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n    b = a;\n    a = t;\n  }\n\n  this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n  this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n  this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n  this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n  this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n};\n\n\n/** @override */\ngoog.crypt.Sha1.prototype.update = function(bytes, opt_length) {\n  'use strict';\n  // TODO(johnlenz): tighten the function signature and remove this check\n  if (bytes == null) {\n    return;\n  }\n\n  if (opt_length === undefined) {\n    opt_length = bytes.length;\n  }\n\n  var lengthMinusBlock = opt_length - this.blockSize;\n  var n = 0;\n  // Using local instead of member variables gives ~5% speedup on Firefox 16.\n  var buf = this.buf_;\n  var inbuf = this.inbuf_;\n\n  // The outer while loop should execute at most twice.\n  while (n < opt_length) {\n    // When we have no data in the block to top up, we can directly process the\n    // input buffer (assuming it contains sufficient data). This gives ~25%\n    // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n    // the data is provided in large chunks (or in multiples of 64 bytes).\n    if (inbuf == 0) {\n      while (n <= lengthMinusBlock) {\n        this.compress_(bytes, n);\n        n += this.blockSize;\n      }\n    }\n\n    if (typeof bytes === 'string') {\n      while (n < opt_length) {\n        buf[inbuf] = bytes.charCodeAt(n);\n        ++inbuf;\n        ++n;\n        if (inbuf == this.blockSize) {\n          this.compress_(buf);\n          inbuf = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    } else {\n      while (n < opt_length) {\n        buf[inbuf] = bytes[n];\n        ++inbuf;\n        ++n;\n        if (inbuf == this.blockSize) {\n          this.compress_(buf);\n          inbuf = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    }\n  }\n\n  this.inbuf_ = inbuf;\n  this.total_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Sha1.prototype.digest = function() {\n  'use strict';\n  var digest = [];\n  var totalBits = this.total_ * 8;\n\n  // Add pad 0x80 0x00*.\n  if (this.inbuf_ < 56) {\n    this.update(this.pad_, 56 - this.inbuf_);\n  } else {\n    this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n  }\n\n  // Add # bits.\n  for (var i = this.blockSize - 1; i >= 56; i--) {\n    this.buf_[i] = totalBits & 255;\n    totalBits /= 256;  // Don't use bit-shifting here!\n  }\n\n  this.compress_(this.buf_);\n\n  var n = 0;\n  for (var i = 0; i < 5; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      digest[n] = (this.chain_[i] >> j) & 255;\n      ++n;\n    }\n  }\n\n  return digest;\n};\n"],
"names":["goog","provide","require","crypt","Sha1","goog.crypt.Sha1","base","blockSize","chain_","buf_","W_","pad_","i","inbuf_","total_","reset","inherits","Hash","prototype","goog.crypt.Sha1.prototype.reset","compress_","goog.crypt.Sha1.prototype.compress_","buf","opt_offset","W","charCodeAt","t","a","b","c","d","e","f","k","update","goog.crypt.Sha1.prototype.update","bytes","opt_length","undefined","length","lengthMinusBlock","n","inbuf","digest","goog.crypt.Sha1.prototype.digest","totalBits","j"]
}
