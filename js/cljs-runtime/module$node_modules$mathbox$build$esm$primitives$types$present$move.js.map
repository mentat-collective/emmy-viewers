{
"version":3,
"file":"module$node_modules$mathbox$build$esm$primitives$types$present$move.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mEAAA,CAAwF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuDhIC,QAASA,UAAS,CAACC,KAAD,CAAQC,SAAR,CAAmB,CACnC,MAAwB,WAAjB,GAAA,MAAOD,MAAP,EAA0C,IAA1C,GAAgCA,KAAhC,CAAiDC,SAAA,CAAUD,KAAV,CAAjD,CAAoEE,IAAAA,EADxC,CApDrCC,MAAOC,CAAAA,cAAP,CAAsBN,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CE,MAAO,CAAA,CADoC,CAA7C,CAGAF,QAAQO,CAAAA,IAAR,CAAe,IAAK,EAEhBC,OAAAA,CAAcV,OAAA,CAAQ,2EAAR,CAclB,MAAMS,KAAN,QAAmBC,OAAYC,CAAAA,UAA/B,CACSC,gBAAS,EAAG,CACjB,IAAKC,CAAAA,MAAL,CAAc,4CAAA,CAAA,KAAA,CAAA,GAAA,CADG,CAInBC,IAAI,EAAG,CACL,KAAMA,CAAAA,IAAN,EACA;MAAMC,OAAS,CACbC,SAAU,IAAKC,CAAAA,IAAKC,CAAAA,UAAV,CAAqB,WAArB,CADG,CAEbC,OAAQ,IAAKF,CAAAA,IAAKC,CAAAA,UAAV,CAAqB,SAArB,CAFK,CAKf,KAAK,MAAME,CAAX,GAAgBL,OAAhB,CAEE,IAAKM,CAAAA,QAAL,CAAcD,CAAd,CAAA,CADUL,MAAAO,CAAOF,CAAPE,CARP,CAaPC,MAAM,CAACC,MAAD,CAASC,IAAT,CAAe,CACnB,IAAIC,IAEAD,KAAJ,GAAa,IAAKE,CAAAA,KAAMF,CAAAA,IAAxB,EACED,MAAOI,CAAAA,IAAP,CAAY,eAAZ,CAA6B,IAAKP,CAAAA,QAAlC,CAGF,OAAmF,KAA5E,GAACK,IAAD,CAAQvB,SAAA,CAAU,IAAK0B,CAAAA,QAAL,CAAc,QAAd,CAAV,CAAmCC,CAAA,EAAKA,CAAEP,CAAAA,MAAF,CAASC,MAAT,CAAiBC,IAAjB,CAAxC,CAAR,EAAmFC,IAAnF,CAA0FF,MAP9E,CAlBvB,CA8BAtB,OAAQO,CAAAA,IAAR,CAAeA,IACfA,KAAKG,CAAAA,SAAL,EArDgI;",
"sources":["node_modules/mathbox/build/esm/primitives/types/present/move.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$primitives$types$present$move\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Move = void 0;\n\nvar _transition = require(\"./transition.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS103: Rewrite code to no longer use __guard__, or convert again using --optional-chaining\n * DS104: Avoid inline assignments\n * DS206: Consider reworking classes to avoid initClass\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nclass Move extends _transition.Transition {\n  static initClass() {\n    this.traits = [\"node\", \"transition\", \"vertex\", \"move\", \"visible\", \"active\"];\n  }\n\n  make() {\n    super.make();\n    const object = {\n      moveFrom: this.node.attributes[\"move.from\"],\n      moveTo: this.node.attributes[\"move.to\"]\n    };\n\n    for (const k in object) {\n      const v = object[k];\n      this.uniforms[k] = v;\n    }\n  }\n\n  vertex(shader, pass) {\n    let left;\n\n    if (pass === this.props.pass) {\n      shader.pipe(\"move.position\", this.uniforms);\n    }\n\n    return (left = __guard__(this._inherit(\"vertex\"), x => x.vertex(shader, pass))) != null ? left : shader;\n  }\n\n}\n\nexports.Move = Move;\nMove.initClass();\n\nfunction __guard__(value, transform) {\n  return typeof value !== \"undefined\" && value !== null ? transform(value) : undefined;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__guard__","value","transform","undefined","Object","defineProperty","Move","_transition","Transition","initClass","traits","make","object","moveFrom","node","attributes","moveTo","k","uniforms","v","vertex","shader","pass","left","props","pipe","_inherit","x"]
}
