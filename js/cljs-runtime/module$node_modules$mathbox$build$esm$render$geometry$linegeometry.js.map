{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$linegeometry.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/geometry/linegeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$linegeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LineGeometry = void 0;\n\nvar _BufferAttribute = require(\"three/src/core/BufferAttribute.js\");\n\nvar _clipgeometry = require(\"./clipgeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\nLine strips arranged in columns and rows\n\n+----+ +----+ +----+ +----+\n\n+----+ +----+ +----+ +----+\n\n+----+ +----+ +----+ +----+\n*/\nclass LineGeometry extends _clipgeometry.ClipGeometry {\n  constructor(options) {\n    let closed, detail, edge, joint, joints, l, layers, ribbons, samples, segments, strips, vertices, x, y, z;\n    super(options);\n\n    this._clipUniforms();\n\n    this.closed = closed = options.closed || false;\n    this.samples = samples = (+options.samples || 2) + (closed ? 1 : 0);\n    this.strips = strips = +options.strips || 1;\n    this.ribbons = ribbons = +options.ribbons || 1;\n    this.layers = layers = +options.layers || 1;\n    this.detail = detail = +options.detail || 1;\n    const lines = samples - 1;\n    this.joints = joints = detail - 1;\n    this.vertices = vertices = (lines - (closed ? 0 : 1)) * joints + samples;\n    this.segments = segments = (lines - (closed ? 0 : 1)) * joints + lines;\n    const points = vertices * strips * ribbons * layers * 2;\n    const quads = segments * strips * ribbons * layers;\n    const triangles = quads * 2;\n    this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(triangles * 3), 1));\n    this.setAttribute(\"position4\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 4), 4));\n    this.setAttribute(\"line\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 1), 1));\n\n    if (detail > 1) {\n      this.setAttribute(\"joint\", new _BufferAttribute.BufferAttribute(new Float32Array(points), 1));\n    }\n\n    const index = this._emitter(\"index\");\n\n    const position = this._emitter(\"position4\");\n\n    const line = this._emitter(\"line\");\n\n    if (detail > 1) {\n      joint = this._emitter(\"joint\");\n    }\n\n    let base = 0;\n\n    for (let i = 0, end = ribbons * layers, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      for (let j = 0, end1 = strips, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n        for (let k = 0, end2 = segments, asc2 = 0 <= end2; asc2 ? k < end2 : k > end2; asc2 ? k++ : k--) {\n          // note implied - 1\n          index(base);\n          index(base + 1);\n          index(base + 2);\n          index(base + 2);\n          index(base + 1);\n          index(base + 3);\n          base += 2;\n        }\n\n        base += 2;\n      }\n    }\n\n    const edger = closed ? () => 0 : function (x) {\n      if (x === 0) {\n        return -1;\n      } else if (x === samples - 1) {\n        return 1;\n      } else {\n        return 0;\n      }\n    };\n\n    if (detail > 1) {\n      let asc3, end3;\n\n      for (l = 0, end3 = layers, asc3 = 0 <= end3; asc3 ? l < end3 : l > end3; asc3 ? l++ : l--) {\n        let asc4, end4;\n\n        for (z = 0, end4 = ribbons, asc4 = 0 <= end4; asc4 ? z < end4 : z > end4; asc4 ? z++ : z--) {\n          let asc5, end5;\n\n          for (y = 0, end5 = strips, asc5 = 0 <= end5; asc5 ? y < end5 : y > end5; asc5 ? y++ : y--) {\n            let asc6, end6, i1;\n\n            for (i1 = 0, x = i1, end6 = samples, asc6 = 0 <= end6; asc6 ? i1 < end6 : i1 > end6; asc6 ? i1++ : i1--, x = i1) {\n              edge = edger(x);\n\n              if (edge !== 0) {\n                position(x, y, z, l);\n                position(x, y, z, l);\n                line(1);\n                line(-1);\n                joint(0.5);\n                joint(0.5);\n              } else {\n                for (let m = 0, end7 = detail, asc7 = 0 <= end7; asc7 ? m < end7 : m > end7; asc7 ? m++ : m--) {\n                  position(x, y, z, l);\n                  position(x, y, z, l);\n                  line(1);\n                  line(-1);\n                  joint(m / joints);\n                  joint(m / joints);\n                }\n              }\n            }\n          }\n        }\n      }\n    } else {\n      let asc8, end8;\n\n      for (l = 0, end8 = layers, asc8 = 0 <= end8; asc8 ? l < end8 : l > end8; asc8 ? l++ : l--) {\n        let asc9, end9;\n\n        for (z = 0, end9 = ribbons, asc9 = 0 <= end9; asc9 ? z < end9 : z > end9; asc9 ? z++ : z--) {\n          let asc10, end10;\n\n          for (y = 0, end10 = strips, asc10 = 0 <= end10; asc10 ? y < end10 : y > end10; asc10 ? y++ : y--) {\n            let asc11, end11, j1;\n\n            for (j1 = 0, x = j1, end11 = samples, asc11 = 0 <= end11; asc11 ? j1 < end11 : j1 > end11; asc11 ? j1++ : j1--, x = j1) {\n              position(x, y, z, l);\n              position(x, y, z, l);\n              line(1);\n              line(-1);\n            }\n          }\n        }\n      }\n    }\n\n    this._finalize();\n\n    this.clip();\n  }\n\n  clip(samples, strips, ribbons, layers) {\n    if (samples == null) {\n      samples = this.samples - this.closed;\n    }\n\n    if (strips == null) {\n      ({\n        strips\n      } = this);\n    }\n\n    if (ribbons == null) {\n      ({\n        ribbons\n      } = this);\n    }\n\n    if (layers == null) {\n      ({\n        layers\n      } = this);\n    }\n\n    const vertices = samples + (samples - (this.closed ? 0 : 2)) * this.joints;\n    const segments = vertices - (this.closed ? 0 : 1);\n    samples += this.closed;\n\n    this._clipGeometry(samples, strips, ribbons, layers);\n\n    return this._clipOffsets(6, segments, strips, ribbons, layers, this.segments, this.strips, this.ribbons, this.layers);\n  }\n\n}\n\nexports.LineGeometry = LineGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","LineGeometry","_BufferAttribute","_clipgeometry","ClipGeometry","constructor","options","closed","detail","joint","joints","layers","ribbons","samples","segments","strips","_clipUniforms","lines","vertices","points","setIndex","BufferAttribute","Uint32Array","setAttribute","Float32Array","index","_emitter","position","line","base","i","end","asc","j","end1","asc1","k","end2","asc2","edger","x","asc3","l","asc4","end4","z","asc5","end5","y","asc6","end6","i1","edge","m","end7","asc7","asc8","end9","asc9","end10","asc10","j1","end11","asc11","_finalize","clip","_clipGeometry","_clipOffsets"]
}
