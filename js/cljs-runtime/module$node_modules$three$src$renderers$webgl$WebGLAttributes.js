shadow$provide.module$node_modules$three$src$renderers$webgl$WebGLAttributes=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.WebGLAttributes=function(gl,capabilities){const isWebGL2=capabilities.isWebGL2,buffers=new WeakMap;return{get:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);return buffers.get(attribute)},remove:function(attribute){attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);
const data=buffers.get(attribute);data&&(gl.deleteBuffer(data.buffer),buffers.delete(attribute))},update:function(attribute,bufferType){if(attribute.isGLBufferAttribute)bufferType=buffers.get(attribute),(!bufferType||bufferType.version<attribute.version)&&buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});else{attribute.isInterleavedBufferAttribute&&(attribute=attribute.data);var data=buffers.get(attribute);if(void 0===
data){data=buffers.set;var JSCompiler_temp_const=attribute,array=attribute.array;const usage=attribute.usage,buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();if(array instanceof Float32Array)bufferType=gl.FLOAT;else if(array instanceof Uint16Array)if(attribute.isFloat16BufferAttribute)if(isWebGL2)bufferType=gl.HALF_FLOAT;else throw Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else bufferType=
gl.UNSIGNED_SHORT;else if(array instanceof Int16Array)bufferType=gl.SHORT;else if(array instanceof Uint32Array)bufferType=gl.UNSIGNED_INT;else if(array instanceof Int32Array)bufferType=gl.INT;else if(array instanceof Int8Array)bufferType=gl.BYTE;else if(array instanceof Uint8Array)bufferType=gl.UNSIGNED_BYTE;else if(array instanceof Uint8ClampedArray)bufferType=gl.UNSIGNED_BYTE;else throw Error("THREE.WebGLAttributes: Unsupported buffer data format: "+array);data.call(buffers,JSCompiler_temp_const,
{buffer,type:bufferType,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version})}else data.version<attribute.version&&(JSCompiler_temp_const=attribute.array,array=attribute.updateRange,gl.bindBuffer(bufferType,data.buffer),-1===array.count?gl.bufferSubData(bufferType,0,JSCompiler_temp_const):(isWebGL2?gl.bufferSubData(bufferType,array.offset*JSCompiler_temp_const.BYTES_PER_ELEMENT,JSCompiler_temp_const,array.offset,array.count):gl.bufferSubData(bufferType,array.offset*JSCompiler_temp_const.BYTES_PER_ELEMENT,
JSCompiler_temp_const.subarray(array.offset,array.offset+array.count)),array.count=-1),data.version=attribute.version)}}}}}
//# sourceMappingURL=module$node_modules$three$src$renderers$webgl$WebGLAttributes.js.map
