shadow$provide.module$node_modules$$sicmutils$glsl_parser$lib$expr=function(global,require,module,exports){function itself(){return this}function symbol(id,binding_power){let sym=symbol_table[id];binding_power=binding_power||0;sym?binding_power>sym.lbp&&(sym.lbp=binding_power):(sym=Object.create(original_symbol),sym.id=id,sym.lbp=binding_power,symbol_table[id]=sym);return sym}function expression(rbp){let left,t=token;advance();for(left=t.nud();rbp<token.lbp;)t=token,advance(),left=t.led(left);return left}
function infix(id,bp,led){symbol(id,bp).led=led||function(left){this.children=[left,expression(bp)];this.type="binary";return this}}function infixr(id,bp,led){id=symbol(id,bp);id.led=led||function(left){this.children=[left,expression(bp-1)];this.type="binary";return this};return id}function prefix(id,nud){id=symbol(id);id.nud=nud||function(){this.children=[expression(70)];this.type="unary";return this};return id}function suffix(id){symbol(id,150).led=function(left){this.children=[left];this.type=
"suffix";return this}}function assignment(id){return infixr(id,10,function(left){this.children=[left,expression(9)];this.assignment=!0;this.type="assign";return this})}function advance(id){let value,type,output;if(id&&token.data!==id)return state.unexpected("expected `"+id+"`, got `"+token.data+"`");if(idx>=tokens.length)token=symbol_table["(end)"];else{id=tokens[idx++];value=id.data;type=id.type;if("ident"===type)output=state.scope.find(value)||state.create_node(),type=output.type;else if("builtin"===
type)output=symbol_table["(builtin)"];else if("keyword"===type)output=symbol_table["(keyword)"];else if("operator"===type){if(output=symbol_table[value],!output)return state.unexpected("unknown operator `"+value+"`")}else if("float"===type||"integer"===type)type="literal",output=symbol_table["(literal)"];else return state.unexpected("unexpected token.");output&&(output.nud||(output.nud=itself),output.children||(output.children=[]));output=Object.create(output);output.token=id;output.type=type;output.data||
(output.data=value);return token=output}}function fail(message){return function(){return state.unexpected(message)}}let state,token,tokens,idx;const original_symbol={nud:function(){return this.children&&this.children.length?this:fail("unexpected")()},led:fail("missing operator")},symbol_table={};symbol("(ident)").nud=itself;symbol("(keyword)").nud=itself;symbol("(builtin)").nud=itself;symbol("(literal)").nud=itself;symbol("(end)");symbol(":");symbol(";");symbol(",");symbol(")");symbol("]");symbol("}");
infixr("\x26\x26",30);infixr("||",30);infix("|",43);infix("^",44);infix("\x26",45);infix("\x3d\x3d",46);infix("!\x3d",46);infix("\x3c",47);infix("\x3c\x3d",47);infix("\x3e",47);infix("\x3e\x3d",47);infix("\x3e\x3e",48);infix("\x3c\x3c",48);infix("+",50);infix("-",50);infix("*",60);infix("/",60);infix("%",60);infix("?",20,function(left){this.children=[left,expression(0),(advance(":"),expression(0))];this.type="ternary";return this});infix(".",80,function(left){token.type="literal";state.fake(token);
this.children=[left,token];advance();return this});infix("[",80,function(left){this.children=[left,expression(0)];this.type="binary";advance("]");return this});infix("(",80,function(left){this.children=[left];this.type="call";if(")"!==token.data)for(;;){this.children.push(expression(0));if(","!==token.data)break;advance(",")}advance(")");return this});prefix("-");prefix("+");prefix("!");prefix("~");prefix("defined");prefix("(",function(){this.type="group";this.children=[expression(0)];advance(")");
return this});prefix("++");prefix("--");suffix("++");suffix("--");assignment("\x3d");assignment("+\x3d");assignment("-\x3d");assignment("*\x3d");assignment("/\x3d");assignment("%\x3d");assignment("\x26\x3d");assignment("|\x3d");assignment("^\x3d");assignment("\x3e\x3e\x3d");assignment("\x3c\x3c\x3d");module.exports=function(incoming_state,incoming_tokens){function emit(node){state.unshift(node,!1);for(let i=0,len=node.children.length;i<len;++i)emit(node.children[i]);state.shift()}state=incoming_state;
tokens=incoming_tokens;idx=0;if(tokens.length){advance();incoming_state=expression(0);incoming_state.parent=state[0];emit(incoming_state);if(idx<tokens.length)throw Error("did not use all tokens");incoming_state.parent.children=[incoming_state]}}}
//# sourceMappingURL=module$node_modules$$sicmutils$glsl_parser$lib$expr.js.map
