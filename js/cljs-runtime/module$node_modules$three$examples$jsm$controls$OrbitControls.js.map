{
"version":3,
"file":"module$node_modules$three$examples$jsm$controls$OrbitControls.js",
"lineCount":30,
"mappings":"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",
"sources":["node_modules/three/examples/jsm/controls/OrbitControls.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$examples$jsm$controls$OrbitControls\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MapControls = exports.OrbitControls = void 0;\n\nvar _three = require(\"three\");\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\nconst _changeEvent = {\n  type: 'change'\n};\nconst _startEvent = {\n  type: 'start'\n};\nconst _endEvent = {\n  type: 'end'\n};\n\nclass OrbitControls extends _three.EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    this.object = object;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    this.target = new _three.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    this.minDistance = 0;\n    this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    this.minZoom = 0;\n    this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    this.minPolarAngle = 0; // radians\n\n    this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    this.minAzimuthAngle = -Infinity; // radians\n\n    this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    this.enableDamping = false;\n    this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    this.mouseButtons = {\n      LEFT: _three.MOUSE.ROTATE,\n      MIDDLE: _three.MOUSE.DOLLY,\n      RIGHT: _three.MOUSE.PAN\n    }; // Touch fingers\n\n    this.touches = {\n      ONE: _three.TOUCH.ROTATE,\n      TWO: _three.TOUCH.DOLLY_PAN\n    }; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom; // the target DOM element for key events\n\n    this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = function () {\n      const offset = new _three.Vector3(); // so camera.up is the orbit axis\n\n      const quat = new _three.Quaternion().setFromUnitVectors(object.up, new _three.Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new _three.Vector3();\n      const lastQuaternion = new _three.Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new _three.Spherical();\n    const sphericalDelta = new _three.Spherical();\n    let scale = 1;\n    const panOffset = new _three.Vector3();\n    let zoomChanged = false;\n    const rotateStart = new _three.Vector2();\n    const rotateEnd = new _three.Vector2();\n    const rotateDelta = new _three.Vector2();\n    const panStart = new _three.Vector2();\n    const panEnd = new _three.Vector2();\n    const panDelta = new _three.Vector2();\n    const dollyStart = new _three.Vector2();\n    const dollyEnd = new _three.Vector2();\n    const dollyDelta = new _three.Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = function () {\n      const v = new _three.Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    const panUp = function () {\n      const v = new _three.Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = function () {\n      const offset = new _three.Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case _three.MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case _three.MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case _three.MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case _three.TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case _three.TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case _three.TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case _three.TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new _three.Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nexports.OrbitControls = OrbitControls;\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = _three.MOUSE.PAN;\n    this.mouseButtons.RIGHT = _three.MOUSE.ROTATE;\n    this.touches.ONE = _three.TOUCH.PAN;\n    this.touches.TWO = _three.TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexports.MapControls = MapControls;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","MapControls","OrbitControls","_three","_changeEvent","type","_startEvent","_endEvent","EventDispatcher","constructor","object","domElement","getZoomScale","Math","pow","scope","zoomSpeed","dollyOut","dollyScale","isPerspectiveCamera","scale","isOrthographicCamera","zoom","max","minZoom","min","maxZoom","updateProjectionMatrix","zoomChanged","console","warn","enableZoom","dollyIn","handleTouchStartRotate","pointers","length","rotateStart","set","pageX","pageY","handleTouchStartPan","panStart","handleTouchStartDolly","dx","dy","dollyStart","sqrt","distance","handleTouchMoveRotate","event","rotateEnd","position","getSecondPointerPosition","x","y","rotateDelta","subVectors","multiplyScalar","rotateSpeed","element","sphericalDelta","theta","PI","clientHeight","phi","copy","handleTouchMovePan","panEnd","panDelta","panSpeed","pan","handleTouchMoveDolly","dollyEnd","dollyDelta","onPointerDown","enabled","setPointerCapture","pointerId","addEventListener","onPointerMove","onPointerUp","push","pointerType","onTouchStart","onMouseDown","trackPointer","state","STATE","TOUCH_ROTATE","enableRotate","update","TOUCH_PAN","enablePan","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","NONE","ROTATE","clientX","clientY","DOLLY","PAN","removePointer","releasePointerCapture","removeEventListener","dispatchEvent","onPointerCancel","mouseAction","button","mouseButtons","LEFT","MIDDLE","RIGHT","MOUSE","ctrlKey","metaKey","shiftKey","onMouseWheel","preventDefault","deltaY","onKeyDown","needsUpdate","code","keys","UP","keyPanSpeed","BOTTOM","touches","ONE","TOUCH","TWO","DOLLY_PAN","DOLLY_ROTATE","onContextMenu","pointerPositions","i","splice","undefined","Vector2","pointer","style","touchAction","target","Vector3","minDistance","maxDistance","Infinity","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","screenSpacePanning","autoRotate","autoRotateSpeed","target0","clone","position0","zoom0","_domElementKeyEvents","getPolarAngle","this.getPolarAngle","spherical","getAzimuthalAngle","this.getAzimuthalAngle","getDistance","this.getDistance","distanceTo","listenToKeyEvents","this.listenToKeyEvents","saveState","this.saveState","reset","this.reset","offset","quat","setFromUnitVectors","Quaternion","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","isFinite","makeSafe","radius","addScaledVector","panOffset","add","setFromSpherical","lookAt","EPS","distanceToSquared","dot","quaternion","dispose","this.dispose","Spherical","panLeft","v","objectMatrix","setFromMatrixColumn","panUp","crossVectors","deltaX","targetDistance","tan","fov","matrix","right","left","clientWidth","top","bottom","passive"]
}
