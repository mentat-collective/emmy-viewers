{
"version":3,
"file":"module$node_modules$canvas$browser.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGzFC,MAAAA,CAAYH,OAAA,CAAQ,2CAAR,CAElBE,QAAQC,CAAAA,SAAR,CAAoBA,MAEpBD,QAAQE,CAAAA,YAAR,CAAuBC,QAAS,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC9C,MAAOC,OAAOC,CAAAA,MAAP,CAAcC,QAASC,CAAAA,aAAT,CAAuB,QAAvB,CAAd,CAAgD,CAASL,KAAT,CAAwBC,MAAxB,CAAhD,CADuC,CAIhDL,QAAQU,CAAAA,eAAR,CAA0BC,QAAS,CAACC,KAAD,CAAQR,KAAR,CAAeC,MAAf,CAAuB,CAExD,OAAQQ,SAAUC,CAAAA,MAAlB,EACE,KAAK,CAAL,CAAQ,MAAO,KAAIC,SACnB,MAAK,CAAL,CAAQ,MAAO,KAAIA,SAAJ,CAAcH,KAAd,CACf,MAAK,CAAL,CAAQ,MAAO,KAAIG,SAAJ,CAAcH,KAAd,CAAqBR,KAArB,CACf,SAAS,MAAO,KAAIW,SAAJ,CAAcH,KAAd;AAAqBR,KAArB,CAA4BC,MAA5B,CAJlB,CAFwD,CAU1DL,QAAQgB,CAAAA,SAAR,CAAoBC,QAAS,CAACC,GAAD,CAAMC,OAAN,CAAe,CAC1C,MAAO,KAAIC,OAAJ,CAAY,QAAS,CAACC,OAAD,CAAUC,MAAV,CAAkB,CAC5C,MAAMC,MAAQjB,MAAOC,CAAAA,MAAP,CAAcC,QAASC,CAAAA,aAAT,CAAuB,KAAvB,CAAd,CAA6CU,OAA7C,CAOdI,MAAMC,CAAAA,MAAN,CAAeC,QAAS,EAAG,CAJzBF,KAAMC,CAAAA,MAAN,CAAe,IACfD,MAAMG,CAAAA,OAAN,CAAgB,IAGsBL,QAAA,CAAQE,KAAR,CAAb,CAC3BA,MAAMG,CAAAA,OAAN,CAAgBC,QAAS,EAAG,CAL1BJ,KAAMC,CAAAA,MAAN,CAAe,IACfD,MAAMG,CAAAA,OAAN,CAAgB,IAIuBJ,OAAA,CAAWM,KAAJ,CAAU,4BAAV,CAAyCV,GAAzC,CAA+C,GAA/C,CAAP,CAAb,CAE5BK,MAAML,CAAAA,GAAN,CAAYA,GAXgC,CAAvC,CADmC,CArBmD;",
"sources":["node_modules/canvas/browser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$canvas$browser\"] = function(global,require,module,exports) {\n/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseFont","createCanvas","exports.createCanvas","width","height","Object","assign","document","createElement","createImageData","exports.createImageData","array","arguments","length","ImageData","loadImage","exports.loadImage","src","options","Promise","resolve","reject","image","onload","image.onload","onerror","image.onerror","Error"]
}
