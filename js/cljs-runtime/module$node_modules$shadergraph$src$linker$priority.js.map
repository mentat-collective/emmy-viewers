{
"version":3,
"file":"module$node_modules$shadergraph$src$linker$priority.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQhHA,OAAQC,CAAAA,IAAR,CAAeC,QAAS,CAACC,CAAD,CAAI,CACjB,IAAT,EAAIA,CAAJ,GACEA,CADF,CACM,EADN,CAGMA,EAAN,WAAmBC,MAAnB,GACED,CADF,CACM,CAAc,CAACA,CAAf,CADN,CAGA,OAAOA,EAPmB,CAU5BH,QAAQK,CAAAA,IAAR,CAAe,CAACC,CAAD,CAAIC,CAAJ,CAAAC,EAAUF,CAAEG,CAAAA,MAAF,CAASF,CAAT,CAEzBP,QAAQU,CAAAA,OAAR,CAAkBC,QAAS,CAACL,CAAD,CAAIC,CAAJ,CAAO,CAChC,IAAMK,EAAIC,IAAKC,CAAAA,GAAL,CAASR,CAAES,CAAAA,MAAX,CAAmBR,CAAEQ,CAAAA,MAArB,CACV,KACE,IAAIC,EAAI,CAAR,CAAWC,IAAML,CAAjB,CAAoBM,IAAM,CAANA,EAAWD,GADjC,CAEEC,GAAA,CAAMF,CAAN,CAAUC,GAAV,CAAgBD,CAAhB,CAAoBC,GAFtB,CAGEC,GAAA,CAAMF,CAAA,EAAN,CAAYA,CAAA,EAHd,CAIE,CACMG,CAAAA,CAAIb,CAAA,CAAEU,CAAF,CACV,OAAMI,EAAIb,CAAA,CAAES,CAAF,CACV,IAAIG,CAAJ,CAAQC,CAAR,CACE,MAAO,CAAC,CAEV,IAAID,CAAJ,CAAQC,CAAR,CACE,MAAO,EAPT,CAUFd,CAAA,CAAIA,CAAES,CAAAA,MACNR,EAAA,CAAIA,CAAEQ,CAAAA,MACN,OAAIT,EAAJ,CAAQC,CAAR,CACS,CAAC,CADV,CAEWD,CAAJ,CAAQC,CAAR,CACE,CADF,CAGE,CAvBuB,CA2BlCP,QAAQqB,CAAAA,GAAR,CAAcC,QAAS,CAAChB,CAAD,CAAIC,CAAJ,CAAO,CAC5B,MAA4B,EAA5B,CAAIP,OAAQU,CAAAA,OAAR,CAAgBJ,CAAhB,CAAmBC,CAAnB,CAAJ,CACSA,CADT,CAGSD,CAJmB,CA/CkF;",
"sources":["node_modules/shadergraph/src/linker/priority.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$shadergraph$src$linker$priority\"] = function(global,require,module,exports) {\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\nexports.make = function (x) {\n  if (x == null) {\n    x = [];\n  }\n  if (!(x instanceof Array)) {\n    x = [+x != null ? +x : 0];\n  }\n  return x;\n};\n\nexports.nest = (a, b) => a.concat(b);\n\nexports.compare = function (a, b) {\n  const n = Math.min(a.length, b.length);\n  for (\n    let i = 0, end = n, asc = 0 <= end;\n    asc ? i < end : i > end;\n    asc ? i++ : i--\n  ) {\n    const p = a[i];\n    const q = b[i];\n    if (p > q) {\n      return -1;\n    }\n    if (p < q) {\n      return 1;\n    }\n  }\n  a = a.length;\n  b = b.length;\n  if (a > b) {\n    return -1;\n  } else if (a < b) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nexports.max = function (a, b) {\n  if (exports.compare(a, b) > 0) {\n    return b;\n  } else {\n    return a;\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","make","exports.make","x","Array","nest","a","b","exports.nest","concat","compare","exports.compare","n","Math","min","length","i","end","asc","p","q","max","exports.max"]
}
