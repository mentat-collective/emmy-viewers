{
"version":3,
"file":"module$node_modules$three$src$geometries$BoxGeometry.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/three/src/geometries/BoxGeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$geometries$BoxGeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BoxBufferGeometry = exports.BoxGeometry = void 0;\n\nvar _BufferGeometry = require(\"../core/BufferGeometry.js\");\n\nvar _BufferAttribute = require(\"../core/BufferAttribute.js\");\n\nvar _Vector = require(\"../math/Vector3.js\");\n\nclass BoxGeometry extends _BufferGeometry.BufferGeometry {\n  constructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n    super();\n    this.type = 'BoxGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      depth: depth,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      depthSegments: depthSegments\n    };\n    const scope = this; // segments\n\n    widthSegments = Math.floor(widthSegments);\n    heightSegments = Math.floor(heightSegments);\n    depthSegments = Math.floor(depthSegments); // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = []; // helper variables\n\n    let numberOfVertices = 0;\n    let groupStart = 0; // build each side of the box geometry\n\n    buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n    buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n    buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n    buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n    buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n    buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n    // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new _BufferAttribute.Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new _BufferAttribute.Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new _BufferAttribute.Float32BufferAttribute(uvs, 2));\n\n    function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n      const segmentWidth = width / gridX;\n      const segmentHeight = height / gridY;\n      const widthHalf = width / 2;\n      const heightHalf = height / 2;\n      const depthHalf = depth / 2;\n      const gridX1 = gridX + 1;\n      const gridY1 = gridY + 1;\n      let vertexCounter = 0;\n      let groupCount = 0;\n      const vector = new _Vector.Vector3(); // generate vertices, normals and uvs\n\n      for (let iy = 0; iy < gridY1; iy++) {\n        const y = iy * segmentHeight - heightHalf;\n\n        for (let ix = 0; ix < gridX1; ix++) {\n          const x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n          vector[u] = x * udir;\n          vector[v] = y * vdir;\n          vector[w] = depthHalf; // now apply vector to vertex buffer\n\n          vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n          vector[u] = 0;\n          vector[v] = 0;\n          vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n          normals.push(vector.x, vector.y, vector.z); // uvs\n\n          uvs.push(ix / gridX);\n          uvs.push(1 - iy / gridY); // counters\n\n          vertexCounter += 1;\n        }\n      } // indices\n      // 1. you need three indices to draw a single face\n      // 2. a single segment consists of two faces\n      // 3. so we need to generate six (2*3) indices per segment\n\n\n      for (let iy = 0; iy < gridY; iy++) {\n        for (let ix = 0; ix < gridX; ix++) {\n          const a = numberOfVertices + ix + gridX1 * iy;\n          const b = numberOfVertices + ix + gridX1 * (iy + 1);\n          const c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n          const d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // increase counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n      groupStart += groupCount; // update total number of vertices\n\n      numberOfVertices += vertexCounter;\n    }\n  }\n\n  static fromJSON(data) {\n    return new BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n  }\n\n}\n\nexports.BoxBufferGeometry = exports.BoxGeometry = BoxGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","BoxBufferGeometry","BoxGeometry","_BufferGeometry","_BufferAttribute","_Vector","BufferGeometry","constructor","width","height","depth","widthSegments","heightSegments","depthSegments","buildPlane","u","v","w","udir","vdir","gridX","gridY","materialIndex","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","groupCount","vertexCounter","vector","Vector3","iy","y","ix","vertices","push","x","z","normals","uvs","b","numberOfVertices","c","d","indices","scope","addGroup","groupStart","type","parameters","Math","floor","setIndex","setAttribute","Float32BufferAttribute","fromJSON","data"]
}
