{"version":3,"sources":["stopwatch/core.cljc"],"mappings":";AAOA,AAEU,AAAeA,wDACb,+CAAA,7CAAMC,6CACJ;AAAA,AACE,IAAMC,QAAM,AAAAC,0CAAAC;AAAZ,AACE;AAAA,AACE,IAAMC,MAAI,AAAAF,0CAAAC;AAAV,AACE,QAAA,iBAAA,UAAA,1BAAe,CAAGC,MAAIH;;GALhC;;AAOF,AAAeI,uDACb,0CAAA,xCAAMC,wCACJ;AAAA,AACE,IAAML,QAAM,CAAAM,mEAAAA,qEAAAA;AAAZ,AACE;AAAA,AACE,IAAAC,aAA2B,CAAAD,mEAAAA,0EAAAA,TAAmBN,sDAAAA;eAA9C,AAAAQ,4CAAAD,WAAA,IAAA,tEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAgBG;AAAhB,AACE,QAAG,CAAA,CAAA,YAAA,UAAA,UAAA,/BAAgBD,yCAAUC;;GALvC;;AAOF,mCAAA,nCAAOC;AAAP,AACE,IAAMX,QAAM,AAAU,KAAAY;AAAtB,AACE;AAAA,AACE,IAAMT,MAAI,AAAU,KAAAS;AAApB,AACE,QAAA,iBAAA,UAAA,1BAAe,CAAGT,MAAIH;;;;AAE9B,AAAea,6BAAO,iBAAAC,mBAAIhB;AAAJ,AAAA,oBAAAgB;AAAAA;;AAAA,IAAAA,uBACIV;AADJ,AAAA,oBAAAU;AAAAA;;AAEIH;;;;;AAEpC;;;;;;;;;;;;uBAAA,vBAAMI;AAAN,AAYY,QAACF,2DAAAA,6DAAAA","names":["stopwatch.core/+?performance-now-stopwatch","stopwatch.impl/+has-performance?","start","stopwatch.impl/+?perf-now","stopwatch.impl/+?performance","end","stopwatch.core/+?process-hrtime-stopwatch","stopwatch.impl/+has-hrtime?","stopwatch.impl/+?hrtime","vec__98477","cljs.core.nth","diff-sec","diff-nano","stopwatch.core/ms-date-stopwatch","js/Date","stopwatch.core/start*","or__4253__auto__","stopwatch.core/start"],"sourcesContent":["(ns stopwatch.core\n  (:require [stopwatch.impl :as impl]\n            [net.cgrand.macrovich :as macro])\n  #? (:cljs (:require-macros\n              [stopwatch.impl :as impl]\n              [net.cgrand.macrovich :as macro])))\n\n(macro/usetime\n\n#? (:cljs (def ^:private +?performance-now-stopwatch\n            (when impl/+has-performance?\n              (fn []\n                (let [start (impl/performance-now)]\n                  (fn []\n                    (let [end (impl/performance-now)]\n                      (impl/ms->nano (- end start)))))))))\n\n#? (:cljs (def ^:private +?process-hrtime-stopwatch\n            (when impl/+has-hrtime?\n              (fn []\n                (let [start (impl/hrtime-now)]\n                  (fn []\n                    (let [[diff-sec diff-nano] (impl/hrtime-since start)]\n                      (+ (impl/sec->nano diff-sec) diff-nano))))))))\n\n#? (:cljs (defn- ms-date-stopwatch []\n            (let [start (.getTime (js/Date.))]\n              (fn []\n                (let [end (.getTime (js/Date.))]\n                  (impl/ms->nano (- end start)))))))\n\n#? (:cljs (def ^:private start* (or +?performance-now-stopwatch\n                                    +?process-hrtime-stopwatch\n                                    ms-date-stopwatch)))\n\n(defn start\n  \"Creates and starts the stopwatch.\n\n  The stopwatch is a function which returns the elapsed time in units of\n  nanosecond:\n\n    (let [elapsed (start)]\n      (do-work)\n      (println \\\"Elapsed:\\\" (elapsed) \\\"ns\\\"))\n\n  Uses the most precise mechanism available on the target platform.\"\n  []\n  #? (:cljs (start*)\n      :clj  (let [start (System/nanoTime)]\n              (fn []\n                (let [end (System/nanoTime)]\n                  (- end start))))))\n\n)\n"]}