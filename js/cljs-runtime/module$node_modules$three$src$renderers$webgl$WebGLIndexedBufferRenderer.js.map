{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLIndexedBufferRenderer.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,wEAAA,CAA6F,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrIC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,0BAAR,CAEAA,QAAmC,CAACC,EAAD,CAAKC,UAAL,CAAiBC,IAAjB,CAAuBC,YAAvB,CAAqC,CACtE,MAAMC,SAAWD,YAAaC,CAAAA,QAC9B,KAAIC,IAAJ,CAMIC,IANJ,CAMUC,eAkCV,KAAKC,CAAAA,OAAL,CAtCAA,QAAgB,CAACV,KAAD,CAAQ,CACtBO,IAAA,CAAOP,KADe,CAuCxB,KAAKW,CAAAA,QAAL,CAjCAA,QAAiB,CAACX,KAAD,CAAQ,CACvBQ,IAAA,CAAOR,KAAMQ,CAAAA,IACbC,gBAAA,CAAkBT,KAAMS,CAAAA,eAFD,CAkCzB,KAAKG,CAAAA,MAAL,CA7BAA,QAAe,CAACC,KAAD,CAAQC,KAAR,CAAe,CAC5BZ,EAAGa,CAAAA,YAAH,CAAgBR,IAAhB;AAAsBO,KAAtB,CAA6BN,IAA7B,CAAmCK,KAAnC,CAA2CJ,eAA3C,CACAL,KAAKY,CAAAA,MAAL,CAAYF,KAAZ,CAAmBP,IAAnB,CAAyB,CAAzB,CAF4B,CA8B9B,KAAKU,CAAAA,eAAL,CAzBAA,QAAwB,CAACJ,KAAD,CAAQC,KAAR,CAAeI,SAAf,CAA0B,CAChD,GAAkB,CAAlB,GAAIA,SAAJ,CAAA,CAGA,GAAIZ,QAAJ,CAAc,CACZ,IAAAa,UAAYjB,EACZ,KAAAkB,WAAa,uBAFD,CAAd,IAOE,IAHAD,SAGI,CAHQhB,UAAWkB,CAAAA,GAAX,CAAe,wBAAf,CAGR,CAFJD,UAEI,CAFS,4BAET,CAAc,IAAd,GAAAD,SAAJ,CAAwB,CACtBG,OAAQC,CAAAA,KAAR,CAAc,uIAAd,CACA,OAFsB,CAM1BJ,SAAA,CAAUC,UAAV,CAAA,CAAsBb,IAAtB;AAA4BO,KAA5B,CAAmCN,IAAnC,CAAyCK,KAAzC,CAAiDJ,eAAjD,CAAkES,SAAlE,CACAd,KAAKY,CAAAA,MAAL,CAAYF,KAAZ,CAAmBP,IAAnB,CAAyBW,SAAzB,CAjBA,CADgD,CApBoB,CAR6D;",
"sources":["node_modules/three/src/renderers/webgl/WebGLIndexedBufferRenderer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLIndexedBufferRenderer\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLIndexedBufferRenderer = WebGLIndexedBufferRenderer;\n\nfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n  let mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  let type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n    info.update(count, mode, 1);\n  }\n\n  function renderInstances(start, count, primcount) {\n    if (primcount === 0) return;\n    let extension, methodName;\n\n    if (isWebGL2) {\n      extension = gl;\n      methodName = 'drawElementsInstanced';\n    } else {\n      extension = extensions.get('ANGLE_instanced_arrays');\n      methodName = 'drawElementsInstancedANGLE';\n\n      if (extension === null) {\n        console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n    info.update(count, mode, primcount);\n  } //\n\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLIndexedBufferRenderer","gl","extensions","info","capabilities","isWebGL2","mode","type","bytesPerElement","setMode","setIndex","render","start","count","drawElements","update","renderInstances","primcount","extension","methodName","get","console","error"]
}
