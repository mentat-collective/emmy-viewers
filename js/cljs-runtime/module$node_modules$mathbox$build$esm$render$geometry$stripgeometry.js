shadow$provide.module$node_modules$mathbox$build$esm$render$geometry$stripgeometry=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.StripGeometry=void 0;var _BufferAttribute=require("module$node_modules$three$src$core$BufferAttribute");global=require("module$node_modules$mathbox$build$esm$render$geometry$clipgeometry");class StripGeometry extends global.ClipGeometry{constructor(options){let height;var items;let sides,width;super(options);this._clipUniforms();
this.items=items=+options.items||2;this.width=width=+options.width||1;this.height=height=+options.height||1;this.depth=options=+options.depth||1;this.sides=sides=Math.max(0,items-2);var samples=width*height*options,points=items*samples;this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(sides*samples*3),1));this.setAttribute("position4",new _BufferAttribute.BufferAttribute(new Float32Array(4*points),4));this.setAttribute("strip",new _BufferAttribute.BufferAttribute(new Float32Array(3*
points),3));const index=this._emitter("index");points=this._emitter("position4");const strip=this._emitter("strip");let base=0;for(let i=0,end=samples,asc=0<=end;asc?i<end:i>end;asc?i++:i--){samples=base;for(let j=0,end1=sides,asc1=0<=end1;asc1?j<end1:j>end1;asc1?j++:j--)j&1?(index(samples+1),index(samples)):(index(samples),index(samples+1)),index(samples+2),samples++;base+=items}--items;for(let z=0,end2=options,asc2=0<=end2;asc2?z<end2:z>end2;asc2?z++:z--)for(let y=0,end3=height,asc3=0<=end3;asc3?
y<end3:y>end3;asc3?y++:y--)for(let x=0,end4=width,asc4=0<=end4;asc4?x<end4:x>end4;asc4?x++:x--){options=1;points(x,y,z,0);strip(1,2,options);for(let l=1,end5=items,asc5=1<=end5;asc5?l<end5:l>end5;asc5?l++:l--)points(x,y,z,l),strip(l-1,l+1,options=-options);points(x,y,z,items);strip(items-2,items-1,-options)}this._finalize();this.clip()}clip(width,height,depth,items){null==width&&({width}=this);null==height&&({height}=this);null==depth&&({depth}=this);null==items&&({items}=this);const sides=Math.max(0,
items-2);this._clipGeometry(width,height,depth,items);return this._clipOffsets(3,width,height,depth,sides,this.width,this.height,this.depth,this.sides)}}exports.StripGeometry=StripGeometry}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$render$geometry$stripgeometry.js.map
