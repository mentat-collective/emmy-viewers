shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$data$array=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Array_=void 0;var UData=
function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$data"));global=require("module$node_modules$mathbox$build$esm$primitives$types$data$buffer");class Array_ extends global.Buffer{static initClass(){this.traits="node buffer active data source index array texture raw".split(" ")}init(){this.buffer=this.spec=null;this.space={width:0,
history:0};this.used={width:0};this.storage="arrayBuffer";this.passthrough=(emit,x)=>emit(x,0,0,0);return super.init()}sourceShader(shader){const dims=this.getDimensions();this.alignShader(dims,shader);return this.buffer.shader(shader)}getDimensions(){return{items:this.items,width:this.space.width,height:this.space.history,depth:1}}getActiveDimensions(){return{items:this.items,width:this.used.width,height:this.buffer.getFilled(),depth:1}}getFutureDimensions(){return{items:this.items,width:this.used.width,
height:this.space.history,depth:1}}getRawDimensions(){return{items:this.items,width:this.space.width,height:1,depth:1}}make(){super.make();const minFilter=null!=this.minFilter?this.minFilter:this.props.minFilter,magFilter=null!=this.magFilter?this.magFilter:this.props.magFilter,type=null!=this.type?this.type:this.props.type;var {width}=this.props;const {history}=this.props,reserve=this.props.bufferWidth,{channels}=this.props,{items}=this.props;width=this.spec={channels,items,width};this.items=width.items;
this.channels=width.channels;var {data}=this.props;width=UData.getDimensions(data,width);({space:data}=this);data.width=Math.max(reserve,width.width||1);data.history=history;return this.buffer=this._renderables.make(this.storage,{width:data.width,history:data.history,channels,items,minFilter,magFilter,type})}unmake(){super.unmake();if(this.buffer)return this.buffer.dispose(),this.buffer=this.spec=null}change(changed,touched,init){if(touched.texture||changed["history.history"]||changed["buffer.channels"]||
changed["buffer.items"]||changed["array.bufferWidth"])return this.rebuild();if(this.buffer){if(changed["array.width"]){const {width,bufferWidth}=this.props;this.spec.width=width;if(width>bufferWidth)return this.rebuild()}if(changed["data.map"]||changed["data.data"]||changed["data.resolve"]||changed["data.expr"]||init)return this.buffer.setCallback(this.emitter())}}callback(callback){return 2>=callback.length?callback:(emit,i)=>callback(emit,i,this.bufferClock,this.bufferStep)}update(){if(this.buffer){var {data}=
this.props,{width}=this.props,{space,used}=this,l=used.width,filled=this.buffer.getFilled();this.syncBuffer(abort=>{if(null!=data){const dims=UData.getDimensions(data,this.spec);if(dims.width>space.width)return abort(),this.rebuild();used.width=dims.width;this.buffer.setActive(used.width);"function"===typeof this.buffer.callback.rebind&&this.buffer.callback.rebind(data);return this.buffer.update()}width=this.spec.width||1;this.buffer.setActive(width);width=this.buffer.update();return used.width=width});
if(used.width!==l||filled!==this.buffer.getFilled())return this.trigger({type:"source.resize"})}}}exports.Array_=Array_;Array_.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$data$array.js.map
