{
"version":3,
"file":"module$node_modules$mathbox$build$esm$render$geometry$stripgeometry.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mathbox/build/esm/render/geometry/stripgeometry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mathbox$build$esm$render$geometry$stripgeometry\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StripGeometry = void 0;\n\nvar _BufferAttribute = require(\"three/src/core/BufferAttribute.js\");\n\nvar _clipgeometry = require(\"./clipgeometry.js\");\n\n// TODO: This file was created by bulk-decaffeinate.\n// Sanity-check the conversion and remove this comment.\n\n/*\n * decaffeinate suggestions:\n * DS102: Remove unnecessary code created because of implicit returns\n * DS202: Simplify dynamic range loops\n * DS207: Consider shorter variations of null checks\n * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md\n */\n\n/*\nTriangle strips arranged in items, columns and rows\n\n+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+\n| /| /| /   | /| /| /   | /| /| /   | /| /| /\n+--+--+/    +--+--+/    +--+--+/    +--+--+/\n\n+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+\n| /| /| /   | /| /| /   | /| /| /   | /| /| /\n+--+--+/    +--+--+/    +--+--+/    +--+--+/\n\n+--+--+--+  +--+--+--+  +--+--+--+  +--+--+--+\n| /| /| /   | /| /| /   | /| /| /   | /| /| /\n+--+--+/    +--+--+/    +--+--+/    +--+--+/\n\n*/\nclass StripGeometry extends _clipgeometry.ClipGeometry {\n  constructor(options) {\n    let depth, height, items, sides, width;\n    super(options);\n\n    this._clipUniforms();\n\n    this.items = items = +options.items || 2;\n    this.width = width = +options.width || 1;\n    this.height = height = +options.height || 1;\n    this.depth = depth = +options.depth || 1;\n    this.sides = sides = Math.max(0, items - 2);\n    const samples = width * height * depth;\n    const points = items * samples;\n    const triangles = sides * samples;\n    this.setIndex(new _BufferAttribute.BufferAttribute(new Uint32Array(triangles * 3), 1));\n    this.setAttribute(\"position4\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 4), 4));\n    this.setAttribute(\"strip\", new _BufferAttribute.BufferAttribute(new Float32Array(points * 3), 3));\n\n    const index = this._emitter(\"index\");\n\n    const position = this._emitter(\"position4\");\n\n    const strip = this._emitter(\"strip\");\n\n    let base = 0;\n\n    for (let i = 0, end = samples, asc = 0 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n      let o = base;\n\n      for (let j = 0, end1 = sides, asc1 = 0 <= end1; asc1 ? j < end1 : j > end1; asc1 ? j++ : j--) {\n        if (j & 1) {\n          index(o + 1);\n          index(o);\n          index(o + 2);\n        } else {\n          index(o);\n          index(o + 1);\n          index(o + 2);\n        }\n\n        o++;\n      }\n\n      base += items;\n    }\n\n    const last = items - 1;\n\n    for (let z = 0, end2 = depth, asc2 = 0 <= end2; asc2 ? z < end2 : z > end2; asc2 ? z++ : z--) {\n      for (let y = 0, end3 = height, asc3 = 0 <= end3; asc3 ? y < end3 : y > end3; asc3 ? y++ : y--) {\n        for (let x = 0, end4 = width, asc4 = 0 <= end4; asc4 ? x < end4 : x > end4; asc4 ? x++ : x--) {\n          let f = 1;\n          position(x, y, z, 0);\n          strip(1, 2, f);\n\n          for (let l = 1, end5 = last, asc5 = 1 <= end5; asc5 ? l < end5 : l > end5; asc5 ? l++ : l--) {\n            position(x, y, z, l);\n            strip(l - 1, l + 1, f = -f);\n          }\n\n          position(x, y, z, last);\n          strip(last - 2, last - 1, -f);\n        }\n      }\n    }\n\n    this._finalize();\n\n    this.clip();\n  }\n\n  clip(width, height, depth, items) {\n    if (width == null) {\n      ({\n        width\n      } = this);\n    }\n\n    if (height == null) {\n      ({\n        height\n      } = this);\n    }\n\n    if (depth == null) {\n      ({\n        depth\n      } = this);\n    }\n\n    if (items == null) {\n      ({\n        items\n      } = this);\n    }\n\n    const sides = Math.max(0, items - 2);\n\n    this._clipGeometry(width, height, depth, items);\n\n    return this._clipOffsets(3, width, height, depth, sides, this.width, this.height, this.depth, this.sides);\n  }\n\n}\n\nexports.StripGeometry = StripGeometry;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","StripGeometry","_BufferAttribute","_clipgeometry","ClipGeometry","constructor","options","height","items","sides","width","_clipUniforms","depth","Math","max","samples","points","setIndex","BufferAttribute","Uint32Array","setAttribute","Float32Array","index","_emitter","position","strip","base","i","end","asc","o","j","end1","asc1","last","z","end2","asc2","y","end3","asc3","x","end4","asc4","f","l","end5","asc5","_finalize","clip","_clipGeometry","_clipOffsets"]
}
