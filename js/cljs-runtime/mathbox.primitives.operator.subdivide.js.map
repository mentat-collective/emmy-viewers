{"version":3,"sources":["mathbox/primitives/operator/subdivide.cljs"],"mappings":";;AAIA;;;;;;;;;;;;;AAWEA,kDACA,AAACC,+BAAoBC","names":["mathbox.primitives.operator.subdivide/Subdivide","reagent.core/adapt-react-class","js/module$node_modules$mathbox_react$build$cjs$index.Subdivide"],"sourcesContent":["(ns mathbox.primitives.operator.subdivide\n  (:require [\"mathbox-react\" :as box]\n            [reagent.core :as r]))\n\n(def ^{:doc \"*Subdivide data points evenly or with a bevel*\n\n:bevel `1` (number) - Fraction to end outward from vertices\n:classes `[]` (string array) - Custom classes, e.g. `[\\\\\\\"big\\\\\\\"]`\n:depth `null` (nullable positive int) - Divisions of depth, e.g. `5`\n:height `null` (nullable positive int) - Divisions of height, e.g. `5`\n:id `null` (nullable string) - Unique ID, e.g. `\\\\\\\"sampler\\\\\\\"`\n:items `null` (nullable positive int) - Divisions of items, e.g. `5`\n:lerp `true` (boolean) - Interpolate values with computed indices\n:source `\\\\\\\"<\\\\\\\"` (select) - Input source\n:width `null` (nullable positive int) - Divisions of width, e.g. `5`\"}\n  Subdivide\n  (r/adapt-react-class box/Subdivide))\n"]}