shadow$provide.module$node_modules$three$src$cameras$PerspectiveCamera=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.PerspectiveCamera=void 0;global=require("module$node_modules$three$src$cameras$Camera");
var MathUtils=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$three$src$math$MathUtils"));class PerspectiveCamera extends global.Camera{constructor(fov=50,aspect=1,near=.1,far=2E3){super();this.type="PerspectiveCamera";this.fov=fov;this.zoom=1;this.near=near;this.far=far;this.focus=10;this.aspect=aspect;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}copy(source,
recursive){super.copy(source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=null===source.view?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this}setFocalLength(focalLength){focalLength=.5*this.getFilmHeight()/focalLength;this.fov=2*MathUtils.RAD2DEG*Math.atan(focalLength);this.updateProjectionMatrix()}getFocalLength(){const vExtentSlope=
Math.tan(.5*MathUtils.DEG2RAD*this.fov);return.5*this.getFilmHeight()/vExtentSlope}getEffectiveFOV(){return 2*MathUtils.RAD2DEG*Math.atan(Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});
this.view.enabled=!0;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1);this.updateProjectionMatrix()}updateProjectionMatrix(){const near=this.near;let top=near*Math.tan(.5*MathUtils.DEG2RAD*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-.5*width;var view=this.view;if(null!==this.view&&this.view.enabled){const fullWidth=
view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight}view=this.filmOffset;0!==view&&(left+=near*view/this.getFilmWidth());this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(meta){meta=super.toJSON(meta);meta.object.fov=this.fov;meta.object.zoom=this.zoom;meta.object.near=this.near;
meta.object.far=this.far;meta.object.focus=this.focus;meta.object.aspect=this.aspect;null!==this.view&&(meta.object.view=Object.assign({},this.view));meta.object.filmGauge=this.filmGauge;meta.object.filmOffset=this.filmOffset;return meta}}exports.PerspectiveCamera=PerspectiveCamera;PerspectiveCamera.prototype.isPerspectiveCamera=!0}
//# sourceMappingURL=module$node_modules$three$src$cameras$PerspectiveCamera.js.map
