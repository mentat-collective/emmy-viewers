{
"version":3,
"file":"module$node_modules$three$src$renderers$webgl$WebGLObjects.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,YAAR,CAEAA,QAAqB,CAACC,EAAD,CAAKC,UAAL,CAAiBC,UAAjB,CAA6BC,IAA7B,CAAmC,CAgCtDC,QAASA,uBAAsB,CAACC,KAAD,CAAQ,CAC/BC,KAAAA,CAAgBD,KAAME,CAAAA,MAC5BD,MAAcE,CAAAA,mBAAd,CAAkC,SAAlC,CAA6CJ,sBAA7C,CACAF,WAAWO,CAAAA,MAAX,CAAkBH,KAAcI,CAAAA,cAAhC,CACoC,KAApC,GAAIJ,KAAcK,CAAAA,aAAlB,EAA0CT,UAAWO,CAAAA,MAAX,CAAkBH,KAAcK,CAAAA,aAAhC,CAJL,CA/BvC,IAAIC,UAAY,IAAIC,OAsCpB,OAAO,CACLC,OArCFA,QAAe,CAACC,MAAD,CAAS,CACtB,MAAMC;AAAQb,IAAKc,CAAAA,MAAOD,CAAAA,KAA1B,CAEME,eAAiBjB,UAAWkB,CAAAA,GAAX,CAAeJ,MAAf,CADNA,MAAOK,CAAAA,QACD,CAEnBR,UAAUO,CAAAA,GAAV,CAAcD,cAAd,CAAJ,GAAsCF,KAAtC,GACEf,UAAWa,CAAAA,MAAX,CAAkBI,cAAlB,CACA,CAAAN,SAAUS,CAAAA,GAAV,CAAcH,cAAd,CAA8BF,KAA9B,CAFF,CAKID,OAAOO,CAAAA,eAAX,GACqE,CAAA,CAMnE,GANIP,MAAOQ,CAAAA,gBAAP,CAAwB,SAAxB,CAAmCnB,sBAAnC,CAMJ,EALEW,MAAOS,CAAAA,gBAAP,CAAwB,SAAxB,CAAmCpB,sBAAnC,CAKF,CAFAF,UAAWY,CAAAA,MAAX,CAAkBC,MAAOL,CAAAA,cAAzB,CAAyCV,EAAGyB,CAAAA,YAA5C,CAEA,CAA6B,IAA7B,GAAIV,MAAOJ,CAAAA,aAAX,EACET,UAAWY,CAAAA,MAAX,CAAkBC,MAAOJ,CAAAA,aAAzB,CAAwCX,EAAGyB,CAAAA,YAA3C,CARJ,CAYA,OAAOP,eAtBe,CAoCjB,CAELQ,QAbFA,QAAgB,EAAG,CACjBd,SAAA;AAAY,IAAIC,OADC,CAWZ,CAvC+C,CAR+D;",
"sources":["node_modules/three/src/renderers/webgl/WebGLObjects.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$three$src$renderers$webgl$WebGLObjects\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebGLObjects = WebGLObjects;\n\nfunction WebGLObjects(gl, geometries, attributes, info) {\n  let updateMap = new WeakMap();\n\n  function update(object) {\n    const frame = info.render.frame;\n    const geometry = object.geometry;\n    const buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n    if (updateMap.get(buffergeometry) !== frame) {\n      geometries.update(buffergeometry);\n      updateMap.set(buffergeometry, frame);\n    }\n\n    if (object.isInstancedMesh) {\n      if (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n        object.addEventListener('dispose', onInstancedMeshDispose);\n      }\n\n      attributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n      if (object.instanceColor !== null) {\n        attributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n      }\n    }\n\n    return buffergeometry;\n  }\n\n  function dispose() {\n    updateMap = new WeakMap();\n  }\n\n  function onInstancedMeshDispose(event) {\n    const instancedMesh = event.target;\n    instancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n    attributes.remove(instancedMesh.instanceMatrix);\n    if (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n  }\n\n  return {\n    update: update,\n    dispose: dispose\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","WebGLObjects","gl","geometries","attributes","info","onInstancedMeshDispose","event","instancedMesh","target","removeEventListener","remove","instanceMatrix","instanceColor","updateMap","WeakMap","update","object","frame","render","buffergeometry","get","geometry","set","isInstancedMesh","hasEventListener","addEventListener","ARRAY_BUFFER","dispose"]
}
