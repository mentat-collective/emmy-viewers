{"version":3,"sources":["sci/impl/cljs.cljc"],"mappings":";AAKA,AAeS","names":[],"sourcesContent":["(ns sci.impl.cljs\n  {:no-doc true}\n  (:require [sci.impl.macros :as macros])\n  #?(:cljs (:require-macros [sci.impl.cljs :refer [require-cljs-analyzer-api]])))\n\n(macros/deftime\n  #?(:clj (def cljs-ns-publics (resolve 'cljs.analyzer.api/ns-publics)))\n  #_:clj-kondo/ignore\n  (defmacro ^:private require-cljs-analyzer-api []\n    (macros/? :clj\n              ;; noop, macro executed from JVM Clojure, not within CLJS compiler\n              nil\n              :cljs #?(;; macro executed from JVM Clojure, within CLJS compiler\n                       :clj\n                       (do (require '[cljs.analyzer.api])\n                           (def cljs-ns-publics (resolve 'cljs.analyzer.api/ns-publics)))\n                       ;; self-hosted CLJS, no require supported but also not necessary\n                       :cljs nil))))\n\n;; When CLJS code is compiled, we know for sure that we can require the CLJS analyzer API\n#?(:cljs (require-cljs-analyzer-api))\n"]}