shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$operator$clamp=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Clamp=void 0;global=require("module$node_modules$mathbox$build$esm$primitives$types$operator$operator");class Clamp extends global.Operator{static initClass(){this.traits="node bind operator source index clamp".split(" ")}indexShader(shader){shader.pipe(this.operator);return super.indexShader(shader)}sourceShader(shader){shader.pipe(this.operator);
return super.sourceShader(shader)}make(){super.make();if(null!=this.bind.source){var uniforms={clampLimit:this._attributes.make(this._types.vec4())};this.clampLimit=uniforms.clampLimit;var transform=this._shaders.shader();transform.pipe("clamp.position",uniforms);return this.operator=transform}}unmake(){return super.unmake()}resize(){if(null!=this.bind.source){const dims=this.bind.source.getActiveDimensions();this.clampLimit.value.set(dims.width-1,dims.height-1,dims.depth-1,dims.items-1)}return super.resize()}change(changed,
touched,_init){if(touched.operator||touched.clamp)return this.rebuild()}}exports.Clamp=Clamp;Clamp.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$operator$clamp.js.map
