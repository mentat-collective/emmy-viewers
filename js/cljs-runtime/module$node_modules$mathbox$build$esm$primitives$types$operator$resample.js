shadow$provide.module$node_modules$mathbox$build$esm$primitives$types$operator$resample=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}Object.defineProperty(exports,"__esModule",{value:!0});exports.Resample=void 0;
var UGLSL=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$mathbox$build$esm$util$glsl"));global=require("module$node_modules$mathbox$build$esm$primitives$types$operator$operator");class Resample extends global.Operator{static initClass(){this.traits="node bind operator source index resample sampler:x sampler:y sampler:z sampler:w include".split(" ")}indexShader(shader){shader.pipe(this.indexer);
return super.indexShader(shader)}sourceShader(shader){return shader.pipe(this.operator)}getDimensions(){return this._resample(this.bind.source.getDimensions())}getActiveDimensions(){return this._resample(this.bind.source.getActiveDimensions())}getFutureDimensions(){return this._resample(this.bind.source.getFutureDimensions())}getIndexDimensions(){return this._resample(this.bind.source.getIndexDimensions())}_resample(dims){const r=this.resampled,c=this.centered,p=this.padding;this.relativeSize?(c.items||
dims.items--,c.width||dims.width--,c.height||dims.height--,c.depth||dims.depth--,null!=r.items&&(dims.items*=r.items),null!=r.width&&(dims.width*=r.width),null!=r.height&&(dims.height*=r.height),null!=r.depth&&(dims.depth*=r.depth),c.items||dims.items++,c.width||dims.width++,c.height||dims.height++,c.depth||dims.depth++,dims.items-=2*p.items,dims.width-=2*p.width,dims.height-=2*p.height,dims.depth-=2*p.depth):(null!=r.items&&(dims.items=r.items),null!=r.width&&(dims.width=r.width),null!=r.height&&
(dims.height=r.height),null!=r.depth&&(dims.depth=r.depth));dims.items=Math.max(0,Math.floor(dims.items));dims.width=Math.max(0,Math.floor(dims.width));dims.height=Math.max(0,Math.floor(dims.height));dims.depth=Math.max(0,Math.floor(dims.depth));return dims}make(){super.make();if(null!=this.bind.source){this._helpers.bind.make([{to:"include.shader",trait:"shader",optional:!0}]);var {indices,channels}=this.props,{shader}=this.bind,{sample,size,items,width,height,depth}=this.props,relativeSample=sample===
this.node.attributes["resample.sample"].enum.relative,relativeSize=size===this.node.attributes["resample.size"].enum.relative;this.resampled={};null!=items&&(this.resampled.items=items);null!=width&&(this.resampled.width=width);null!=height&&(this.resampled.height=height);null!=depth&&(this.resampled.depth=depth);this.centered={};this.centered.items=this.props.centeredW;this.centered.width=this.props.centeredX;this.centered.height=this.props.centeredY;this.centered.depth=this.props.centeredZ;this.padding=
{};this.padding.items=this.props.paddingW;this.padding.width=this.props.paddingX;this.padding.height=this.props.paddingY;this.padding.depth=this.props.paddingZ;var operator=this._shaders.shader(),indexer=this._shaders.shader(),type=[null,this._types.number,this._types.vec2,this._types.vec3,this._types.vec4][indices];type={dataSize:this._attributes.make(type(0,0,0,0)),dataResolution:this._attributes.make(type(0,0,0,0)),targetSize:this._attributes.make(type(0,0,0,0)),targetResolution:this._attributes.make(type(0,
0,0,0)),resampleFactor:this._attributes.make(this._types.vec4(0,0,0,0)),resampleBias:this._attributes.make(this._types.vec4(0,0,0,0))};this.dataResolution=type.dataResolution;this.dataSize=type.dataSize;this.targetResolution=type.targetResolution;this.targetSize=type.targetSize;this.resampleFactor=type.resampleFactor;this.resampleBias=type.resampleBias;var resize=null!=items||null!=width||null!=height||null!=depth;operator.pipe("resample.padding",type);var vec=[],any=!1,iterable=["width","height",
"depth","items"];for(let i=0;i<iterable.length;i++){const centered=this.centered[iterable[i]];any||(any=centered);vec[i]=centered?"0.5":"0.0"}any&&(vec=`vec4(${vec})`,operator.pipe(UGLSL.binaryOperator(4,"+",vec)),resize&&indexer.pipe(UGLSL.binaryOperator(4,"+",vec)));relativeSample&&(resize?(operator.pipe("resample.relative",type),indexer.pipe("resample.relative",type)):indexer.pipe(UGLSL.identity("vec4")));null!=shader?(4!==indices&&operator.pipe(UGLSL.truncateVec(4,indices)),operator.callback(),
4!==indices&&operator.pipe(UGLSL.extendVec(indices,4)),any&&operator.pipe(UGLSL.binaryOperator(4,"-",vec)),operator.pipe(this.bind.source.sourceShader(this._shaders.shader())),4!==channels&&operator.pipe(UGLSL.truncateVec(4,channels)),operator.join(),null!=this.bind.shader&&operator.pipe(this.bind.shader.shaderBind(type)),4!==channels&&operator.pipe(UGLSL.extendVec(channels,4))):(any&&operator.pipe(UGLSL.binaryOperator(4,"-",vec)),operator.pipe(this.bind.source.sourceShader(this._shaders.shader())));
any&&resize&&indexer.pipe(UGLSL.binaryOperator(4,"-",vec));this.operator=operator;this.indexer=indexer;this.indices=indices;this.relativeSample=relativeSample;return this.relativeSize=relativeSize}}unmake(){super.unmake();return this.operator=null}resize(){if(null!=this.bind.source){var dims=this.bind.source.getActiveDimensions(),target=this.getActiveDimensions(),axis=key=>{const centered=this.centered[key],pad=this.padding[key];target[key]+=2*pad;return[centered?dims[key]/Math.max(1,target[key]):
Math.max(1,dims[key]-1)/Math.max(1,target[key]-1),pad]},[rw,bw]=Array.from(axis("width")),[rh,bh]=Array.from(axis("height")),[rd,bd]=Array.from(axis("depth")),[ri,bi]=Array.from(axis("items"));1===this.indices?(this.dataResolution.value=1/dims.width,this.targetResolution.value=1/target.width,this.dataSize.value=dims.width,this.targetSize.value=target.width):(this.dataResolution.value.set(1/dims.width,1/dims.height,1/dims.depth,1/dims.items),this.targetResolution.value.set(1/target.width,1/target.height,
1/target.depth,1/target.items),this.dataSize.value.set(dims.width,dims.height,dims.depth,dims.items),this.targetSize.value.set(target.width,target.height,target.depth,target.items));this.resampleFactor.value.set(rw,rh,rd,ri);this.resampleBias.value.set(bw,bh,bd,bi);return super.resize()}}change(changed,touched,_init){if(touched.operator||touched.resample||touched.sampler||touched.include)return this.rebuild()}}exports.Resample=Resample;Resample.initClass()}
//# sourceMappingURL=module$node_modules$mathbox$build$esm$primitives$types$operator$resample.js.map
