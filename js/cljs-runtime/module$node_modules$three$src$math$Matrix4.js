shadow$provide.module$node_modules$three$src$math$Matrix4=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.Matrix4=void 0;global=require("module$node_modules$three$src$math$Vector3");class Matrix4{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){const te=
this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this}identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this}clone(){return(new Matrix4).fromArray(this.elements)}copy(m){const te=this.elements;m=m.elements;te[0]=m[0];te[1]=m[1];te[2]=m[2];te[3]=m[3];te[4]=m[4];te[5]=m[5];te[6]=m[6];te[7]=m[7];te[8]=m[8];te[9]=m[9];te[10]=m[10];te[11]=m[11];te[12]=m[12];
te[13]=m[13];te[14]=m[14];te[15]=m[15];return this}copyPosition(m){const te=this.elements;m=m.elements;te[12]=m[12];te[13]=m[13];te[14]=m[14];return this}setFromMatrix3(m){m=m.elements;this.set(m[0],m[3],m[6],0,m[1],m[4],m[7],0,m[2],m[5],m[8],0,0,0,0,1);return this}extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this}makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,
xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this}extractRotation(m){const te=this.elements,me=m.elements,scaleX=1/_v1.setFromMatrixColumn(m,0).length(),scaleY=1/_v1.setFromMatrixColumn(m,1).length();m=1/_v1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*m;te[9]=me[9]*m;te[10]=me[10]*m;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this}makeRotationFromEuler(euler){euler&&
euler.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const te=this.elements;var x=euler.x,y=euler.y,z=euler.z;const a=Math.cos(x);x=Math.sin(x);const c=Math.cos(y);y=Math.sin(y);const e=Math.cos(z);z=Math.sin(z);if("XYZ"===euler.order){euler=a*e;var af=a*z,be=x*e,bf=x*z;te[0]=c*e;te[4]=-c*z;te[8]=y;te[1]=af+be*y;te[5]=euler-bf*y;te[9]=-x*c;te[2]=bf-euler*y;te[6]=be+af*y;te[10]=a*c}else"YXZ"===euler.order?(euler=c*e,af=
c*z,be=y*e,bf=y*z,te[0]=euler+bf*x,te[4]=be*x-af,te[8]=a*y,te[1]=a*z,te[5]=a*e,te[9]=-x,te[2]=af*x-be,te[6]=bf+euler*x,te[10]=a*c):"ZXY"===euler.order?(euler=c*e,af=c*z,be=y*e,bf=y*z,te[0]=euler-bf*x,te[4]=-a*z,te[8]=be+af*x,te[1]=af+be*x,te[5]=a*e,te[9]=bf-euler*x,te[2]=-a*y,te[6]=x,te[10]=a*c):"ZYX"===euler.order?(euler=a*e,af=a*z,be=x*e,bf=x*z,te[0]=c*e,te[4]=be*y-af,te[8]=euler*y+bf,te[1]=c*z,te[5]=bf*y+euler,te[9]=af*y-be,te[2]=-y,te[6]=x*c,te[10]=a*c):"YZX"===euler.order?(euler=a*c,af=a*y,be=
x*c,bf=x*y,te[0]=c*e,te[4]=bf-euler*z,te[8]=be*z+af,te[1]=z,te[5]=a*e,te[9]=-x*e,te[2]=-y*e,te[6]=af*z+be,te[10]=euler-bf*z):"XZY"===euler.order&&(euler=a*c,af=a*y,be=x*c,bf=x*y,te[0]=c*e,te[4]=-z,te[8]=y*e,te[1]=euler*z+bf,te[5]=a*e,te[9]=af*z-be,te[2]=be*z-af,te[6]=x*e,te[10]=bf*z+euler);te[3]=0;te[7]=0;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this}makeRotationFromQuaternion(q){return this.compose(_zero,q,_one)}lookAt(eye,target,up){const te=this.elements;_z.subVectors(eye,target);0===
_z.lengthSq()&&(_z.z=1);_z.normalize();_x.crossVectors(up,_z);0===_x.lengthSq()&&(1===Math.abs(up.z)?_z.x+=1E-4:_z.z+=1E-4,_z.normalize(),_x.crossVectors(up,_z));_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this}multiply(m,n){return void 0!==n?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(m,n)):this.multiplyMatrices(this,
m)}premultiply(m){return this.multiplyMatrices(m,this)}multiplyMatrices(a,b){var ae=a.elements,be=b.elements;b=this.elements;a=ae[0];const a12=ae[4],a13=ae[8],a14=ae[12],a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13],a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14],a41=ae[3],a42=ae[7],a43=ae[11];ae=ae[15];const b11=be[0],b12=be[4],b13=be[8],b14=be[12],b21=be[1],b22=be[5],b23=be[9],b24=be[13],b31=be[2],b32=be[6],b33=be[10],b34=be[14],b41=be[3],b42=be[7],b43=be[11];be=be[15];b[0]=a*b11+a12*b21+a13*b31+a14*b41;b[4]=
a*b12+a12*b22+a13*b32+a14*b42;b[8]=a*b13+a12*b23+a13*b33+a14*b43;b[12]=a*b14+a12*b24+a13*b34+a14*be;b[1]=a21*b11+a22*b21+a23*b31+a24*b41;b[5]=a21*b12+a22*b22+a23*b32+a24*b42;b[9]=a21*b13+a22*b23+a23*b33+a24*b43;b[13]=a21*b14+a22*b24+a23*b34+a24*be;b[2]=a31*b11+a32*b21+a33*b31+a34*b41;b[6]=a31*b12+a32*b22+a33*b32+a34*b42;b[10]=a31*b13+a32*b23+a33*b33+a34*b43;b[14]=a31*b14+a32*b24+a33*b34+a34*be;b[3]=a41*b11+a42*b21+a43*b31+ae*b41;b[7]=a41*b12+a42*b22+a43*b32+ae*b42;b[11]=a41*b13+a42*b23+a43*b33+ae*
b43;b[15]=a41*b14+a42*b24+a43*b34+ae*be;return this}multiplyScalar(s){const te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this}determinant(){const te=this.elements,n11=te[0],n12=te[4],n13=te[8],n14=te[12],n21=te[1],n22=te[5],n23=te[9],n24=te[13],n31=te[2],n32=te[6],n33=te[10],n34=te[14];return te[3]*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+
te[7]*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+te[11]*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+te[15]*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31)}transpose(){const te=this.elements;let tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this}setPosition(x,
y,z){const te=this.elements;x.isVector3?(te[12]=x.x,te[13]=x.y,te[14]=x.z):(te[12]=x,te[13]=y,te[14]=z);return this}invert(){const te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*
n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;var det=n11*t11+n21*t12+n31*t13+n41*t14;if(0===det)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);det=1/det;te[0]=t11*det;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*det;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*det;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*det;te[4]=t12*
det;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*det;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*det;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*det;te[8]=t13*det;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*det;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*det;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*
n43-n11*n22*n43)*det;te[12]=t14*det;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*det;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*det;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*det;return this}scale(v){const te=this.elements,x=v.x,y=v.y;v=v.z;te[0]*=x;te[4]*=y;te[8]*=v;te[1]*=x;te[5]*=y;te[9]*=v;te[2]*=x;te[6]*=y;te[10]*=v;te[3]*=x;te[7]*=y;te[11]*=v;return this}getMaxScaleOnAxis(){const te=
this.elements;return Math.sqrt(Math.max(te[0]*te[0]+te[1]*te[1]+te[2]*te[2],te[4]*te[4]+te[5]*te[5]+te[6]*te[6],te[8]*te[8]+te[9]*te[9]+te[10]*te[10]))}makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this}makeRotationX(theta){const c=Math.cos(theta);theta=Math.sin(theta);this.set(1,0,0,0,0,c,-theta,0,0,theta,c,0,0,0,0,1);return this}makeRotationY(theta){const c=Math.cos(theta);theta=Math.sin(theta);this.set(c,0,theta,0,0,1,0,0,-theta,0,c,0,0,0,0,1);return this}makeRotationZ(theta){const c=
Math.cos(theta);theta=Math.sin(theta);this.set(c,-theta,0,0,theta,c,0,0,0,0,1,0,0,0,0,1);return this}makeRotationAxis(axis,angle){const c=Math.cos(angle);angle=Math.sin(angle);const t=1-c,x=axis.x,y=axis.y;axis=axis.z;const tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-angle*axis,tx*axis+angle*y,0,tx*y+angle*axis,ty*y+c,ty*axis-angle*x,0,tx*axis-angle*y,ty*axis+angle*x,t*axis*axis+c,0,0,0,0,1);return this}makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this}makeShear(xy,xz,yx,yz,zx,zy){this.set(1,
yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1);return this}compose(position,quaternion,scale){const te=this.elements;var x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w,x2=x+x,y2=y+y,z2=z+z;quaternion=x*x2;const xy=x*y2;x*=z2;const yy=y*y2;y*=z2;z*=z2;x2*=w;y2*=w;w*=z2;z2=scale.x;const sy=scale.y;scale=scale.z;te[0]=(1-(yy+z))*z2;te[1]=(xy+w)*z2;te[2]=(x-y2)*z2;te[3]=0;te[4]=(xy-w)*sy;te[5]=(1-(quaternion+z))*sy;te[6]=(y+x2)*sy;te[7]=0;te[8]=(x+y2)*scale;te[9]=(y-x2)*scale;te[10]=(1-(quaternion+
yy))*scale;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this}decompose(position,quaternion,scale){var te=this.elements;let sx=_v1.set(te[0],te[1],te[2]).length();const sy=_v1.set(te[4],te[5],te[6]).length(),sz=_v1.set(te[8],te[9],te[10]).length();0>this.determinant()&&(sx=-sx);position.x=te[12];position.y=te[13];position.z=te[14];_m1.copy(this);position=1/sx;te=1/sy;const invSZ=1/sz;_m1.elements[0]*=position;_m1.elements[1]*=position;_m1.elements[2]*=position;_m1.elements[4]*=
te;_m1.elements[5]*=te;_m1.elements[6]*=te;_m1.elements[8]*=invSZ;_m1.elements[9]*=invSZ;_m1.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1);scale.x=sx;scale.y=sy;scale.z=sz;return this}makePerspective(left,right,top,bottom,near,far){void 0===far&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const te=this.elements;te[0]=2*near/(right-left);te[4]=0;te[8]=(right+left)/(right-left);te[12]=0;te[1]=0;te[5]=2*near/(top-bottom);
te[9]=(top+bottom)/(top-bottom);te[13]=0;te[2]=0;te[6]=0;te[10]=-(far+near)/(far-near);te[14]=-2*far*near/(far-near);te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this}makeOrthographic(left,right,top,bottom,near,far){const te=this.elements,w=1/(right-left),h=1/(top-bottom),p=1/(far-near);te[0]=2*w;te[4]=0;te[8]=0;te[12]=-((right+left)*w);te[1]=0;te[5]=2*h;te[9]=0;te[13]=-((top+bottom)*h);te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-((far+near)*p);te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this}equals(matrix){const te=
this.elements;matrix=matrix.elements;for(let i=0;16>i;i++)if(te[i]!==matrix[i])return!1;return!0}fromArray(array,offset=0){for(let i=0;16>i;i++)this.elements[i]=array[i+offset];return this}toArray(array=[],offset=0){const te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];
array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array}}exports.Matrix4=Matrix4;Matrix4.prototype.isMatrix4=!0;const _v1=new global.Vector3,_m1=new Matrix4,_zero=new global.Vector3(0,0,0),_one=new global.Vector3(1,1,1),_x=new global.Vector3,_y=new global.Vector3,_z=new global.Vector3}
//# sourceMappingURL=module$node_modules$three$src$math$Matrix4.js.map
