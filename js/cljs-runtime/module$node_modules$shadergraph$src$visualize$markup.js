shadow$provide.module$node_modules$shadergraph$src$visualize$markup=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.merge=exports.overlay=exports.process=void 0;var _hash=require("module$node_modules$shadergraph$src$factory$hash");const hashColor=function(string,alpha){null==alpha&&(alpha=1);var color=(0,_hash.hash)(string)^1193046;string=color&255;let g=color>>>8&255;color=color>>>16&255;var max=Math.max(string,g,color);const norm=140/max;max=
Math.round(max/3);string=Math.min(255,Math.round(norm*Math.max(string,max)));g=Math.min(255,Math.round(norm*Math.max(g,max)));color=Math.min(255,Math.round(norm*Math.max(color,max)));return"rgba("+[string,g,color,alpha].join(", ")+")"},escapeText=function(string){return(null!=string?string:"").replace(/&/g,"\x26amp;").replace(/</g,"\x26lt;").replace(/>/g,"\x26gt;").replace(/'/g,"\x26#39;").replace(/"/g,"\x26quot;")};exports.process=function(data){const links=[],el=_markup(data,links);el.update=()=>
{if(null==el.parentNode)var JSCompiler_inline_result=void 0;else{var ref=el.getBoundingClientRect();for(JSCompiler_inline_result of Array.from(links)){var a=JSCompiler_inline_result.out.getBoundingClientRect(),b=JSCompiler_inline_result.in.getBoundingClientRect();JSCompiler_inline_result.coords={x1:(a.left+a.right)/2-ref.left,y1:(a.top+a.bottom)/2-ref.top,x2:(b.left+b.right)/2-ref.left,y2:(b.top+b.bottom)/2-ref.top}}ref=el.querySelector("svg");null!=ref&&el.removeChild(ref);for(a=el;a.parentNode&&
0===a.offsetHeight;)a=a.parentNode;ref=makeSVG();ref.setAttribute("width",a.offsetWidth);ref.setAttribute("height",a.offsetHeight);for(JSCompiler_inline_result of Array.from(links)){var c=JSCompiler_inline_result.coords;const line=makeSVG("path");a=line;b=a.setAttribute;{var h=void 0;var JSCompiler_inline_result$jscomp$0=c.x1;var y1=c.y1,x2=c.x2;c=c.y2;h=x2-JSCompiler_inline_result$jscomp$0;var dy=c-y1;const d=Math.sqrt(h*h+dy*dy);if(Math.abs(dy)>Math.abs(h)){const mx=(JSCompiler_inline_result$jscomp$0+
x2)/2,my=(y1+c)/2;dy=0<dy?.3:-.3;h=Math.min(Math.abs(h)/2,20+d/8);JSCompiler_inline_result$jscomp$0=["M",JSCompiler_inline_result$jscomp$0,y1,"C",JSCompiler_inline_result$jscomp$0+h,y1+",",mx,my-d*dy,mx,my,"C",mx,my+d*dy,x2-h,c+",",x2,c].join(" ")}else h=Math.min(Math.abs(h)/2.5,20+d/4),JSCompiler_inline_result$jscomp$0=["M",JSCompiler_inline_result$jscomp$0,y1,"C",JSCompiler_inline_result$jscomp$0+h,y1+",",x2-h,c+",",x2,c].join(" ")}b.call(a,"d",JSCompiler_inline_result$jscomp$0);line.setAttribute("stroke",
JSCompiler_inline_result.color);line.setAttribute("stroke-width",3);line.setAttribute("fill","transparent");ref.appendChild(line)}JSCompiler_inline_result=el.appendChild(ref)}return JSCompiler_inline_result};_activate(el);return el};const _activate=function(el){el=el.querySelectorAll(".shadergraph-code");return Array.from(el).map(code=>function(){code.parentNode.classList.add("shadergraph-has-code");return code.parentNode.addEventListener("click",_event=>code.style.display={block:"none",none:"block"}[code.style.display||
"none"])}())},_order=function(data){let link,node$jscomp$0;const nodeMap={},linkMap={};for(node$jscomp$0 of Array.from(data.nodes))nodeMap[node$jscomp$0.id]=node$jscomp$0;for(link of Array.from(data.links))null==linkMap[link.from]&&(linkMap[link.from]=[]),linkMap[link.from].push(link);const recurse=function(node,depth){null==depth&&(depth=0);node.depth=Math.max(null!=node.depth?node.depth:0,depth);if(node=linkMap[node.id])for(link of Array.from(node))recurse(nodeMap[link.to],depth+1);return null};
for(node$jscomp$0 of Array.from(data.nodes))null==node$jscomp$0.depth&&recurse(node$jscomp$0);return null},_markup=function(data,links){_order(data);const wrapper=document.createElement("div");wrapper.classList.add("shadergraph-graph");const columns=[],outlets={};for(const node of Array.from(data.nodes)){let outlet$jscomp$0;const block=document.createElement("div");block.classList.add("shadergraph-node");block.classList.add(`shadergraph-node-${node.type}`);block.innerHTML=`\
<div class="shadergraph-header">${escapeText(node.name)}</div>\
`;var column=function(outlet,inout){const color=hashColor(outlet.type),div=document.createElement("div");div.classList.add("shadergraph-outlet");div.classList.add(`shadergraph-outlet-${inout}`);div.innerHTML=`\
<div class="shadergraph-point" style="background: ${color}"></div>
<div class="shadergraph-type" style="color: ${color}">${escapeText(outlet.type)}</div>
<div class="shadergraph-name">${escapeText(outlet.name)}</div>\
`;block.appendChild(div);return outlets[outlet.id]=div.querySelector(".shadergraph-point")};for(outlet$jscomp$0 of Array.from(node.inputs))column(outlet$jscomp$0,"in");for(outlet$jscomp$0 of Array.from(node.outputs))column(outlet$jscomp$0,"out");null!=node.graph?block.appendChild(_markup(node.graph,links)):(column=document.createElement("div"),column.classList.add("shadergraph-clear"),block.appendChild(column));null!=node.code&&(column=document.createElement("div"),column.classList.add("shadergraph-code"),
column.innerHTML=escapeText((""+node.code).replace(/^\s+|\s+$/g,"")),block.appendChild(column));column=columns[node.depth];null==column&&(column=document.createElement("div"),column.classList.add("shadergraph-column"),columns[node.depth]=column);column.appendChild(block)}for(column of Array.from(columns))null!=column&&wrapper.appendChild(column);for(const link of Array.from(data.links))data=hashColor(link.type),links.push({color:data,out:outlets[link.out],in:outlets[link.in]});return wrapper},makeSVG=
function(tag){null==tag&&(tag="svg");return document.createElementNS("http://www.w3.org/2000/svg",tag)};exports.overlay=function(contents){const div=document.createElement("div");div.setAttribute("class","shadergraph-overlay");const close=document.createElement("div");close.setAttribute("class","shadergraph-close");close.innerHTML="\x26times;";const view=document.createElement("div");view.setAttribute("class","shadergraph-view");const inside=document.createElement("div");inside.setAttribute("class",
"shadergraph-inside");inside.appendChild(contents);view.appendChild(inside);div.appendChild(view);div.appendChild(close);close.addEventListener("click",()=>div.parentNode.removeChild(div));return div};const wrap=function(markup){if(markup instanceof Node)return markup;const p=document.createElement("span");p.innerText=null!=markup?markup:"";return p};exports.merge=function(markup){if(1!==markup.length){let el;const div=document.createElement("div");for(el of Array.from(markup))div.appendChild(wrap(el));
div.update=()=>{const result=[];for(el of Array.from(markup))result.push("function"===typeof el.update?el.update():void 0);return result};return div}return wrap(markup[0])}}
//# sourceMappingURL=module$node_modules$shadergraph$src$visualize$markup.js.map
