{"version":3,"sources":["nextjournal/clerk/render.cljs"],"mappings":"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","names":["reagent.core/set-default-compiler!","reagent.core/create-compiler","nextjournal.clerk.render/nbsp","goog.string/unescapeEntities","nextjournal.clerk.render/toc-items","items","cljs.core.reduce","p__81867","map__81868","cljs.core/--destructure-map","cljs.core.get","acc","item","content","children","title","nextjournal.markdown.transform/->text","nextjournal.clerk.viewer/->slug","cljs.core.conj","cljs.core/vec","G__81869","nextjournal.clerk.render/dark-mode-toggle","!state","map__81870","cljs.core/deref","dark-mode?","spring","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core/not","nextjournal.ui.components.motion/svg","nextjournal.ui.components.motion/path","nextjournal.ui.components.motion/circle","nextjournal.ui.components.motion/g","nextjournal.clerk.render/localstorage-set!","key","val","js/window","nextjournal.clerk.render/localstorage-get","cljs.reader.read_string","nextjournal.clerk.render/local-storage-dark-mode-key","nextjournal.clerk.render/set-dark-mode!","class-list","js/document.querySelector","nextjournal.clerk.render/setup-dark-mode!","map__81879","cljs.core/add-watch","p__81880","map__81881","_","old","cljs.core.not_EQ_","js/nextjournal","js/nextjournal.clerk","js/nextjournal.clerk.render","js/nextjournal.clerk.render.!eval-counter","nextjournal.clerk.render/!eval-counter","reagent.core.atom","p__81888","map__81889","nextjournal.clerk.render/render-notebook","_doc","xs","bundle?","toc","toc-visibility","with-let81890","reagent.ratom/with-let-values","temp__5757__auto__","reagent.ratom/*ratom-context*","c__76092__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init81891","p1__81882#","p1__81883#","res81892","local-storage-key","temp__5755__auto__","stored-open?","root-ref-fn","ref-fn","map__81893","md-toc","cljs.core._EQ_","and__5043__auto__","nextjournal.ui.components.navbar/toggle-button","nextjournal.ui.components.icon/menu","nextjournal.ui.components.navbar/panel","nextjournal.ui.components.navbar/navbar","cljs.core.doall","cljs.core.map_indexed","idx","x","map__81895","viewer-name","nextjournal.clerk.viewer/->viewer","inner-viewer-name","G__81896","nextjournal.clerk.viewer/->value","cljs.core/name","G__81897","cljs.core/Keyword","or__5045__auto__","nextjournal.clerk.viewer/width","G__81898","nextjournal.clerk.render/inspect-presented","nextjournal.clerk.render/opts->query","opts","p1__81899#","cljs.core.map","cljs.core.update","cljs.core.partial","clojure.string/join","clojure.string.join","nextjournal.clerk.render/render-unreadable-edn","edn","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","nextjournal.clerk.render/error-badge","seq81900","self__5755__auto__","cljs.core/seq","cljs.core.into","nextjournal.clerk.render/error-view","error","e81909","clojure.string/split-lines","cljs.core.drop","cljs.core.mapv","clojure.string/trim","js/Error","data","nextjournal.clerk.render/inspect","G__81914","obj81917","js/undefined","nextjournal.clerk.render/ErrorBoundary","js/module$node_modules$react$index.Component","props","self__","obj81916","hash","handle-error","this","map__81918","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","map__81920","obj81923","obj81926","map__81921","obj81928","obj81931","reagent.core.as_element","obj81939","state","obj81952","obj81956","obj81957","nextjournal.clerk.render/default-loading-view","nextjournal.clerk.render/read-string","s","js/nextjournal.clerk.sci_env.read-string","p__81961","map__81962","nextjournal.clerk.render/fetch!","blob-id","js/fetch","p1__81959#","p1__81960#","e81963","e","js/console.error","nextjournal.clerk.render/->expanded-at","auto-expand?","presented","G__81964","nextjournal.clerk.viewer/assign-content-lengths","nextjournal.clerk.viewer/assign-expanded-at","p__81967","p__81968","map__81969","map__81970","nextjournal.clerk.render/render-result","result","fetch-opts","auto-expand-results?","!desc","nextjournal.clerk.render.hooks/use-state-with-deps","!expanded-at","nextjournal.clerk.render.hooks/use-state","cljs.core/map?","fetch-fn","nextjournal.clerk.render.hooks.use_callback","more","nextjournal.clerk.viewer/merge-presentations","p1__81965#","cljs.core.merge","on-key-down","event","cljs.core/dissoc","on-key-up","p1__81966#","js/document","js/document.addEventListener","js/document.removeEventListener","nextjournal.view.context/provide","nextjournal.clerk.render/toggle-expanded","path","map__81971","hover-path","prompt-multi-expand?","hover-path-count","cljs.core/count","hover-path-expanded?","expanded-at","p__81972","vec__81973","cljs.core.nth","expanded?","cljs.core/coll?","cljs.core/vector?","cljs.core.assoc","cljs.core/update","nextjournal.clerk.render/expandable?","nextjournal.clerk.render/inspect-children","G__81980","G__81981","cljs.core.fnil","cljs.core/conj","nextjournal.clerk.render/expand-style","nextjournal.clerk.render/triangle","nextjournal.clerk.render/triangle-spacer","nextjournal.clerk.render/expand-button","opening-paren","map__81984","multi-expand?","p__81989","map__81990","nextjournal.clerk.render/render-coll","viewer","map__81991","closing-paren","cljs.core.comp","cljs.core.interpose","G__81992","cljs.core/list?","p__81993","map__81994","nextjournal.clerk.render/render-elision","total","offset","unbounded?","nextjournal.view.context/consume","cljs.core/fn?","p__81996","map__81997","nextjournal.clerk.render/render-map","map__82001","G__82002","p__82004","map__82005","nextjournal.clerk.render/render-string","p1__82003#","p__82008","map__82009","nextjournal.clerk.render/render-quoted-string","map__82014","p1__82006#","cljs.core/some","clojure.string/includes?","nextjournal.clerk.render/render-number","num","js/Number.isNaN","nextjournal.clerk.render/sort!","!sort","i","k","map__82017","sort-key","sort-order","cljs.core/reset!","p__82027","p__82028","map__82029","map__82030","nextjournal.clerk.render/sort-data","sort-index","head","rows","G__82031","p1__82018#","cljs.core.sort_by","G__82032","cljs.core/val","clojure.string/lower-case","p1__82019#","p2__82020#","p1__82022#","p2__82021#","cljs.core/compare","nextjournal.clerk.render/x-icon","nextjournal.clerk.render/check-icon","p__82033","vec__82034","nextjournal.clerk.render/render-table-error","p__82037","map__82038","nextjournal.clerk.render/throwable-view","via","trace","p__82039","map__82040","_ex","type","message","_trace","p__82041","vec__82042","call","_x","file","line","nextjournal.clerk.render/render-throwable","ex","G__82047","nextjournal.clerk.render/render-tagged-value","p__82048","map__82049","tag","value","nextjournal.clerk.render.render_tagged_value","space?","js/nextjournal.clerk.render.!doc","nextjournal.clerk.render/!doc","reagent.ratom.atom","js/nextjournal.clerk.render.!error","nextjournal.clerk.render/!error","js/nextjournal.clerk.render.!viewers","nextjournal.clerk.render/!viewers","nextjournal.clerk.viewer/!viewers","nextjournal.clerk.render/set-viewers!","scope","viewers","nextjournal.clerk.render/valid-react-element?","js/module$node_modules$react$index.isValidElement","G__82054","with-let82055","init82056","res82057","map__82058","cljs.core/peek","nextjournal.clerk.render/in-process-fetch","js/Promise","nextjournal.clerk.viewer.present","with-let82059","init82060","res82061","nextjournal.clerk.render/root","p__82068","vec__82069","nextjournal.clerk.render/intern-atom!","var-name","sci.ctx-store/get-ctx","temp__5751__auto__","existing-var","sci.core/resolve","sci.core.intern","sci.core.create_ns","cljs.core.symbol","cljs.core/namespace","cljs.core/with-meta","p__82077","map__82078","nextjournal.clerk.render/set-state!","doc","remount?","seq__82079","chunk__82080","count__82081","i__82082","temp__5753__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/first","cljs.core/next","atom-var","cljs.core.get_in","cljs.core/inc","cljs.core/contains?","nextjournal.clerk.render/apply-patch","patch","editscript.core/patch","editscript.core/edits->script","p__82084","map__82085","nextjournal.clerk.render/patch-state!","nextjournal.clerk.render/clerk-swap!","seq82087","G__82088","self__5754__auto__","atom","swap-args","new-val","cljs.core/swap!","cljs.core/meta","js/ws_send","cljs.core.pr_str","cljs.core/List","p__82093","map__82094","nextjournal.clerk.render/swap-clerk-atom!","var","args","p__82100","map__82101","nextjournal.clerk.render/dispatch","msg","dispatch-fn","js/console.warn","js/nextjournal.clerk.render.react-root","nextjournal.clerk.render/react-root","el","js/document.getElementById","js/module$node_modules$react_dom$client.createRoot","nextjournal.clerk.render/mount","nextjournal.clerk.render/clerk-eval","form","goog/global","p__82108","map__82109","nextjournal.clerk.render/render-katex","tex-string","inline?","nextjournal.viewer.katex.to_html_string","nextjournal.clerk.render/html-render","markup","nextjournal.clerk.render/html-viewer","nextjournal.clerk.render/html","nextjournal.clerk.viewer/with-viewer","nextjournal.clerk.render/render-reagent","G__82111","cljs.core/PersistentVector","nextjournal.clerk.render/reagent-viewer","p__82112","map__82113","nextjournal.clerk.render/with-d3-require","package","loading-view","f","nextjournal.clerk.render.hooks/use-d3-require","nextjournal.clerk.render/render-vega-lite","nextjournal.clerk.render.hooks/use-error-handler","vega-embed","p1__82114#","js/module$node_modules$react$index.useCallback","cljs.core/clj->js","cljs.core.dissoc","nextjournal.clerk.render/render-plotly","plotly","p1__82115#","nextjournal.clerk.render/render-mathjax","nextjournal.viewer.mathjax/viewer","nextjournal.clerk.render/render-code","nextjournal.clerk.render.code/render-code","nextjournal.clerk.render/expand-icon","nextjournal.clerk.render/render-folded-code","code-string","!hidden?","p__82120","map__82121","nextjournal.clerk.render/url-for","src"],"sourcesContent":["(ns nextjournal.clerk.render\n  (:require [\"react\" :as react]\n            [\"react-dom/client\" :as react-client]\n            [applied-science.js-interop :as j]\n            [cljs.reader]\n            [clojure.string :as str]\n            [editscript.core :as editscript]\n            [goog.object]\n            [goog.string :as gstring]\n            [nextjournal.clerk.render.code :as code]\n            [nextjournal.clerk.render.hooks :as hooks]\n            [nextjournal.clerk.viewer :as viewer]\n            [nextjournal.markdown.transform :as md.transform]\n            [nextjournal.ui.components.icon :as icon]\n            [nextjournal.ui.components.motion :as motion]\n            [nextjournal.ui.components.navbar :as navbar]\n            [nextjournal.view.context :as view-context]\n            [nextjournal.viewer.katex :as katex]\n            [nextjournal.viewer.mathjax :as mathjax]\n            [reagent.core :as r]\n            [reagent.ratom :as ratom]\n            [sci.core :as sci]\n            [sci.ctx-store]\n            [shadow.cljs.modern :refer [defclass]]))\n\n(r/set-default-compiler! (r/create-compiler {:function-components true}))\n\n(declare inspect inspect-presented reagent-viewer html html-viewer)\n\n(def nbsp (gstring/unescapeEntities \"&nbsp;\"))\n\n(defn toc-items [items]\n  (reduce\n   (fn [acc {:as item :keys [content children]}]\n     (if content\n       (let [title (md.transform/->text item)]\n         (->> {:title title\n               :path (str \"#\" (viewer/->slug title))\n               :items (toc-items children)}\n              (conj acc)\n              vec))\n       (toc-items (:children item))))\n   []\n   items))\n\n(defn dark-mode-toggle [!state]\n  (let [{:keys [dark-mode?]} @!state\n        spring {:type :spring :stiffness 200 :damping 10}]\n    [:div.relative.dark-mode-toggle\n     [:button.text-slate-400.hover:text-slate-600.dark:hover:text-white.cursor-pointer\n      {:on-click #(swap! !state assoc :dark-mode? (not dark-mode?))}\n      (if dark-mode?\n        [:> motion/svg\n         {:xmlns \"http://www.w3.org/2000/svg\"\n          :class \"w-5 h-5 md:w-4 md:h-4\"\n          :viewBox \"0 0 50 50\"\n          :key \"moon\"}\n         [:> motion/path\n          {:d \"M 43.81 29.354 C 43.688 28.958 43.413 28.626 43.046 28.432 C 42.679 28.238 42.251 28.198 41.854 28.321 C 36.161 29.886 30.067 28.272 25.894 24.096 C 21.722 19.92 20.113 13.824 21.683 8.133 C 21.848 7.582 21.697 6.985 21.29 6.578 C 20.884 6.172 20.287 6.022 19.736 6.187 C 10.659 8.728 4.691 17.389 5.55 26.776 C 6.408 36.163 13.847 43.598 23.235 44.451 C 32.622 45.304 41.28 39.332 43.816 30.253 C 43.902 29.96 43.9 29.647 43.81 29.354 Z\"\n           :fill \"currentColor\"\n           :initial \"initial\"\n           :animate \"animate\"\n           :variants {:initial {:scale 0.6 :rotate 90}\n                      :animate {:scale 1 :rotate 0 :transition spring}}}]]\n        [:> motion/svg\n         {:key \"sun\"\n          :class \"w-5 h-5 md:w-4 md:h-4\"\n          :viewBox \"0 0 24 24\"\n          :fill \"none\"\n          :xmlns \"http://www.w3.org/2000/svg\"}\n         [:> motion/circle\n          {:cx \"11.9998\"\n           :cy \"11.9998\"\n           :r \"5.75375\"\n           :fill \"currentColor\"\n           :initial \"initial\"\n           :animate \"animate\"\n           :variants {:initial {:scale 1.5}\n                      :animate {:scale 1 :transition spring}}}]\n         [:> motion/g\n          {:initial \"initial\"\n           :animate \"animate\"\n           :variants {:initial {:rotate 45}\n                      :animate {:rotate 0 :transition spring}}}\n          [:circle {:cx \"3.08982\" :cy \"6.85502\" :r \"1.71143\" :transform \"rotate(-60 3.08982 6.85502)\" :fill \"currentColor\"}]\n          [:circle {:cx \"3.0903\" :cy \"17.1436\" :r \"1.71143\" :transform \"rotate(-120 3.0903 17.1436)\" :fill \"currentColor\"}]\n          [:circle {:cx \"12\" :cy \"22.2881\" :r \"1.71143\" :fill \"currentColor\"}]\n          [:circle {:cx \"20.9101\" :cy \"17.1436\" :r \"1.71143\" :transform \"rotate(-60 20.9101 17.1436)\" :fill \"currentColor\"}]\n          [:circle {:cx \"20.9101\" :cy \"6.8555\" :r \"1.71143\" :transform \"rotate(-120 20.9101 6.8555)\" :fill \"currentColor\"}]\n          [:circle {:cx \"12\" :cy \"1.71143\" :r \"1.71143\" :fill \"currentColor\"}]]])]]))\n\n\n(defn localstorage-set! [key val]\n  (when (exists? js/window)\n    (.setItem (.-localStorage js/window) key val)))\n\n(defn localstorage-get [key]\n  (when (exists? js/window)\n    (cljs.reader/read-string (.getItem (.-localStorage js/window) key))))\n\n\n(def local-storage-dark-mode-key \"clerk-darkmode\")\n\n(defn set-dark-mode! [dark-mode?]\n  (let [class-list (.-classList (js/document.querySelector \"html\"))]\n    (if dark-mode?\n      (.add class-list \"dark\")\n      (.remove class-list \"dark\")))\n  (localstorage-set! local-storage-dark-mode-key dark-mode?))\n\n(defn setup-dark-mode! [!state]\n  (let [{:keys [dark-mode?]} @!state]\n    (add-watch !state ::dark-mode\n               (fn [_ _ old {:keys [dark-mode?]}]\n                 (when (not= (:dark-mode? old) dark-mode?)\n                   (set-dark-mode! dark-mode?))))\n    (when dark-mode?\n      (set-dark-mode! dark-mode?))))\n\n(defonce !eval-counter (r/atom 0))\n\n(defn render-notebook [{:as _doc xs :blocks :keys [bundle? toc toc-visibility]}]\n  (r/with-let [local-storage-key \"clerk-navbar\"\n               !state (r/atom {:toc (toc-items (:children toc))\n                               :md-toc toc\n                               :dark-mode? (localstorage-get local-storage-dark-mode-key)\n                               :theme {:slide-over \"bg-slate-100 dark:bg-gray-800 font-sans border-r dark:border-slate-900\"}\n                               :width 220\n                               :mobile-width 300\n                               :local-storage-key local-storage-key\n                               :set-hash? (not bundle?)\n                               :open? (if-some [stored-open? (localstorage-get local-storage-key)]\n                                        stored-open?\n                                        (not= :collapsed toc-visibility))})\n               root-ref-fn #(when % (setup-dark-mode! !state))\n               ref-fn #(when % (swap! !state assoc :scroll-el %))]\n    (let [{:keys [md-toc]} @!state]\n      (when-not (= md-toc toc)\n        (swap! !state assoc :toc (toc-items (:children toc)) :md-toc toc :open? (not= :collapsed toc-visibility)))\n      [:div.flex\n       {:ref root-ref-fn}\n       [:div.fixed.top-2.left-2.md:left-auto.md:right-2.z-10\n        [dark-mode-toggle !state]]\n       (when (and toc toc-visibility)\n         [:<>\n          [navbar/toggle-button !state\n           [:<>\n            [icon/menu {:size 20}]\n            [:span.uppercase.tracking-wider.ml-1.font-bold\n             {:class \"text-[12px]\"} \"ToC\"]]\n           {:class \"z-10 fixed right-2 top-2 md:right-auto md:left-3 md:top-3 text-slate-400 font-sans text-xs hover:underline cursor-pointer flex items-center bg-white dark:bg-gray-900 py-1 px-3 md:p-0 rounded-full md:rounded-none border md:border-0 border-slate-200 dark:border-gray-500 shadow md:shadow-none dark:text-slate-400 dark:hover:text-white\"}]\n          [navbar/panel !state [navbar/navbar !state]]])\n       [:div.flex-auto.h-screen.overflow-y-auto.scroll-container\n        {:ref ref-fn}\n        [:div.flex.flex-col.items-center.viewer-notebook.flex-auto\n         (doall\n          (map-indexed (fn [idx x]\n                         (let [{viewer-name :name} (viewer/->viewer x)\n                               inner-viewer-name (some-> x viewer/->value viewer/->viewer :name)]\n                           ^{:key (str idx \"-\" @!eval-counter)}\n                           [:div {:class [\"viewer\"\n                                          (when (:nextjournal/open-graph-image-capture (viewer/->value x)) \"open-graph-image-capture\")\n                                          (when viewer-name (str \"viewer-\" (name viewer-name)))\n                                          (when inner-viewer-name (str \"viewer-\" (name inner-viewer-name)))\n                                          (case (or (viewer/width x) (case viewer-name (:code :code-folded) :wide :prose))\n                                            :wide \"w-full max-w-wide\"\n                                            :full \"w-full\"\n                                            \"w-full max-w-prose px-8\")]}\n                            [inspect-presented x]]))\n                       xs))]]])))\n\n(defn opts->query [opts]\n  (->> opts\n       (map #(update % 0 name))\n       (map (partial str/join \"=\"))\n       (str/join \"&\")))\n\n\n#_(opts->query {:s 12 :num 42})\n\n\n\n(defn render-unreadable-edn [edn]\n  [:span.inspected-value.whitespace-nowrap.cmt-default edn])\n\n(defn error-badge [& content]\n  [:div.bg-red-50.rounded-sm.text-xs.text-red-400.px-2.py-1.items-center.sans-serif.inline-flex\n   [:svg.h-4.w-4.text-red-400 {:xmlns \"http://www.w3.org/2000/svg\" :viewBox \"0 0 20 20\" :fill \"currentColor\" :aria-hidden \"true\"}\n    [:path {:fill-rule \"evenodd\" :d \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" :clip-rule \"evenodd\"}]]\n   (into [:div.ml-2.font-bold] content)])\n\n(defn error-view [error]\n  [:div.bg-red-100.dark:bg-gray-800.px-6.py-4.rounded-md.text-xs.dark:border-2.dark:border-red-300.not-prose\n   [:p.font-mono.text-red-600.dark:text-red-300.font-bold (.-message error)]\n   [:pre.text-red-600.dark:text-red-300.w-full.overflow-auto.mt-2\n    {:class \"text-[11px] max-h-[155px]\"}\n    (try\n      (->> (.-stack error)\n           str/split-lines\n           (drop 1)\n           (mapv str/trim)\n           (str/join \"\\n\"))\n      (catch js/Error _ nil))]\n   (when-some [data (.-data error)]\n     [:div.mt-2 [inspect data]])])\n\n\n(defclass ErrorBoundary\n  (extends react/Component)\n  (field handle-error)\n  (field hash)\n  (constructor [this ^js props]\n               (super props)\n               (set! (.-state this) #js {:error nil :hash (j/get props :hash)})\n               (set! hash (j/get props :hash))\n               (set! handle-error (fn [error]\n                                    (set! (.-state this) #js {:error error}))))\n\n  Object\n  (render [this ^js props]\n          (j/let [^js {{:keys [error]} :state\n                       {:keys [children]} :props} this]\n            (if error\n              (r/as-element [error-view error])\n              children))))\n\n(j/!set ErrorBoundary\n        :getDerivedStateFromError (fn [error] #js {:error error})\n        :getDerivedStateFromProps (fn [props state]\n                                    (when (not= (j/get props :hash)\n                                                (j/get state :hash))\n                                      #js {:hash (j/get props :hash) :error nil})))\n\n\n(def default-loading-view \"Loading...\")\n\n;; TODO: drop this\n(defn read-string [s]\n  (js/nextjournal.clerk.sci_env.read-string s))\n\n\n(defn fetch! [{:keys [blob-id]} opts]\n  #_(js/console.log :fetch! blob-id opts)\n  (-> (js/fetch (str \"_blob/\" blob-id (when (seq opts)\n                                        (str \"?\" (opts->query opts)))))\n      (.then #(.text %))\n      (.then #(try (read-string %)\n                   (catch js/Error e\n                     (js/console.error #js {:message \"sci read error\" :blob-id blob-id :code-string % :error e })\n                     (render-unreadable-edn %))))))\n\n(defn ->expanded-at [auto-expand? presented]\n  (cond-> presented\n    auto-expand? (-> viewer/assign-content-lengths)\n    true (-> viewer/assign-expanded-at (get :nextjournal/expanded-at {}))))\n\n(defn render-result [{:as result :nextjournal/keys [fetch-opts hash presented]} {:as opts :keys [auto-expand-results?]}]\n  (let [!desc (hooks/use-state-with-deps presented [hash])\n        !expanded-at (hooks/use-state (when (map? @!desc)\n                                        (->expanded-at auto-expand-results? @!desc)))\n        fetch-fn (hooks/use-callback (when fetch-opts\n                                       (fn [opts]\n                                         (.then (fetch! fetch-opts opts)\n                                                (fn [more]\n                                                  (swap! !desc viewer/merge-presentations more opts)\n                                                  (swap! !expanded-at #(merge (->expanded-at auto-expand-results? @!desc) %))))))\n                                     [hash])\n        on-key-down (hooks/use-callback (fn [event]\n                                          (if (.-altKey event)\n                                            (swap! !expanded-at assoc :prompt-multi-expand? true)\n                                            (swap! !expanded-at dissoc :prompt-multi-expand?))))\n        on-key-up (hooks/use-callback #(swap! !expanded-at dissoc :prompt-multi-expand?))\n        ref-fn (hooks/use-callback #(if %\n                                      (when (exists? js/document)\n                                        (js/document.addEventListener \"keydown\" on-key-down)\n                                        (js/document.addEventListener \"keyup\" on-key-up))\n                                      (when (exists? js/document)\n                                        (js/document.removeEventListener \"keydown\" on-key-down)\n                                        (js/document.removeEventListener \"up\" on-key-up))))]\n    (when @!desc\n      [view-context/provide {:fetch-fn fetch-fn}\n       [:> ErrorBoundary {:hash hash}\n        [:div.relative\n         [:div.overflow-y-hidden\n          {:ref ref-fn}\n          [inspect-presented {:!expanded-at !expanded-at} @!desc]]]]])))\n\n(defn toggle-expanded [!expanded-at path event]\n  (.preventDefault event)\n  (.stopPropagation event)\n  (let [{:keys [hover-path prompt-multi-expand?]} @!expanded-at\n        hover-path-count (count hover-path)\n        hover-path-expanded? (get @!expanded-at path)]\n    (if (and hover-path prompt-multi-expand? (= (count path) hover-path-count))\n      (swap! !expanded-at (fn [expanded-at]\n                            (reduce\n                             (fn [acc [path expanded?]]\n                               (if (and (coll? path) (vector? path) (= (count path) hover-path-count))\n                                 (assoc acc path (not hover-path-expanded?))\n                                 (assoc acc path expanded?)))\n                             {}\n                             expanded-at)))\n      (swap! !expanded-at update path not))))\n\n\n(defn expandable? [xs]\n  (< 1 (count xs)))\n\n\n(defn inspect-children [opts]\n  ;; TODO: move update function onto viewer\n  (map-indexed (fn [idx x]\n                 (inspect-presented (update opts :path (fnil conj []) idx) x))))\n\n(def expand-style\n  [\"cursor-pointer\"\n   \"bg-indigo-50\"\n   \"hover:bg-indigo-100\"\n   \"border-b\"\n   \"border-gray-400\"\n   \"hover:border-gray-500\"\n   \"dark:bg-gray-900\"\n   \"dark:hover:bg-slate-700\"\n   \"dark:border-slate-600\"\n   \"dark:hover:border-slate-500\"])\n\n(defn triangle [expanded?]\n  [:svg {:viewBox \"0 0 100 100\"\n         :class (str \"w-[7px] h-[7px] fill-current inline-block transition-all mr-[1px] -mt-[2px] \"\n                     (if expanded? \"rotate-180\" \"rotate-90\"))}\n   [:polygon {:points \"5.9,88.2 50,11.8 94.1,88.2 \"}]])\n\n(def triangle-spacer [:span {:class \"inline-block w-[8px]\"}])\n\n(defn expand-button [!expanded-at opening-paren path]\n  (let [expanded? (get @!expanded-at path)\n        {:keys [hover-path prompt-multi-expand?]} @!expanded-at\n        multi-expand? (and hover-path prompt-multi-expand? (= (count path) (count hover-path)))]\n    [:span.group.hover:bg-indigo-100.rounded-sm.hover:shadow.cursor-pointer\n     {:class (when multi-expand? \"bg-indigo-100 shadow \")\n      :on-click (partial toggle-expanded !expanded-at path)\n      :on-mouse-enter #(swap! !expanded-at assoc :hover-path path)\n      :on-mouse-leave #(swap! !expanded-at dissoc :hover-path)}\n     [:span.text-slate-400.group-hover:text-indigo-700\n      {:class (when multi-expand? \"text-indigo-700 \")}\n      [triangle expanded?]]\n     [:span.group-hover:text-indigo-700 opening-paren]]))\n\n(defn render-coll [xs {:as opts :keys [path viewer !expanded-at] :or {path []}}]\n  (let [expanded? (get @!expanded-at path)\n        {:keys [opening-paren closing-paren]} viewer]\n    [:span.inspected-value.whitespace-nowrap\n     {:class (when expanded? \"inline-flex\")}\n     [:span\n      (if (< 1 (count xs))\n        [expand-button !expanded-at opening-paren path]\n        [:span opening-paren])\n      (into [:<>]\n            (comp (inspect-children opts)\n                  (interpose (if expanded? [:<> [:br] triangle-spacer nbsp (when (= 2 (count opening-paren)) nbsp)] \" \")))\n            xs)\n      [:span\n       (cond->> closing-paren (list? closing-paren) (into [:<>]))]]]))\n\n(defn render-elision [{:as fetch-opts :keys [total offset unbounded?]} _]\n  [view-context/consume :fetch-fn\n   (fn [fetch-fn]\n     [:span.sans-serif.relative.whitespace-nowrap\n      {:style {:border-radius 2 :padding (when (fn? fetch-fn) \"1px 3px\") :font-size 11 :top -1}\n       :class (if (fn? fetch-fn)\n                \"cursor-pointer bg-indigo-200 hover:bg-indigo-300 dark:bg-gray-700 dark:hover:bg-slate-600 text-gray-900 dark:text-white\"\n                \"text-gray-400 dark:text-slate-300\")\n       :on-click #(when (fn? fetch-fn)\n                    (fetch-fn fetch-opts))} (- total offset) (when unbounded? \"+\") (if (fn? fetch-fn) \" more\u2026\" \" more elided\")])])\n\n(defn render-map [xs {:as opts :keys [path viewer !expanded-at] :or {path []}}]\n  (let [expanded? (get @!expanded-at path)\n        {:keys [closing-paren]} viewer]\n    [:span.inspected-value.whitespace-nowrap\n     {:class (when expanded? \"inline-flex\")}\n     [:span\n      (if (expandable? xs)\n        [expand-button !expanded-at \"{\" path]\n        [:span \"{\"])\n      (into [:<>]\n            (comp (inspect-children opts)\n                  (interpose (if expanded? [:<> [:br] triangle-spacer nbsp #_(repeat (inc (count path)) nbsp)] \" \")))\n            xs)\n      (cond->> closing-paren (list? closing-paren) (into [:<>]))]]))\n\n\n(defn render-string [s {:as opts :keys [path !expanded-at] :or {path []}}]\n  (let [expanded? (get @!expanded-at path)]\n    (into [:span]\n          (map #(if (string? %)\n                  (if expanded?\n                    (into [:<>] (interpose [:<> [:br]] (str/split-lines %)))\n                    (into [:<>] (interpose [:span.text-slate-400 \"\u21a9\ufe0e\"] (str/split-lines %))))\n                  (inspect-presented opts %)))\n          (if (string? s) [s] s))))\n\n(defn render-quoted-string [s {:as opts :keys [path viewer !expanded-at] :or {path []}}]\n  (let [{:keys [closing-paren]} viewer]\n    [:span.cmt-string.inspected-value.whitespace-nowrap.inline-flex\n     [:span\n      (if (some #(and (string? %) (str/includes? % \"\\n\")) (if (string? s) [s] s))\n        [expand-button !expanded-at \"\\\"\" path]\n        [:span \"\\\"\"])]\n     [:div\n      (viewer/->value (render-string s opts))\n      \"\\\"\"\n      closing-paren]]))\n\n(defn render-number [num]\n  [:span.cmt-number.inspected-value\n   (if (js/Number.isNaN num) \"NaN\" (str num))])\n\n(defn sort! [!sort i k]\n  (let [{:keys [sort-key sort-order]} @!sort]\n    (reset! !sort {:sort-index i\n                   :sort-key k\n                   :sort-order (if (= sort-key k) (if (= sort-order :asc) :desc :asc) :asc)})))\n\n(defn sort-data [{:keys [sort-index sort-order]} {:as data :keys [head rows]}]\n  (cond-> data\n    head (assoc :rows (->> rows\n                           (sort-by #(cond-> (get % sort-index)\n                                       (string? val) str/lower-case)\n                                    (if (= sort-order :asc) #(compare %1 %2) #(compare %2 %1)))\n                           vec))))\n\n(def x-icon\n  [:svg.h-4.w-4 {:xmlns \"http://www.w3.org/2000/svg\" :viewBox \"0 0 20 20\" :fill \"currentColor\"}\n   [:path {:fill-rule \"evenodd\" :d \"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" :clip-rule \"evenodd\"}]])\n\n(def check-icon\n  [:svg.h-4.w-4 {:xmlns \"http://www.w3.org/2000/svg\" :viewBox \"0 0 20 20\" :fill \"currentColor\"}\n   [:path {:fill-rule \"evenodd\" :d \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" :clip-rule \"evenodd\"}]])\n\n(defn render-table-error [[data]]\n  ;; currently boxing the value in a vector to retain the type info\n  ;; TODO: find a better way to do this\n  [:div.bg-red-100.dark:bg-gray-800.px-6.py-4.rounded-md.text-xs.dark:border-2.dark:border-red-400.not-prose\n   [:h4.mt-0.uppercase.text-xs.dark:text-red-400.tracking-wide \"Table Error\"]\n   [:p.mt-4.font-medium \"Clerk\u2019s table viewer does not recognize the format of your data:\"]\n   [:div.mt-2.flex\n    [:div.text-red-500.mr-2 x-icon]\n    [inspect-presented data]]\n   [:p.mt-4.font-medium \"Currently, the following formats are supported:\"]\n   [:div.mt-2.flex.items-center\n    [:div.text-green-500.mr-2 check-icon]\n    [inspect {:column-1 [1 2]\n              :column-2 [3 4]}]]\n   [:div.mt-2.flex.items-center\n    [:div.text-green-500.mr-2 check-icon]\n    [inspect [{:column-1 1 :column-2 3} {:column-1 2 :column-2 4}]]]\n   [:div.mt-2.flex.items-center\n    [:div.text-green-500.mr-2 check-icon]\n    [inspect [[1 3] [2 4]]]]\n   [:div.mt-2.flex.items-center\n    [:div.text-green-500.mr-2 check-icon]\n    [inspect {:head [:column-1 :column-2]\n              :rows [[1 3] [2 4]]}]]])\n\n\n(defn throwable-view [{:keys [via trace]}]\n  [:div.bg-white.max-w-6xl.mx-auto.text-xs.monospace.not-prose\n   (into\n    [:div]\n    (map\n     (fn [{:as _ex :keys [type message data _trace]}]\n       [:div.p-4.bg-red-100.border-b.border-b-gray-300\n        [:div.font-bold \"Unhandled \" type]\n        [:div.font-bold.mt-1 message]\n        [:div.mt-1 [inspect data]]])\n     via))\n   [:div.py-6.overflow-x-auto\n    [:table.w-full\n     (into [:tbody]\n           (map (fn [[call _x file line]]\n                  [:tr.hover:bg-red-100.leading-tight\n                   [:td.text-right.px-6 file \":\"]\n                   [:td.text-right.pr-6 line]\n                   [:td.py-1.pr-6 call]]))\n           trace)]]])\n\n(defn render-throwable [ex]\n  [throwable-view ex])\n\n(defn render-tagged-value\n  ([tag value] (render-tagged-value {:space? true} tag value))\n  ([{:keys [space?]} tag value]\n   [:span.inspected-value.whitespace-nowrap\n    [:span.cmt-meta tag] (when space? nbsp) value]))\n\n(defonce !doc (ratom/atom nil))\n(defonce !error (ratom/atom nil))\n(defonce !viewers viewer/!viewers)\n\n(defn set-viewers! [scope viewers]\n  #_(js/console.log :set-viewers! {:scope scope :viewers viewers})\n  (swap! !viewers assoc scope (vec viewers))\n  'set-viewers!)\n\n(declare default-viewers)\n\n(defn valid-react-element? [x] (react/isValidElement x))\n\n(defn inspect-presented\n  ([x]\n   (r/with-let [!expanded-at (r/atom (:nextjournal/expanded-at x))]\n     [inspect-presented {:!expanded-at !expanded-at} x]))\n  ([opts x]\n   (if (valid-react-element? x)\n     x\n     (let [{:nextjournal/keys [value viewer]} x]\n       #_(prn :inspect-presented value :valid-element? (react/isValidElement value) :viewer viewer)\n       ;; each view function must be called in its own 'functional component' so that it gets its own hook state.\n       ^{:key (str (:hash viewer) \"@\" (peek (:path opts)))}\n       [(:render-fn viewer) value (merge opts (:nextjournal/opts x) {:viewer viewer})]))))\n\n(defn in-process-fetch [value opts]\n  (.resolve js/Promise (viewer/present value opts)))\n\n(defn inspect [value]\n  (r/with-let [!state (r/atom nil)]\n    (when (not= (:value @!state ::not-found) value)\n      (swap! !state assoc :value value :desc (viewer/present value)))\n    [view-context/provide {:fetch-fn (fn [fetch-opts]\n                                       (.then (in-process-fetch value fetch-opts)\n                                              (fn [more]\n                                                (swap! !state update :desc viewer/merge-presentations more fetch-opts))))}\n     [inspect-presented (:desc @!state)]]))\n\n(defn root []\n  [:<>\n   [inspect-presented @!doc]\n   (when @!error\n     [:div.fixed.top-0.left-0.w-full.h-full\n      [inspect-presented @!error]])])\n\n(declare mount)\n\n(defn intern-atom! [[var-name state]]\n  (assert (sci.ctx-store/get-ctx) \"sci-ctx must be set\")\n  (if-let [existing-var (sci/resolve (sci.ctx-store/get-ctx) var-name)]\n    (reset! @existing-var state)\n    (sci/intern (sci.ctx-store/get-ctx)\n                (sci/create-ns (symbol (namespace var-name)))\n                (symbol (name var-name))\n                (with-meta (r/atom state)\n                  {:var-name var-name}))))\n\n(defn ^:export set-state! [{:as state :keys [doc error remount?]}]\n  (doseq [atom-var (get-in doc [:nextjournal/value :atom-var-name->state])]\n    (intern-atom! atom-var))\n  (when remount?\n    (swap! !eval-counter inc))\n  (when (contains? state :doc)\n    (reset! !doc doc))\n  (reset! !error error)\n  (when-let [title (and (exists? js/document) (-> doc viewer/->value :title))]\n    (set! (.-title js/document) title)))\n\n(defn apply-patch [x patch]\n  (editscript/patch x (editscript/edits->script patch)))\n\n(defn patch-state! [{:keys [patch]}]\n  (reset! !error nil)\n  (swap! !doc apply-patch patch))\n\n(defn clerk-swap! [atom & swap-args]\n  (let [new-val (apply swap! atom swap-args)]\n    (when-let [var-name (-> atom meta :var-name)]\n      ;; TODO: for now sending whole state but could also diff\n      (js/ws_send (pr-str {:type :swap! :var-name var-name :args [(list 'fn ['_] new-val)]})))\n    new-val))\n\n(defn swap-clerk-atom! [{:as event :keys [var var-name args]}]\n  (apply swap! @var args))\n\n(defn ^:export dispatch [{:as msg :keys [type]}]\n  (let [dispatch-fn (get {:patch-state! patch-state!\n                          :set-state! set-state!\n                          :swap! swap-clerk-atom!}\n                         type\n                         (fn [_]\n                           (js/console.warn (str \"no on-message dispatch for type `\" type \"`\"))))]\n    #_(js/console.log :<= type := msg)\n    (dispatch-fn msg)))\n\n(defonce react-root\n  (when-let [el (and (exists? js/document) (js/document.getElementById \"clerk\"))]\n    (react-client/createRoot el)))\n\n(defn ^:export ^:dev/after-load mount []\n  (when react-root\n    (.render react-root (r/as-element [root]))))\n\n(defn clerk-eval [form]\n  (.ws_send ^js goog/global (pr-str {:type :eval :form form})))\n\n(defn render-katex [tex-string {:keys [inline?]}]\n  [:span {:dangerouslySetInnerHTML {:__html (katex/to-html-string tex-string (j/obj :displayMode (not inline?)))}}])\n\n(defn html-render [markup]\n  (r/as-element\n   (if (string? markup)\n     [:span {:dangerouslySetInnerHTML {:__html markup}}]\n     markup)))\n\n(def html-viewer\n  {:render-fn html-render})\n\n(def html\n  (partial viewer/with-viewer html-viewer))\n\n(defn render-reagent [x]\n  (r/as-element (cond-> x (fn? x) vector)))\n\n;; TODO: remove\n(def reagent-viewer render-reagent)\n\n\n(defn with-d3-require [{:keys [package loading-view]\n                        :or {loading-view default-loading-view}} f]\n  (if-let [package (hooks/use-d3-require package)]\n    (f package)\n    loading-view))\n\n(defn render-vega-lite [value]\n  (let [handle-error (hooks/use-error-handler)\n        vega-embed (hooks/use-d3-require \"vega-embed@6.11.1\")\n        ref-fn (react/useCallback #(when %\n                                     (-> (.embed vega-embed % (clj->js (dissoc value :embed/opts)) (clj->js (:embed/opts value {})))\n                                         (.catch handle-error)))\n                                  #js[value vega-embed])]\n    (when value\n      (if vega-embed\n        [:div.overflow-x-auto\n         [:div.vega-lite {:ref ref-fn}]]\n        default-loading-view))))\n\n(defn render-plotly [value]\n  (let [plotly (hooks/use-d3-require \"plotly.js-dist@2.15.1\")\n        ref-fn (react/useCallback #(when %\n                                     (.newPlot plotly % (clj->js value)))\n                                  #js[value plotly])]\n    (when value\n      (if plotly\n        [:div.overflow-x-auto\n         [:div.plotly {:ref ref-fn}]]\n        default-loading-view))))\n\n(def render-mathjax mathjax/viewer)\n\n(def render-code code/render-code)\n\n(def expand-icon\n  [:svg {:xmlns \"http://www.w3.org/2000/svg\" :viewBox \"0 0 20 20\" :fill \"currentColor\" :width 12 :height 12}\n   [:path {:fill-rule \"evenodd\" :d \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" :clip-rule \"evenodd\"}]])\n\n(defn render-folded-code [code-string]\n  (let [!hidden? (hooks/use-state true)]\n    (if @!hidden?\n      [:div.relative.pl-12.font-sans.text-slate-400.cursor-pointer.flex.overflow-y-hidden.group\n       [:span.hover:text-slate-500\n        {:class \"text-[10px]\"\n         :on-click #(swap! !hidden? not)}\n        \"show code\"]\n       #_#_#_[:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.hover:text-slate-500\n              {:class \"text-[10px]\"}\n              \"hide result\"]\n       [:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.delay-75.hover:text-slate-500\n        {:class \"text-[10px]\"}\n        \"cached in memory\"]\n       [:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.delay-150.hover:text-slate-500\n        {:class \"text-[10px]\"}\n        \"evaluated in 0.2s\"]]\n      [:<>\n       [:div.relative.pl-12.font-sans.text-slate-400.cursor-pointer.flex.overflow-y-hidden.group.mb-1\n        [:span.hover:text-slate-500\n         {:class \"text-[10px]\"\n          :on-click #(swap! !hidden? not)}\n         \"hide code\"]\n        #_#_#_[:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.hover:text-slate-500\n               {:class \"text-[10px]\"}\n               \"hide result\"]\n        [:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.delay-75.hover:text-slate-500\n         {:class \"text-[10px]\"}\n         \"cached in memory\"]\n        [:span.ml-4.opacity-0.translate-y-full.group-hover:opacity-100.group-hover:translate-y-0.transition-all.delay-150.hover:text-slate-500\n         {:class \"text-[10px]\"}\n         \"evaluated in 0.2s\"]]\n       [:div.viewer-code.mb-2.relative {:style {:margin-top 0}}\n        [render-code code-string]]])))\n\n\n(defn url-for [{:as src :keys [blob-id]}]\n  (if (string? src)\n    src\n    (str \"/_blob/\" blob-id (when-let [opts (seq (dissoc src :blob-id))]\n                             (str \"?\" (opts->query opts))))))\n"]}