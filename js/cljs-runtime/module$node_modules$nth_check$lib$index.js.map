{
"version":3,
"file":"module$node_modules$nth_check$lib$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEpGC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,OAAR,CAAkBJ,OAAQK,CAAAA,KAA1B,CAAkC,IAAK,EACvC,KAAIC,QAAUR,OAAA,CAAQ,yCAAR,CACdG,OAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,OAA/B,CAAwC,CAAEO,WAAY,CAAA,CAAd,CAAoBC,IAAKA,QAAS,EAAG,CAAE,MAAOF,QAAQD,CAAAA,KAAjB,CAArC,CAAxC,CACA,KAAII,UAAYX,OAAA,CAAQ,2CAAR,CAChBG,OAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,SAA/B,CAA0C,CAAEO,WAAY,CAAA,CAAd,CAAoBC,IAAKA,QAAS,EAAG,CAAE,MAAOC,UAAUL,CAAAA,OAAnB,CAArC,CAA1C,CA2BAJ;OAAQU,CAAAA,OAAR,CAHAC,QAAiB,CAACC,OAAD,CAAU,CACvB,MAAO,GAAIH,SAAUL,CAAAA,OAAd,EAAuB,GAAIE,OAAQD,CAAAA,KAAZ,EAAmBO,OAAnB,CAAvB,CADgB,CA/ByE;",
"sources":["node_modules/nth-check/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$nth_check$lib$index\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.compile = exports.parse = void 0;\nvar parse_1 = require(\"./parse\");\nObject.defineProperty(exports, \"parse\", { enumerable: true, get: function () { return parse_1.parse; } });\nvar compile_1 = require(\"./compile\");\nObject.defineProperty(exports, \"compile\", { enumerable: true, get: function () { return compile_1.compile; } });\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of `parse` and `compile`.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n    return (0, compile_1.compile)((0, parse_1.parse)(formula));\n}\nexports.default = nthCheck;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","compile","parse","parse_1","enumerable","get","compile_1","default","nthCheck","formula"]
}
